[
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -25) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 145, y: -12) modulo_1a8b2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_1a8b2d.value\n\t11 -> modulo_1a8b2d.divisor\n\tmodulo_1a8b2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 60) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -154, y: 30) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -100) length_4d7b1a root.Std_k98ojb.List.Length {}\n        instance(x: 150, y: -100) modulo_6c7f8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 250, y: -100) slice_3a4d2b root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -150) slice_7c6f9e root.Std_k98ojb.List.Slice {}\n        instance(x: 350, y: -100) concat_4a5d2c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4d7b1a.list\n        length_4d7b1a.length -> modulo_6c7f8e.value\n        n_68068c -> modulo_6c7f8e.divisor\n        modulo_6c7f8e.result -> slice_3a4d2b.start\n        modulo_6c7f8e.result -> slice_7c6f9e.end\n        list_48148f -> slice_3a4d2b.list\n        0 -> slice_7c6f9e.start\n        list_48148f -> slice_7c6f9e.list\n        -1 -> slice_3a4d2b.end\n        slice_3a4d2b.slice -> concat_4a5d2c.right\n        slice_7c6f9e.slice -> concat_4a5d2c.left\n        concat_4a5d2c.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_lessthan_2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 178, y: -309) and_0 root.Std_k98ojb.Logic.And {}\n        instance(x: 354, y: -365) if_not_equal root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 528, y: -309) and_1 root.Std_k98ojb.Logic.And {}\n        instance(x: 702, y: -365) if_not_equal_1 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 876, y: -309) and_2 root.Std_k98ojb.Logic.And {}\n        instance(x: 1049, y: -365) for_loop root.Std_k98ojb.Std.For {}\n        instance(x: 1223, y: -309) if_divisible root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1465, y: -365) not_0 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1639, y: -309) and_3 root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> if_lessthan_2.left\n        1 -> if_lessthan_2.right\n        if_lessthan_2.result -> and_0.left\n\n        num_5c0677 -> if_not_equal.left\n        1 -> if_not_equal.right\n        if_not_equal.result -> and_0.right\n\n        and_0.result -> and_1.left\n\n        num_5c0677 -> if_not_equal_1.left\n        2 -> if_not_equal_1.right\n        if_not_equal_1.result -> and_1.right\n\n        and_1.result -> and_2.left\n\n        2 -> for_loop.start\n        instance(x: 184, y: -509) expression_floor root.Std_k98ojb.Math.Expression {\n            expression: \"Math.floor(Math.sqrt(num))\"\n        }\n        num_5c0677 -> expression_floor.gen_0\n        expression_floor.result -> for_loop.end\n\n        for_loop.index -> if_divisible.gen_1\n        num_5c0677 -> if_divisible.gen_0\n        if_divisible.result -> not_0.value\n        not_0.result -> and_2.right\n\n        and_2.result -> output_c457b3\n        and_2.result -> continue_9a54bb\n\n        for_loop.onItem -> and_2.left\n        for_loop.done -> continue_9a54bb\n\n        execute_b7b391 -> for_loop.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 46, y: -178) mul_3e2b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -57) lessorequal_a2d3f1 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_3e2b9c.first\n        y_5390f5 -> mul_3e2b9c.second\n        mul_3e2b9c.result -> lessorequal_a2d3f1.left\n        -1 -> lessorequal_a2d3f1.right\n        lessorequal_a2d3f1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 148, y: -12) modulo_5a7b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a7b9d.value\n\t11 -> modulo_5a7b9d.divisor\n\tmodulo_5a7b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [list_5fda54]\n        }\n\n        instance(x: 200, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.list\n        }\n\n        instance(x: 300, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(item) {\n                out(x: 50, y: 50) is_not_duplicate root.Std_k98ojb.List.IndexOf {\n                    list: filtered_unique_list.output_list\n                    item: item\n                }\n                out(x: 100, y: 50) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: is_not_duplicate.index\n                    right: -1\n                }\n                is_first_occurrence.value -> return()\n            }\n        }\n\n        instance(x: 400, y: 100) product_calculation root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(acc, item) {\n                out(x: 50, y: 50) multiply root.Std_k98ojb.Math.Mul {\n                    first: acc\n                    second: item\n                }\n                multiply.result -> return()\n            }\n            initial_value: 1\n        }\n\n        execute_19300c -> product_calculation.trigger\n        product_calculation.accumulated_value -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -293, y: 100) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -293, y: 200) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 50, y: 300) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -114) length_4a5b2f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -113) modulo_3d5c1e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 308, y: -114) generateRange_2a3f1b root.Std_k98ojb.List.GenerateRange {\n            from: 0\n        }\n        instance(x: 456, y: -114) slice_7d2c1a root.Std_k98ojb.List.Slice {}\n        instance(x: 612, y: -113) concat_1e3f1b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4a5b2f.list\n        length_4a5b2f.length -> modulo_3d5c1e.value\n        n_68068c -> modulo_3d5c1e.divisor\n        modulo_3d5c1e.result -> generateRange_2a3f1b.to\n        generateRange_2a3f1b.list -> slice_7d2c1a.list\n        length_4a5b2f.length -> slice_7d2c1a.end\n        modulo_3d5c1e.result -> slice_7d2c1a.start\n        list_48148f -> concat_1e3f1b.left\n        slice_7d2c1a.slice -> concat_1e3f1b.right\n        concat_1e3f1b.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_9b8d7e root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") _handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_cdac2a\n                in(x: 0, y: -50, name: \"acc\") property(Number) acc_6b655b\n                in(x: 0, y: -100, name: \"item\") property(Number) item_9c7d8f\n\n                out(x: 100, y: 0, name: \"continue\") trigger() continue_d9efd7\n                out(x: 150, y: 0, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -75) add_4d6f8e root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_4d6f8e.first\n                item_9c7d8f -> add_4d6f8e.second\n                add_4d6f8e.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_9b8d7e.initial_value\n        list_2c62ab -> reduce_9b8d7e.items\n        reduce_9b8d7e.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -85, y: -377) if_6d4f1c root.Std_k98ojb.Std.If {}\n        instance(x: 127, y: -390) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 529, y: -464) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 780, y: -420) mathexpression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1035, y: -460) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1375, y: -420) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_6d4f1c.predicate\n        execute_b7b391 -> if_6d4f1c.execute\n\n        num_5c0677 -> mathexpression_b720d7.gen_0\n        for_8cb3f6.item -> mathexpression_b720d7.gen_1\n        mathexpression_b720d7.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n\n        2 -> add_b4554f.first\n        for_8cb3f6.index -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.next\n\n        num_5c0677 -> if_e19a62.then\n        false -> if_e19a62.else\n        if_e19a62.value -> output_c457b3\n\n        2 -> for_8cb3f6.start\n        add_b4554f.result -> for_8cb3f6.end\n        num_5c0677 -> for_8cb3f6.step\n\n        if_6d4f1c.then -> continue_9a54bb\n        if_e19a62.else -> continue_9a54bb\n        for_8cb3f6.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 46, y: -87) mul_8e7b2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -16) less_than_or_equal_7f8d4a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8e7b2c.first\n        y_5390f5 -> mul_8e7b2c.second\n        mul_8e7b2c.result -> less_than_or_equal_7f8d4a.left\n        less_than_or_equal_7f8d4a.right: -1\n        less_than_or_equal_7f8d4a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 143, y: -10) modulo_5a8b2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a8b2d.value\n\t11 -> modulo_5a8b2d.divisor\n\tmodulo_5a8b2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 209) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 300, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 500, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func() filter_handler {\n                in(x: -241, y: 24, name: \"item\") property(Any) item_5fda54\n                out(x: 683, y: 73, name: \"output\") property(Boolean) output_cffcc2\n\n                instance(x: 100, y: 100) is_unique root.Std_k98ojb.List.NotContains {\n                    list: filtered_unique_list.output_list\n                    item: item_5fda54\n                }\n\n                is_unique.notContains -> output_cffcc2\n            }\n        }\n\n        instance(x: 700, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func() reduce_handler {\n                in(x: -241, y: 24, name: \"acc\") property(Number) acc_5fda54\n                in(x: -757, y: -167, name: \"item\") property(Number) item_19300c\n                out(x: 887, y: -144, name: \"output\") property(Number) output_45190b\n\n                instance(x: 100, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: acc_5fda54\n                    second: item_19300c\n                }\n\n                multiply.result -> output_45190b\n            }\n        }\n\n        execute_19300c -> product.trigger\n        list_5fda54 -> unique_list.list\n        product.output -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -294, y: 65) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 40, y: 75) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 148, y: -100) length_3a8b1f root.Std_k98ojb.List.Length {}\n        instance(x: 267, y: -105) modulo_9d3e4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -100) generateRange_5a8f1b root.Std_k98ojb.List.GenerateRange {\n            from: 0\n        }\n        instance(x: 623, y: -107) slice_4d3e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 625, y: -190) slice_8d3e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 720, y: -145) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_3a8b1f.list\n        n_68068c -> modulo_9d3e4c.value\n        length_3a8b1f.length -> modulo_9d3e4c.divisor\n        modulo_9d3e4c.result -> generateRange_5a8f1b.to\n        length_3a8b1f.length -> slice_4d3e4c.end\n        modulo_9d3e4c.result -> slice_8d3e4c.start\n        list_48148f -> slice_4d3e4c.list\n        list_48148f -> slice_8d3e4c.list\n        slice_8d3e4c.end -> -1\n        slice_4d3e4c.result -> concat_9b38cc.left\n        slice_4d3e4c.start -> generateRange_5a8f1b.from\n        generateRange_5a8f1b.list -> slice_4d3e4c.end\n        slice_4d3e4c.result -> concat_9b38cc.right\n        concat_9b38cc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -100) reduce_9b3d2a root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_reduce_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_cdac2a\n                in(x: -150, y: -100, name: \"acc\") property(Number) acc_6b655b\n                in(x: -150, y: 100, name: \"item\") property(Number) item_6b655c\n\n                out(x: 200, y: 0, name: \"continue\") trigger() continue_d9efd7\n                out(x: 200, y: 100, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -50) add_6f4b1c root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_6f4b1c.first\n                item_6b655c -> add_6f4b1c.second\n                add_6f4b1c.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_9b3d2a.initial_value\n        list_2c62ab -> reduce_9b3d2a.items\n        reduce_9b3d2a.output -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -88, y: -354) if_6c4f0d root.Std_k98ojb.Std.If {}\n        instance(x: 72, y: -496) lessthanorequal_1e1b1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 352, y: -406) for_7f9d2a root.Std_k98ojb.Std.For {}\n        instance(x: 591, y: -240) lessthanorequal_5e2c8a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 635, y: -474) expression_0d3f1a root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_1e1b1c.left\n        1 -> lessthanorequal_1e1b1c.right\n        lessthanorequal_1e1b1c.result -> if_6c4f0d.predicate\n        if_6c4f0d.then -> continue_9a54bb\n        if_6c4f0d.else -> for_7f9d2a.reset\n\n        num_5c0677 -> lessthanorequal_5e2c8a.right\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_0d3f1a.gen_1\n        for_7f9d2a.index -> add_b4554f.first\n\n        num_5c0677 -> expression_0d3f1a.gen_0\n        expression_0d3f1a.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_7f9d2a.next\n\n        lessthanorequal_5e2c8a.left -> for_7f9d2a.item\n        add_b4554f.result -> lessthanorequal_5e2c8a.right\n\n        for_7f9d2a.done -> continue_9a54bb\n        if_e19a62.else -> output_c457b3.set(true)\n        if_6c4f0d.then -> output_c457b3.set(false)\n\n        execute_b7b391 -> for_7f9d2a.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -25) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 145, y: -12) modulo_1b2a4d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_1b2a4d.value\n\t11 -> modulo_1b2a4d.divisor\n\tinstance(x: 305, y: -12) equal_6e8b9a root.Std_k98ojb.Logic.Equal {}\n\tmodulo_1b2a4d.result -> equal_6e8b9a.left\n\t0 -> equal_6e8b9a.right\n\tequal_6e8b9a.value -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 60) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -154, y: 30) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -100) length_4d7b1a root.Std_k98ojb.List.Length {}\n        instance(x: 150, y: -100) modulo_6c7f8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 250, y: -100) slice_3a4d2b root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -150) slice_7c6f9e root.Std_k98ojb.List.Slice {}\n        instance(x: 350, y: -100) concat_4a5d2c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4d7b1a.list\n        length_4d7b1a.length -> modulo_6c7f8e.value\n        n_68068c -> modulo_6c7f8e.divisor\n        modulo_6c7f8e.result -> slice_3a4d2b.start\n        modulo_6c7f8e.result -> slice_7c6f9e.end\n        list_48148f -> slice_3a4d2b.list\n        0 -> slice_7c6f9e.start\n        list_48148f -> slice_7c6f9e.list\n        -1 -> slice_3a4d2b.end\n        slice_3a4d2b.slice -> concat_4a5d2c.right\n        slice_7c6f9e.slice -> concat_4a5d2c.left\n        concat_4a5d2c.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_lessthan_2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 178, y: -309) and_0 root.Std_k98ojb.Logic.And {}\n        instance(x: 354, y: -365) if_not_equal root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 528, y: -309) and_1 root.Std_k98ojb.Logic.And {}\n        instance(x: 702, y: -365) if_not_equal_1 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 876, y: -309) and_2 root.Std_k98ojb.Logic.And {}\n        instance(x: 1049, y: -365) for_loop root.Std_k98ojb.Std.For {}\n        instance(x: 1223, y: -309) if_divisible root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1465, y: -365) not_0 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1639, y: -309) and_3 root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> if_lessthan_2.left\n        1 -> if_lessthan_2.right\n        if_lessthan_2.result -> and_0.left\n\n        num_5c0677 -> if_not_equal.left\n        1 -> if_not_equal.right\n        if_not_equal.result -> and_0.right\n\n        and_0.result -> and_1.left\n\n        num_5c0677 -> if_not_equal_1.left\n        2 -> if_not_equal_1.right\n        if_not_equal_1.result -> and_1.right\n\n        and_1.result -> and_2.left\n\n        2 -> for_loop.start\n        instance(x: 184, y: -509) expression_floor root.Std_k98ojb.Math.Expression {\n            expression: \"Math.floor(Math.sqrt(num))\"\n        }\n        num_5c0677 -> expression_floor.gen_0\n        expression_floor.result -> for_loop.end\n\n        for_loop.index -> if_divisible.gen_1\n        num_5c0677 -> if_divisible.gen_0\n        if_divisible.result -> not_0.value\n        not_0.result -> and_2.right\n\n        and_2.result -> output_c457b3\n        and_2.result -> continue_9a54bb\n\n        for_loop.onItem -> and_2.left\n        for_loop.done -> continue_9a54bb\n\n        execute_b7b391 -> for_loop.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 46, y: -178) mul_3e2b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -57) lessorequal_a2d3f1 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_3e2b9c.first\n        y_5390f5 -> mul_3e2b9c.second\n        mul_3e2b9c.result -> lessorequal_a2d3f1.left\n        -1 -> lessorequal_a2d3f1.right\n        lessorequal_a2d3f1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 148, y: -12) modulo_5a7b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a7b9d.value\n\t11 -> modulo_5a7b9d.divisor\n\tmodulo_5a7b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [list_5fda54]\n        }\n\n        instance(x: 200, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.list\n        }\n\n        instance(x: 300, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(item) {\n                out(x: 50, y: 50) is_not_duplicate root.Std_k98ojb.List.IndexOf {\n                    list: filtered_unique_list.output_list\n                    item: item\n                }\n                out(x: 100, y: 50) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: is_not_duplicate.index\n                    right: -1\n                }\n                is_first_occurrence.value -> return\n            }\n        }\n\n        instance(x: 400, y: 100) product_calculation root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(acc, item) {\n                out(x: 50, y: 50) multiply root.Std_k98ojb.Math.Mul {\n                    first: acc\n                    second: item\n                }\n                multiply.result -> return\n            }\n            initial_value: 1\n        }\n\n        execute_19300c -> product_calculation.trigger\n        product_calculation.accumulated_value -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -293, y: 100) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -293, y: 200) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 50, y: 300) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -114) length_4a5b2f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -113) modulo_3d5c1e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 308, y: -114) generateRange_2a3f1b root.Std_k98ojb.List.GenerateRange {\n            from: 0\n        }\n        instance(x: 456, y: -114) slice_7d2c1a root.Std_k98ojb.List.Slice {}\n        instance(x: 612, y: -113) concat_1e3f1b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4a5b2f.list\n        length_4a5b2f.length -> modulo_3d5c1e.value\n        n_68068c -> modulo_3d5c1e.divisor\n        modulo_3d5c1e.result -> generateRange_2a3f1b.to\n        generateRange_2a3f1b.list -> slice_7d2c1a.list\n        length_4a5b2f.length -> slice_7d2c1a.end\n        modulo_3d5c1e.result -> slice_7d2c1a.start\n        list_48148f -> concat_1e3f1b.left\n        slice_7d2c1a.slice -> concat_1e3f1b.right\n        concat_1e3f1b.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_9b8d7e root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") _handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_cdac2a\n                in(x: 0, y: -50, name: \"acc\") property(Number) acc_6b655b\n                in(x: 0, y: -100, name: \"item\") property(Number) item_9c7d8f\n\n                out(x: 100, y: 0, name: \"continue\") trigger() continue_d9efd7\n                out(x: 150, y: 0, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -75) add_4d6f8e root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_4d6f8e.first\n                item_9c7d8f -> add_4d6f8e.second\n                add_4d6f8e.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_9b8d7e.initial_value\n        list_2c62ab -> reduce_9b8d7e.items\n        reduce_9b8d7e.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -85, y: -377) if_6d4f1c root.Std_k98ojb.Std.If {}\n        instance(x: 123, y: -390) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 578, y: -464) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 820, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1356, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1476, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_6d4f1c.predicate\n        execute_b7b391 -> if_6d4f1c.execute\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        2 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_e19a62.predicate\n        if_6d4f1c.then -> if_e19a62.execute\n\n        num_5c0677 -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        num_5c0677 -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> output_c457b3\n        true -> output_c457b3\n\n        add_b4554f.first -> for_8cb3f6.index\n        1 -> add_b4554f.second\n        if_e19a62.else -> add_b4554f.execute\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 46, y: -87) mul_8e3b4c root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -152) less_than_or_equal_a4f8d9 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8e3b4c.first\n        y_5390f5 -> mul_8e3b4c.second\n        mul_8e3b4c.result -> less_than_or_equal_a4f8d9.left\n        less_than_or_equal_a4f8d9.right: -1\n        less_than_or_equal_a4f8d9.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 143, y: -10) modulo_5a8b2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a8b2d.value\n\t11 -> modulo_5a8b2d.divisor\n\tmodulo_5a8b2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 209) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 300, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 500, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -241, y: 24, name: \"item\") property(Number) item_5fda54\n                out(x: 683, y: 73, name: \"output\") property(Boolean) output_cffcc2\n\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: filtered_unique_list.items\n                    index: filtered_unique_list.index - 1\n                }\n\n                instance(x: 300, y: 100) compare_items root.Std_k98ojb.Logic.NotEqual {\n                    left: item_5fda54\n                    right: previous_item.item\n                }\n\n                compare_items.value -> output_cffcc2\n            }\n        }\n\n        instance(x: 700, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -241, y: 24, name: \"accumulator\") property(Number) accumulator_5fda54\n                in(x: -757, y: -167, name: \"current\") property(Number) current_19300c\n                out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n                instance(x: 100, y: 100) multiply_items root.Std_k98ojb.Math.Mul {\n                    first: accumulator_5fda54\n                    second: current_19300c\n                }\n\n                multiply_items.result -> output_cffcc2\n            }\n            initial_value: 1\n        }\n\n        execute_19300c -> unique_list.trigger\n        product_result.value -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -294, y: 65) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 40, y: 75) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 148, y: -100) length_3a8b1f root.Std_k98ojb.List.Length {}\n        instance(x: 267, y: -105) modulo_9d3e4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -100) generateRange_5a8f1b root.Std_k98ojb.List.GenerateRange {\n            from: 0\n        }\n        instance(x: 623, y: -107) slice_4d3e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 625, y: -190) slice_8d3e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 720, y: -145) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_3a8b1f.list\n        n_68068c -> modulo_9d3e4c.value\n        length_3a8b1f.length -> modulo_9d3e4c.divisor\n        modulo_9d3e4c.result -> generateRange_5a8f1b.to\n        length_3a8b1f.length -> slice_4d3e4c.end\n        modulo_9d3e4c.result -> slice_8d3e4c.start\n        list_48148f -> slice_4d3e4c.list\n        list_48148f -> slice_8d3e4c.list\n        slice_8d3e4c.end -> -1\n        slice_4d3e4c.result -> concat_9b38cc.left\n        slice_4d3e4c.start -> generateRange_5a8f1b.from\n        generateRange_5a8f1b.list -> slice_4d3e4c.end\n        slice_4d3e4c.result -> concat_9b38cc.right\n        concat_9b38cc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -100) reduce_9b3d2a root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_reduce_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_cdac2a\n                in(x: -150, y: -100, name: \"acc\") property(Number) acc_6b655b\n                in(x: -150, y: 100, name: \"item\") property(Number) item_6b655c\n\n                out(x: 200, y: 0, name: \"continue\") trigger() continue_d9efd7\n                out(x: 200, y: 100, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -50) add_6f4b1c root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_6f4b1c.first\n                item_6b655c -> add_6f4b1c.second\n                add_6f4b1c.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_9b3d2a.initial_value\n        list_2c62ab -> reduce_9b3d2a.items\n        reduce_9b3d2a.output -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -89, y: -350) if_6c4f0d root.Std_k98ojb.Std.If {}\n        instance(x: 72, y: -528) lessthanorequal_1e1b1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 318, y: -460) for_9a9d2f root.Std_k98ojb.Std.For {}\n        instance(x: 574, y: -413) mathexpression_ae4c1b root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 626, y: -311) if_4d3f1a root.Std_k98ojb.Std.If {}\n        instance(x: 755, y: -382) add_5e1c2b root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_1e1b1c.left\n        1 -> lessthanorequal_1e1b1c.right\n        lessthanorequal_1e1b1c.result -> if_6c4f0d.predicate\n        if_6c4f0d.then -> continue_9a54bb\n        if_6c4f0d.else -> for_9a9d2f.reset\n\n        num_5c0677 -> mathexpression_ae4c1b.gen_0\n        for_9a9d2f.item -> mathexpression_ae4c1b.gen_1\n        mathexpression_ae4c1b.result -> if_4d3f1a.predicate\n\n        if_4d3f1a.then -> continue_9a54bb\n        if_4d3f1a.else -> for_9a9d2f.next\n\n        num_5c0677 -> add_5e1c2b.first\n        1 -> add_5e1c2b.second\n        add_5e1c2b.result -> for_9a9d2f.items\n\n        for_9a9d2f.done -> continue_9a54bb\n        if_6c4f0d.value -> output_c457b3\n        execute_b7b391 -> for_9a9d2f.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -25) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 145, y: -12) modulo_1b2a4d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_1b2a4d.value\n\t11 -> modulo_1b2a4d.divisor\n\tinstance(x: 305, y: -12) equal_6e8b9a root.Std_k98ojb.Logic.Equal {}\n\tmodulo_1b2a4d.result -> equal_6e8b9a.left\n\t0 -> equal_6e8b9a.right\n\tequal_6e8b9a.value -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 60) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -154, y: 30) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -100) length_4d7b1a root.Std_k98ojb.List.Length {}\n        instance(x: 150, y: -100) modulo_6c7f8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 250, y: -100) slice_3a4d2b root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -150) slice_7c6f9e root.Std_k98ojb.List.Slice {}\n        instance(x: 350, y: -100) concat_4a5d2c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4d7b1a.list\n        length_4d7b1a.length -> modulo_6c7f8e.value\n        n_68068c -> modulo_6c7f8e.divisor\n        modulo_6c7f8e.result -> slice_3a4d2b.start\n        modulo_6c7f8e.result -> slice_7c6f9e.end\n        list_48148f -> slice_3a4d2b.list\n        0 -> slice_7c6f9e.start\n        list_48148f -> slice_7c6f9e.list\n        -1 -> slice_3a4d2b.end\n        slice_3a4d2b.slice -> concat_4a5d2c.right\n        slice_7c6f9e.slice -> concat_4a5d2c.left\n        concat_4a5d2c.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_lessthan_2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 178, y: -309) and_0 root.Std_k98ojb.Logic.And {}\n        instance(x: 354, y: -365) if_not_equal root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 528, y: -309) and_1 root.Std_k98ojb.Logic.And {}\n        instance(x: 702, y: -365) if_not_equal_1 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 876, y: -309) and_2 root.Std_k98ojb.Logic.And {}\n        instance(x: 1049, y: -365) for_loop root.Std_k98ojb.Std.For {}\n        instance(x: 1223, y: -309) if_divisible root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1465, y: -365) not_0 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1639, y: -309) and_3 root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> if_lessthan_2.left\n        1 -> if_lessthan_2.right\n        if_lessthan_2.result -> and_0.left\n\n        num_5c0677 -> if_not_equal.left\n        1 -> if_not_equal.right\n        if_not_equal.result -> and_0.right\n\n        and_0.result -> and_1.left\n\n        num_5c0677 -> if_not_equal_1.left\n        2 -> if_not_equal_1.right\n        if_not_equal_1.result -> and_1.right\n\n        and_1.result -> and_2.left\n\n        2 -> for_loop.start\n        instance(x: 184, y: -509) expression_floor root.Std_k98ojb.Math.Expression {\n            expression: \"Math.floor(Math.sqrt(num))\"\n        }\n        num_5c0677 -> expression_floor.gen_0\n        expression_floor.result -> for_loop.end\n\n        for_loop.index -> if_divisible.gen_1\n        num_5c0677 -> if_divisible.gen_0\n        if_divisible.result -> not_0.value\n        not_0.result -> and_2.right\n\n        and_2.result -> output_c457b3\n        and_2.result -> continue_9a54bb\n\n        for_loop.onItem -> and_2.left\n        for_loop.done -> continue_9a54bb\n\n        execute_b7b391 -> for_loop.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 46, y: -178) mul_3e2b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -57) lessorequal_a2d3f1 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_3e2b9c.first\n        y_5390f5 -> mul_3e2b9c.second\n        mul_3e2b9c.result -> lessorequal_a2d3f1.left\n        -1 -> lessorequal_a2d3f1.right\n        lessorequal_a2d3f1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 148, y: -12) modulo_5a7b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a7b9d.value\n\t11 -> modulo_5a7b9d.divisor\n\tmodulo_5a7b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [list_5fda54]\n        }\n\n        instance(x: 200, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.list\n        }\n\n        instance(x: 300, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(item) {\n                out(x: 50, y: 50) is_not_duplicate root.Std_k98ojb.List.IndexOf {\n                    list: filtered_unique_list.output_list\n                    item: item\n                }\n                out(x: 100, y: 50) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: is_not_duplicate.index\n                    right: -1\n                }\n                is_first_occurrence.value -> return\n            }\n        }\n\n        instance(x: 400, y: 100) product_calculation root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(acc, item) {\n                out(x: 50, y: 50) multiply root.Std_k98ojb.Math.Mul {\n                    first: acc\n                    second: item\n                }\n                multiply.result -> return\n            }\n            initial_value: 1\n        }\n\n        execute_19300c -> product_calculation.trigger\n        product_calculation.accumulated_value -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -293, y: 100) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -293, y: 200) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 50, y: 300) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -114) length_4a5b2f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -113) modulo_3d5c1e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 308, y: -114) generateRange_2a3f1b root.Std_k98ojb.List.GenerateRange {\n            from: 0\n        }\n        instance(x: 456, y: -114) slice_7d2c1a root.Std_k98ojb.List.Slice {}\n        instance(x: 612, y: -113) concat_1e3f1b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4a5b2f.list\n        length_4a5b2f.length -> modulo_3d5c1e.value\n        n_68068c -> modulo_3d5c1e.divisor\n        modulo_3d5c1e.result -> generateRange_2a3f1b.to\n        generateRange_2a3f1b.list -> slice_7d2c1a.list\n        length_4a5b2f.length -> slice_7d2c1a.end\n        modulo_3d5c1e.result -> slice_7d2c1a.start\n        list_48148f -> concat_1e3f1b.left\n        slice_7d2c1a.slice -> concat_1e3f1b.right\n        concat_1e3f1b.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_9b8d7e root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_reduce_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_cdac2a\n                in(x: 150, y: -50, name: \"acc\") property(Number) acc_6b655b\n                in(x: 300, y: -50, name: \"item\") property(Number) item_9c7d8e\n\n                out(x: 450, y: -50, name: \"continue\") trigger() continue_d9efd7\n                out(x: 600, y: -50, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 150, y: -150) add_4d7e8f root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_4d7e8f.first\n                item_9c7d8e -> add_4d7e8f.second\n                add_4d7e8f.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_9b8d7e.initial_value\n        list_2c62ab -> reduce_9b8d7e.items\n        reduce_9b8d7e.output -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -85, y: -377) if_6d4f1c root.Std_k98ojb.Std.If {}\n        instance(x: 123, y: -390) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 578, y: -464) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 820, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1356, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1476, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_6d4f1c.predicate\n        execute_b7b391 -> if_6d4f1c.execute\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        2 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_e19a62.predicate\n        if_6d4f1c.then -> if_e19a62.execute\n\n        num_5c0677 -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        num_5c0677 -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> output_c457b3\n        true -> output_c457b3\n\n        add_b4554f.first -> for_8cb3f6.index\n        1 -> add_b4554f.second\n        if_e19a62.else -> add_b4554f.execute\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 46, y: -87) mul_8e3b4c root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -152) less_than_or_equal_a4f8d9 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8e3b4c.first\n        y_5390f5 -> mul_8e3b4c.second\n        mul_8e3b4c.result -> less_than_or_equal_a4f8d9.left\n        less_than_or_equal_a4f8d9.right: -1\n        less_than_or_equal_a4f8d9.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 143, y: -10) modulo_5a8b2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a8b2d.value\n\t11 -> modulo_5a8b2d.divisor\n\tmodulo_5a8b2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 209) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 300, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 500, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -241, y: 24, name: \"item\") property(Number) item_5fda54\n                out(x: 683, y: 73, name: \"output\") property(Boolean) output_cffcc2\n\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: filtered_unique_list.items\n                    index: filtered_unique_list.index - 1\n                }\n\n                instance(x: 300, y: 100) compare_items root.Std_k98ojb.Logic.NotEqual {\n                    left: item_5fda54\n                    right: previous_item.item\n                }\n\n                compare_items.value -> output_cffcc2\n            }\n        }\n\n        instance(x: 700, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -241, y: 24, name: \"accumulator\") property(Number) accumulator_5fda54\n                in(x: -757, y: -167, name: \"current\") property(Number) current_19300c\n                out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n                instance(x: 100, y: 100) multiply_items root.Std_k98ojb.Math.Mul {\n                    first: accumulator_5fda54\n                    second: current_19300c\n                }\n\n                multiply_items.result -> output_cffcc2\n            }\n            initial_value: 1\n        }\n\n        execute_19300c -> unique_list.trigger\n        product_result.value -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -294, y: 65) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 40, y: 75) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 148, y: -100) length_3a8b1f root.Std_k98ojb.List.Length {}\n        instance(x: 267, y: -105) modulo_9d3e4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -100) generateRange_5a8f1b root.Std_k98ojb.List.GenerateRange {\n            from: 0\n        }\n        instance(x: 623, y: -107) slice_4d3e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 625, y: -190) slice_8d3e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 720, y: -145) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_3a8b1f.list\n        n_68068c -> modulo_9d3e4c.value\n        length_3a8b1f.length -> modulo_9d3e4c.divisor\n        modulo_9d3e4c.result -> generateRange_5a8f1b.to\n        length_3a8b1f.length -> slice_4d3e4c.end\n        modulo_9d3e4c.result -> slice_8d3e4c.start\n        list_48148f -> slice_4d3e4c.list\n        list_48148f -> slice_8d3e4c.list\n        slice_8d3e4c.end -> -1\n        slice_4d3e4c.result -> concat_9b38cc.left\n        slice_4d3e4c.start -> generateRange_5a8f1b.from\n        generateRange_5a8f1b.list -> slice_4d3e4c.end\n        slice_4d3e4c.result -> concat_9b38cc.right\n        concat_9b38cc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -100) reduce_9b3d2a root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_reduce_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_cdac2a\n                in(x: -150, y: -100, name: \"acc\") property(Number) acc_6b655b\n                in(x: -150, y: 100, name: \"item\") property(Number) item_6b655c\n\n                out(x: 200, y: 0, name: \"continue\") trigger() continue_d9efd7\n                out(x: 200, y: 100, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -50) add_6f4b1c root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_6f4b1c.first\n                item_6b655c -> add_6f4b1c.second\n                add_6f4b1c.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_9b3d2a.initial_value\n        list_2c62ab -> reduce_9b3d2a.items\n        reduce_9b3d2a.output -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -89, y: -350) if_6c4f0d root.Std_k98ojb.Std.If {}\n        instance(x: 72, y: -528) lessthanorequal_1e1b1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 318, y: -460) for_9a9d2f root.Std_k98ojb.Std.For {}\n        instance(x: 574, y: -413) mathexpression_ae4c1b root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 626, y: -311) if_4d3f1a root.Std_k98ojb.Std.If {}\n        instance(x: 755, y: -382) add_5e1c2b root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_1e1b1c.left\n        1 -> lessthanorequal_1e1b1c.right\n        lessthanorequal_1e1b1c.result -> if_6c4f0d.predicate\n        if_6c4f0d.then -> continue_9a54bb\n        if_6c4f0d.else -> for_9a9d2f.reset\n\n        num_5c0677 -> mathexpression_ae4c1b.gen_0\n        for_9a9d2f.item -> mathexpression_ae4c1b.gen_1\n        mathexpression_ae4c1b.result -> if_4d3f1a.predicate\n\n        if_4d3f1a.then -> continue_9a54bb\n        if_4d3f1a.else -> for_9a9d2f.next\n\n        num_5c0677 -> add_5e1c2b.first\n        1 -> add_5e1c2b.second\n        add_5e1c2b.result -> for_9a9d2f.items\n\n        for_9a9d2f.done -> continue_9a54bb\n        if_6c4f0d.value -> output_c457b3\n        execute_b7b391 -> for_9a9d2f.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -25) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5a3b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a3b9d.value\n\t11 -> modulo_5a3b9d.divisor\n\tmodulo_5a3b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 68) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -10, y: 76) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -114) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -116) modulo_2d3e4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -118) slice_3g4h5i root.Std_k98ojb.List.Slice {}\n        instance(x: 290, y: -60) slice_4j5k6l root.Std_k98ojb.List.Slice {}\n        instance(x: 470, y: -118) concat_5m6n7o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_2d3e4f.value\n        n_68068c -> modulo_2d3e4f.divisor\n        modulo_2d3e4f.result -> slice_3g4h5i.start\n        list_48148f -> slice_3g4h5i.list\n        slice_3g4h5i.end -> -1\n        0 -> slice_4j5k6l.start\n        list_48148f -> slice_4j5k6l.list\n        modulo_2d3e4f.result -> slice_4j5k6l.end\n        slice_3g4h5i.slice -> concat_5m6n7o.right\n        slice_4j5k6l.slice -> concat_5m6n7o.left\n        concat_5m6n7o.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "```midio\n\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_1f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_3e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) if_2f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 1278, y: -365) lessthanorequal_4e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1554, y: -365) if_3f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 1830, y: -365) lessthanorequal_5e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2106, y: -365) if_4f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 2382, y: -365) lessthanorequal_6e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2658, y: -365) if_5f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 2934, y: -365) lessthanorequal_7e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3210, y: -365) if_6f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 3486, y: -365) lessthanorequal_8e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3762, y: -365) if_7f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 4038, y: -365) lessthanorequal_9e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4314, y: -365) if_8f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 4590, y: -365) lessthanorequal_ae123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4866, y: -365) if_9f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 5142, y: -365) lessthanorequal_be123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5418, y: -365) if_af8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 5694, y: -365) lessthanorequal_ce123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5970, y: -365) if_bf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 6246, y: -365) lessthanorequal_de123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6522, y: -365) if_cf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 6798, y: -365) lessthanorequal_ee123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7074, y: -365) if_df8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 7350, y: -365) lessthanorequal_fe123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7626, y: -365) if_ef8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 7902, y: -365) lessthanorequal_0e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8178, y: -365) if_ff8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 8454, y: -365) lessthanorequal_1e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8730, y: -365) if_gf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 8994, y: -365) lessthanorequal_2e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 9270, y: -365) if_hf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 9546, y: -365) lessthanorequal_3e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 9822, y: -365) if_if8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 10098, y: -365) lessthanorequal_4e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10374, y: -365) if_jf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 10650, y: -365) lessthanorequal_5e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10926, y: -365) if_kf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 11202, y: -365) lessthanorequal_6e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 11478, y: -365) if_lf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 11754, y: -365) lessthanorequal_7e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 12030, y: -365) if_mf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 12306, y: -365) lessthanorequal_8e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 12582, y: -365) if_nf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 12858, y: -365) lessthanorequal_9e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 13134, y: -365) if_of8d2c root.Std_k98ojb.Std.If {}\n        instance(x:"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 186, y: -147) mul_8d4e1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -268) lessorequal_24f65a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d4e1c.first\n        y_5390f5 -> mul_8d4e1c.second\n        mul_8d4e1c.result -> lessorequal_24f65a.left\n        lessorequal_24f65a.right: -1\n        lessorequal_24f65a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -100) modulo_4b8a12 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_4b8a12.value\n        11 -> modulo_4b8a12.divisor\n        modulo_4b8a12.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 222, y: 100) unique_list root.Sets.Difference {\n            left: list_5fda54\n            right: List.Empty()\n        }\n\n        instance(x: 487, y: 100) product_calc root.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n\n        unique_list.difference -> product_calc.items\n        product_calc.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -198, y: -104) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -206, y: 135) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 67, y: 35) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.output_list -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 147, y: -122) length_1a8d4b root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: -120) modulo_7f3e8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 392, y: -121) generateRange_b4a7d1 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 516, y: -120) slice_4f4e1c root.Std_k98ojb.List.Slice {}\n        instance(x: 513, y: -210) slice_7f1a3d root.Std_k98ojb.List.Slice {}\n        instance(x: 642, y: -121) concat_a5e2c3 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1a8d4b.list\n        n_68068c -> modulo_7f3e8c.value\n        length_1a8d4b.length -> modulo_7f3e8c.divisor\n        0 -> generateRange_b4a7d1.from\n        modulo_7f3e8c.result -> generateRange_b4a7d1.to\n        list_48148f -> slice_7f1a3d.list\n        modulo_7f3e8c.result -> slice_7f1a3d.start\n        -1 -> slice_7f1a3d.end\n        list_48148f -> slice_4f4e1c.list\n        0 -> slice_4f4e1c.start\n        modulo_7f3e8c.result -> slice_4f4e1c.end\n        generateRange_b4a7d1.range -> concat_a5e2c3.right\n        slice_7f1a3d.slice -> concat_a5e2c3.left\n        slice_4f4e1c.slice -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_ae9b3d root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_ae9b3d.items\n        0 -> reduce_ae9b3d.initial_value\n        reduce_ae9b3d.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -108, y: -426) if_lessthan_two_f2e3d7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 150, y: -376) if_true_false_e1c7a9 root.Std_k98ojb.Std.If {}\n        instance(x: 400, y: -296) for_loop_7e2d8f root.Std_k98ojb.Std.For {}\n        instance(x: 570, y: -346) modulo_check_f1a5b2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 720, y: -376) if_mod_zero_2d3f9a root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> if_lessthan_two_f2e3d7.left\n        1 -> if_lessthan_two_f2e3d7.right\n        if_lessthan_two_f2e3d7.result -> if_true_false_e1c7a9.predicate\n        false -> if_true_false_e1c7a9.then\n        true -> if_true_false_e1c7a9.else\n\n        2 -> for_loop_7e2d8f.items\n        num_5c0677 -> modulo_check_f1a5b2.value\n        for_loop_7e2d8f.item -> modulo_check_f1a5b2.divisor\n        modulo_check_f1a5b2.result -> if_mod_zero_2d3f9a.predicate\n        false -> if_mod_zero_2d3f9a.then\n        true -> if_mod_zero_2d3f9a.else\n\n        for_loop_7e2d8f.onItem -> if_mod_zero_2d3f9a.execute\n        for_loop_7e2d8f.done -> continue_9a54bb\n        if_true_false_e1c7a9.execute -> for_loop_7e2d8f.reset\n\n        false -> output_c457b3\n        true -> output_c457b3\n\n        if_mod_zero_2d3f9a.then -> continue_9a54bb\n        if_true_false_e1c7a9.else -> for_loop_7e2d8f.next\n        execute_b7b391 -> if_true_false_e1c7a9.execute\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: 64, y: -87) logicand_a4c8b7 root.Std_k98ojb.Logic.And {}\n\tinstance(x: 208, y: -53) logicgreaterthan_bf1e12 root.Std_k98ojb.Math.GreaterThan {}\n\tinstance(x: 206, y: -145) logiclessthanorequal_76d6a4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n\tx_853326 -> logicgreaterthan_bf1e12.left\n\ty_5390f5 -> logicgreaterthan_bf1e12.right\n\tlogicgreaterthan_bf1e12.result -> logicand_a4c8b7.a\n\n\tx_853326 -> logiclessthanorequal_76d6a4.left\n\ty_5390f5 -> logiclessthanorequal_76d6a4.right\n\tlogiclessthanorequal_76d6a4.result -> logicand_a4c8b7.b\n\n\tlogicand_a4c8b7.out -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 104, y: 104) modulo_5e4b0a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5e4b0a.value\n        11 -> modulo_5e4b0a.divisor\n        instance(x: 260, y: 103) equal_f8d2c1 root.Std_k98ojb.Logic.Equal {}\n        modulo_5e4b0a.result -> equal_f8d2c1.left\n        0 -> equal_f8d2c1.right\n        equal_f8d2c1.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 132) replace_9b7c8f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9b7c8f.input\n        search_ai -> replace_9b7c8f.search\n        replace_ai -> replace_9b7c8f.replace\n        replace_9b7c8f.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 123, y: 123) unique_list root.Std_k98ojb.List.Flatten {\n            list: list_5fda54\n        }\n        instance(x: 300, y: 123) sort_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n        instance(x: 477, y: 123) remove_duplicates root.Std_k98ojb.Iteration.Reduce {\n            items: sort_list.sorted\n            handler: func(doc:\"Remove duplicates\") dedupe_handler {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_6f5c7a\n                in(x: 150, y: 0, name: \"it\") property(Number) it_4e9d8b\n                out(x: 350, y: 0, name: \"reduced\") property(List) reduced_2f8a9c\n                instance(x: 75, y: -50) contains root.Std_k98ojb.List.Contains {\n                    item: it_4e9d8b\n                    list: acc_6f5c7a\n                }\n                instance(x: 175, y: -50) add_item root.Std_k98ojb.List.Add {\n                    item: it_4e9d8b\n                    list: acc_6f5c7a\n                }\n                contains.contains -> Std.If {\n                    then: acc_6f5c7a -> reduced_2f8a9c\n                    else: add_item.listWithItem -> reduced_2f8a9c\n                }\n            }\n        }\n        instance(x: 654, y: 123) calculate_product root.Std_k98ojb.Iteration.Reduce {\n            items: remove_duplicates.reduced\n            handler: func(doc:\"Calculate product\") product_handler {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_6f5c7a\n                in(x: 150, y: 0, name: \"it\") property(Number) it_4e9d8b\n                out(x: 350, y: 0, name: \"reduced\") property(Number) reduced_2f8a9c\n                instance(x: 75, y: -50) multiply root.Std_k98ojb.Math.Mul {\n                    first: acc_6f5c7a\n                    second: it_4e9d8b\n                }\n                multiply.result -> reduced_2f8a9c\n            }\n        }\n        execute_19300c -> unique_list.trigger\n        calculate_product.reduced -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -196, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 136, y: 129) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 306, y: 154) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.output_list -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 248, y: -105) length_ea5e5f root.Std_k98ojb.List.Length {}\n        instance(x: 457, y: -69) modulo_f6c1d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 238, y: 103) slice_18a84f root.Std_k98ojb.List.Slice {}\n        instance(x: 705, y: -147) concat_6c6e49 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_ea5e5f.list\n        n_68068c -> modulo_f6c1d8.value\n        length_ea5e5f.length -> modulo_f6c1d8.divisor\n\n        modulo_f6c1d8.result -> slice_18a84f.start\n        0 -> slice_18a84f.end\n\n        list_48148f -> slice_18a84f.list\n\n        slice_18a84f.sliced -> concat_6c6e49.right\n\n        modulo_f6c1d8.result -> Math.Sub {\n            first: length_ea5e5f.length\n            second: modulo_f6c1d8.result\n            result -> slice_7a2b3c.start\n        }\n\n        -1 -> slice_7a2b3c.end\n        list_48148f -> slice_7a2b3c.list\n\n        instance(x: 509, y: 65) slice_7a2b3c root.Std_k98ojb.List.Slice {}\n        slice_7a2b3c.sliced -> concat_6c6e49.left\n\n        concat_6c6e49.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -90, y: -127) reduce_8e8b9c root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + it\"\n        }\n\n        0 -> reduce_8e8b9c.initial_value\n        list_2c62ab -> reduce_8e8b9c.items\n        reduce_8e8b9c.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) lessthanorequal_f4c1e6 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 263, y: -408) if_e1d21f root.Std_k98ojb.Std.If {}\n\tinstance(x: 567, y: -416) lessthanorequal_5a7e1c root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 903, y: -427) if_f7f4d5 root.Std_k98ojb.Std.If {}\n\tinstance(x: 1265, y: -376) lessthanorequal_57c7e1 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 1640, y: -401) if_48d16a root.Std_k98ojb.Std.If {}\n\tinstance(x: 2039, y: -358) mathexpression_e7f0e8 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(num % i == 0)\"\n\t}\n\tinstance(x: 2410, y: -416) if_41c4d9 root.Std_k98ojb.Std.If {}\n\tinstance(x: 305, y: -717) generaterange_4f3a0e root.Std_k98ojb.List.GenerateRange {}\n\tinstance(x: 629, y: -692) for_3d97c1 root.Std_k98ojb.Std.For {}\n\n\t1 -> lessthanorequal_f4c1e6.left\n\tnum_5c0677 -> lessthanorequal_f4c1e6.right\n\tlessthanorequal_f4c1e6.result -> if_e1d21f.predicate\n\tif_e1d21f.execute -> continue_9a54bb\n\tif_e1d21f.else -> for_3d97c1.reset\n\n\t2 -> generaterange_4f3a0e.from\n\tnum_5c0677 -> generaterange_4f3a0e.to\n\tgeneraterange_4f3a0e.list -> for_3d97c1.items\n\n\tfor_3d97c1.item -> lessthanorequal_5a7e1c.left\n\tnum_5c0677 -> lessthanorequal_5a7e1c.right\n\tlessthanorequal_5a7e1c.result -> if_f7f4d5.predicate\n\n\tif_f7f4d5.execute -> continue_9a54bb\n\tif_f7f4d5.else -> lessthanorequal_57c7e1.left\n\n\t2 -> lessthanorequal_57c7e1.right\n\tlessthanorequal_57c7e1.result -> if_48d16a.predicate\n\n\tif_48d16a.execute -> for_3d97c1.next\n\tif_48d16a.else -> continue_9a54bb\n\n\tnum_5c0677 -> mathexpression_e7f0e8.gen_0\n\tfor_3d97c1.item -> mathexpression_e7f0e8.gen_1\n\tmathexpression_e7f0e8.result -> if_41c4d9.predicate\n\n\tif_41c4d9.execute -> continue_9a54bb\n\tif_41c4d9.else -> for_3d97c1.next\n\n\tfor_3d97c1.done -> output_c457b3\n\texecute_b7b391 -> if_e1d21f.execute\n\toutput_c457b3 <- true\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -25) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5b8a2d.value\n\t11 -> modulo_5b8a2d.divisor\n\tmodulo_5b8a2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 68) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -10, y: 76) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -114) length_1b2a3d root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -164) modulo_1c2b3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -114) slice_1d2c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 507, y: -164) slice_2e2d3a root.Std_k98ojb.List.Slice {}\n        instance(x: 644, y: -114) concat_3f2e3b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2a3d.list\n        length_1b2a3d.length -> modulo_1c2b3e.value\n        n_68068c -> modulo_1c2b3e.divisor\n        modulo_1c2b3e.result -> slice_1d2c3f.start\n        slice_1d2c3f.end -> -1\n        list_48148f -> slice_1d2c3f.list\n        0 -> slice_2e2d3a.start\n        modulo_1c2b3e.result -> slice_2e2d3a.end\n        list_48148f -> slice_2e2d3a.list\n        slice_1d2c3f.slice -> concat_3f2e3b.right\n        slice_2e2d3a.slice -> concat_3f2e3b.left\n        concat_3f2e3b.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e1b9a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_8d3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_8a2e5d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) for_4f1c9b root.Std_k98ojb.Std.For {}\n        instance(x: 1278, y: -365) mathexpression_4a5e1d root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1554, y: -365) if_2c7f8a root.Std_k98ojb.Std.If {}\n        instance(x: 1830, y: -365) mathexpression_2d8e1f root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i <= num)\"\n        }\n        instance(x: 2106, y: -365) add_4a7c1b root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_2e1b9a.left\n        1 -> lessthanorequal_2e1b9a.right\n        lessthanorequal_2e1b9a.result -> if_0f8d2c.predicate\n        if_0f8d2c.then -> continue_9a54bb\n        false -> output_c457b3\n\n        num_5c0677 -> lessthanorequal_8a2e5d.left\n        2 -> lessthanorequal_8a2e5d.right\n        lessthanorequal_8a2e5d.result -> if_8d3f1c.predicate\n        true -> output_c457b3\n        if_8d3f1c.then -> continue_9a54bb\n\n        2 -> add_4a7c1b.first\n        1 -> add_4a7c1b.second\n        add_4a7c1b.result -> for_4f1c9b.start\n        num_5c0677 -> mathexpression_2d8e1f.gen_0\n        for_4f1c9b.index -> mathexpression_2d8e1f.gen_1\n        mathexpression_2d8e1f.result -> if_2c7f8a.predicate\n        if_2c7f8a.then -> continue_9a54bb\n\n        num_5c0677 -> mathexpression_4a5e1d.gen_0\n        for_4f1c9b.index -> mathexpression_4a5e1d.gen_1\n        mathexpression_4a5e1d.result -> if_2c7f8a.else\n\n        false -> output_c457b3\n        true -> output_c457b3\n\n        for_4f1c9b.done -> continue_9a54bb\n        execute_b7b391 -> for_4f1c9b.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 186, y: -147) mul_8d4e1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 510, y: -240) lessorequal_a8e56c root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d4e1c.first\n        y_5390f5 -> mul_8d4e1c.second\n        mul_8d4e1c.result -> lessorequal_a8e56c.left\n        lessorequal_a8e56c.right: -1\n        lessorequal_a8e56c.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -100) modulo_4b8a12 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_4b8a12.value\n        11 -> modulo_4b8a12.divisor\n        modulo_4b8a12.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 222, y: 100) unique_list root.Sets.Difference {\n            left: list_5fda54\n            right: List.Empty()\n        }\n\n        instance(x: 487, y: 100) product_calc root.Iteration.Reduce {\n            handler: Math.Mul\n        }\n\n        unique_list.difference -> product_calc.items\n        execute_19300c -> product_calc.trigger\n        product_calc.output_list -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -198, y: -104) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -206, y: 135) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 67, y: 35) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 147, y: -122) length_1d8f6a root.Std_k98ojb.List.Length {}\n        instance(x: 259, y: -120) modulo_7c4e32 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 371, y: -118) generateRange_6a2d1f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 524, y: -118) slice_3e0c7f root.Std_k98ojb.List.Slice {}\n        instance(x: 524, y: -47) slice_6d1a89 root.Std_k98ojb.List.Slice {}\n        instance(x: 664, y: -118) concat_0e3c91 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1d8f6a.list\n        length_1d8f6a.length -> modulo_7c4e32.value\n        n_68068c -> modulo_7c4e32.divisor\n        modulo_7c4e32.result -> generateRange_6a2d1f.from\n        list_48148f -> generateRange_6a2d1f.to\n        0 -> generateRange_6a2d1f.from\n        generateRange_6a2d1f.list -> slice_3e0c7f.list\n        modulo_7c4e32.result -> slice_3e0c7f.start\n        -1 -> slice_3e0c7f.end\n        list_48148f -> slice_6d1a89.list\n        0 -> slice_6d1a89.start\n        modulo_7c4e32.result -> slice_6d1a89.end\n        slice_3e0c7f.slice -> concat_0e3c91.right\n        slice_6d1a89.slice -> concat_0e3c91.left\n        concat_0e3c91.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_f3b9d7 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_f3b9d7.items\n        0 -> reduce_f3b9d7.initial_value\n        reduce_f3b9d7.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -108, y: -426) if_lessthan_two_f4e3d7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 158, y: -362) if_not_equal_one_e8a2f1 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 300, y: -427) and_0c2b1f root.Std_k98ojb.Logic.And {}\n        instance(x: 516, y: -373) if_prime_check_9a1b3e root.Std_k98ojb.Std.If {}\n        instance(x: 724, y: -302) for_loop_e3d1c4 root.Std_k98ojb.Std.For {}\n        instance(x: 1056, y: -363) math_expression_8e8a3f root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i <= num)\"\n        }\n        instance(x: 1247, y: -359) math_modulo_6d7c0f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1438, y: -357) if_not_prime_1e2a5d root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> if_lessthan_two_f4e3d7.left\n        2 -> if_lessthan_two_f4e3d7.right\n        num_5c0677 -> if_not_equal_one_e8a2f1.left\n        1 -> if_not_equal_one_e8a2f1.right\n        if_lessthan_two_f4e3d7.result -> and_0c2b1f.left\n        if_not_equal_one_e8a2f1.result -> and_0c2b1f.right\n        and_0c2b1f.result -> if_prime_check_9a1b3e.predicate\n        execute_b7b391 -> if_prime_check_9a1b3e.execute\n        2 -> for_loop_e3d1c4.from\n        num_5c0677 -> math_expression_8e8a3f.gen_1\n        for_loop_e3d1c4.item -> math_expression_8e8a3f.gen_0\n        math_expression_8e8a3f.result -> if_prime_check_9a1b3e.then\n        num_5c0677 -> for_loop_e3d1c4.to\n        for_loop_e3d1c4.item -> math_modulo_6d7c0f.left\n        num_5c0677 -> math_modulo_6d7c0f.right\n        math_modulo_6d7c0f.result -> if_not_prime_1e2a5d.predicate\n        for_loop_e3d1c4.onItem -> if_not_prime_1e2a5d.execute\n        if_not_prime_1e2a5d.then -> output_c457b3\n        false -> output_c457b3\n        if_prime_check_9a1b3e.else -> continue_9a54bb\n        for_loop_e3d1c4.done -> continue_9a54bb\n        if_not_prime_1e2a5d.else -> for_loop_e3d1c4.next\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: 64, y: -87) logicand_a4c8d2 root.Std_k98ojb.Logic.And {}\n\tinstance(x: 204, y: -51) lessorequal_b9e4f4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 363, y: -73) greaterthan_9a92d3 root.Std_k98ojb.Math.GreaterThan {}\n\n\tx_853326 -> lessorequal_b9e4f4.left\n\ty_5390f5 -> lessorequal_b9e4f4.right\n\tlessorequal_b9e4f4.result -> logicand_a4c8d2.first\n\n\tx_853326 -> greaterthan_9a92d3.left\n\ty_5390f5 -> greaterthan_9a92d3.right\n\tgreaterthan_9a92d3.result -> logicand_a4c8d2.second\n\n\tlogicand_a4c8d2.out -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 104, y: 104) modulo_5f9b4a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5f9b4a.value\n        11 -> modulo_5f9b4a.divisor\n        modulo_5f9b4a.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 132) replace_9b7c root.Std_k98ojb.Strings.Replace {}\n        \n        input_ai -> replace_9b7c.input\n        search_ai -> replace_9b7c.search\n        replace_ai -> replace_9b7c.replace\n        \n        replace_9b7c.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 123, y: 123) unique_list root.Std_k98ojb.List.Flatten {\n            list: list_5fda54\n        }\n        instance(x: 300, y: 123) sort_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n        instance(x: 477, y: 123) remove_duplicates root.Std_k98ojb.Iteration.Reduce {\n            items: sort_list.sorted\n            reducer: func() {\n                in(name:\"acc\") property(List)\n                in(name:\"item\") property(Number)\n                out(name:\"result\") property(List)\n                instance(x: 0, y: 0) contains_item root.Std_k98ojb.List.Contains {\n                    list: acc\n                    item: item\n                }\n                instance(x: 150, y: 0) add_item root.Std_k98ojb.List.Add {\n                    list: acc\n                    item: item\n                }\n                instance(x: 300, y: 0) if_contains root.Std_k98ojb.Std.If {\n                    input: contains_item.value\n                }\n                if_contains.then -> result\n                if_contains.else -> add_item.listWithItem\n            }\n        }\n        instance(x: 654, y: 123) calculate_product root.Std_k98ojb.Iteration.Reduce {\n            items: remove_duplicates.result\n            reducer: func() {\n                in(name:\"acc\") property(Number)\n                in(name:\"item\") property(Number)\n                out(name:\"result\") property(Number)\n                instance(x: 0, y: 0) multiply root.Std_k98ojb.Math.Mul {\n                    first: acc\n                    second: item\n                }\n                multiply.result -> result\n            }\n        }\n        execute_19300c -> unique_list.listWithItem\n        calculate_product.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -196, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 136, y: 129) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 306, y: 154) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.output_list -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 248, y: -105) length_ea1d4f root.Std_k98ojb.List.Length {}\n        instance(x: 457, y: -62) mod_274b0c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 322, y: -170) sub_6d67f6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 575, y: -133) slice_4e9c59 root.Std_k98ojb.List.Slice {}\n        instance(x: 572, y: -204) slice_6f1d97 root.Std_k98ojb.List.Slice {}\n        instance(x: 685, y: -134) concat_d4a302 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_ea1d4f.list\n        n_68068c -> mod_274b0c.value\n        length_ea1d4f.length -> mod_274b0c.divisor\n        length_ea1d4f.length -> sub_6d67f6.second\n        mod_274b0c.result -> sub_6d67f6.first\n        list_48148f -> slice_4e9c59.list\n        mod_274b0c.result -> slice_4e9c59.start\n        -1 -> slice_4e9c59.end\n        list_48148f -> slice_6f1d97.list\n        0 -> slice_6f1d97.start\n        sub_6d67f6.result -> slice_6f1d97.end\n        slice_4e9c59.slice -> concat_d4a302.right\n        slice_6f1d97.slice -> concat_d4a302.left\n        concat_d4a302.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -90, y: -127) reduce_8e8b9c root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + it\"\n        }\n\n        0 -> reduce_8e8b9c.initial_value\n        list_2c62ab -> reduce_8e8b9c.items\n        reduce_8e8b9c.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) lessthanorequal_f3c0d3 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 263, y: -159) if_e1f86e root.Std_k98ojb.Std.If {}\n\tinstance(x: 479, y: -388) lessthanorequal_70ae7c root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 285, y: -412) expression_ae0d6f root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(i * i <= num)\"\n\t}\n\tinstance(x: 627, y: -373) expression_4c3a76 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(num % i == 0)\"\n\t}\n\tinstance(x: 511, y: -535) for_fadbbf root.Std_k98ojb.Std.For {}\n\tinstance(x: 849, y: -276) if_8a5e7c root.Std_k98ojb.Std.If {}\n\tnum_5c0677 -> lessthanorequal_f3c0d3.left\n\t2 -> lessthanorequal_f3c0d3.right\n\tlessthanorequal_f3c0d3.result -> if_e1f86e.predicate\n\tif_e1f86e.else -> continue_9a54bb\n\tnum_5c0677 -> lessthanorequal_70ae7c.left\n\t2 -> lessthanorequal_70ae7c.right\n\tlessthanorequal_70ae7c.result -> for_fadbbf.trigger\n\texpression_ae0d6f.result -> if_8a5e7c.predicate\n\tfor_fadbbf.onItem -> expression_ae0d6f.execute\n\tnum_5c0677 -> expression_ae0d6f.gen_1\n\tfor_fadbbf.index -> expression_ae0d6f.gen_0\n\texpression_4c3a76.result -> if_8a5e7c.then\n\tif_8a5e7c.else -> for_fadbbf.next\n\tnum_5c0677 -> expression_4c3a76.gen_1\n\tfor_fadbbf.index -> expression_4c3a76.gen_0\n\tfor_fadbbf.done -> continue_9a54bb\n\tif_e1f86e.then -> output_c457b3\n\tif_8a5e7c.value -> output_c457b3\n\texecute_b7b391 -> for_fadbbf.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -25) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5b8a2d.value\n\t11 -> modulo_5b8a2d.divisor\n\tmodulo_5b8a2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 68) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -10, y: 76) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -114) length_1b2a3d root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -164) modulo_1c2b3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -114) slice_1d2c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 507, y: -164) slice_2e2d3a root.Std_k98ojb.List.Slice {}\n        instance(x: 644, y: -114) concat_3f2e3b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2a3d.list\n        length_1b2a3d.length -> modulo_1c2b3e.value\n        n_68068c -> modulo_1c2b3e.divisor\n        modulo_1c2b3e.result -> slice_1d2c3f.start\n        slice_1d2c3f.end -> -1\n        list_48148f -> slice_1d2c3f.list\n        0 -> slice_2e2d3a.start\n        modulo_1c2b3e.result -> slice_2e2d3a.end\n        list_48148f -> slice_2e2d3a.list\n        slice_1d2c3f.slice -> concat_3f2e3b.right\n        slice_2e2d3a.slice -> concat_3f2e3b.left\n        concat_3f2e3b.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e1b9a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_8d3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_8a2e5d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) for_4f1c9b root.Std_k98ojb.Std.For {}\n        instance(x: 1278, y: -365) mathexpression_4a5e1d root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1554, y: -365) if_2c7f8a root.Std_k98ojb.Std.If {}\n        instance(x: 1830, y: -365) mathexpression_2d8e1f root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i <= num)\"\n        }\n        instance(x: 2106, y: -365) add_4a7c1b root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_2e1b9a.left\n        1 -> lessthanorequal_2e1b9a.right\n        lessthanorequal_2e1b9a.result -> if_0f8d2c.predicate\n        if_0f8d2c.then -> continue_9a54bb\n        false -> output_c457b3\n\n        num_5c0677 -> lessthanorequal_8a2e5d.left\n        2 -> lessthanorequal_8a2e5d.right\n        lessthanorequal_8a2e5d.result -> if_8d3f1c.predicate\n        true -> output_c457b3\n        if_8d3f1c.then -> continue_9a54bb\n\n        2 -> add_4a7c1b.first\n        1 -> add_4a7c1b.second\n        add_4a7c1b.result -> for_4f1c9b.start\n        num_5c0677 -> mathexpression_2d8e1f.gen_0\n        for_4f1c9b.index -> mathexpression_2d8e1f.gen_1\n        mathexpression_2d8e1f.result -> if_2c7f8a.predicate\n        if_2c7f8a.then -> continue_9a54bb\n\n        num_5c0677 -> mathexpression_4a5e1d.gen_0\n        for_4f1c9b.index -> mathexpression_4a5e1d.gen_1\n        mathexpression_4a5e1d.result -> if_2c7f8a.else\n\n        false -> output_c457b3\n        true -> output_c457b3\n\n        for_4f1c9b.done -> continue_9a54bb\n        execute_b7b391 -> for_4f1c9b.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 186, y: -147) mul_8d4e1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 510, y: -240) lessorequal_a8e56c root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d4e1c.first\n        y_5390f5 -> mul_8d4e1c.second\n        mul_8d4e1c.result -> lessorequal_a8e56c.left\n        lessorequal_a8e56c.right: -1\n        lessorequal_a8e56c.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -100) modulo_4b8a12 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_4b8a12.value\n        11 -> modulo_4b8a12.divisor\n        modulo_4b8a12.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 222, y: 100) unique_list root.Sets.Difference {\n            left: list_5fda54\n            right: List.Empty()\n        }\n\n        instance(x: 487, y: 100) product_calc root.Iteration.Reduce {\n            handler: func() reduce_handler {\n                in(x: -326, y: 94, name: \"accumulator\") property(Number) accumulator_5a2c3f\n                in(x: -198, y: 177, name: \"current\") property(Number) current_b3d7e1\n                out(x: 302, y: 136, name: \"result\") property(Number) result_5d4b1a\n\n                instance(x: 198, y: 100) multiply root.Math.Mul {\n                    first: accumulator_5a2c3f\n                    second: current_b3d7e1\n                }\n\n                multiply.result -> result_5d4b1a\n            }\n        }\n\n        unique_list.difference -> product_calc.items\n        product_calc.output_list -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -198, y: -104) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -206, y: 135) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 67, y: 35) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 147, y: -122) length_1d8f6a root.Std_k98ojb.List.Length {}\n        instance(x: 259, y: -120) modulo_7c4e32 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 371, y: -118) generateRange_6a2d1f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 524, y: -118) slice_3e0c7f root.Std_k98ojb.List.Slice {}\n        instance(x: 524, y: -47) slice_6d1a89 root.Std_k98ojb.List.Slice {}\n        instance(x: 664, y: -118) concat_0e3c91 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1d8f6a.list\n        length_1d8f6a.length -> modulo_7c4e32.value\n        n_68068c -> modulo_7c4e32.divisor\n        modulo_7c4e32.result -> generateRange_6a2d1f.from\n        list_48148f -> generateRange_6a2d1f.to\n        0 -> generateRange_6a2d1f.from\n        generateRange_6a2d1f.list -> slice_3e0c7f.list\n        modulo_7c4e32.result -> slice_3e0c7f.start\n        -1 -> slice_3e0c7f.end\n        list_48148f -> slice_6d1a89.list\n        0 -> slice_6d1a89.start\n        modulo_7c4e32.result -> slice_6d1a89.end\n        slice_3e0c7f.slice -> concat_0e3c91.right\n        slice_6d1a89.slice -> concat_0e3c91.left\n        concat_0e3c91.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_f3b9d7 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_f3b9d7.items\n        0 -> reduce_f3b9d7.initial_value\n        reduce_f3b9d7.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -108, y: -426) if_lessthan_two_f4e3d7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 158, y: -362) if_not_equal_one_e8a2f1 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 300, y: -427) and_0c2b1f root.Std_k98ojb.Logic.And {}\n        instance(x: 516, y: -373) if_prime_check_9a1b3e root.Std_k98ojb.Std.If {}\n        instance(x: 724, y: -302) for_loop_e3d1c4 root.Std_k98ojb.Std.For {}\n        instance(x: 1056, y: -363) math_expression_8e8a3f root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i <= num)\"\n        }\n        instance(x: 1247, y: -359) math_modulo_6d7c0f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1438, y: -357) if_not_prime_1e2a5d root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> if_lessthan_two_f4e3d7.left\n        2 -> if_lessthan_two_f4e3d7.right\n        num_5c0677 -> if_not_equal_one_e8a2f1.left\n        1 -> if_not_equal_one_e8a2f1.right\n        if_lessthan_two_f4e3d7.result -> and_0c2b1f.left\n        if_not_equal_one_e8a2f1.result -> and_0c2b1f.right\n        and_0c2b1f.result -> if_prime_check_9a1b3e.predicate\n        execute_b7b391 -> if_prime_check_9a1b3e.execute\n        2 -> for_loop_e3d1c4.from\n        num_5c0677 -> math_expression_8e8a3f.gen_1\n        for_loop_e3d1c4.item -> math_expression_8e8a3f.gen_0\n        math_expression_8e8a3f.result -> if_prime_check_9a1b3e.then\n        num_5c0677 -> for_loop_e3d1c4.to\n        for_loop_e3d1c4.item -> math_modulo_6d7c0f.left\n        num_5c0677 -> math_modulo_6d7c0f.right\n        math_modulo_6d7c0f.result -> if_not_prime_1e2a5d.predicate\n        for_loop_e3d1c4.onItem -> if_not_prime_1e2a5d.execute\n        if_not_prime_1e2a5d.then -> output_c457b3\n        false -> output_c457b3\n        if_prime_check_9a1b3e.else -> continue_9a54bb\n        for_loop_e3d1c4.done -> continue_9a54bb\n        if_not_prime_1e2a5d.else -> for_loop_e3d1c4.next\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: 64, y: -87) logicand_a4c8d2 root.Std_k98ojb.Logic.And {}\n\tinstance(x: 204, y: -51) lessorequal_b9e4f4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 363, y: -73) greaterthan_9a92d3 root.Std_k98ojb.Math.GreaterThan {}\n\n\tx_853326 -> lessorequal_b9e4f4.left\n\ty_5390f5 -> lessorequal_b9e4f4.right\n\tlessorequal_b9e4f4.result -> logicand_a4c8d2.first\n\n\tx_853326 -> greaterthan_9a92d3.left\n\ty_5390f5 -> greaterthan_9a92d3.right\n\tgreaterthan_9a92d3.result -> logicand_a4c8d2.second\n\n\tlogicand_a4c8d2.out -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 104, y: 104) modulo_5f9b4a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5f9b4a.value\n        11 -> modulo_5f9b4a.divisor\n        modulo_5f9b4a.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 132) replace_9b7c root.Std_k98ojb.Strings.Replace {}\n        \n        input_ai -> replace_9b7c.input\n        search_ai -> replace_9b7c.search\n        replace_ai -> replace_9b7c.replace\n        \n        replace_9b7c.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 123, y: 123) unique_list root.Std_k98ojb.List.Flatten {\n            list: list_5fda54\n        }\n        instance(x: 300, y: 123) sort_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n        instance(x: 477, y: 123) remove_duplicates root.Std_k98ojb.Iteration.Reduce {\n            items: sort_list.sorted\n            reducer: func() {\n                in(name:\"acc\") property(List)\n                in(name:\"item\") property(Number)\n                out(name:\"result\") property(List)\n                instance(x: 0, y: 0) contains_item root.Std_k98ojb.List.Contains {\n                    list: acc\n                    item: item\n                }\n                instance(x: 150, y: 0) add_item root.Std_k98ojb.List.Add {\n                    list: acc\n                    item: item\n                }\n                instance(x: 300, y: 0) if_contains root.Std_k98ojb.Std.If {\n                    input: contains_item.value\n                }\n                if_contains.then -> result\n                if_contains.else -> add_item.listWithItem\n            }\n        }\n        instance(x: 654, y: 123) calculate_product root.Std_k98ojb.Iteration.Reduce {\n            items: remove_duplicates.result\n            reducer: func() {\n                in(name:\"acc\") property(Number)\n                in(name:\"item\") property(Number)\n                out(name:\"result\") property(Number)\n                instance(x: 0, y: 0) multiply root.Std_k98ojb.Math.Mul {\n                    first: acc\n                    second: item\n                }\n                multiply.result -> result\n            }\n        }\n        execute_19300c -> unique_list.listWithItem\n        calculate_product.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -196, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 136, y: 129) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 306, y: 154) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.output_list -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 248, y: -105) length_ea1d4f root.Std_k98ojb.List.Length {}\n        instance(x: 457, y: -62) mod_2d7e6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 322, y: -105) sub_6a77f2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 458, y: -154) slice_a6d1ee root.Std_k98ojb.List.Slice {}\n        instance(x: 323, y: -154) slice_8a0e9a root.Std_k98ojb.List.Slice {}\n        instance(x: 578, y: -154) concat_a6c0d4 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_ea1d4f.list\n        length_ea1d4f.length -> sub_6a77f2.first\n        n_68068c -> mod_2d7e6c.divisor\n        n_68068c -> mod_2d7e6c.value\n        mod_2d7e6c.result -> sub_6a77f2.second\n        sub_6a77f2.result -> slice_a6d1ee.start\n        list_48148f -> slice_a6d1ee.list\n        -1 -> slice_a6d1ee.end\n        mod_2d7e6c.result -> slice_8a0e9a.end\n        0 -> slice_8a0e9a.start\n        list_48148f -> slice_8a0e9a.list\n        slice_a6d1ee.slice -> concat_a6c0d4.right\n        slice_8a0e9a.slice -> concat_a6c0d4.left\n        concat_a6c0d4.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -90, y: -127) reduce_8e8b9c root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + it\"\n        }\n\n        0 -> reduce_8e8b9c.initial_value\n        list_2c62ab -> reduce_8e8b9c.items\n        reduce_8e8b9c.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) lessthanorequal_f3c0d3 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 263, y: -159) if_e1f86e root.Std_k98ojb.Std.If {}\n\tinstance(x: 479, y: -388) lessthanorequal_70db6a root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 285, y: -412) expression_a4ce0f root.Std_k98ojb.Math.Expression {\n\t\texpression: \"Math.Floor(Math.Sqrt(n))\"\n\t}\n\tinstance(x: 736, y: -113) for_6a8bae root.Std_k98ojb.Std.For {}\n\tinstance(x: 1056, y: -429) mod_ba2c75 root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 1368, y: -376) lessthanorequal_74f81e root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 1106, y: -251) if_9d7c8d root.Std_k98ojb.Std.If {}\n\tnum_5c0677 -> lessthanorequal_f3c0d3.left\n\t2 -> lessthanorequal_f3c0d3.right\n\tlessthanorequal_f3c0d3.result -> if_e1f86e.predicate\n\tif_e1f86e.then -> output_c457b3\n\t2 -> lessthanorequal_70db6a.left\n\tnum_5c0677 -> lessthanorequal_70db6a.right\n\tlessthanorequal_70db6a.result -> if_e1f86e.else\n\tif_e1f86e.value -> output_c457b3\n\texecute_b7b391 -> expression_a4ce0f.gen_1\n\tnum_5c0677 -> expression_a4ce0f.gen_0\n\texpression_a4ce0f.result -> for_6a8bae.items\n\tfor_6a8bae.item -> mod_ba2c75.n\n\tnum_5c0677 -> mod_ba2c75.d\n\tmod_ba2c75.r -> lessthanorequal_74f81e.left\n\t0 -> lessthanorequal_74f81e.right\n\tlessthanorequal_74f81e.result -> if_9d7c8d.predicate\n\tif_9d7c8d.then -> output_c457b3\n\tfalse -> if_9d7c8d.value\n\tfor_6a8bae.onItem -> if_9d7c8d.execute\n\tif_9d7c8d.else -> continue_9a54bb\n\tfor_6a8bae.done -> output_c457b3\n\texecute_b7b391 -> for_6a8bae.reset\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -259) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5a3b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a3b9d.value\n\t11 -> modulo_5a3b9d.divisor\n\tmodulo_5a3b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 68) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -10, y: 76) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -114) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -116) modulo_2d3e4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -118) slice_3g4h5i root.Std_k98ojb.List.Slice {}\n        instance(x: 290, y: -60) slice_4j5k6l root.Std_k98ojb.List.Slice {}\n        instance(x: 470, y: -118) concat_5m6n7o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_2d3e4f.value\n        n_68068c -> modulo_2d3e4f.divisor\n        modulo_2d3e4f.result -> slice_3g4h5i.start\n        list_48148f -> slice_3g4h5i.list\n        slice_3g4h5i.end -> -1\n        0 -> slice_4j5k6l.start\n        list_48148f -> slice_4j5k6l.list\n        modulo_2d3e4f.result -> slice_4j5k6l.end\n        slice_3g4h5i.slice -> concat_5m6n7o.right\n        slice_4j5k6l.slice -> concat_5m6n7o.left\n        concat_5m6n7o.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 124, y: -365) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 304, y: -365) if_7e1a62 root.Std_k98ojb.Std.If {}\n        instance(x: 504, y: -365) lessthanorequal_0fba8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 704, y: -365) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: -365) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1224, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1424, y: -365) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.else -> lessthanorequal_0fba8c.left\n\n        num_5c0677 -> lessthanorequal_0fba8c.right\n        lessthanorequal_0fba8c.result -> if_7e1a62.predicate\n        if_7e1a62.then -> continue_9a54bb\n        if_7e1a62.else -> for_8cb3f6.reset\n\n        2 -> add_b4554f.first\n        num_5c0677 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.to\n\n        2 -> for_8cb3f6.from\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        num_5c0677 -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> output_c457b3.set(true)\n        execute_b7b391 -> for_8cb3f6.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 186, y: -147) mul_8d2c34 root.Std_k98ojb.Math.Mul {}\n        instance(x: 510, y: -220) less_than_or_equal_a8e56c root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d2c34.first\n        y_5390f5 -> mul_8d2c34.second\n        mul_8d2c34.result -> less_than_or_equal_a8e56c.left\n        -1 -> less_than_or_equal_a8e56c.right\n        less_than_or_equal_a8e56c.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -145) modulo_3d4a1b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3d4a1b.value\n        11 -> modulo_3d4a1b.divisor\n        instance(x: 300, y: -150) equal_f67e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_3d4a1b.result -> equal_f67e4c.left\n        0 -> equal_f67e4c.right\n        equal_f67e4c.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 132) replace_371e46 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_371e46.input\n        search_ai -> replace_371e46.search\n        replace_ai -> replace_371e46.replace\n        replace_371e46.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 222, y: 123) unique_list root.Sets.Difference {\n            left: list_5fda54\n            right: List.Empty()\n        }\n\n        instance(x: 500, y: 123) product_calc root.Iteration.Reduce {\n            handler: func() {\n                in(x: -286, y: -197, name: \"accumulate\") property(Number) accumulate_1a4b3c\n                in(x: -151, y: 203, name: \"current\") property(Number) current_4d7e5f\n                out(x: 286, y: -197, name: \"result\") property(Number) result_1a4b3c\n\n                instance(x: 0, y: 0) multiply root.Math.Mul {\n                    first: accumulate_1a4b3c\n                    second: current_4d7e5f\n                }\n\n                multiply.result -> result_1a4b3c\n            }\n        }\n\n        unique_list.difference -> product_calc.items\n        product_calc.output_list -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -129, y: -77) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 169, y: -77) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 304, y: -76) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 147, y: -24) length_1a8f3b root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: -27) modulo_8e3d5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 405, y: -30) slice_1a8f3b root.Std_k98ojb.List.Slice {}\n        instance(x: 406, y: 72) slice_2a8f3b root.Std_k98ojb.List.Slice {}\n        instance(x: 530, y: -3) concat_1a8f3b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1a8f3b.list\n        length_1a8f3b.length -> modulo_8e3d5c.value\n        n_68068c -> modulo_8e3d5c.divisor\n        modulo_8e3d5c.result -> slice_2a8f3b.start\n        list_48148f -> slice_1a8f3b.list\n        list_48148f -> slice_2a8f3b.list\n        modulo_8e3d5c.result -> slice_1a8f3b.end\n        -1 -> slice_2a8f3b.end\n        0 -> slice_1a8f3b.start\n        slice_1a8f3b.slice -> concat_1a8f3b.left\n        slice_2a8f3b.slice -> concat_1a8f3b.right\n        concat_1a8f3b.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_f3b9d7 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_f3b9d7.items\n        0 -> reduce_f3b9d7.initial_value\n        reduce_f3b9d7.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -114, y: -82) lessthanorequal_6d4c8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 73, y: -205) if_e23b8e root.Std_k98ojb.Std.If {}\n        instance(x: 179, y: -196) lessthanorequal_24a5d9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 303, y: -179) if_e6c2e8 root.Std_k98ojb.Std.If {}\n        instance(x: 424, y: -214) mathexpression_2a5d3c root.Std_k98ojb.Math.Expression {\n            expression: \"sqrt(n)\"\n        }\n        instance(x: 567, y: -178) for_0f42e7 root.Std_k98ojb.Std.For {}\n        instance(x: 746, y: -328) mathexpression_e3c7d9 root.Std_k98ojb.Math.Expression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 1005, y: -278) if_4a6b3f root.Std_k98ojb.Std.If {}\n        instance(x: 1215, y: -289) and_ae5d1c root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthanorequal_6d4c8f.left\n        1 -> lessthanorequal_6d4c8f.right\n        lessthanorequal_6d4c8f.result -> if_e23b8e.predicate\n        execute_b7b391 -> if_e23b8e.execute\n        num_5c0677 -> lessthanorequal_24a5d9.left\n        3 -> lessthanorequal_24a5d9.right\n        lessthanorequal_24a5d9.result -> if_e6c2e8.predicate\n        num_5c0677 -> mathexpression_2a5d3c.gen_0\n        mathexpression_2a5d3c.result -> for_0f42e7.items\n        1 -> for_0f42e7.start\n        2 -> for_0f42e7.step\n        for_0f42e7.item -> mathexpression_e3c7d9.gen_1\n        num_5c0677 -> mathexpression_e3c7d9.gen_0\n        mathexpression_e3c7d9.result -> if_4a6b3f.predicate\n        for_0f42e7.onItem -> if_4a6b3f.execute\n        if_4a6b3f.then -> continue_9a54bb\n        if_4a6b3f.else -> for_0f42e7.next\n        for_0f42e7.done -> and_ae5d1c.right\n        lessthanorequal_6d4c8f.value -> and_ae5d1c.left\n        lessthanorequal_24a5d9.value -> and_ae5d1c.right\n        and_ae5d1c.result -> output_c457b3\n        if_e23b8e.then -> continue_9a54bb\n        if_e6c2e8.then -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: 86, y: -44) and_ae8b17 root.Std_k98ojb.Logic.And {}\n    instance(x: 302, y: -142) lessorequal_c5f18c root.Std_k98ojb.Math.LessThanOrEqual {}\n    instance(x: 306, y: 50) greaterthan_e723a8 root.Std_k98ojb.Math.GreaterThan {}\n\n    x_853326 -> lessorequal_c5f18c.left\n    y_5390f5 -> lessorequal_c5f18c.right\n\n    x_853326 -> greaterthan_e723a8.left\n    y_5390f5 -> greaterthan_e723a8.right\n\n    lessorequal_c5f18c.result -> and_ae8b17.first\n    greaterthan_e723a8.result -> and_ae8b17.second\n\n    and_ae8b17.output -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 165, y: 145) modulo_03d9b1 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_03d9b1.value\n        11 -> modulo_03d9b1.divisor\n        modulo_03d9b1.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 132) replace_7a2e5f root.Std_k98ojb.Strings.Replace {}\n\n        input_ai -> replace_7a2e5f.input\n        search_ai -> replace_7a2e5f.search\n        replace_ai -> replace_7a2e5f.replace\n\n        replace_7a2e5f.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -200, y: 209) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -200, y: 100) unique_numbers root.Std_k98ojb.Sets.Difference {\n            left: list_5fda54\n            right: list_5fda54\n        }\n        \n        list_5fda54 -> unique_numbers.left\n        \n        instance(x: 200, y: 100) reduce_numbers root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * it\"\n            initial_value: 1\n        }\n        \n        unique_numbers.difference -> reduce_numbers.items\n        reduce_numbers.result -> output_cffcc2\n        \n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: 96, y: 110) difference_1 root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_1.left\n\tlist2_ai -> difference_1.right\n\n\tinstance(x: 325, y: -43) difference_2 root.Std_k98ojb.Sets.Difference {}\n\tlist2_ai -> difference_2.left\n\tlist1_ai -> difference_2.right\n\n\tinstance(x: 67, y: -30) concat_1 root.Std_k98ojb.List.Concat {}\n\tdifference_1.difference -> concat_1.left\n\tdifference_2.difference -> concat_1.right\n\n\tconcat_1.concatenatedList -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: -144, y: -133) length_5b8e6a root.Std_k98ojb.List.Length {}\n\tinstance(x: 307, y: -150) mod_3d3c8f root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 429, y: -211) sub_64e49c root.Std_k98ojb.Math.Sub {}\n\tinstance(x: 575, y: -206) slice_c5a2f3 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 578, y: 34) slice_b5a2f3 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 712, y: -105) concat_5d3c8f root.Std_k98ojb.List.Concat {}\n\n\tlength_5b8e6a.length -> mod_3d3c8f.divisor\n\tn_68068c -> mod_3d3c8f.value\n\tlist_48148f -> length_5b8e6a.list\n\tmod_3d3c8f.result -> sub_64e49c.first\n\tlength_5b8e6a.length -> sub_64e49c.second\n\tsub_64e49c.result -> slice_c5a2f3.start\n\t-1 -> slice_c5a2f3.end\n\tslice_b5a2f3.start -> mod_3d3c8f.value\n\tlist_48148f -> slice_b5a2f3.list\n\tslice_c5a2f3.slice -> concat_5d3c8f.left\n\tslice_b5a2f3.slice -> concat_5d3c8f.right\n\tconcat_5d3c8f.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -290, y: -120) reduce_7a3b5c root.Std_k98ojb.Iteration.Reduce {\n            reducer: function(a, b) { return a + b; }\n        }\n\n        list_2c62ab -> reduce_7a3b5c.items\n        0 -> reduce_7a3b5c.initial_value\n        reduce_7a3b5c.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) if_4f3d4c root.Std_k98ojb.Std.If {}\n\tinstance(x: 253, y: -437) lessthanorequal_e110e9 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 596, y: -529) lessthanorequal_0f8a3d root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 745, y: -289) mod_1e5c9b root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 937, y: -304) not_c56d2f root.Std_k98ojb.Logic.Not {}\n\tinstance(x: 487, y: -552) for_9138c5 root.Std_k98ojb.Std.For {}\n\tinstance(x: 957, y: -507) add_ba2e6d root.Std_k98ojb.Math.Add {}\n\tinstance(x: 742, y: -471) mathexpression_638789 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"sqrt(num)\"\n\t}\n\tnum_5c0677 -> lessthanorequal_e110e9.left\n\t2 -> lessthanorequal_e110e9.right\n\tlessthanorequal_e110e9.result -> if_4f3d4c.predicate\n\tif_4f3d4c.else -> continue_9a54bb\n\tnum_5c0677 -> lessthanorequal_0f8a3d.left\n\t2 -> lessthanorequal_0f8a3d.right\n\tlessthanorequal_0f8a3d.result -> for_9138c5.reset\n\tnum_5c0677 -> mathexpression_638789.gen_0\n\tmathexpression_638789.result -> for_9138c5.to\n\t3 -> for_9138c5.from\n\tfor_9138c5.item -> mod_1e5c9b.first\n\tnum_5c0677 -> mod_1e5c9b.second\n\tmod_1e5c9b.result -> not_c56d2f.value\n\tnot_c56d2f.result -> if_4f3d4c.execute\n\tfor_9138c5.onItem -> if_4f3d4c.then\n\tif_4f3d4c.value -> output_c457b3\n\texecute_b7b391 -> for_9138c5.reset\n\tfor_9138c5.done -> continue_9a54bb\n\tadd_ba2e6d.first -> for_9138c5.next\n\t2 -> add_ba2e6d.second\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -259) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5b8a2d.value\n\t11 -> modulo_5b8a2d.divisor\n\tmodulo_5b8a2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 68) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -10, y: 76) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -114) length_1b2a3d root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -164) modulo_1c2b3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -114) slice_1d2c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 507, y: -164) slice_2e2d3a root.Std_k98ojb.List.Slice {}\n        instance(x: 644, y: -114) concat_3f2e3b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2a3d.list\n        length_1b2a3d.length -> modulo_1c2b3e.value\n        n_68068c -> modulo_1c2b3e.divisor\n        modulo_1c2b3e.result -> slice_1d2c3f.start\n        slice_1d2c3f.end -> -1\n        list_48148f -> slice_1d2c3f.list\n        0 -> slice_2e2d3a.start\n        modulo_1c2b3e.result -> slice_2e2d3a.end\n        list_48148f -> slice_2e2d3a.list\n        slice_1d2c3f.slice -> concat_3f2e3b.right\n        slice_2e2d3a.slice -> concat_3f2e3b.left\n        concat_3f2e3b.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 124, y: -365) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 304, y: -365) if_7e1a62 root.Std_k98ojb.Std.If {}\n        instance(x: 524, y: -365) lessthanorequal_9fba8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 744, y: -365) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: -365) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1244, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1464, y: -365) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        2 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_9a54bb\n        false -> output_c457b3\n\n        num_5c0677 -> lessthanorequal_9fba8c.left\n        2 -> lessthanorequal_9fba8c.right\n        lessthanorequal_9fba8c.result -> if_7e1a62.predicate\n        if_7e1a62.then -> continue_9a54bb\n        true -> output_c457b3\n\n        2 -> add_b4554f.first\n        num_5c0677 -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        false -> output_c457b3\n\n        for_8cb3f6.onItem -> if_e19a62.execute\n        add_b4554f.result -> for_8cb3f6.next\n        2 -> for_8cb3f6.start\n        num_5c0677 -> add_b4554f.second\n\n        execute_b7b391 -> if_07b8c7.execute\n        execute_b7b391 -> if_7e1a62.execute\n        for_8cb3f6.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 186, y: -147) mul_a2b5c7 root.Std_k98ojb.Math.Mul {}\n        instance(x: 305, y: -132) lessorequal_b3d8e4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_a2b5c7.first\n        y_5390f5 -> mul_a2b5c7.second\n        mul_a2b5c7.result -> lessorequal_b3d8e4.left\n        -1 -> lessorequal_b3d8e4.right\n        lessorequal_b3d8e4.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -145) modulo_3a7e2b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3a7e2b.value\n        11 -> modulo_3a7e2b.divisor\n        instance(x: 400, y: -15) iszero_e4b9d6 root.Std_k98ojb.Logic.Equal {}\n        modulo_3a7e2b.result -> iszero_e4b9d6.left\n        0 -> iszero_e4b9d6.right\n        iszero_e4b9d6.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 132) replace_37a9f4 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_37a9f4.input\n        search_ai -> replace_37a9f4.search\n        replace_ai -> replace_37a9f4.replace\n        replace_37a9f4.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 221, y: 104) unique_numbers root.Std_k98ojb.List.Flatten {\n            list: [\n                instance(x: 55, y: 68) distinct_numbers root.Std_k98ojb.Sets.Difference {\n                    left: list_5fda54\n                    right: []\n                }\n            ]\n        }\n\n        instance(x: 372, y: 105) product_calculation root.Std_k98ojb.Iteration.Reduce {\n            items: unique_numbers.listWithItem\n            reducer: func(doc: \"Reducer function for calculating the product.\") product_reducer {\n                in(x: -463, y: -247, name: \"accumulate\") property(Number) accumulate_5f1d9c\n                in(x: -280, y: 21, name: \"current\") property(Number) current_a3b9e8\n                out(x: 206, y: -230, name: \"result\") property(Number) result_7a5c4f\n\n                instance(x: 259, y: -13) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulate_5f1d9c\n                    second: current_a3b9e8\n                }\n\n                multiply.result -> result_7a5c4f\n            }\n        }\n\n        unique_numbers.listWithItem -> product_calculation.items\n        execute_19300c -> product_calculation.trigger\n        product_calculation.output_list -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -120, y: -100) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 165, y: -100) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 340, y: -50) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 147, y: -24) length_1d8e5a root.Std_k98ojb.List.Length {}\n        instance(x: 264, y: -110) modulo_8c8d7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 396, y: -24) sub_7f5a2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 525, y: -105) slice_a2a7d9 root.Std_k98ojb.List.Slice {}\n        instance(x: 396, y: -144) slice_2d7f4a root.Std_k98ojb.List.Slice {}\n        instance(x: 660, y: -54) concat_4c356e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1d8e5a.list\n        length_1d8e5a.length -> modulo_8c8d7b.value\n        n_68068c -> modulo_8c8d7b.divisor\n        modulo_8c8d7b.result -> sub_7f5a2e.first\n        length_1d8e5a.length -> sub_7f5a2e.second\n        sub_7f5a2e.result -> slice_a2a7d9.start\n        -1 -> slice_a2a7d9.end\n        list_48148f -> slice_a2a7d9.list\n        0 -> slice_2d7f4a.start\n        sub_7f5a2e.result -> slice_2d7f4a.end\n        list_48148f -> slice_2d7f4a.list\n        slice_a2a7d9.slice -> concat_4c356e.right\n        slice_2d7f4a.slice -> concat_4c356e.left\n        concat_4c356e.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_f2b9d1 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_f2b9d1.items\n        0 -> reduce_f2b9d1.initial_value\n        reduce_f2b9d1.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -113, y: -85) lessthanorequal_6c5e5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 207, y: -213) if_f32d54 root.Std_k98ojb.Std.If {}\n        instance(x: 533, y: -263) generaterange_8a3f1c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 770, y: -248) for_b4d6a2 root.Std_k98ojb.Std.For {}\n        instance(x: 1058, y: -320) mathexpression_8c3e5d root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1473, y: -363) if_658a5f root.Std_k98ojb.Std.If {}\n        instance(x: 1724, y: -296) and_f5e87c root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthanorequal_6c5e5f.left\n        2 -> lessthanorequal_6c5e5f.right\n        lessthanorequal_6c5e5f.result -> if_f32d54.predicate\n        execute_b7b391 -> if_f32d54.execute\n\n        2 -> generaterange_8a3f1c.from\n        instance(x: 908, y: -326) floordivision_e5e9b3 root.Std_k98ojb.Math.Div {}\n        num_5c0677 -> floordivision_e5e9b3.first\n        Math.Sqrt(2) -> floordivision_e5e9b3.second\n        floordivision_e5e9b3.result -> generaterange_8a3f1c.to\n\n        generaterange_8a3f1c.list -> for_b4d6a2.items\n        for_b4d6a2.item -> mathexpression_8c3e5d.gen_1\n        num_5c0677 -> mathexpression_8c3e5d.gen_0\n\n        mathexpression_8c3e5d.result -> if_658a5f.predicate\n        for_b4d6a2.onItem -> if_658a5f.execute\n        if_658a5f.then -> continue_9a54bb\n        if_658a5f.else -> and_f5e87c.right\n\n        true -> and_f5e87c.left\n        and_f5e87c.result -> output_c457b3\n\n        for_b4d6a2.done -> continue_9a54bb\n        if_f32d54.then -> false -> output_c457b3\n        if_f32d54.else -> true -> and_f5e87c.left\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: 86, y: -44) expression_7f9d41 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"x * y < 0\"\n\t}\n\tx_853326 -> expression_7f9d41.x\n\ty_5390f5 -> expression_7f9d41.y\n\texpression_7f9d41.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 165, y: 145) modulo_04d8c7 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_04d8c7.value\n        11 -> modulo_04d8c7.divisor\n        instance(x: 369, y: 50) equal_b8f6a2 root.Std_k98ojb.Logic.Equal {}\n        modulo_04d8c7.result -> equal_b8f6a2.left\n        0 -> equal_b8f6a2.right\n        equal_b8f6a2.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 132) replace_7a2e5f root.Std_k98ojb.Strings.Replace {}\n\n        input_ai -> replace_7a2e5f.input\n        search_ai -> replace_7a2e5f.search\n        replace_ai -> replace_7a2e5f.replace\n\n        replace_7a2e5f.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -200, y: 209) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -200, y: 100) unique_numbers root.Std_k98ojb.Sets.Difference {\n            left: list_5fda54\n            right: list_5fda54\n        }\n        \n        list_5fda54 -> unique_numbers.left\n        \n        instance(x: 200, y: 100) reduce_numbers root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(reducer_input) {\n                in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n                in(x: -241, y: 24, name: \"accumulator\") property(Number) accumulator_d4a4b7\n                in(x: -241, y: 24, name: \"item\") property(Number) item_e5f693\n                out(x: 887, y: -144, name: \"result\") property(Number) result_88e8a1\n                \n                instance(x: 0, y: 0) multiply_numbers root.Std_k98ojb.Math.Mul {\n                    first: accumulator_d4a4b7\n                    second: item_e5f693\n                }\n                \n                accumulator_d4a4b7 -> multiply_numbers.first\n                item_e5f693 -> multiply_numbers.second\n                \n                multiply_numbers.result -> result_88e8a1\n            }\n        }\n        \n        unique_numbers.difference -> reduce_numbers.items\n        \n        instance(x: 300, y: 200) initial_value root.Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        \n        initial_value.result -> reduce_numbers.initialValue\n        \n        reduce_numbers.value -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: 96, y: 115) difference_0a9c4f root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0a9c4f.left\n\tlist2_ai -> difference_0a9c4f.right\n\n\tinstance(x: -127, y: 314) difference_c56d4e root.Std_k98ojb.Sets.Difference {}\n\tlist2_ai -> difference_c56d4e.left\n\tlist1_ai -> difference_c56d4e.right\n\n\tinstance(x: 105, y: 497) concat_4f4a3c root.Std_k98ojb.List.Concat {}\n\tdifference_0a9c4f.difference -> concat_4f4a3c.list1\n\tdifference_c56d4e.difference -> concat_4f4a3c.list2\n\n\tconcat_4f4a3c.concatenatedList -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n    instance(x: -145, y: -166) length_5b6d0a root.Std_k98ojb.List.Length {}\n    instance(x: -73, y: -100) modulo_e0f2e7 root.Std_k98ojb.Math.Modulo {}\n    instance(x: 44, y: -166) sub_9a2457 root.Std_k98ojb.Math.Sub {}\n    instance(x: 130, y: -100) slice_60a0ba root.Std_k98ojb.List.Slice {}\n    instance(x: 278, y: -166) slice_90e45d root.Std_k98ojb.List.Slice {}\n    instance(x: 426, y: -100) concat_3fb5c4 root.Std_k98ojb.List.Concat {}\n\n    list_48148f -> length_5b6d0a.list\n    n_68068c -> modulo_e0f2e7.divisor\n    length_5b6d0a.length -> modulo_e0f2e7.value\n    modulo_e0f2e7.result -> sub_9a2457.second\n    length_5b6d0a.length -> sub_9a2457.first\n    sub_9a2457.result -> slice_90e45d.start\n    -1 -> slice_90e45d.end\n    list_48148f -> slice_90e45d.list\n    0 -> slice_60a0ba.start\n    sub_9a2457.result -> slice_60a0ba.end\n    list_48148f -> slice_60a0ba.list\n    slice_90e45d.slice -> concat_3fb5c4.left\n    slice_60a0ba.slice -> concat_3fb5c4.right\n    concat_3fb5c4.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -290, y: -120) reduce_afe8d3 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"accumulator + current\"\n        }\n        0 -> reduce_afe8d3.accumulator\n        list_2c62ab -> reduce_afe8d3.items\n        reduce_afe8d3.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) if_7d4fcb root.Std_k98ojb.Std.If {}\n\tinstance(x: 262, y: -257) lessthanorequal_b120a5 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 538, y: -266) for_94afcc root.Std_k98ojb.Std.For {}\n\tinstance(x: 835, y: -376) if_d4e7f1 root.Std_k98ojb.Std.If {}\n\tinstance(x: 1058, y: -445) expression_b0ae82 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(num % i == 0)\"\n\t}\n\tinstance(x: 736, y: -411) add_5e89d2 root.Std_k98ojb.Math.Add {}\n\tinput_f5c03d -> if_7d4fcb.input\n\tif_7d4fcb.else -> continue_8ba06b\n\t2 -> lessthanorequal_b120a5.left\n\tinput_f5c03d -> lessthanorequal_b120a5.right\n\tlessthanorequal_b120a5.result -> if_d4e7f1.predicate\n\tif_7d4fcb.then -> for_94afcc.reset\n\tfor_94afcc.done -> continue_8ba06b\n\texpression_b0ae82.result -> if_d4e7f1.input\n\tif_d4e7f1.else -> add_5e89d2.first\n\t1 -> add_5e89d2.second\n\tadd_5e89d2.result -> for_94afcc.next\n\tif_d4e7f1.then -> continue_8ba06b\n\tfor_94afcc.item -> expression_b0ae82.gen_1\n\tinput_f5c03d -> expression_b0ae82.gen_0\n\tfor_94afcc.index -> add_5e89d2.first\n\texecute_27b8c3 -> if_7d4fcb.execute\n\tif_d4e7f1.value -> output_c457b3\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -167) mul_8d7b3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -259) less_than_or_equal_1f8e5a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_8d7b3c.first\n        y_5390f5 -> mul_8d7b3c.second\n        mul_8d7b3c.result -> less_than_or_equal_1f8e5a.left\n        less_than_or_equal_1f8e5a.right: 0\n        less_than_or_equal_1f8e5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5b8a2d.value\n\t11 -> modulo_5b8a2d.divisor\n\tmodulo_5b8a2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7f8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f8b.input\n        search_ai -> replace_9a7f8b.search\n        replace_ai -> replace_9a7f8b.replace\n        replace_9a7f8b.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [\n                list_5fda54\n            ]\n        }\n\n        instance(x: 100, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.listWithItem\n        }\n\n        instance(x: 200, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness\") is_unique {\n                in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n                out(x: 100, y: 0, name: \"result\") property(Boolean) result_8b2e5d\n\n                instance(x: 0, y: 0) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.sorted\n                    item: item_7a3f4c\n                }\n\n                instance(x: 100, y: 0) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n\n                is_first_occurrence.result -> result_8b2e5d\n            }\n        }\n\n        instance(x: 300, y: 100) product_result root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Calculate product\") multiply {\n                in(x: -50, y: 0, name: \"accumulator\") property(Number) accumulator_7a3f4c\n                in(x: 100, y: 0, name: \"item\") property(Number) item_8b2e5d\n                out(x: 150, y: 0, name: \"result\") property(Number) result_9c1d6e\n\n                instance(x: 0, y: 0) product root.Std_k98ojb.Math.Mul {\n                    first: accumulator_7a3f4c\n                    second: item_8b2e5d\n                }\n\n                product.result -> result_9c1d6e\n            }\n        }\n\n        execute_19300c -> unique_list.trigger\n        list_5fda54 -> unique_list.list\n        filtered_unique_list.output_list -> product_result.items\n        product_result.result -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: -10) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 68) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: -10, y: 76) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -114) length_1b2a3d root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -164) modulo_1c2b3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -114) slice_1d2c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 507, y: -164) slice_2e2d3a root.Std_k98ojb.List.Slice {}\n        instance(x: 644, y: -114) concat_3f2e3b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2a3d.list\n        length_1b2a3d.length -> modulo_1c2b3e.value\n        n_68068c -> modulo_1c2b3e.divisor\n        modulo_1c2b3e.result -> slice_1d2c3f.start\n        slice_1d2c3f.end -> -1\n        list_48148f -> slice_1d2c3f.list\n        0 -> slice_2e2d3a.start\n        modulo_1c2b3e.result -> slice_2e2d3a.end\n        list_48148f -> slice_2e2d3a.list\n        slice_1d2c3f.slice -> concat_3f2e3b.right\n        slice_2e2d3a.slice -> concat_3f2e3b.left\n        concat_3f2e3b.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_3d7de6.items\n        0 -> reduce_3d7de6.initial_value\n        reduce_3d7de6.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 124, y: -365) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 304, y: -365) if_7e1a62 root.Std_k98ojb.Std.If {}\n        instance(x: 524, y: -365) lessthanorequal_9fba8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 744, y: -365) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: -365) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1244, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1464, y: -365) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        2 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_9a54bb\n        false -> output_c457b3\n\n        num_5c0677 -> lessthanorequal_9fba8c.left\n        2 -> lessthanorequal_9fba8c.right\n        lessthanorequal_9fba8c.result -> if_7e1a62.predicate\n        if_7e1a62.then -> continue_9a54bb\n        true -> output_c457b3\n\n        2 -> add_b4554f.first\n        num_5c0677 -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        false -> output_c457b3\n\n        for_8cb3f6.onItem -> if_e19a62.execute\n        add_b4554f.result -> for_8cb3f6.next\n        2 -> for_8cb3f6.start\n        num_5c0677 -> add_b4554f.second\n\n        execute_b7b391 -> if_07b8c7.execute\n        execute_b7b391 -> if_7e1a62.execute\n        for_8cb3f6.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 186, y: -147) mul_a2b5c7 root.Std_k98ojb.Math.Mul {}\n        instance(x: 305, y: -132) lessorequal_b3d8e4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_a2b5c7.first\n        y_5390f5 -> mul_a2b5c7.second\n        mul_a2b5c7.result -> lessorequal_b3d8e4.left\n        -1 -> lessorequal_b3d8e4.right\n        lessorequal_b3d8e4.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -145) modulo_3a7e2b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3a7e2b.value\n        11 -> modulo_3a7e2b.divisor\n        instance(x: 400, y: -15) iszero_e4b9d6 root.Std_k98ojb.Logic.Equal {}\n        modulo_3a7e2b.result -> iszero_e4b9d6.left\n        0 -> iszero_e4b9d6.right\n        iszero_e4b9d6.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 132) replace_37a9f4 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_37a9f4.input\n        search_ai -> replace_37a9f4.search\n        replace_ai -> replace_37a9f4.replace\n        replace_37a9f4.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 221, y: 104) unique_numbers root.Std_k98ojb.List.Flatten {\n            list: [\n                instance(x: 55, y: 68) distinct_numbers root.Std_k98ojb.Sets.Difference {\n                    left: list_5fda54\n                    right: []\n                }\n            ]\n        }\n\n        instance(x: 372, y: 105) product_calculation root.Std_k98ojb.Iteration.Reduce {\n            items: unique_numbers.listWithItem\n            reducer: func(doc: \"Reducer function for calculating the product.\") product_reducer {\n                in(x: -463, y: -247, name: \"accumulate\") property(Number) accumulate_5f1d9c\n                in(x: -280, y: 21, name: \"current\") property(Number) current_a3b9e8\n                out(x: 206, y: -230, name: \"result\") property(Number) result_7a5c4f\n\n                instance(x: 259, y: -13) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulate_5f1d9c\n                    second: current_a3b9e8\n                }\n\n                multiply.result -> result_7a5c4f\n            }\n        }\n\n        unique_numbers.listWithItem -> product_calculation.items\n        execute_19300c -> product_calculation.trigger\n        product_calculation.output_list -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -120, y: -100) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 165, y: -100) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list1_ai -> difference_2.right\n        list2_ai -> difference_2.left\n\n        instance(x: 340, y: -50) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 147, y: -24) length_1d8e5a root.Std_k98ojb.List.Length {}\n        instance(x: 264, y: -110) modulo_8c826b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 379, y: -120) generateRange_1a5e1f root.Std_k98ojb.List.GenerateRange {\n            from: 0\n        }\n        instance(x: 487, y: -116) reversed_a5c1b9 root.Std_k98ojb.List.Reversed {}\n        instance(x: 592, y: -134) slice_7f4d5a root.Std_k98ojb.List.Slice {\n            start: 0\n        }\n        instance(x: 698, y: -110) slice_7c9c3e root.Std_k98ojb.List.Slice {}\n        instance(x: 797, y: -24) concat_a93d5f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1d8e5a.list\n        length_1d8e5a.length -> modulo_8c826b.value\n        n_68068c -> modulo_8c826b.divisor\n        modulo_8c826b.result -> generateRange_1a5e1f.to\n        list_48148f -> reversed_a5c1b9.list\n        reversed_a5c1b9.reversed -> slice_7f4d5a.list\n        modulo_8c826b.result -> slice_7f4d5a.end\n        reversed_a5c1b9.reversed -> slice_7c9c3e.list\n        0 -> slice_7c9c3e.start\n        modulo_8c826b.result -> slice_7c9c3e.end\n        -1 -> slice_7f4d5a.end\n        slice_7f4d5a.slice -> concat_a93d5f.left\n        slice_7c9c3e.slice -> concat_a93d5f.right\n        concat_a93d5f.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -50) reduce_f2b9d1 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        list_2c62ab -> reduce_f2b9d1.items\n        0 -> reduce_f2b9d1.initial_value\n        reduce_f2b9d1.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -113, y: -85) lessthanorequal_6c5e5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 207, y: -213) if_f32d54 root.Std_k98ojb.Std.If {}\n        instance(x: 533, y: -263) generaterange_8a3f1c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 770, y: -248) for_b4d64f root.Std_k98ojb.Std.For {}\n        instance(x: 1058, y: -320) mathexpression_8c3e5a root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1473, y: -363) if_658d5f root.Std_k98ojb.Std.If {}\n        instance(x: 1724, y: -296) and_f5e81c root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthanorequal_6c5e5f.left\n        2 -> lessthanorequal_6c5e5f.right\n        lessthanorequal_6c5e5f.result -> if_f32d54.predicate\n        execute_b7b391 -> if_f32d54.execute\n\n        2 -> generaterange_8a3f1c.from\n        mathexpression_8c3e5a.gen_0 -> generaterange_8a3f1c.to\n        generaterange_8a3f1c.list -> for_b4d64f.items\n\n        for_b4d64f.item -> mathexpression_8c3e5a.gen_1\n        num_5c0677 -> mathexpression_8c3e5a.gen_0\n        mathexpression_8c3e5a.result -> if_658d5f.predicate\n\n        if_f32d54.then -> output_c457b3\n        false -> output_c457b3\n        true -> if_f32d54.value\n\n        if_658d5f.else -> continue_9a54bb\n        for_b4d64f.onItem -> if_658d5f.execute\n        false -> if_658d5f.value\n\n        and_f5e81c.left -> if_658d5f.then\n        true -> and_f5e81c.right\n        and_f5e81c.result -> output_c457b3\n\n        for_b4d64f.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: 86, y: -44) expression_7f9d41 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"x * y < 0\"\n\t}\n\tx_853326 -> expression_7f9d41.x\n\ty_5390f5 -> expression_7f9d41.y\n\texpression_7f9d41.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 165, y: 145) modulo_04d8c7 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_04d8c7.value\n        11 -> modulo_04d8c7.divisor\n        instance(x: 369, y: 50) equal_b8f6a2 root.Std_k98ojb.Logic.Equal {}\n        modulo_04d8c7.result -> equal_b8f6a2.left\n        0 -> equal_b8f6a2.right\n        equal_b8f6a2.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 132) replace_7a2e5f root.Std_k98ojb.Strings.Replace {}\n\n        input_ai -> replace_7a2e5f.input\n        search_ai -> replace_7a2e5f.search\n        replace_ai -> replace_7a2e5f.replace\n\n        replace_7a2e5f.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -200, y: 209) tolower_a1b2c3 root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_a1b2c3.input\n        tolower_a1b2c3.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -200, y: 100) unique_numbers root.Std_k98ojb.Sets.Difference {\n            left: list_5fda54\n            right: list_5fda54\n        }\n        \n        list_5fda54 -> unique_numbers.left\n        \n        instance(x: 200, y: 100) reduce_numbers root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(reducer_input) {\n                in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n                in(x: -241, y: 24, name: \"accumulator\") property(Number) accumulator_d4a4b7\n                in(x: -241, y: 24, name: \"item\") property(Number) item_e5f693\n                out(x: 887, y: -144, name: \"result\") property(Number) result_88e8a1\n                \n                instance(x: 0, y: 0) multiply_numbers root.Std_k98ojb.Math.Mul {\n                    first: accumulator_d4a4b7\n                    second: item_e5f693\n                }\n                \n                accumulator_d4a4b7 -> multiply_numbers.first\n                item_e5f693 -> multiply_numbers.second\n                \n                multiply_numbers.result -> result_88e8a1\n            }\n        }\n        \n        unique_numbers.difference -> reduce_numbers.items\n        \n        instance(x: 300, y: 200) initial_value root.Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        \n        initial_value.result -> reduce_numbers.initialValue\n        \n        reduce_numbers.value -> output_cffcc2\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: 96, y: 115) difference_0a9c4f root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0a9c4f.left\n\tlist2_ai -> difference_0a9c4f.right\n\n\tinstance(x: -127, y: 314) difference_c56d4e root.Std_k98ojb.Sets.Difference {}\n\tlist2_ai -> difference_c56d4e.left\n\tlist1_ai -> difference_c56d4e.right\n\n\tinstance(x: 105, y: 497) concat_4f4a3c root.Std_k98ojb.List.Concat {}\n\tdifference_0a9c4f.difference -> concat_4f4a3c.list1\n\tdifference_c56d4e.difference -> concat_4f4a3c.list2\n\n\tconcat_4f4a3c.concatenatedList -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n    instance(x: -145, y: -166) length_a6f3d6 root.Std_k98ojb.List.Length {}\n    instance(x: -79, y: -135) modulo_e9c3e8 root.Std_k98ojb.Math.Modulo {}\n    instance(x: 204, y: -136) generaterange_1ee2be root.Std_k98ojb.List.GenerateRange {}\n    instance(x: 378, y: -154) getat_be0eae root.Std_k98ojb.List.GetAt {}\n    instance(x: 537, y: -167) add_082471 root.Std_k98ojb.List.Add {}\n    instance(x: 394, y: -197) length_b033df root.Std_k98ojb.List.Length {}\n    instance(x: 572, y: -61) concat_4170e8 root.Std_k98ojb.List.Concat {}\n\n    list_48148f -> length_a6f3d6.list\n    length_a6f3d6.length -> modulo_e9c3e8.value\n    n_68068c -> modulo_e9c3e8.divisor\n    modulo_e9c3e8.result -> generaterange_1ee2be.to\n    0 -> generaterange_1ee2be.from\n    generaterange_1ee2be.range -> for_a0d4af.items\n\n    instance(x: 152, y: -216) for_a0d4af root.Std_k98ojb.Std.For {}\n\n    generaterange_1ee2be.range -> length_b033df.list\n    length_b033df.length -> add_082471.first\n\n    for_a0d4af.onItem -> getat_be0eae.trigger\n    for_a0d4af.item -> getat_be0eae.index\n    list_48148f -> getat_be0eae.list\n\n    getat_be0eae.value -> add_082471.second\n    add_082471.result -> concat_4170e8.right\n\n    modulo_e9c3e8.result -> generaterange_6f78d5.from\n    length_a6f3d6.length -> subtract_4a4b9f.first\n    modulo_e9c3e8.result -> subtract_4a4b9f.second\n    instance(x: 23, y: -107) subtract_4a4b9f root.Std_k98ojb.Math.Sub {}\n    subtract_4a4b9f.result -> generaterange_6f78d5.to\n\n    instance(x: 143, y: -56) generaterange_6f78d5 root.Std_k98ojb.List.GenerateRange {}\n\n    generaterange_6f78d5.range -> for_e2b7c3.items\n\n    instance(x: 164, y: -80) for_e2b7c3 root.Std_k98ojb.Std.For {}\n\n    for_e2b7c3.onItem -> getat_de4a3e.trigger\n    for_e2b7c3.item -> getat_de4a3e.index\n    list_48148f -> getat_de4a3e.list\n\n    instance(x: 286, y: -91) getat_de4a3e root.Std_k98ojb.List.GetAt {}\n\n    getat_de4a3e.value -> add_a0528c.first\n    modulo_e9c3e8.result -> add_a0528c.second\n    instance(x: 467, y: -104) add_a0528c root.Std_k98ojb.Math.Add {}\n\n    add_a0528c.result -> getat_c6f2ce.index\n    list_48148f -> getat_c6f2ce.list\n\n    instance(x: 367, y: -54) getat_c6f2ce root.Std_k98ojb.List.GetAt {}\n\n    getat_c6f2ce.value -> concat_4170e8.left\n\n    for_a0d4af.done -> concat_4170e8.trigger\n    for_e2b7c3.done -> output_823209.execute\n    concat_4170e8.result -> output_823209.value\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -290, y: -120) reduce_afe8d3 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"accumulator + current\"\n        }\n        0 -> reduce_afe8d3.accumulator\n        list_2c62ab -> reduce_afe8d3.items\n        reduce_afe8d3.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) if_7d4fcb root.Std_k98ojb.Std.If {}\n\tinstance(x: 262, y: -257) lessthanorequal_b120a5 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 538, y: -266) for_94bc4c root.Std_k98ojb.Std.For {}\n\tinstance(x: 869, y: -276) greaterthan_ea4e0d root.Std_k98ojb.Math.GreaterThan {}\n\tinstance(x: 1356, y: -252) mathexpression_7ae86c root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(num % i == 0)\"\n\t}\n\tnum_5c0677 -> lessthanorequal_b120a5.left\n\t2 -> lessthanorequal_b120a5.right\n\tlessthanorequal_b120a5.result -> if_7d4fcb.predicate\n\texecute_b7b391 -> for_94bc4c.reset\n\tfor_94bc4c.index -> greaterthan_ea4e0d.first\n\tnum_5c0677 -> mathexpression_7ae86c.gen_0\n\tfor_94bc4c.item -> mathexpression_7ae86c.gen_1\n\tmathexpression_7ae86c.result -> if_7d4fcb.value\n\tif_7d4fcb.then -> continue_9a54bb\n\tgreaterthan_ea4e0d.second -> for_94bc4c.items\n\tnum_5c0677 -> greaterthan_ea4e0d.first\n\tfor_94bc4c.done -> output_c457b3\n\tif_7d4fcb.else -> for_94bc4c.next\n\tfalse -> if_7d4fcb.value\n}"
            ]
        }
    }
]