[
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f6b3d\n        in(x: 79, y: 130, name: \"b\") property(Int) b_4c8e2a\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_7f8b4c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_0a1b2c root.Std_k98ojb.Math.GreaterThan {\n            left: 0\n        }\n        instance(x: 0, y: 242) greaterthan_3d4e5f root.Std_k98ojb.Math.GreaterThan {\n            left: 0\n        }\n\n        greaterthan_0a1b2c.right -> and_7f8b4c.left\n        greaterthan_3d4e5f.right -> and_7f8b4c.right\n        and_7f8b4c.value -> output_a2b59d\n\n        a_8f6b3d -> greaterthan_0a1b2c.left\n        b_4c8e2a -> greaterthan_3d4e5f.left\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_67b2e9\n            in(x: -338, y: 110, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 60, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 60) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: 60) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference_78d487.reverseDifference -> concat_cd5cc4.right\n\n            list1_67b2e9 -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            concat_cd5cc4.output_list -> output_879de6\n        }\n\n        instance(x: 430, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5b2d9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -167) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -100) sub_875ddb root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -67) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 200, y: -67) slice_1d3f4a root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_5c4634.execute\n        list_0c1a77 -> length_5c4634.list\n        steps_5b2d9f -> modulo_14921d.value\n        length_5c4634.length -> modulo_14921d.divisor\n        length_5c4634.length -> sub_875ddb.first\n        modulo_14921d.result -> sub_875ddb.second\n        list_0c1a77 -> slice_9ab286.list\n        sub_875ddb.result -> slice_9ab286.start\n        -1 -> slice_9ab286.end\n        list_0c1a77 -> slice_1d3f4a.list\n        0 -> slice_1d3f4a.start\n        modulo_14921d.result -> slice_1d3f4a.end\n        slice_9ab286.slice -> concat_9b38cc.right\n        slice_1d3f4a.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f6b9d\n        in(x: 76, y: 130, name: \"b\") property(Int) b_1e8c2a\n\n        out(x: 455, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 267, y: 130) and_4f8a2c root.Std_k98ojb.Logic.And {}\n        instance(x: 158, y: 210) greaterthan_3e9b5d root.Std_k98ojb.Math.GreaterThan {\n            left: -1\n        }\n        instance(x: 164, y: 70) lessthanorequal_2a3c4f root.Std_k98ojb.Math.LessThanOrEqual {\n            right: -1\n        }\n\n        a_8f6b9d -> greaterthan_3e9b5d.right\n        b_1e8c2a -> lessthanorequal_2a3c4f.left\n        greaterthan_3e9b5d.result -> and_4f8a2c.input_0\n        lessthanorequal_2a3c4f.result -> and_4f8a2c.input_1\n\n        instance(x: 164, y: 70) greaterthan_3e9b5d_2 root.Std_k98ojb.Math.GreaterThan {\n            left: -1\n        }\n        instance(x: 158, y: 210) lessthanorequal_2a3c4f_2 root.Std_k98ojb.Math.LessThanOrEqual {\n            right: -1\n        }\n\n        a_8f6b9d -> lessthanorequal_2a3c4f_2.left\n        b_1e8c2a -> greaterthan_3e9b5d_2.right\n        greaterthan_3e9b5d_2.result -> and_4f8a2c.input_2\n        lessthanorequal_2a3c4f_2.result -> and_4f8a2c.input_3\n\n        instance(x: 164, y: 70) or_3e9b5d root.Std_k98ojb.Logic.Or {}\n        and_4f8a2c.output -> or_3e9b5d.input_0\n        and_4f8a2c.output_1 -> or_3e9b5d.input_1\n\n        or_3e9b5d.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> if_07b8c7.predicate\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        if_07b8c7.then -> out_f3db9f\n        true -> out_f3db9f\n        if_07b8c7.else -> continue_8ba06b\n        false -> out_f3db9f\n        execute_27b8c3 -> if_07b8c7.execute\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [list_ai]\n        }\n        instance(x: 200, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.list\n        }\n        instance(x: 300, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.list\n            handler: func(doc:\"Check for uniqueness.\") CheckUniqueness {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) index root.Std_k98ojb.List.IndexOf {\n                    list: sorted_unique_list.list\n                    item: item_ai\n                }\n                instance(x: 200, y: 100) is_first_occurrence root.Std_k98ojb.Logic.Equal {\n                    left: index.index\n                    right: filtered_unique_list.index\n                }\n                is_first_occurrence.value -> output_ai\n            }\n        }\n        instance(x: 400, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply numbers.\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: 0, y: 77, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 100, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        filtered_unique_list.output_list -> product.items\n        product.value -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -349, y: 10, name: \"list1\") property(List) list1_2a5b8c\n            in(x: -346, y: 79, name: \"list2\") property(List) list2_e8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -135, y: 10) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 79) difference2_78d487 root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 169, y: -77) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference2_78d487.difference -> concat_cd5cc4.right\n\n            list1_2a5b8c -> difference_78d487.left\n            list2_e8f404 -> difference_78d487.right\n\n            list1_2a5b8c -> difference2_78d487.right\n            list2_e8f404 -> difference2_78d487.left\n\n            concat_cd5cc4.listWithItem -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -203, y: 145, name: \"execute\") trigger() execute_8d7b8a\n        in(x: -196, y: -12, name: \"list\") property(List) list_1f8e4c\n        in(x: -190, y: 308, name: \"steps\") property(Number) steps_5d7b8a\n\n        out(x: 836, y: 323, name: \"output\") property(List) data_0_0\n        out(x: 841, y: 199, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 559, y: 266) slice_3a4b9c root.Std_k98ojb.List.Slice {}\n        instance(x: 550, y: -13) slice_2d3e4f root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 200, y: 308) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: 308) modulo_4d5e6f root.Std_k98ojb.Math.Modulo {}\n\n        execute_8d7b8a -> length_1a2b3c.execute\n        list_1f8e4c -> length_1a2b3c.list\n        steps_5d7b8a -> modulo_4d5e6f.value\n        length_1a2b3c.length -> modulo_4d5e6f.divisor\n        modulo_4d5e6f.result -> slice_2d3e4f.start\n        0 -> slice_2d3e4f.end\n        list_1f8e4c -> slice_2d3e4f.list\n        length_1a2b3c.length -> slice_3a4b9c.start\n        modulo_4d5e6f.result -> slice_3a4b9c.end\n        list_1f8e4c -> slice_3a4b9c.list\n        slice_2d3e4f.slice -> concat_9b38cc.left\n        slice_3a4b9c.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: 65, y: -217) for_4e5f2b root.Std_k98ojb.Std.For {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> execute_cdac2a\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        array_6b655b -> for_4e5f2b.items\n        execute_cdac2a -> for_4e5f2b.trigger\n        for_4e5f2b.on_item -> add_88bb8a.execute\n        setter_375321.execute -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        for_4e5f2b.item -> add_88bb8a.second\n        getter_38583a.value -> add_88bb8a.first\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 352, y: -493) floordiv_6030c9 root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> generaterange_038fce.to\n        1 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> floordiv_6030c9.first\n        for_8cb3f6.item -> floordiv_6030c9.second\n        floordiv_6030c9.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_2\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        instance(x: 1812, y: -450) if_e19a62 root.Std_k98ojb.Std.If {}\n        true -> out_f3db9f\n        false -> if_e19a62.value\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 132, name: \"a\") property(Int) a_0b8e8f\n        in(x: 697, y: 132, name: \"b\") property(Int) b_0b8e8f\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 475, y: 132) and_6a8c9d root.Std_k98ojb.Logic.And {}\n        instance(x: 203, y: 132) greaterthan_1a8e8f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 475, y: 366) lessorequal_6a8c9d root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_0b8e8f -> greaterthan_1a8e8f.left\n        b_0b8e8f -> greaterthan_1a8e8f.right\n\n        a_0b8e8f -> lessorequal_6a8c9d.left\n        b_0b8e8f -> lessorequal_6a8c9d.right\n\n        greaterthan_1a8e8f.value -> and_6a8c9d.left\n        lessorequal_6a8c9d.value -> and_6a8c9d.right\n\n        and_6a8c9d.value -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            lists: [list_ai]\n        }\n        instance(x: 250, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.flattenedList\n        }\n        instance(x: 400, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Remove duplicates\") RemoveDuplicates {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                in(x: -400, y: 77, name: \"index\") property(Number) index_ai\n                in(x: -269, y: 152, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: context_ai\n                    index: Math.Floor(index_ai - 1)\n                }\n                instance(x: 250, y: 100) is_not_equal root.Std_k98ojb.Logic.NotEqual {\n                    left: previous_item.item\n                    right: item_ai\n                }\n                instance(x: 400, y: 100) is_first_item root.Std_k98ojb.Math.LessThanOrEqual {\n                    left: index_ai\n                    right: 0\n                }\n                instance(x: 550, y: 100) or_condition root.Std_k98ojb.Logic.Or {\n                    a: is_not_equal.value\n                    b: is_first_item.result\n                }\n                or_condition.result -> output_ai\n            }\n        }\n        instance(x: 600, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply numbers\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -400, y: 77, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 100, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        product.accumulatedValue -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -340, y: 15, name: \"list1\") property(List) list1_728b6e\n            in(x: -340, y: 95, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: 105, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 55) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 200, y: 15) difference_78d487_bis root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 300, y: 55) concat_67c8f4 root.Std_k98ojb.List.Concat {}\n\n            list1_728b6e -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            list2_c8f404 -> difference_78d487_bis.left\n            list1_728b6e -> difference_78d487_bis.right\n\n            difference_78d487.difference -> concat_67c8f4.list1\n            difference_78d487_bis.difference -> concat_67c8f4.list2\n\n            concat_67c8f4.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -174, y: 380, name: \"steps\") property(Number) steps_2b5e9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 254, y: 167) slice_1d8c2f root.Std_k98ojb.List.Slice {}\n        instance(x: 254, y: -100) length_1e3a3a root.Std_k98ojb.List.Length {}\n        instance(x: 454, y: -100) modulo_6d7c2f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 254, y: -250) sub_3e3a3a root.Std_k98ojb.Math.Sub {}\n\n        execute_1ddb9f -> length_1e3a3a.execute\n        list_0c1a77 -> length_1e3a3a.list\n        length_1e3a3a.value -> modulo_6d7c2f.value\n        steps_2b5e9f -> modulo_6d7c2f.divisor\n        modulo_6d7c2f.result -> sub_3e3a3a.second\n        length_1e3a3a.value -> sub_3e3a3a.first\n        sub_3e3a3a.result -> slice_1d8c2f.start\n        list_0c1a77 -> slice_1d8c2f.list\n        -1 -> slice_1d8c2f.end\n        slice_1d8c2f.slice -> concat_9b38cc.right\n        list_0c1a77 -> slice_1d8c2f.list\n        0 -> slice_1d8c2f.start\n        modulo_6d7c2f.result -> slice_1d8c2f.end\n        slice_1d8c2f.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -417) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -417) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                execute_cdac2a -> add_3d7de6.execute\n                add_3d7de6.result -> output_732a8a\n                output_732a8a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n        reduce_3d7de6.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1368, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        not_2f9d09.value -> out_f3db9f\n        expression_b720d7.result -> not_2f9d09.input\n        lessthanorequal_f11fda.right -> for_8cb3f6.next\n        input_f5c03d -> lessthanorequal_f11fda.right\n        if_07b8c7.then -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f9b1e\n        in(x: 67, y: 130, name: \"b\") property(Int) b_1d2c3f\n\n        out(x: 465, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 251, y: 257) and_82d404 root.Std_k98ojb.Logic.And {}\n        instance(x: 5, y: 346) greaterthan_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -6, y: 129) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f9b1e -> greaterthan_a8e56c.left\n        b_1d2c3f -> greaterthan_a8e56c.right\n\n        a_8f9b1e -> lessthanorequal_a49ae4.left\n        b_1d2c3f -> lessthanorequal_a49ae4.right\n\n        greaterthan_a8e56c.result -> and_82d404.input_0\n        lessthanorequal_a49ae4.result -> and_82d404.input_1\n\n        and_82d404.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_33ad55 root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_33ad55.list1\n            difference2_cd5cc4.difference -> concat_33ad55.list2\n\n            concat_33ad55.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_instance root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5d2b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_1d2c3f root.Std_k98ojb.List.Length {}\n        instance(x: 300, y: -100) modulo_1e2a3b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 554, y: -99) slice_1d2c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 562, y: -203) slice_2e2a3b root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_1d2c3f.execute\n        list_0c1a77 -> length_1d2c3f.list\n        steps_5d2b9f -> modulo_1e2a3b.value\n        length_1d2c3f.length -> modulo_1e2a3b.divisor\n        modulo_1e2a3b.result -> slice_1d2c3f.start\n        0 -> slice_1d2c3f.end\n        list_0c1a77 -> slice_1d2c3f.list\n        modulo_1e2a3b.result -> slice_2e2a3b.start\n        -1 -> slice_2e2a3b.end\n        list_0c1a77 -> slice_2e2a3b.list\n        slice_2e2a3b.slice -> concat_9b38cc.left\n        slice_1d2c3f.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f6b9d\n        in(x: 76, y: 130, name: \"b\") property(Int) b_1e8c2a\n\n        out(x: 455, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 267, y: 130) and_4f8a2c root.Std_k98ojb.Logic.And {}\n        instance(x: 158, y: 210) greaterthan_3e9b5d root.Std_k98ojb.Math.GreaterThan {\n            left: -1\n        }\n        instance(x: 164, y: 70) lessthanorequal_2a3c4f root.Std_k98ojb.Math.LessThanOrEqual {\n            right: -1\n        }\n\n        a_8f6b9d -> greaterthan_3e9b5d.right\n        b_1e8c2a -> lessthanorequal_2a3c4f.left\n        greaterthan_3e9b5d.result -> and_4f8a2c.input_0\n        lessthanorequal_2a3c4f.result -> and_4f8a2c.input_1\n\n        instance(x: 164, y: 70) greaterthan_3e9b5d_2 root.Std_k98ojb.Math.GreaterThan {\n            left: -1\n        }\n        instance(x: 158, y: 210) lessthanorequal_2a3c4f_2 root.Std_k98ojb.Math.LessThanOrEqual {\n            right: -1\n        }\n\n        a_8f6b9d -> lessthanorequal_2a3c4f_2.left\n        b_1e8c2a -> greaterthan_3e9b5d_2.right\n        greaterthan_3e9b5d_2.result -> and_4f8a2c.input_2\n        lessthanorequal_2a3c4f_2.result -> and_4f8a2c.input_3\n\n        instance(x: 164, y: 70) or_3e9b5d root.Std_k98ojb.Logic.Or {}\n        and_4f8a2c.output -> or_3e9b5d.input_0\n        and_4f8a2c.output_1 -> or_3e9b5d.input_1\n\n        or_3e9b5d.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> if_07b8c7.predicate\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        if_07b8c7.then -> out_f3db9f\n        true -> out_f3db9f\n        false -> out_f3db9f\n        execute_27b8c3 -> if_07b8c7.execute\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [list_ai]\n        }\n        instance(x: 200, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.list\n        }\n        instance(x: 300, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.list\n            handler: func(doc:\"Remove duplicates\") RemoveDuplicates {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                in(x: -400, y: 77, name: \"index\") property(Number) index_ai\n                in(x: -269, y: 152, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: context_ai\n                    index: Math.Floor(index_ai - 1)\n                }\n                instance(x: 200, y: 100) is_not_equal root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item.item\n                }\n                is_not_equal.value -> output_ai\n            }\n        }\n        sorted_unique_list.list -> filtered_unique_list.context\n        sorted_unique_list.list -> filtered_unique_list.items\n        instance(x: 400, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply numbers\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -400, y: 77, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 100, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        filtered_unique_list.output_list -> product.items\n        product.accumulator -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -349, y: 10, name: \"list1\") property(List) list1_2a5b8c\n            in(x: -346, y: 79, name: \"list2\") property(List) list2_e8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -135, y: 10) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 79) difference2_78d487 root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 169, y: -77) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference2_78d487.difference -> concat_cd5cc4.right\n\n            list1_2a5b8c -> difference_78d487.left\n            list2_e8f404 -> difference_78d487.right\n\n            list1_2a5b8c -> difference2_78d487.right\n            list2_e8f404 -> difference2_78d487.left\n\n            concat_cd5cc4.listWithItem -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -203, y: 145, name: \"execute\") trigger() execute_8d7b6a\n        in(x: -197, y: 38, name: \"list\") property(List) list_0c1a77\n        in(x: -192, y: -73, name: \"steps\") property(Number) steps_5f4d8b\n\n        out(x: 688, y: 153, name: \"output\") property(List) data_0_0\n        out(x: 667, y: 36, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 300, y: -82) length_1d5e4a root.Std_k98ojb.List.Length {}\n        instance(x: 488, y: -124) modulo_6c245c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 307, y: 153) slice_1a2d3e root.Std_k98ojb.List.Slice {}\n        instance(x: 599, y: -124) sub_6c245c root.Std_k98ojb.Math.Sub {}\n        instance(x: 700, y: 153) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        execute_8d7b6a -> length_1d5e4a.trigger\n        list_0c1a77 -> length_1d5e4a.list\n        length_1d5e4a.length -> modulo_6c245c.value\n        steps_5f4d8b -> modulo_6c245c.divisor\n        modulo_6c245c.result -> slice_1a2d3e.start\n        list_0c1a77 -> slice_1a2d3e.list\n        length_1d5e4a.length -> sub_6c245c.first\n        modulo_6c245c.result -> sub_6c245c.second\n        sub_6c245c.result -> slice_1a2d3e.end\n        list_0c1a77 -> concat_9b38cc.left\n        slice_1a2d3e.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: 65, y: -217) for_4c7f34 root.Std_k98ojb.Std.For {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> execute_cdac2a\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> for_4c7f34.next\n        getter_38583a.value -> output_732a8a\n        array_6b655b -> for_4c7f34.items\n        execute_cdac2a -> setter_41e4ad.execute\n        for_4c7f34.on_item -> add_88bb8a.trigger\n        getter_38583a.value -> add_88bb8a.first\n        for_4c7f34.item -> add_88bb8a.second\n        for_4c7f34.done -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 352, y: -493) floordiv_6030c9 root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> generaterange_038fce.to\n        1 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> floordiv_6030c9.first\n        for_8cb3f6.item -> floordiv_6030c9.second\n        floordiv_6030c9.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_2\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        instance(x: 1812, y: -450) if_e19a62 root.Std_k98ojb.Std.If {}\n        true -> out_f3db9f\n        false -> if_e19a62.value\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Number) a_8f5b1e\n        in(x: 697, y: 130, name: \"b\") property(Number) b_8f5b1e\n\n        out(x: 244, y: -16, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 487, y: 130) and_2c8a09 root.Std_k98ojb.Logic.And {}\n        instance(x: 251, y: 264) greaterthan_82d404 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 732, y: 264) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f5b1e -> greaterthan_82d404.left\n        b_8f5b1e -> greaterthan_82d404.right\n\n        a_8f5b1e -> lessthanorequal_a49ae4.left\n        b_8f5b1e -> lessthanorequal_a49ae4.right\n\n        greaterthan_82d404.result -> and_2c8a09.input_1\n        lessthanorequal_a49ae4.result -> and_2c8a09.input_2\n\n        and_2c8a09.output -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            lists: [list_ai]\n        }\n        instance(x: 250, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.flattenedList\n        }\n        instance(x: 400, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness.\") UniquenessCheck {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: filtered_unique_list.items\n                    index: filtered_unique_list.index - 1\n                }\n                instance(x: 250, y: 100) is_not_equal root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item.item\n                }\n                is_not_equal.value -> output_ai\n            }\n        }\n        instance(x: 550, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply the numbers.\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: 100, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 150, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        product.reducedValue -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -340, y: 15, name: \"list1\") property(List) list1_728b6e\n            in(x: -340, y: 95, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: 55, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 55) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -130, y: 125) difference_78d488 root.Std_k98ojb.Sets.Difference {}\n\n            list1_728b6e -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            list2_c8f404 -> difference_78d488.left\n            list1_728b6e -> difference_78d488.right\n\n            instance(x: 159, y: 90) concat_33ad55 root.Std_k98ojb.List.Concat {}\n            difference_78d487.difference -> concat_33ad55.left\n            difference_78d488.difference -> concat_33ad55.right\n\n            concat_33ad55.concatenatedList -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -40, name: \"steps\") property(Number) steps_2d5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 254, y: -16) slice_7f8a2d root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -99) slice_0c183e root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) length_7f8a2d root.Std_k98ojb.List.Length {}\n\n        execute_1ddb9f -> slice_7f8a2d.trigger\n        list_0c1a77 -> slice_7f8a2d.list\n        steps_2d5b9f -> slice_7f8a2d.start\n\n        length_7f8a2d.length -> slice_0c183e.end\n        slice_0c183e.trigger -> concat_9b38cc.execute\n        slice_0c183e.list -> concat_9b38cc.right\n\n        list_0c1a77 -> length_7f8a2d.list\n        steps_2d5b9f -> Math.Modulo.value\n        length_7f8a2d.length -> Math.Modulo.divisor\n        Math.Modulo.result -> slice_7f8a2d.start\n\n        list_0c1a77 -> slice_0c183e.list\n        Math.Modulo.result -> slice_0c183e.start\n\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -417) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -417) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                execute_cdac2a -> add_3d7de6.execute\n                add_3d7de6.result -> output_732a8a\n                output_732a8a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n        reduce_3d7de6.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1368, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        not_2f9d09.value -> out_f3db9f\n        expression_b720d7.result -> not_2f9d09.input\n        lessthanorequal_f11fda.right -> for_8cb3f6.next\n        input_f5c03d -> lessthanorequal_f11fda.right\n        if_07b8c7.then -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f9b1e\n        in(x: 67, y: 130, name: \"b\") property(Int) b_1d2c3f\n\n        out(x: 465, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 251, y: 257) and_82d404 root.Std_k98ojb.Logic.And {}\n        instance(x: 5, y: 346) greaterthan_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -6, y: 129) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f9b1e -> greaterthan_a8e56c.left\n        b_1d2c3f -> greaterthan_a8e56c.right\n\n        a_8f9b1e -> lessthanorequal_a49ae4.left\n        b_1d2c3f -> lessthanorequal_a49ae4.right\n\n        greaterthan_a8e56c.result -> and_82d404.input_0\n        lessthanorequal_a49ae4.result -> and_82d404.input_1\n\n        and_82d404.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_33ad55 root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_33ad55.list1\n            difference2_cd5cc4.difference -> concat_33ad55.list2\n\n            concat_33ad55.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_instance root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5d2b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_1d2c3f root.Std_k98ojb.List.Length {}\n        instance(x: 300, y: -100) modulo_1e2a3b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 554, y: -99) slice_1d2c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 562, y: -203) slice_2e2a3b root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_1d2c3f.execute\n        list_0c1a77 -> length_1d2c3f.list\n        steps_5d2b9f -> modulo_1e2a3b.value\n        length_1d2c3f.length -> modulo_1e2a3b.divisor\n        modulo_1e2a3b.result -> slice_1d2c3f.start\n        0 -> slice_1d2c3f.end\n        list_0c1a77 -> slice_1d2c3f.list\n        modulo_1e2a3b.result -> slice_2e2a3b.start\n        -1 -> slice_2e2a3b.end\n        list_0c1a77 -> slice_2e2a3b.list\n        slice_2e2a3b.slice -> concat_9b38cc.left\n        slice_1d2c3f.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f6b9d\n        in(x: 76, y: 130, name: \"b\") property(Int) b_1e8c2a\n\n        out(x: 455, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 267, y: 130) and_4f8a2c root.Std_k98ojb.Logic.And {}\n        instance(x: 158, y: 210) greaterthan_3e9b5d root.Std_k98ojb.Math.GreaterThan {\n            left: -1\n        }\n        instance(x: 164, y: 70) lessthanorequal_2a3c4f root.Std_k98ojb.Math.LessThanOrEqual {\n            right: -1\n        }\n\n        a_8f6b9d -> greaterthan_3e9b5d.right\n        b_1e8c2a -> lessthanorequal_2a3c4f.left\n        greaterthan_3e9b5d.result -> and_4f8a2c.input_0\n        lessthanorequal_2a3c4f.result -> and_4f8a2c.input_1\n\n        instance(x: 164, y: 70) greaterthan_3e9b5d_2 root.Std_k98ojb.Math.GreaterThan {\n            left: -1\n        }\n        instance(x: 158, y: 210) lessthanorequal_2a3c4f_2 root.Std_k98ojb.Math.LessThanOrEqual {\n            right: -1\n        }\n\n        a_8f6b9d -> lessthanorequal_2a3c4f_2.left\n        b_1e8c2a -> greaterthan_3e9b5d_2.right\n        greaterthan_3e9b5d_2.result -> and_4f8a2c.input_2\n        lessthanorequal_2a3c4f_2.result -> and_4f8a2c.input_3\n\n        instance(x: 164, y: 70) or_3e9b5d root.Std_k98ojb.Logic.Or {}\n        and_4f8a2c.output -> or_3e9b5d.input_0\n        and_4f8a2c.output_1 -> or_3e9b5d.input_1\n\n        or_3e9b5d.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> if_07b8c7.predicate\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        if_07b8c7.then -> out_f3db9f\n        true -> out_f3db9f\n        false -> out_f3db9f\n        execute_27b8c3 -> if_07b8c7.execute\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            list: [list_ai]\n        }\n        instance(x: 200, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.list\n        }\n        instance(x: 300, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.list\n            handler: func(doc:\"Remove duplicates\") RemoveDuplicates {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                in(x: -400, y: 77, name: \"index\") property(Number) index_ai\n                in(x: -269, y: 152, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: context_ai\n                    index: Math.Floor(index_ai - 1)\n                }\n                instance(x: 200, y: 100) is_not_equal root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item.item\n                }\n                is_not_equal.value -> output_ai\n            }\n        }\n        sorted_unique_list.list -> filtered_unique_list.context\n        sorted_unique_list.list -> filtered_unique_list.items\n        instance(x: 400, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply numbers\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -400, y: 77, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 100, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        filtered_unique_list.output_list -> product.items\n        product.accumulator -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -349, y: 10, name: \"list1\") property(List) list1_2a5b8c\n            in(x: -346, y: 79, name: \"list2\") property(List) list2_e8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -135, y: 10) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 79) difference2_78d487 root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 169, y: -77) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference2_78d487.difference -> concat_cd5cc4.right\n\n            list1_2a5b8c -> difference_78d487.left\n            list2_e8f404 -> difference_78d487.right\n\n            list1_2a5b8c -> difference2_78d487.right\n            list2_e8f404 -> difference2_78d487.left\n\n            concat_cd5cc4.listWithItem -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -203, y: 145, name: \"execute\") trigger() execute_8d7b6a\n        in(x: -197, y: 38, name: \"list\") property(List) list_0c1a77\n        in(x: -192, y: -73, name: \"steps\") property(Number) steps_5f4d8b\n\n        out(x: 688, y: 153, name: \"output\") property(List) data_0_0\n        out(x: 667, y: 36, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 300, y: -82) length_1d5e4a root.Std_k98ojb.List.Length {}\n        instance(x: 488, y: -124) modulo_6c245c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 307, y: 153) slice_1a2d3e root.Std_k98ojb.List.Slice {}\n        instance(x: 599, y: -124) sub_6c245c root.Std_k98ojb.Math.Sub {}\n        instance(x: 700, y: 153) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        execute_8d7b6a -> length_1d5e4a.trigger\n        list_0c1a77 -> length_1d5e4a.list\n        length_1d5e4a.length -> modulo_6c245c.value\n        steps_5f4d8b -> modulo_6c245c.divisor\n        modulo_6c245c.result -> slice_1a2d3e.start\n        list_0c1a77 -> slice_1a2d3e.list\n        length_1d5e4a.length -> sub_6c245c.first\n        modulo_6c245c.result -> sub_6c245c.second\n        sub_6c245c.result -> slice_1a2d3e.end\n        list_0c1a77 -> concat_9b38cc.left\n        slice_1a2d3e.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: 65, y: -217) for_4c7f34 root.Std_k98ojb.Std.For {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> execute_cdac2a\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> for_4c7f34.next\n        getter_38583a.value -> output_732a8a\n        array_6b655b -> for_4c7f34.items\n        execute_cdac2a -> setter_41e4ad.execute\n        for_4c7f34.on_item -> add_88bb8a.trigger\n        getter_38583a.value -> add_88bb8a.first\n        for_4c7f34.item -> add_88bb8a.second\n        for_4c7f34.done -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 352, y: -493) floordiv_6030c9 root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> generaterange_038fce.to\n        1 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> floordiv_6030c9.first\n        for_8cb3f6.item -> floordiv_6030c9.second\n        floordiv_6030c9.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_2\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        instance(x: 1812, y: -450) if_e19a62 root.Std_k98ojb.Std.If {}\n        true -> out_f3db9f\n        false -> if_e19a62.value\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Number) a_8f5b1e\n        in(x: 697, y: 130, name: \"b\") property(Number) b_8f5b1e\n\n        out(x: 244, y: -16, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 487, y: 130) and_2c8a09 root.Std_k98ojb.Logic.And {}\n        instance(x: 251, y: 264) greaterthan_82d404 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 732, y: 264) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f5b1e -> greaterthan_82d404.left\n        b_8f5b1e -> greaterthan_82d404.right\n\n        a_8f5b1e -> lessthanorequal_a49ae4.left\n        b_8f5b1e -> lessthanorequal_a49ae4.right\n\n        greaterthan_82d404.result -> and_2c8a09.input_1\n        lessthanorequal_a49ae4.result -> and_2c8a09.input_2\n\n        and_2c8a09.output -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            lists: [list_ai]\n        }\n        instance(x: 250, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.flattenedList\n        }\n        instance(x: 400, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness.\") UniquenessCheck {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: filtered_unique_list.items\n                    index: filtered_unique_list.index - 1\n                }\n                instance(x: 250, y: 100) is_not_equal root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item.item\n                }\n                is_not_equal.value -> output_ai\n            }\n        }\n        instance(x: 550, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply the numbers.\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: 100, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 150, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        product.reducedValue -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -340, y: 15, name: \"list1\") property(List) list1_728b6e\n            in(x: -340, y: 95, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: 55, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 55) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -130, y: 125) difference_78d488 root.Std_k98ojb.Sets.Difference {}\n\n            list1_728b6e -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            list2_c8f404 -> difference_78d488.left\n            list1_728b6e -> difference_78d488.right\n\n            instance(x: 159, y: 90) concat_33ad55 root.Std_k98ojb.List.Concat {}\n            difference_78d487.difference -> concat_33ad55.left\n            difference_78d488.difference -> concat_33ad55.right\n\n            concat_33ad55.concatenatedList -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -40, name: \"steps\") property(Number) steps_2d5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 254, y: -16) slice_7f8a2d root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -99) slice_0c183e root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) length_7f8a2d root.Std_k98ojb.List.Length {}\n\n        execute_1ddb9f -> slice_7f8a2d.trigger\n        list_0c1a77 -> slice_7f8a2d.list\n        steps_2d5b9f -> slice_7f8a2d.start\n\n        length_7f8a2d.length -> slice_0c183e.end\n        slice_0c183e.trigger -> concat_9b38cc.execute\n        slice_0c183e.list -> concat_9b38cc.right\n\n        list_0c1a77 -> length_7f8a2d.list\n        steps_2d5b9f -> Math.Modulo.value\n        length_7f8a2d.length -> Math.Modulo.divisor\n        Math.Modulo.result -> slice_7f8a2d.start\n\n        list_0c1a77 -> slice_0c183e.list\n        Math.Modulo.result -> slice_0c183e.start\n\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -417) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -417) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                execute_cdac2a -> add_3d7de6.execute\n                add_3d7de6.result -> output_732a8a\n                output_732a8a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n        reduce_3d7de6.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1368, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        not_2f9d09.value -> out_f3db9f\n        expression_b720d7.result -> not_2f9d09.input\n        lessthanorequal_f11fda.right -> for_8cb3f6.next\n        input_f5c03d -> lessthanorequal_f11fda.right\n        if_07b8c7.then -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f9b1e\n        in(x: 67, y: 130, name: \"b\") property(Int) b_1d8c2f\n\n        out(x: 456, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 251, y: 257) and_82d404 root.Std_k98ojb.Logic.And {}\n        instance(x: 5, y: 346) greaterthan_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -6, y: 129) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f9b1e -> greaterthan_a8e56c.left\n        b_1d8c2f -> greaterthan_a8e56c.right\n\n        a_8f9b1e -> lessthanorequal_a49ae4.left\n        b_1d8c2f -> lessthanorequal_a49ae4.right\n\n        greaterthan_a8e56c.result -> and_82d404.input_0\n        lessthanorequal_a49ae4.result -> and_82d404.input_1\n\n        and_82d404.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_67b2e9\n            in(x: -338, y: 110, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 60, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 60) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: 60) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference_78d487.reverseDifference -> concat_cd5cc4.right\n\n            list1_67b2e9 -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            concat_cd5cc4.output_list -> output_879de6\n        }\n\n        instance(x: 430, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5b2d9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -167) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -100) sub_875ddb root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -67) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 200, y: -67) slice_1d3f4a root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_5c4634.execute\n        list_0c1a77 -> length_5c4634.list\n        steps_5b2d9f -> modulo_14921d.value\n        length_5c4634.length -> modulo_14921d.divisor\n        length_5c4634.length -> sub_875ddb.first\n        modulo_14921d.result -> sub_875ddb.second\n        list_0c1a77 -> slice_9ab286.list\n        sub_875ddb.result -> slice_9ab286.start\n        -1 -> slice_9ab286.end\n        list_0c1a77 -> slice_1d3f4a.list\n        0 -> slice_1d3f4a.start\n        modulo_14921d.result -> slice_1d3f4a.end\n        slice_9ab286.slice -> concat_9b38cc.right\n        slice_1d3f4a.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite sign or not.\") check_opposite_sign {\n        in(x: 24, y: -105, name: \"a\") property(Number) a_3d8e5b\n        in(x: 296, y: -107, name: \"b\") property(Number) b_a3c2f1\n\n        out(x: 274, y: 144, name: \"output\") property(Bool) output_28e5d7\n\n        instance(x: 196, y: -105) and_8b6a82 root.Std_k98ojb.Logic.And {}\n        instance(x: 336, y: -104) greaterthan_a57f8c root.Std_k98ojb.Math.GreaterThan {\n            left: a\n            right: b\n        }\n        instance(x: 26, y: -104) lessthanorequal_4d73e2 root.Std_k98ojb.Math.LessThanOrEqual {\n            left: a\n            right: b\n        }\n        greaterthan_a57f8c.value -> and_8b6a82.left\n        lessthanorequal_4d73e2.value -> and_8b6a82.right\n        and_8b6a82.value -> output_28e5d7\n        a_3d8e5b -> greaterthan_a57f8c.left\n        a_3d8e5b -> lessthanorequal_4d73e2.left\n        b_a3c2f1 -> greaterthan_a57f8c.right\n        b_a3c2f1 -> lessthanorequal_4d73e2.right\n    }\n\n    \n\n    instance(x: 190, y: -264) check_opposite_sign_ea6b32 root.main.check_opposite_sign {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 587, y: -100) modulo_2d2e5c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_2d2e5c.value\n        11 -> modulo_2d2e5c.divisor\n        instance(x: 764, y: -15) equal_e1a5f7 root.Std_k98ojb.Logic.Equal {}\n        modulo_2d2e5c.result -> equal_e1a5f7.left\n        0 -> equal_e1a5f7.right\n        equal_e1a5f7.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -163, y: 144) unique_9b3c7b root.List.Flatten {\n            lists: [\n                list_ai\n            ]\n        }\n        instance(x: 250, y: 148) filter_9b3c7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") UniqueCheck {\n                in(x: -649, y: 10, name: \"item\") property(Number) item_ai\n                out(x: 527, y: 58, name: \"result\") property(Boolean) result_ai\n                instance(x: -353, y: 128) index_7b3c7b root.Iteration.Find {\n                    predicate: func(doc:\"Check if item is the same.\") SameItemCheck {\n                        in(x: -649, y: 10, name: \"current\") property(Number) current_ai\n                        out(x: 527, y: 58, name: \"result\") property(Boolean) result_ai\n                        instance(x: 32, y: 128) equal_7b3c7b root.Logic.Equal {\n                            left: item_ai\n                            right: current_ai\n                        }\n                        equal_7b3c7b.result -> result_ai\n                    }\n                }\n                index_7b3c7b.items: unique_9b3c7b.flattenedList\n                index_7b3c7b.index: 0\n                instance(x: 452, y: 128) logic_not_7b3c7b root.Logic.Not {\n                    input: index_7b3c7b.item != null\n                }\n                logic_not_7b3c7b.result -> result_ai\n            }\n        }\n        unique_9b3c7b.flattenedList -> filter_9b3c7b.items\n        instance(x: 528, y: 146) reduce_9b3c7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply the numbers.\") MultiplyNumbers {\n                in(x: -649, y: 10, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -528, y: 10, name: \"current\") property(Number) current_ai\n                out(x: 527, y: 58, name: \"result\") property(Number) result_ai\n                instance(x: 32, y: 128) mul_7b3c7b root.Math.Mul {\n                    first: accumulator_ai\n                    second: current_ai\n                }\n                mul_7b3c7b.result -> result_ai\n            }\n        }\n        filter_9b3c7b.output_list -> reduce_9b3c7b.items\n        reduce_9b3c7b.accumulatedValue -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -360, y: 21, name: \"list1\") property(List) list1_874d5a\n            in(x: -369, y: 118, name: \"list2\") property(List) list2_1b6f2c\n\n            out(x: 402, y: 107, name: \"output\") property(List) output_45d7e6\n\n            instance(x: -139, y: 88) difference_1_37a5b7 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -127, y: 202) difference_2_2f4c1e root.Std_k98ojb.Sets.Difference {}\n            instance(x: 168, y: 153) concat_78d487 root.Std_k98ojb.List.Concat {}\n\n            list1_874d5a -> difference_1_37a5b7.left\n            list2_1b6f2c -> difference_1_37a5b7.right\n\n            list2_1b6f2c -> difference_2_2f4c1e.left\n            list1_874d5a -> difference_2_2f4c1e.right\n\n            difference_1_37a5b7.difference -> concat_78d487.list1\n            difference_2_2f4c1e.difference -> concat_78d487.list2\n\n            concat_78d487.output_list -> output_45d7e6\n        }\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -210, y: 34, name: \"execute\") trigger() execute_85b1f1\n        in(x: -209, y: 168, name: \"list\") property(List) list_1c7a1e\n        in(x: -208, y: 304, name: \"steps\") property(Number) steps_5b3d8f\n\n        out(x: 849, y: 216, name: \"output\") property(List) data_0_0\n        out(x: 837, y: 117, name: \"continue\") trigger() continue_4c2a5c\n\n        instance(x: -128, y: 197) modulo_e4d6b2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 307, y: 198) slice_9f4555 root.Std_k98ojb.List.Slice {}\n        instance(x: 305, y: 434) slice_1a62e5 root.Std_k98ojb.List.Slice {}\n        instance(x: 573, y: 323) concat_4f67c4 root.Std_k98ojb.List.Concat {}\n\n        execute_85b1f1 -> modulo_e4d6b2.execute\n        list_1c7a1e -> slice_9f4555.list\n        list_1c7a1e -> slice_1a62e5.list\n        steps_5b3d8f -> modulo_e4d6b2.divisor\n        list_1c7a1e -> modulo_e4d6b2.value\n        0 -> slice_9f4555.start\n        modulo_e4d6b2.result -> slice_9f4555.end\n        -1 -> slice_1a62e5.end\n        modulo_e4d6b2.result -> slice_1a62e5.start\n        concat_4f67c4.left -> data_0_0\n        concat_4f67c4.right -> continue_4c2a5c\n        slice_9f4555.slice -> concat_4f67c4.left\n        slice_1a62e5.slice -> concat_4f67c4.right\n    }\n\n    \n\n    instance(x: -308, y: 11) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7d6f8a\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_ae2b9c\n\n        out(x: 1145, y: 198, name: \"continue\") trigger() continue_97b6f4\n        out(x: 1144, y: -13, name: \"output\") property(Number) output_b0a2d5\n\n        instance(x: 84, y: 85) reduce_4e5c7f root.Std_k98ojb.Iteration.Reduce {\n            handler: sum_handler\n        }\n        instance(x: -136, y: 155) sum_handler_2d0c8a func() sum_handler {\n            in(x: -335, y: 174, name: \"execute\") trigger() execute_eb9f8c\n            in(x: -333, y: 116, name: \"acc\") property(Number) acc_20d3e5\n            in(x: -332, y: 57, name: \"item\") property(Number) item_c4a9b6\n\n            out(x: 84, y: 143, name: \"continue\") trigger() continue_9c3f0d\n            out(x: 84, y: 84, name: \"output\") property(Number) output_b527ee\n\n            instance(x: -64, y: 117) add_4e5c7f root.Std_k98ojb.Math.Add {}\n\n            acc_20d3e5 -> add_4e5c7f.first\n            item_c4a9b6 -> add_4e5c7f.second\n            add_4e5c7f.result -> output_b527ee\n            execute_eb9f8c -> continue_9c3f0d\n        }\n\n        0 -> reduce_4e5c7f.initial_value\n        numbers_ae2b9c -> reduce_4e5c7f.items\n        execute_7d6f8a -> reduce_4e5c7f.execute\n        reduce_4e5c7f.output -> output_b0a2d5\n        reduce_4e5c7f.continue -> continue_97b6f4\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -145) floordiv_8c3d7f root.Std_k98ojb.Math.Div {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> floordiv_8c3d7f.first\n        Math.Sqrt(input: input_f5c03d) -> floordiv_8c3d7f.second\n        floordiv_8c3d7f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_07b8c7.then -> if_e19a62.execute\n        and_80a119.result -> if_e19a62.predicate\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> out_f3db9f\n        true -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 136, name: \"a\") property(Int) a_a2b59d\n            in(x: 247, y: 136, name: \"b\") property(Int) b_82d404\n\n            out(x: 126, y: 252, name: \"output\") property(Bool) output_a8e56c\n\n            instance(x: 127, y: 39) mul_3b9a2f root.Std_k98ojb.Math.Mul {}\n            instance(x: 0, y: 214) lessThanZero_9a49ae root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            a_a2b59d -> mul_3b9a2f.first\n            b_82d404 -> mul_3b9a2f.second\n            mul_3b9a2f.result -> lessThanZero_9a49ae.left\n            lessThanZero_9a49ae.right = 0\n            lessThanZero_9a49ae.result -> output_a8e56c\n        }\n\n        instance(x: 127, y: -16) check_opposite_signs_3b9a2f root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -34) modulo_d7d5a7 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_d7d5a7.value\n        11 -> modulo_d7d5a7.divisor\n        instance(x: 826, y: -40) equal_2f8e5c root.Std_k98ojb.Logic.Equal {}\n        0 -> equal_2f8e5c.right\n        modulo_d7d5a7.result -> equal_2f8e5c.left\n        equal_2f8e5c.result -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        input_0 -> replace_306f69.input\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) uniqueList_7b3b7b root.List.Flatten {\n            lists: []\n        }\n        instance(x: 951, y: 180) reduce_7b3b7b root.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        list_ai -> uniqueList_7b3b7b.lists\n        uniqueList_7b3b7b.flattened -> reduce_7b3b7b.items\n        reduce_7b3b7b.output_list -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_58a76b\n            in(x: -333, y: 128, name: \"list2\") property(List) list2_f8c7d9\n\n            out(x: 405, y: 75, name: \"output\") property(List) output_8f9b6e\n\n            instance(x: -138, y: 80) difference_1 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -126, y: 184) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n            list1_58a76b -> difference_1.left\n            list2_f8c7d9 -> difference_1.right\n\n            list2_f8c7d9 -> difference_2.left\n            list1_58a76b -> difference_2.right\n\n            instance(x: 140, y: 132) concat_3 root.Std_k98ojb.List.Concat {}\n            difference_1.difference -> concat_3.list1\n            difference_2.difference -> concat_3.list2\n\n            concat_3.output_list -> output_8f9b6e\n        }\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_3a8d4b\n        in(x: -174, y: 160, name: \"list\") property(List) list_7c9f3e\n        in(x: -174, y: 256, name: \"positions\") property(Number) positions_8a2d7b\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a4f5c7\n\n        instance(x: 294, y: -19) length_6b1f4a root.Std_k98ojb.List.Length {}\n        instance(x: 557, y: 167) concat_53d701 root.Std_k98ojb.List.Concat {}\n        instance(x: 294, y: 303) slice_e7f4c5 root.Std_k98ojb.List.Slice {\n            end: -1\n        }\n        instance(x: 562, y: -203) mod_3d4a1c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 294, y: 214) sub_67d4f9 root.Std_k98ojb.Math.Sub {}\n        getter(x: 542, y: -246, name: \"getter_0a3e7c\") getter_0a3e7c = length\n        instance(x: 562, y: -106) slice_3d8f4a root.Std_k98ojb.List.Slice {}\n        setter(x: 6, y: -64, name: \"setter_a1e8d6\") setter_a1e8d6 = length\n        getter(x: 252, y: -246, name: \"getter_0a3e7c\") getter_e808a2 = length\n\n        execute_3a8d4b -> setter_a1e8d6.execute\n        list_7c9f3e -> length_6b1f4a.list\n        length_6b1f4a.length -> getter_a1e8d6.value\n        positions_8a2d7b -> mod_3d4a1c.divisor\n        getter_e808a2.value -> mod_3d4a1c.value\n        mod_3d4a1c.result -> sub_67d4f9.first\n        getter_a1e8d6.value -> sub_67d4f9.second\n        sub_67d4f9.result -> slice_e7f4c5.start\n        list_7c9f3e -> slice_e7f4c5.list\n        slice_e7f4c5.slice -> concat_53d701.left\n        mod_3d4a1c.result -> slice_3d8f4a.start\n        getter_a1e8d6.value -> slice_3d8f4a.end\n        list_7c9f3e -> slice_3d8f4a.list\n        slice_3d8f4a.slice -> concat_53d701.right\n        concat_53d701.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5f9e2b\n        in(x: 0, y: -183, name: \"array\") property(List) array_f6c4a7\n\n        out(x: 0, y: -366, name: \"output\") property(Number) output_2a7b3f\n\n        instance(x: -259, y: -221) reduce_a9e8f4 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"reducer function\") reducer {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_3b7a5c\n                in(x: 0, y: -124, name: \"acc\") property(Number) acc_bf9d8a\n                in(x: 0, y: -249, name: \"item\") property(Number) item_6e3f3b\n\n                out(x: 0, y: -375, name: \"output\") property(Number) output_1c3e4d\n\n                instance(x: -148, y: -192) add_ded9a4 root.Std_k98ojb.Math.Add {}\n\n                acc_bf9d8a -> add_ded9a4.first\n                item_6e3f3b -> add_ded9a4.second\n                add_ded9a4.result -> output_1c3e4d\n                execute_3b7a5c -> add_ded9a4.execute\n            }\n        }\n\n        0 -> reduce_a9e8f4.initial_value\n        array_f6c4a7 -> reduce_a9e8f4.items\n        execute_5f9e2b -> reduce_a9e8f4.trigger\n        reduce_a9e8f4.output -> output_2a7b3f\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1362, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1247, y: -313) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        input_f5c03d -> lessthanorequal_f11fda.left\n        2 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_e19a62.predicate\n        execute_27b8c3 -> if_e19a62.execute\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> not_2f9d09.value\n        not_2f9d09.out -> if_e19a62.then\n        for_8cb3f6.onItem -> if_e19a62.else\n        for_8cb3f6.done -> continue_8ba06b\n        if_e19a62.value -> out_f3db9f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8b3f4d\n        in(x: 679, y: 130, name: \"b\") property(Int) b_4c2e5f\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_7a8b9c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_1a2b3c root.Std_k98ojb.Math.GreaterThan {\n            left: a\n            right: b\n        }\n        instance(x: 0, y: 242) lessthanorequal_4d5e6f root.Std_k98ojb.Math.LessThanOrEqual {\n            left: a\n            right: b\n        }\n\n        greaterthan_1a2b3c.result -> and_7a8b9c.left\n        lessthanorequal_4d5e6f.result -> and_7a8b9c.right\n        and_7a8b9c.result -> output_a2b59d\n\n        a_8b3f4d -> greaterthan_1a2b3c.left\n        b_4c2e5f -> greaterthan_1a2b3c.right\n        a_8b3f4d -> lessthanorequal_4d5e6f.left\n        b_4c2e5f -> lessthanorequal_4d5e6f.right\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_9a7c3f root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_9a7c3f.list1\n            difference2_cd5cc4.difference -> concat_9a7c3f.list2\n\n            concat_9a7c3f.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5d2b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -167) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -100) sub_875ddb root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -67) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 200, y: -67) slice_1a38cc root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_5c4634.execute\n        list_0c1a77 -> length_5c4634.list\n        steps_5d2b9f -> modulo_14921d.value\n        length_5c4634.length -> modulo_14921d.divisor\n        modulo_14921d.result -> sub_875ddb.first\n        length_5c4634.length -> sub_875ddb.second\n        sub_875ddb.result -> slice_9ab286.start\n        list_0c1a77 -> slice_9ab286.list\n        -1 -> slice_9ab286.end\n        modulo_14921d.result -> slice_1a38cc.end\n        0 -> slice_1a38cc.start\n        list_0c1a77 -> slice_1a38cc.list\n        slice_9ab286.slice -> concat_9b38cc.left\n        slice_1a38cc.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite sign or not.\") check_opposite_sign {\n        in(x: 24, y: -105, name: \"a\") property(Number) a_3e8f1d\n        in(x: 296, y: -107, name: \"b\") property(Number) b_a3c892\n\n        out(x: 274, y: 145, name: \"output\") property(Bool) output_2a7f1d\n\n        instance(x: 169, y: -107) and_3e9a1b root.Std_k98ojb.Logic.And {}\n        instance(x: 112, y: -245) greaterthan_4e8f1d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 226, y: -247) lessthanorequal_a3c892 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_3e8f1d -> greaterthan_4e8f1d.left\n        b_a3c892 -> greaterthan_4e8f1d.right\n\n        a_3e8f1d -> lessthanorequal_a3c892.left\n        b_a3c892 -> lessthanorequal_a3c892.right\n\n        greaterthan_4e8f1d.result -> and_3e9a1b.input0\n        lessthanorequal_a3c892.result -> and_3e9a1b.input1\n\n        and_3e9a1b.output -> output_2a7f1d\n    }\n\n    instance(x: 165, y: -42) check_opposite_sign_24d4b5 root.main.check_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -167, y: 144) unique_9b3c9b root.List.Flatten {\n            lists: [list_ai]\n        }\n        instance(x: 250, y: 144) filter_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check if item is already in the list.\") IsUnique {\n                in(x: -498, y: 16, name: \"item\") property(Number) item_ai\n                in(x: -250, y: 136, name: \"uniqueList\") property(List) uniqueList_ai\n                out(x: 357, y: 16, name: \"result\") property(Boolean) result_ai\n                instance(x: 48, y: 119) contains_0a3c0a root.List.Contains {\n                    item: item_ai\n                }\n                uniqueList_ai -> contains_0a3c0a.list\n                contains_0a3c0a.contains -> result_ai\n            }\n        }\n        instance(x: 548, y: 146) reduce_a7b2a7 root.Iteration.Reduce {\n            handler: func(doc:\"Multiply two numbers.\") Multiply {\n                in(x: -497, y: 13, name: \"acc\") property(Number) acc_ai\n                in(x: -250, y: 168, name: \"item\") property(Number) item_ai\n                out(x: 357, y: 13, name: \"result\") property(Number) result_ai\n                instance(x: 49, y: 119) mul_2a3b2a root.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                mul_2a3b2a.result -> result_ai\n            }\n        }\n        unique_9b3c9b.list -> filter_7b3b7b.items\n        filter_7b3b7b.output_list -> reduce_a7b2a7.items\n        reduce_a7b2a7.accumulated_value -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -360, y: 21, name: \"list1\") property(List) list1_874d5a\n            in(x: -369, y: 118, name: \"list2\") property(List) list2_b6f7c1\n\n            out(x: 402, y: 72, name: \"output\") property(List) output_68b5e3\n\n            instance(x: -192, y: 120) difference_01 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -184, y: 27) difference_02 root.Std_k98ojb.Sets.Difference {}\n\n            list1_874d5a -> difference_01.left\n            list2_b6f7c1 -> difference_01.right\n\n            list1_874d5a -> difference_02.right\n            list2_b6f7c1 -> difference_02.left\n\n            instance(x: 139, y: 71) concat_01 root.Std_k98ojb.List.Concat {}\n\n            difference_01.difference -> concat_01.list1\n            difference_02.difference -> concat_01.list2\n\n            concat_01.output_list -> output_68b5e3\n        }\n\n        instance(x: 479, y: -13) find_dissimilar_elements_01 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -210, y: 34, name: \"execute\") trigger() execute_85a8b2\n        in(x: -209, y: 168, name: \"list\") property(List) list_1d7f4e\n        in(x: -208, y: 302, name: \"steps\") property(Number) steps_5c7b1a\n\n        out(x: 849, y: 206, name: \"output\") property(List) data_0_0\n        out(x: 818, y: 113, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 576, y: 211) slice_8a3b4e root.Std_k98ojb.List.Slice {}\n        instance(x: 576, y: -103) slice_9d5c79 root.Std_k98ojb.List.Slice {}\n        instance(x: 325, y: 324) length_2f25a8 root.Std_k98ojb.List.Length {}\n        instance(x: 636, y: 10) modulo_1d7e3c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 331, y: -145) sub_24a48c root.Std_k98ojb.Math.Sub {}\n\n        execute_85a8b2 -> length_2f25a8.execute\n        list_1d7f4e -> length_2f25a8.list\n        steps_5c7b1a -> modulo_1d7e3c.value\n        length_2f25a8.length -> modulo_1d7e3c.divisor\n        modulo_1d7e3c.result -> sub_24a48c.first\n        length_2f25a8.length -> sub_24a48c.second\n        sub_24a48c.result -> slice_9d5c79.start\n        -1 -> slice_9d5c79.end\n        list_1d7f4e -> slice_9d5c79.list\n        0 -> slice_8a3b4e.start\n        sub_24a48c.result -> slice_8a3b4e.end\n        list_1d7f4e -> slice_8a3b4e.list\n        slice_9d5c79.slice -> concat_0_0.right\n        slice_8a3b4e.slice -> concat_0_0.left\n        instance(x: 624, y: 113) concat_0_0 root.Std_k98ojb.List.Concat {}\n        concat_0_0.result -> data_0_0\n    }\n\n    \n\n    instance(x: -257, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7d68a5\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_e1e5b8\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: 160) reduce_f4b3c1 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"Reduce handler for summing array elements.\") handler {\n                in(x: -157, y: 224, name: \"execute\") trigger() execute_2f6e0c\n                in(x: -319, y: 88, name: \"acc\") property(Number) acc_f2d31b\n                in(x: -322, y: -56, name: \"item\") property(Number) item_c47a6f\n\n                out(x: 1084, y: 194, name: \"continue\") trigger() continue_485d3e\n                out(x: 1092, y: 116, name: \"output\") property(Number) output_b72c3a\n\n                instance(x: 320, y: 130) add_3b1d8f root.Std_k98ojb.Math.Add {}\n\n                acc_f2d31b -> add_3b1d8f.first\n                item_c47a6f -> add_3b1d8f.second\n                execute_2f6e0c -> add_3b1d8f.execute\n                add_3b1d8f.result -> output_b72c3a\n                add_3b1d8f.result -> continue_485d3e\n            }\n        }\n\n        0 -> reduce_f4b3c1.initial_value\n        numbers_e1e5b8 -> reduce_f4b3c1.items\n        execute_7d68a5 -> reduce_f4b3c1.execute\n        reduce_f4b3c1.output -> output_732a8a\n        reduce_f4b3c1.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -145) floordiv_88f8c7 root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> floordiv_88f8c7.first\n        for_8cb3f6.item -> floordiv_88f8c7.second\n        floordiv_88f8c7.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 136, name: \"a\") property(Int) a_a2b59d\n            in(x: 247, y: 136, name: \"b\") property(Int) b_82d404\n\n            out(x: 126, y: 252, name: \"output\") property(Bool) output_a8e56c\n\n            instance(x: 127, y: 39) mul_3a4b5c root.Std_k98ojb.Math.Mul {}\n            instance(x: 0, y: 235) less_than_or_equal_9d8e5f root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            a_a2b59d -> mul_3a4b5c.first\n            b_82d404 -> mul_3a4b5c.second\n            mul_3a4b5c.result -> less_than_or_equal_9d8e5f.left\n            less_than_or_equal_9d8e5f.right: 0\n            less_than_or_equal_9d8e5f.result -> output_a8e56c\n        }\n\n        instance(x: 271, y: -34) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -34) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_f11fda.value\n        11 -> modulo_f11fda.divisor\n        instance(x: 725, y: -155) equal_8cb3f6 root.Std_k98ojb.Logic.Equal {}\n        modulo_f11fda.result -> equal_8cb3f6.left\n        0 -> equal_8cb3f6.right\n        equal_8cb3f6.result -> out_f3db9f\n        execute_27b8c3 -> equal_8cb3f6.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        input_0 -> replace_306f69.input\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) uniqueList_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: function(doc:\"handler for reducing to unique list.\") UniqueHandler {\n                in(x: -531, y: 2, name: \"acc\") property(List) acc_ai\n                in(x: 0, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(List) output_ai\n                instance(x: 189, y: 207) contains_5o4k root.Std_k98ojb.List.Contains {\n                    item: item_ai\n                }\n                acc_ai -> contains_5o4k.list\n                instance(x: 369, y: 209) if_5o4k root.Std_k98ojb.Std.IfExpression {\n                    expression: \"!contains\"\n                }\n                contains_5o4k.contains -> if_5o4k.contains\n                item_ai -> if_5o4k.item\n                instance(x: 678, y: 209) add_5o4k root.Std_k98ojb.List.Add {\n                    item: item_ai\n                }\n                acc_ai -> add_5o4k.list\n                if_5o4k.then -> add_5o4k.trigger\n                instance(x: 678, y: 309) pass_5o4k root.Std_k98ojb.List.Empty {}\n                if_5o4k.else -> pass_5o4k.trigger\n                acc_ai -> if_5o4k.else\n                add_5o4k.listWithItem -> output_ai\n                pass_5o4k.value -> output_ai\n            }\n        }\n        list_ai -> uniqueList_7b3b7b.items\n        instance(x: 1082, y: 76) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: function(doc:\"handler for calculating product.\") ProductHandler {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: 0, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 189, y: 207) mul_5o4k root.Std_k98ojb.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                mul_5o4k.result -> output_ai\n            }\n        }\n        uniqueList_7b3b7b.value -> product_7b3b7b.items\n        instance(x: 1382, y: 76) firstItem_7b3b7b root.Std_k98ojb.List.FirstItem {}\n        list_ai -> firstItem_7b3b7b.list\n        firstItem_7b3b7b.item -> product_7b3b7b.initialValue\n        product_7b3b7b.value -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_58d71a\n            in(x: -334, y: 106, name: \"list2\") property(List) list2_e2c4f1\n\n            out(x: 441, y: 91, name: \"output\") property(List) output_28d7a4\n\n            instance(x: -135, y: 106) difference_7f6e6b root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 30) difference_48c99f root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 22, y: 187) concat_354d6b root.Std_k98ojb.List.Concat {}\n\n            list1_58d71a -> difference_48c99f.left\n            list2_e2c4f1 -> difference_48c99f.right\n\n            list2_e2c4f1 -> difference_7f6e6b.left\n            list1_58d71a -> difference_7f6e6b.right\n\n            difference_48c99f.difference -> concat_354d6b.list1\n            difference_7f6e6b.difference -> concat_354d6b.list2\n\n            concat_354d6b.output_list -> output_28d7a4\n        }\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -70, name: \"shifts\") property(Number) shifts_2e5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) slice_6d4a9c root.Std_k98ojb.List.Slice {}\n        instance(x: 259, y: 172) slice_3f5c2e root.Std_k98ojb.List.Slice {}\n        instance(x: 404, y: -10) modulo_6a15d7 root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> slice_6d4a9c.execute\n        list_0c1a77 -> slice_6d4a9c.list\n        shifts_2e5b9f -> modulo_6a15d7.value\n        list_0c1a77 -> List.Length {}.list\n        List.Length {}.length -> modulo_6a15d7.divisor\n        modulo_6a15d7.result -> slice_3f5c2e.start\n        modulo_6a15d7.result -> slice_6d4a9c.end\n        list_0c1a77 -> slice_3f5c2e.list\n        -1 -> slice_3f5c2e.end\n        slice_6d4a9c.slice -> concat_9b38cc.left\n        slice_3f5c2e.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5f9e2b\n        in(x: 0, y: -183, name: \"array\") property(List) array_f6d7a4\n\n        out(x: 0, y: -366, name: \"output\") property(Number) output_24c16f\n\n        instance(x: -259, y: -221) reduce_a68bce root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_2d3c78\n                in(x: -154, y: -146, name: \"acc\") property(Number) acc_a3d9b3\n                in(x: -160, y: -338, name: \"item\") property(Number) item_28a67f\n\n                out(x: 153, y: -246, name: \"output\") property(Number) output_f7c09e\n\n                instance(x: -110, y: -245) add_a9b6d2 root.Std_k98ojb.Math.Add {}\n\n                acc_a3d9b3 -> add_a9b6d2.first\n                item_28a67f -> add_a9b6d2.second\n                add_a9b6d2.result -> output_f7c09e\n            }\n        }\n\n        0 -> reduce_a68bce.initial_value\n        array_f6d7a4 -> reduce_a68bce.items\n        execute_5f9e2b -> reduce_a68bce.execute\n        reduce_a68bce.output -> output_24c16f\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1362, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1247, y: -313) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        input_f5c03d -> lessthanorequal_f11fda.left\n        2 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_e19a62.predicate\n        execute_27b8c3 -> if_e19a62.execute\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> not_2f9d09.value\n        not_2f9d09.out -> if_e19a62.then\n        for_8cb3f6.onItem -> if_e19a62.else\n        for_8cb3f6.done -> continue_8ba06b\n        if_e19a62.value -> out_f3db9f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8b3f4d\n        in(x: 679, y: 130, name: \"b\") property(Int) b_4c2e5f\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_7a8b9c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_1a2b3c root.Std_k98ojb.Math.GreaterThan {\n            left: a\n            right: b\n        }\n        instance(x: 0, y: 242) lessthanorequal_4d5e6f root.Std_k98ojb.Math.LessThanOrEqual {\n            left: a\n            right: b\n        }\n\n        greaterthan_1a2b3c.result -> and_7a8b9c.left\n        lessthanorequal_4d5e6f.result -> and_7a8b9c.right\n        and_7a8b9c.result -> output_a2b59d\n\n        a_8b3f4d -> greaterthan_1a2b3c.left\n        b_4c2e5f -> greaterthan_1a2b3c.right\n        a_8b3f4d -> lessthanorequal_4d5e6f.left\n        b_4c2e5f -> lessthanorequal_4d5e6f.right\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_9a7c3f root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_9a7c3f.list1\n            difference2_cd5cc4.difference -> concat_9a7c3f.list2\n\n            concat_9a7c3f.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5d2b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -167) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -100) sub_875ddb root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -67) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 200, y: -67) slice_1a38cc root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_5c4634.execute\n        list_0c1a77 -> length_5c4634.list\n        steps_5d2b9f -> modulo_14921d.value\n        length_5c4634.length -> modulo_14921d.divisor\n        modulo_14921d.result -> sub_875ddb.first\n        length_5c4634.length -> sub_875ddb.second\n        sub_875ddb.result -> slice_9ab286.start\n        list_0c1a77 -> slice_9ab286.list\n        -1 -> slice_9ab286.end\n        modulo_14921d.result -> slice_1a38cc.end\n        0 -> slice_1a38cc.start\n        list_0c1a77 -> slice_1a38cc.list\n        slice_9ab286.slice -> concat_9b38cc.left\n        slice_1a38cc.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite sign or not.\") check_opposite_sign {\n        in(x: 24, y: -105, name: \"a\") property(Number) a_3e8f1d\n        in(x: 296, y: -107, name: \"b\") property(Number) b_a3c892\n\n        out(x: 274, y: 145, name: \"output\") property(Bool) output_2a7f1d\n\n        instance(x: 169, y: -107) and_3e9a1b root.Std_k98ojb.Logic.And {}\n        instance(x: 112, y: -245) greaterthan_4e8f1d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 226, y: -247) lessthanorequal_a3c892 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_3e8f1d -> greaterthan_4e8f1d.left\n        b_a3c892 -> greaterthan_4e8f1d.right\n\n        a_3e8f1d -> lessthanorequal_a3c892.left\n        b_a3c892 -> lessthanorequal_a3c892.right\n\n        greaterthan_4e8f1d.result -> and_3e9a1b.input0\n        lessthanorequal_a3c892.result -> and_3e9a1b.input1\n\n        and_3e9a1b.output -> output_2a7f1d\n    }\n\n    instance(x: 165, y: -42) check_opposite_sign_24d4b5 root.main.check_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -167, y: 144) unique_9b3c9b root.List.Flatten {\n            lists: [list_ai]\n        }\n        instance(x: 250, y: 144) filter_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check if item is already in the list.\") IsUnique {\n                in(x: -269, y: 28, name: \"item\") property(Number) item_ai\n                in(x: -269, y: 103, name: \"seen\") property(List) seen_ai\n                out(x: 474, y: 58, name: \"result\") property(Boolean) result_ai\n                instance(x: 254, y: 142) contains_5b3c9b root.List.Contains {\n                    item: item_ai\n                    list: seen_ai\n                }\n                instance(x: 607, y: 84) not_eb3b7b root.Logic.Not {}\n                contains_5b3c9b.result -> not_eb3b7b.input\n                not_eb3b7b.output -> result_ai\n            }\n        }\n        unique_9b3c9b.flattenedList -> filter_7b3b7b.items\n        instance(x: 460, y: 158) reduce_c23dcb root.Iteration.Reduce {\n            handler: func(doc:\"Multiply the accumulated value with the current item.\") Multiply {\n                in(x: -293, y: 28, name: \"acc\") property(Number) acc_ai\n                in(x: -293, y: 103, name: \"item\") property(Number) item_ai\n                out(x: 474, y: 58, name: \"result\") property(Number) result_ai\n                instance(x: 364, y: 142) mul_9b3c9b root.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                mul_9b3c9b.result -> result_ai\n            }\n        }\n        filter_7b3b7b.output_list -> reduce_c23dcb.items\n        reduce_c23dcb.reducedValue -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -360, y: 21, name: \"list1\") property(List) list1_874d5a\n            in(x: -369, y: 118, name: \"list2\") property(List) list2_b6f7c1\n\n            out(x: 402, y: 72, name: \"output\") property(List) output_68b5e3\n\n            instance(x: -192, y: 120) difference_01 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -184, y: 27) difference_02 root.Std_k98ojb.Sets.Difference {}\n\n            list1_874d5a -> difference_01.left\n            list2_b6f7c1 -> difference_01.right\n\n            list1_874d5a -> difference_02.right\n            list2_b6f7c1 -> difference_02.left\n\n            instance(x: 139, y: 71) concat_01 root.Std_k98ojb.List.Concat {}\n\n            difference_01.difference -> concat_01.list1\n            difference_02.difference -> concat_01.list2\n\n            concat_01.output_list -> output_68b5e3\n        }\n\n        instance(x: 479, y: -13) find_dissimilar_elements_01 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -210, y: 34, name: \"execute\") trigger() execute_85a8b2\n        in(x: -209, y: 168, name: \"list\") property(List) list_1d7f4e\n        in(x: -208, y: 302, name: \"steps\") property(Number) steps_5c7b1a\n\n        out(x: 849, y: 206, name: \"output\") property(List) data_0_0\n        out(x: 818, y: 113, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 576, y: 211) slice_8a3b4e root.Std_k98ojb.List.Slice {}\n        instance(x: 576, y: -103) slice_9d5c79 root.Std_k98ojb.List.Slice {}\n        instance(x: 325, y: 324) length_2f26a1 root.Std_k98ojb.List.Length {}\n        instance(x: 332, y: -20) modulo_4d74e8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 576, y: 85) sub_a3f31c root.Std_k98ojb.Math.Sub {}\n\n        execute_85a8b2 -> length_2f26a1.execute\n        list_1d7f4e -> length_2f26a1.list\n        steps_5c7b1a -> modulo_4d74e8.value\n        length_2f26a1.length -> modulo_4d74e8.divisor\n        modulo_4d74e8.result -> sub_a3f31c.second\n        length_2f26a1.length -> sub_a3f31c.first\n        sub_a3f31c.result -> slice_9d5c79.start\n        0 -> slice_9d5c79.end\n        list_1d7f4e -> slice_9d5c79.list\n        modulo_4d74e8.result -> slice_8a3b4e.start\n        -1 -> slice_8a3b4e.end\n        list_1d7f4e -> slice_8a3b4e.list\n        slice_9d5c79.slice -> data_0_0\n        slice_8a3b4e.slice -> concat_62f3b9.right\n        concat_62f3b9.result -> continue_a7f942\n        instance(x: 576, y: 148) concat_62f3b9 root.Std_k98ojb.List.Concat {}\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7d68a5\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_e1e5b8\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: 160) reduce_f4b3c1 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"Reduce handler for summing array elements.\") handler {\n                in(x: -157, y: 224, name: \"execute\") trigger() execute_2f6e0c\n                in(x: -319, y: 88, name: \"acc\") property(Number) acc_f2d31b\n                in(x: -322, y: -56, name: \"item\") property(Number) item_c47a6f\n\n                out(x: 1084, y: 194, name: \"continue\") trigger() continue_462c5e\n                out(x: 1093, y: 115, name: \"output\") property(Number) output_b7b8f9\n\n                instance(x: 320, y: 115) add_2d3c5a root.Std_k98ojb.Math.Add {}\n                acc_f2d31b -> add_2d3c5a.first\n                item_c47a6f -> add_2d3c5a.second\n                add_2d3c5a.result -> output_b7b8f9\n                execute_2f6e0c -> continue_462c5e\n            }\n        }\n        instance(x: 10, y: -14) initial_value_3d9d1b root.Std_k98ojb.Math.Expression {\n            expression: \"0\"\n        }\n\n        execute_7d68a5 -> reduce_f4b3c1.execute\n        numbers_e1e5b8 -> reduce_f4b3c1.items\n        initial_value_3d9d1b.result -> reduce_f4b3c1.initial\n        reduce_f4b3c1.output -> output_732a8a\n        reduce_f4b3c1.continue -> continue_d9efd7\n\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -145) floordiv_88f8c7 root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> floordiv_88f8c7.first\n        for_8cb3f6.item -> floordiv_88f8c7.second\n        floordiv_88f8c7.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 136, name: \"a\") property(Int) a_a2b59d\n            in(x: 247, y: 136, name: \"b\") property(Int) b_82d404\n\n            out(x: 126, y: 252, name: \"output\") property(Bool) output_a8e56c\n\n            instance(x: 127, y: 39) mul_3a4b5c root.Std_k98ojb.Math.Mul {}\n            instance(x: 0, y: 235) less_than_or_equal_9d8e5f root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            a_a2b59d -> mul_3a4b5c.first\n            b_82d404 -> mul_3a4b5c.second\n            mul_3a4b5c.result -> less_than_or_equal_9d8e5f.left\n            less_than_or_equal_9d8e5f.right: 0\n            less_than_or_equal_9d8e5f.result -> output_a8e56c\n        }\n\n        instance(x: 271, y: -34) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -34) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_f11fda.value\n        11 -> modulo_f11fda.divisor\n        instance(x: 725, y: -155) equal_8cb3f6 root.Std_k98ojb.Logic.Equal {}\n        modulo_f11fda.result -> equal_8cb3f6.left\n        0 -> equal_8cb3f6.right\n        equal_8cb3f6.result -> out_f3db9f\n        execute_27b8c3 -> equal_8cb3f6.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        input_0 -> replace_306f69.input\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) uniqueList_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: function(doc:\"handler for reducing to unique list.\") UniqueHandler {\n                in(x: -531, y: 2, name: \"acc\") property(List) acc_ai\n                in(x: 0, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(List) output_ai\n                instance(x: 189, y: 207) contains_5tj4 root.Std_k98ojb.List.Contains {\n                    item: item_ai\n                }\n                acc_ai -> contains_5tj4.list\n                instance(x: 369, y: 209) ifNotContains_5tj4 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"!contains\"\n                }\n                contains_5tj4.contains -> ifNotContains_5tj4.contains\n                instance(x: 576, y: 165) addToList_5tj4 root.Std_k98ojb.List.Add {\n                    item: item_ai\n                }\n                acc_ai -> addToList_5tj4.list\n                ifNotContains_5tj4.value -> addToList_5tj4.trigger\n                instance(x: 763, y: 162) passAcc_5tj4 root.Std_k98ojb.List.Empty {}\n                acc_ai -> passAcc_5tj4.list\n                ifNotContains_5tj4.value -> passAcc_5tj4.trigger\n                instance(x: 753, y: 260) selectList_5tj4 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"addToList ? addToList.listWithItem : passAcc.list\"\n                }\n                addToList_5tj4.listWithItem -> selectList_5tj4.addToList\n                passAcc_5tj4.list -> selectList_5tj4.passAcc\n                selectList_5tj4.value -> output_ai\n            }\n            initial: []\n        }\n        list_ai -> uniqueList_7b3b7b.items\n        instance(x: 980, y: 162) productOfUniqueNumbers_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: function(doc:\"handler for calculating product.\") ProductHandler {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: 0, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 189, y: 207) multiply_5tj4 root.Std_k98ojb.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                multiply_5tj4.result -> output_ai\n            }\n            initial: 1\n        }\n        uniqueList_7b3b7b.result -> productOfUniqueNumbers_7b3b7b.items\n        productOfUniqueNumbers_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_58d71a\n            in(x: -334, y: 106, name: \"list2\") property(List) list2_e2c4f1\n\n            out(x: 441, y: 91, name: \"output\") property(List) output_28d7a4\n\n            instance(x: -135, y: 106) difference_7f6e6b root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 30) difference_48c99f root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 22, y: 187) concat_358d6b root.Std_k98ojb.List.Concat {}\n\n            list1_58d71a -> difference_48c99f.left\n            list2_e2c4f1 -> difference_48c99f.right\n\n            list2_e2c4f1 -> difference_7f6e6b.left\n            list1_58d71a -> difference_7f6e6b.right\n\n            difference_48c99f.difference -> concat_358d6b.list1\n            difference_7f6e6b.difference -> concat_358d6b.list2\n\n            concat_358d6b.output_list -> output_28d7a4\n        }\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -70, name: \"shifts\") property(Number) shifts_2e5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) slice_6d4a9c root.Std_k98ojb.List.Slice {}\n        instance(x: 259, y: 172) slice_3f5c2e root.Std_k98ojb.List.Slice {}\n        instance(x: 404, y: -10) modulo_6a15d7 root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> slice_6d4a9c.execute\n        list_0c1a77 -> slice_6d4a9c.list\n        shifts_2e5b9f -> modulo_6a15d7.value\n        list_0c1a77 -> List.Length {}.list\n        List.Length {}.length -> modulo_6a15d7.divisor\n        modulo_6a15d7.result -> slice_3f5c2e.start\n        modulo_6a15d7.result -> slice_6d4a9c.end\n        list_0c1a77 -> slice_3f5c2e.list\n        -1 -> slice_3f5c2e.end\n        slice_6d4a9c.slice -> concat_9b38cc.left\n        slice_3f5c2e.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5f9e2b\n        in(x: 0, y: -183, name: \"array\") property(List) array_f6d7a4\n\n        out(x: 0, y: -366, name: \"output\") property(Number) output_24c16f\n\n        instance(x: -259, y: -221) reduce_a68bce root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_2d3c78\n                in(x: -154, y: -146, name: \"acc\") property(Number) acc_a3d9b3\n                in(x: -160, y: -338, name: \"item\") property(Number) item_28a67f\n\n                out(x: 153, y: -246, name: \"output\") property(Number) output_f7c09e\n\n                instance(x: -110, y: -245) add_a9b63d root.Std_k98ojb.Math.Add {}\n\n                acc_a3d9b3 -> add_a9b63d.first\n                item_28a67f -> add_a9b63d.second\n                add_a9b63d.result -> output_f7c09e\n            }\n        }\n\n        0 -> reduce_a68bce.initial_value\n        array_f6d7a4 -> reduce_a68bce.items\n        execute_5f9e2b -> reduce_a68bce.execute\n        reduce_a68bce.output -> output_24c16f\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1362, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1247, y: -313) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        input_f5c03d -> lessthanorequal_f11fda.left\n        2 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_e19a62.predicate\n        execute_27b8c3 -> if_e19a62.execute\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> not_2f9d09.value\n        not_2f9d09.out -> if_e19a62.then\n        for_8cb3f6.onItem -> if_e19a62.else\n        for_8cb3f6.done -> continue_8ba06b\n        if_e19a62.value -> out_f3db9f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f9b1e\n        in(x: 67, y: 130, name: \"b\") property(Int) b_1d8c2f\n\n        out(x: 456, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 251, y: 257) and_82d404 root.Std_k98ojb.Logic.And {}\n        instance(x: 5, y: 346) greaterthan_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -6, y: 129) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f9b1e -> greaterthan_a8e56c.left\n        b_1d8c2f -> greaterthan_a8e56c.right\n\n        a_8f9b1e -> lessthanorequal_a49ae4.left\n        b_1d8c2f -> lessthanorequal_a49ae4.right\n\n        greaterthan_a8e56c.result -> and_82d404.input_0\n        lessthanorequal_a49ae4.result -> and_82d404.input_1\n\n        and_82d404.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_67b2e9\n            in(x: -338, y: 110, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 60, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 60) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: 60) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference_78d487.reverseDifference -> concat_cd5cc4.right\n\n            list1_67b2e9 -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            concat_cd5cc4.output_list -> output_879de6\n        }\n\n        instance(x: 430, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -110, name: \"steps\") property(Number) steps_2b5e9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 450, y: -16) slice_7c8d2f root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -16) length_1e1b3a root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: 167) slice_7c8d2f_1 root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: 167) modulo_3e1a2b root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> length_1e1b3a.execute\n        list_0c1a77 -> length_1e1b3a.list\n        steps_2b5e9f -> modulo_3e1a2b.value\n        length_1e1b3a.length -> modulo_3e1a2b.divisor\n        modulo_3e1a2b.result -> slice_7c8d2f.start\n        modulo_3e1a2b.result -> slice_7c8d2f_1.end\n        list_0c1a77 -> slice_7c8d2f.list\n        list_0c1a77 -> slice_7c8d2f_1.list\n        0 -> slice_7c8d2f_1.start\n        -1 -> slice_7c8d2f.end\n        concat_9b38cc.left -> data_0_0\n        slice_7c8d2f.result -> concat_9b38cc.right\n        slice_7c8d2f_1.result -> concat_9b38cc.left\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 5, y: 10, name: \"a\") property(Int) a_7b8e2c\n        in(x: 394, y: 6, name: \"b\") property(Int) b_1f6d9a\n\n        out(x: 395, y: 162, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 187, y: 40) and_c9e234 root.Std_k98ojb.Logic.And {}\n        instance(x: 124, y: 162) not_4c9a7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 125, y: 80) less_than_or_equal_18909a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 324, y: 80) greater_than_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n\n        a_7b8e2c -> less_than_or_equal_18909a.left\n        b_1f6d9a -> less_than_or_equal_18909a.right\n        less_than_or_equal_18909a.result -> not_4c9a7f.input\n\n        a_7b8e2c -> greater_than_a8e56c.left\n        b_1f6d9a -> greater_than_a8e56c.right\n\n        not_4c9a7f.output -> and_c9e234.left\n        greater_than_a8e56c.result -> and_c9e234.right\n\n        and_c9e234.result -> output_a2b59d\n    }\n\n    instance(x: 10, y: -10) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 504, y: -76) modulo_2d7a5e root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_2d7a5e.value\n        11 -> modulo_2d7a5e.divisor\n        instance(x: 464, y: -180) equal_b2c9f7 root.Std_k98ojb.Logic.Equal {}\n        modulo_2d7a5e.result -> equal_b2c9f7.left\n        0 -> equal_b2c9f7.right\n        instance(x: 643, y: -11) if_8cb3f6 root.Std_k98ojb.Std.If {}\n        equal_b2c9f7.result -> if_8cb3f6.predicate\n        if_8cb3f6.execute -> out_f3db9f\n        true -> if_8cb3f6.then\n        false -> if_8cb3f6.else\n        execute_27b8c3 -> if_8cb3f6.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_987f32 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_987f32.input\n        search_0 -> replace_987f32.search\n        replace_0 -> replace_987f32.replace\n        replace_987f32.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -215, y: 144) unique_9b3c7b root.Iteration.Reduce {\n            handler: func(doc:\"Handler function for reducing the list.\") Handler {\n                in(x: -486, y: 20, name: \"acc\") property(Number) acc_ai\n                in(x: -156, y: 19, name: \"item\") property(Number) item_ai\n                out(x: 374, y: 77, name: \"result\") property(Number) result_ai\n                instance(x: 208, y: 75) multiply_3c4d8b root.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                multiply_3c4d8b.result -> result_ai\n            }\n        }\n        instance(x: -196, y: 206) distinct_7b3c7b root.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n        distinct_7b3c7b.difference -> unique_9b3c7b.items\n        unique_9b3c7b.result -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n            in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -121, y: -71) difference_a_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: -77) difference_b_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 300, y: -77) concat_gh5dcd root.Std_k98ojb.List.Concat {}\n\n            list1_016b2e -> difference_a_78d487.left\n            list2_c8f404 -> difference_a_78d487.right\n\n            list2_c8f404 -> difference_b_cd5cc4.left\n            list1_016b2e -> difference_b_cd5cc4.right\n\n            difference_a_78d487.difference -> concat_gh5dcd.list1\n            difference_b_cd5cc4.difference -> concat_gh5dcd.list2\n\n            concat_gh5dcd.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -230, y: 145, name: \"execute\") trigger() execute_8d7a2b\n        in(x: -264, y: 94, name: \"list\") property(List) list_c4e5c4\n        in(x: -273, y: 201, name: \"positions\") property(Number) positions_384d8a\n\n        out(x: 846, y: 149, name: \"output\") property(List) data_0_0\n        out(x: 825, y: 70, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: -13, y: 146) modulo_4a7c9b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 228, y: 150) slice_5e5d2f root.Std_k98ojb.List.Slice {}\n        instance(x: 438, y: 150) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: 6, y: -64, name: \"setter_8c6eda\") setter_8c6eda = zeroList\n        instance(x: 275, y: 100) length_c53e1a root.Std_k98ojb.List.Length {}\n        getter(x: 406, y: 100, name: \"getter_e808a2\") getter_e808a2 = zeroList\n        setter(x: 275, y: -223, name: \"setter_95dd4c\") setter_95dd4c = zeroList\n\n        execute_8d7a2b -> length_c53e1a.execute\n        list_c4e5c4 -> length_c53e1a.list\n        length_c53e1a.length -> modulo_4a7c9b.value\n        positions_384d8a -> modulo_4a7c9b.divisor\n        modulo_4a7c9b.result -> setter_95dd4c.new_value\n        list_c4e5c4 -> slice_5e5d2f.list\n        setter_95dd4c.continue -> slice_5e5d2f.start\n        length_c53e1a.length -> getter_e808a2.value\n        getter_e808a2.value -> concat_9b38cc.right\n        0 -> slice_5e5d2f.end\n        slice_5e5d2f.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7d68a5\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_e1e3b8\n\n        out(x: 1154, y: 129, name: \"output\") property(Number) output_3d7f6c\n        out(x: 1154, y: 209, name: \"done\") trigger() done_d7d9a8\n\n        instance(x: -117, y: 133) reduce_c4e42c root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_86579c {\n                in(x: -100, y: 119, name: \"execute\") trigger() execute_4d5a53\n                in(x: -120, y: 37, name: \"acc\") property(Number) acc_ae8f6a\n                in(x: -122, y: 175, name: \"item\") property(Number) item_e9c4b9\n\n                out(x: 121, y: 103, name: \"output\") property(Number) output_8e4f6a\n                out(x: 121, y: 175, name: \"done\") trigger() done_c4d8a9\n\n                instance(x: -34, y: 105) add_1b1c7c root.Std_k98ojb.Math.Add {}\n\n                acc_ae8f6a -> add_1b1c7c.first\n                item_e9c4b9 -> add_1b1c7c.second\n                execute_4d5a53 -> add_1b1c7c.execute\n                add_1b1c7c.result -> output_8e4f6a\n            }\n        }\n\n        0 -> reduce_c4e42c.init_value\n        numbers_e1e3b8 -> reduce_c4e42c.items\n        execute_7d68a5 -> reduce_c4e42c.execute\n        reduce_c4e42c.output -> output_3d7f6c\n        reduce_c4e42c.done -> done_d7d9a8\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -245) floordiv_8e5d8c root.Std_k98ojb.Math.FloorDiv {}\n        instance(x: 307, y: -345) sqrt_ea1f9d root.Std_k98ojb.Math.Sqrt {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        sqrt_ea1f9d.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> floordiv_8e5d8c.first\n        1 -> floordiv_8e5d8c.second\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> out_f3db9f\n        input_f5c03d -> sqrt_ea1f9d.value\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 169, name: \"a\") property(Int) a_faf6c2\n            in(x: 183, y: 169, name: \"b\") property(Int) b_a2b59d\n\n            out(x: 378, y: 169, name: \"output\") property(Bool) output_4a8e5c\n\n            instance(x: 0, y: 0) mul_7d9a8f root.Std_k98ojb.Math.Mul {}\n            instance(x: 237, y: -1) lt_18909a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            a_faf6c2 -> mul_7d9a8f.first\n            b_a2b59d -> mul_7d9a8f.second\n            mul_7d9a8f.result -> lt_18909a.left\n            lt_18909a.right: -1\n            lt_18909a.result -> output_4a8e5c\n        }\n\n        instance(x: 36, y: -257) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -493) modulo_f62a89 root.Std_k98ojb.Math.Modulo {}\n\n        input_f5c03d -> modulo_f62a89.value\n        11 -> modulo_f62a89.divisor\n        modulo_f62a89.result -> out_f3db9f\n        execute_27b8c3 -> modulo_f62a89.trigger\n    }\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_0\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 25) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Convert the given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 168, y: 169) unique_numbers_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: function(doc:\"reduce to unique numbers.\") UniqueReducer {\n                in(x: -531, y: 2, name: \"accumulator\") property(List) accumulator_ai\n                in(x: 403, y: 2, name: \"current\") property(Number) current_ai\n                out(x: 340, y: 77, name: \"output_list\") property(List) output_list_ai\n\n                instance(x: 195, y: 169) contains_7b3b7b root.Std_k98ojb.List.Contains {\n                    item: current_ai\n                }\n                accumulator_ai -> contains_7b3b7b.list\n                contains_7b3b7b.contains -> if_expression_a5e4a5.root.Std_k98ojb.Std.IfExpression {\n                    expression: \"!it\"\n                }\n                current_ai -> add_item_b1c1b1.root.Std_k98ojb.List.Add {\n                    list: accumulator_ai\n                }\n                if_expression_a5e4a5.value -> if_6f7d6f.root.Std_k98ojb.Std.If {\n                    then: add_item_b1c1b1.trigger\n                }\n                if_6f7d6f.then -> output_list_ai\n                accumulator_ai -> if_6f7d6f.else\n                if_6f7d6f.else -> output_list_ai\n            }\n        }\n\n        instance(x: 305, y: 298) product_4a5c4a root.Std_k98ojb.Iteration.Reduce {\n            reducer: function(doc:\"calculate the product.\") ProductReducer {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: 403, y: 2, name: \"current\") property(Number) current_ai\n                out(x: 340, y: 77, name: \"output_value\") property(Number) output_value_ai\n\n                instance(x: 195, y: 169) multiply_7b3b7b root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: current_ai\n                }\n                multiply_7b3b7b.result -> output_value_ai\n            }\n            initial: 1\n        }\n\n        list_ai -> unique_numbers_7b3b7b.list\n        unique_numbers_7b3b7b.result -> product_4a5c4a.list\n        product_4a5c4a.result -> output_ai\n    }"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: -341, y: 29, name: \"list1\") property(List) list1_085f47\n        in(x: -362, y: 148, name: \"list2\") property(List) list2_a5e1d8\n\n        out(x: 503, y: 91, name: \"output\") property(List) output_5c42b2\n\n        instance(x: -167, y: 94) difference_1_c0b99f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -163, y: 228) difference_2_f5e1c7 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 85, y: 164) concat_c0a6d7 root.Std_k98ojb.List.Concat {}\n\n        list1_085f47 -> difference_1_c0b99f.left\n        list2_a5e1d8 -> difference_1_c0b99f.right\n        list1_085f47 -> difference_2_f5e1c7.right\n        list2_a5e1d8 -> difference_2_f5e1c7.left\n\n        difference_1_c0b99f.difference -> concat_c0a6d7.list1\n        difference_2_f5e1c7.difference -> concat_c0a6d7.list2\n\n        concat_c0a6d7.concatenated_list -> output_5c42b2\n    }\n\n    \n\n    instance(x: 389, y: -4) find_dissimilar_elements_1f1e47 root.main.find_dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -154, y: 23, name: \"execute\") trigger() execute_30d89a\n        in(x: -270, y: 215, name: \"list\") property(List) list_a3b6e9\n        in(x: -271, y: 419, name: \"positions\") property(Number) positions_e4128f\n\n        out(x: 949, y: 238, name: \"output\") property(List) data_0_0\n        out(x: 563, y: -273, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: -107, y: 381) modulo_3a44e4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -35, y: 672) length_3677c4 root.Std_k98ojb.List.Length {}\n        instance(x: 303, y: 147) slice_e22e82 root.Std_k98ojb.List.Slice {}\n        instance(x: 598, y: 433) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -60, y: 107) sub_6a5d21 root.Std_k98ojb.Math.Sub {}\n\n        execute_30d89a -> length_3677c4.execute\n        list_a3b6e9 -> length_3677c4.list\n        positions_e4128f -> modulo_3a44e4.value\n        length_3677c4.result -> modulo_3a44e4.divisor\n        sub_6a5d21.first -> length_3677c4.result\n        modulo_3a44e4.result -> sub_6a5d21.second\n        list_a3b6e9 -> slice_e22e82.list\n        modulo_3a44e4.result -> slice_e22e82.start\n        -1 -> slice_e22e82.end\n        list_a3b6e9 -> concat_9b38cc.left\n        sub_6a5d21.result -> slice_e22e82.start\n        0 -> slice_e22e82.end\n        continue_a7f942 -> concat_9b38cc.execute\n        slice_e22e82.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -531, y: 16) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5c2f1e\n        in(x: 96, y: 37, name: \"numbers\") property(List) numbers_c8d6a4\n\n        out(x: 315, y: -11, name: \"sum\") property(Number) sum_e02b4f\n\n        instance(x: 133, y: 95) add_49e738 root.Std_k98ojb.Math.Add {}\n        instance(x: 163, y: -3) reduce_f03c7d root.Std_k98ojb.Iteration.Reduce {\n            handler: ref(add_49e738)\n        }\n        0 -> reduce_f03c7d.initial\n        numbers_c8d6a4 -> reduce_f03c7d.items\n        execute_5c2f1e -> reduce_f03c7d.trigger\n        add_49e738.first -> reduce_f03c7d.accumulator\n        add_49e738.second -> reduce_f03c7d.value\n        reduce_f03c7d.result -> sum_e02b4f\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) greaterthan_f11fda root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 423, y: -478) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n\n        input_f5c03d -> greaterthan_f11fda.left\n        2 -> greaterthan_f11fda.right\n        greaterthan_f11fda.result -> out_f3db9f\n\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n\n        expression_b720d7.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> out_f3db9f\n\n        execute_27b8c3 -> for_8cb3f6.reset\n        1 -> add_b4554f.first\n        input_f5c03d -> add_b4554f.second\n        add_b4554f.result -> greaterthan_f11fda.left\n\n        input_f5c03d -> out_f3db9f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8b3f4d\n        in(x: 679, y: 130, name: \"b\") property(Int) b_4c7e5f\n\n        out(x: 203, y: -192, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_8a7b6c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_a49ae4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: 242) lessthanorequal_18909a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        greaterthan_a49ae4.result -> and_8a7b6c.left\n        lessthanorequal_18909a.result -> and_8a7b6c.right\n        and_8a7b6c.output -> output_a2b59d\n\n        a_8b3f4d -> greaterthan_a49ae4.left\n        b_4c7e5f -> greaterthan_a49ae4.right\n        a_8b3f4d -> lessthanorequal_18909a.left\n        b_4c7e5f -> lessthanorequal_18909a.right\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_9a7c3f root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_9a7c3f.list1\n            difference2_cd5cc4.difference -> concat_9a7c3f.list2\n\n            concat_9a7c3f.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -110, name: \"steps\") property(Number) steps_2d5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 450, y: -16) slice_7f8d9c root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -16) length_1e2b3a root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: 167) slice_7f8d9c_1 root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: 167) mod_3a4b5c root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> length_1e2b3a.execute\n        list_0c1a77 -> length_1e2b3a.list\n        steps_2d5b9f -> mod_3a4b5c.value\n        length_1e2b3a.length -> mod_3a4b5c.divisor\n        mod_3a4b5c.result -> slice_7f8d9c.start\n        mod_3a4b5c.result -> slice_7f8d9c_1.end\n        list_0c1a77 -> slice_7f8d9c.list\n        list_0c1a77 -> slice_7f8d9c_1.list\n        0 -> slice_7f8d9c_1.start\n        -1 -> slice_7f8d9c.end\n        slice_7f8d9c.result -> concat_9b38cc.left\n        slice_7f8d9c_1.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 5, y: 10, name: \"a\") property(Int) a_7c3d89\n        in(x: 240, y: 10, name: \"b\") property(Int) b_2e4f6a\n\n        out(x: 410, y: 10, name: \"output\") property(Bool) output_b5c7d8\n\n        instance(x: 135, y: 10) and_9a8b7c root.Std_k98ojb.Logic.And {}\n        instance(x: 240, y: -60) not_1f2g3h root.Std_k98ojb.Logic.Not {}\n        instance(x: 350, y: -60) greaterthan_a8b9c7 root.Std_k98ojb.Math.GreaterThan {}\n\n        a_7c3d89 -> greaterthan_a8b9c7.left\n        b_2e4f6a -> not_1f2g3h.input\n        b_2e4f6a -> greaterthan_a8b9c7.right\n        not_1f2g3h.output -> and_9a8b7c.left\n        greaterthan_a8b9c7.result -> and_9a8b7c.right\n        and_9a8b7c.output -> output_b5c7d8\n    }\n\n    instance(x: 10, y: -20) check_opposite_signs_3f4g5h root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 587, y: -155) modulo_e2a2c1 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_e2a2c1.value\n        11 -> modulo_e2a2c1.divisor\n        instance(x: 743, y: -155) equal_0e169a root.Std_k98ojb.Logic.Equal {}\n        modulo_e2a2c1.result -> equal_0e169a.left\n        0 -> equal_0e169a.right\n        equal_0e169a.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_987f32 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_987f32.input\n        search_0 -> replace_987f32.search\n        replace_0 -> replace_987f32.replace\n        replace_987f32.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -212, y: 144) unique_list root.Std_k98ojb.List.Flatten {\n            lists: []\n        }\n        instance(x: 379, y: 150) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        list_ai -> unique_list.lists\n        unique_list.flattenedList -> reduce_product.items\n        reduce_product.output -> product_ai\n    }\n\n    instance(x: -245, y: 367) unique_product_node root.main.UniqueProduct {}"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n            in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -121, y: -71) difference_a7b3d5 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: -77) difference_b4c5e6 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: -77) concat_3d5f78 root.Std_k98ojb.List.Concat {}\n\n            list1_016b2e -> difference_a7b3d5.left\n            list2_c8f404 -> difference_a7b3d5.right\n\n            list1_016b2e -> difference_b4c5e6.right\n            list2_c8f404 -> difference_b4c5e6.left\n\n            difference_a7b3d5.difference -> concat_3d5f78.list1\n            difference_b4c5e6.difference -> concat_3d5f78.list2\n\n            concat_3d5f78.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -230, y: 145, name: \"execute\") trigger() execute_8d7a4b\n        in(x: -264, y: 94, name: \"list\") property(List) list_f45e7f\n        in(x: -273, y: 201, name: \"positions\") property(Number) positions_285c7a\n\n        out(x: 846, y: 149, name: \"output\") property(List) data_0_0\n        out(x: 827, y: 39, name: \"continue\") trigger() continue_b0f9e5\n\n        instance(x: -103, y: 263) length_a4c3d8 root.Std_k98ojb.List.Length {}\n        instance(x: 353, y: 178) slice_54a689 root.Std_k98ojb.List.Slice {}\n        instance(x: -102, y: 353) modulo_b8f37c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 355, y: 334) slice_6e1d8c root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: 176) concat_a732b9 root.Std_k98ojb.List.Concat {}\n\n        execute_8d7a4b -> length_a4c3d8.execute\n        list_f45e7f -> length_a4c3d8.list\n        positions_285c7a -> modulo_b8f37c.value\n        length_a4c3d8.length -> modulo_b8f37c.divisor\n        modulo_b8f37c.result -> slice_6e1d8c.start\n        list_f45e7f -> slice_6e1d8c.list\n        -1 -> slice_6e1d8c.end\n        slice_6e1d8c.slice -> concat_a732b9.right\n        0 -> slice_54a689.start\n        modulo_b8f37c.result -> slice_54a689.end\n        list_f45e7f -> slice_54a689.list\n        slice_54a689.slice -> concat_a732b9.left\n        concat_a732b9.result -> data_0_0\n    }\n\n    \n\n    instance(x: -179, y: 11) rotate_list_defc95 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7f6e8a\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_b0c3d4\n\n        out(x: 1154, y: 129, name: \"output\") property(Number) output_3b768f\n        out(x: 1159, y: 315, name: \"done\") trigger() done_c2e8d9\n\n        instance(x: -104, y: 246) reduce_e3a7f1 root.Std_k98ojb.Iteration.Reduce {\n            handler: (acc: Number, item: Number) => acc + item\n        }\n        setter(x: 1050, y: 198, name: \"setter_1e4f2d\") setter_1e4f2d = sum\n        getter(x: 1063, y: 147, name: \"getter_1a3b4c\") getter_1a3b4c = sum\n\n        numbers_b0c3d4 -> reduce_e3a7f1.items\n        execute_7f6e8a -> setter_1e4f2d.execute\n        0 -> setter_1e4f2d.new_value\n        setter_1e4f2d.continue -> reduce_e3a7f1.trigger\n        reduce_e3a7f1.output_list -> getter_1a3b4c.value\n        getter_1a3b4c.value -> output_3b768f\n        reduce_e3a7f1.done -> done_c2e8d9\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -245) floordiv_83f84c root.Std_k98ojb.Math.FloorDiv {}\n        instance(x: 307, y: -344) sqrt_e41d8c root.Std_k98ojb.Math.Sqrt {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        sqrt_e41d8c.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        input_f5c03d -> floordiv_83f84c.first\n        for_8cb3f6.item -> floordiv_83f84c.second\n        floordiv_83f84c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> sqrt_e41d8c.value\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 169, name: \"a\") property(Int) a_eb5d1c\n            in(x: -378, y: 210, name: \"b\") property(Int) b_846f4e\n\n            out(x: 364, y: 129, name: \"output\") property(Bool) output_d55c8a\n\n            instance(x: -377, y: 22) expression_cb9b34 root.Std_k98ojb.Math.Expression {\n                expression: \"(a < 0) != (b < 0)\"\n            }\n\n            a_eb5d1c -> expression_cb9b34.a\n            b_846f4e -> expression_cb9b34.b\n            expression_cb9b34.result -> output_d55c8a\n        }\n\n        instance(x: -207, y: -34) check_opposite_signs_a1c02b root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -493) modulo_ffd6a8 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_ffd6a8.value\n        11 -> modulo_ffd6a8.divisor\n        modulo_ffd6a8.result -> out_f3db9f\n        execute_27b8c3 -> modulo_ffd6a8.trigger\n    }\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_0\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 25) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Convert the given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 168, y: 169) unique_numbers_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc:\"reduce function to collect unique numbers.\") UniqueReducer {\n                in(x: -542, y: 303, name: \"accumulator\") property(List) accumulator_ai\n                in(x: -188, y: 307, name: \"value\") property(Number) value_ai\n                out(x: 136, y: 391, name: \"output\") property(List) output_ai\n\n                instance(x: -124, y: 440) contains_7b3b7b root.Std_k98ojb.List.Contains {\n                    item: value_ai\n                }\n                accumulator_ai -> contains_7b3b7b.list\n                instance(x: 465, y: 556) if_7b3b7b root.Std_k98ojb.Std.If {\n                    input: contains_7b3b7b.contains\n                }\n                value_ai -> if_7b3b7b.else\n                accumulator_ai -> if_7b3b7b.then\n                instance(x: 265, y: 610) add_7b3b7b root.Std_k98ojb.List.Add {\n                    item: value_ai\n                }\n                contains_7b3b7b.contains -> if_7b3b7b.else\n                accumulator_ai -> if_7b3b7b.then\n                value_ai -> add_7b3b7b.item\n                if_7b3b7b.else -> output_ai\n                add_7b3b7b.listWithItem -> if_7b3b7b.then\n            }\n        }\n\n        list_ai -> unique_numbers_7b3b7b.items\n\n        instance(x: 256, y: 410) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc:\"reduce function to calculate the product.\") ProductReducer {\n                in(x: -542, y: 303, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -188, y: 307, name: \"value\") property(Number) value_ai\n                out(x: 136, y: 391, name: \"output\") property(Number) output_ai\n\n                instance(x: 243, y: 504) mul_7b3b7b root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: value_ai\n                }\n                mul_7b3b7b.result -> output_ai\n            }\n\n            initial_value: 1\n        }\n        unique_numbers_7b3b7b.result -> product_7b3b7b.items\n\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: -341, y: 28, name: \"list1\") property(List) list1_0a5e82\n        in(x: -369, y: 122, name: \"list2\") property(List) list2_a5d7b1\n\n        out(x: 479, y: 100, name: \"output\") property(List) output_5c7b81\n\n        instance(x: -136, y: 66) difference_1_cbd15c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -142, y: 208) difference_2_a02b9f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 213, y: 165) concat_caf7c2 root.Std_k98ojb.List.Concat {}\n        list1_0a5e82 -> difference_1_cbd15c.left\n        list2_a5d7b1 -> difference_1_cbd15c.right\n        list2_a5d7b1 -> difference_2_a02b9f.left\n        list1_0a5e82 -> difference_2_a02b9f.right\n        difference_1_cbd15c.difference -> concat_caf7c2.list1\n        difference_2_a02b9f.difference -> concat_caf7c2.list2\n        concat_caf7c2.output_list -> output_5c7b81\n    }\n\n    \n\n    instance(x: 427, y: -163) find_dissimilar_elements_a74e30 root.main.find_dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -154, y: 213, name: \"execute\") trigger() execute_0e88a3\n        in(x: -196, y: -21, name: \"list\") property(List) list_f7f8a7\n        in(x: -184, y: 151, name: \"positions\") property(Number) positions_ddcbe1\n\n        out(x: 836, y: 209, name: \"output\") property(List) output_8da35d\n        out(x: 787, y: 25, name: \"continue\") trigger() continue_b3afae\n\n        instance(x: -14, y: 68) length_cdfcc0 root.Std_k98ojb.List.Length {}\n        instance(x: 337, y: -14) mathexpression_e1f45a root.Std_k98ojb.Math.Expression {\n            expression: \"length - positions\"\n        }\n        instance(x: 626, y: 0) slice_0a8fc9 root.Std_k98ojb.List.Slice {}\n        instance(x: 347, y: 138) mathexpression_56720f root.Std_k98ojb.Math.Expression {\n            expression: \"positions % length\"\n        }\n        setter(x: 6, y: -206, name: \"setter_4c7aae\") setter_4c7aae = positions\n        instance(x: 316, y: -195) ifexpression_d48aef root.Std_k98ojb.Std.IfExpression {\n            expression: \"positions > length\"\n        }\n        getter(x: 290, y: -185, name: \"getter_4f7d74\") getter_4f7d74 = positions\n        instance(x: 637, y: 143) slice_6ccbbf root.Std_k98ojb.List.Slice {}\n        setter(x: 206, y: -243, name: \"setter_54aaee\") setter_54aaee = positions\n        getter(x: 75, y: -148, name: \"getter_befc87\") getter_befc87 = positions\n        instance(x: 609, y: 302) concat_e0d9e0 root.Std_k98ojb.List.Concat {}\n        setter_4c7aae.continue -> ifexpression_d48aef.execute\n        execute_0e88a3 -> setter_4c7aae.execute\n        list_f7f8a7 -> length_cdfcc0.list\n        positions_ddcbe1 -> getter_befc87.value\n        length_cdfcc0.length -> mathexpression_e1f45a.gen_0\n        ifexpression_d48aef.then -> setter_54aaee.execute\n        ifexpression_d48aef.else -> mathexpression_56720f.execute\n        positions_ddcbe1 -> getter_4f7d74.value\n        length_cdfcc0.length -> mathexpression_56720f.gen_0\n        setter_54aaee.continue -> mathexpression_56720f.execute\n        list_f7f8a7 -> slice_0a8fc9.list\n        mathexpression_e1f45a.result -> slice_0a8fc9.start\n        0 -> slice_0a8fc9.end\n        mathexpression_56720f.result -> slice_6ccbbf.start\n        length_cdfcc0.length -> slice_6ccbbf.end\n        list_f7f8a7 -> slice_6ccbbf.list\n        slice_6ccbbf.result -> concat_e0d9e0.right\n        slice_0a8fc9.result -> concat_e0d9e0.left\n        concat_e0d9e0.result -> output_8da35d\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def8f9 root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5c213e\n        in(x: 486, y: -297, name: \"numbers\") property(List) numbers_b8b6a3\n\n        out(x: 1017, y: -225, name: \"output\") property(Number) output_e4ae8c\n\n        instance(x: 464, y: -558) reduce_d3e18f root.Std_k98ojb.Iteration.Reduce {\n            handler: function(result: Number, item: Number) -> Math.Add.result {\n                in(x: 0, y: 0) trigger() execute_59e276\n                in(x: 264, y: -136, name: \"result\") property(Number) result_eb1c8a\n                in(x: 274, y: -282, name: \"item\") property(Number) item_28d49a\n\n                out(x: 506, y: -238, name: \"result\") property(Number) result_b1f9a6\n\n                instance(x: 277, y: -424) add_a9b0c7 root.Std_k98ojb.Math.Add {}\n\n                item_28d49a -> add_a9b0c7.first\n                result_eb1c8a -> add_a9b0c7.second\n                add_a9b0c7.result -> result_b1f9a6\n            }\n        }\n\n        0 -> reduce_d3e18f.initial_value\n        execute_5c213e -> reduce_d3e18f.execute\n        numbers_b8b6a3 -> reduce_d3e18f.items\n        reduce_d3e18f.output_list -> output_e4ae8c\n\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: 264) mod_b12b3a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        input_f5c03d -> lessthanorequal_f11fda.right\n        2 -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_8ba06b\n        input_f5c03d -> mod_b12b3a.value\n        for_8cb3f6.item -> mod_b12b3a.divisor\n        mod_b12b3a.result -> if_07b8c7.value\n        if_07b8c7.execute -> if_07b8c7.else\n        if_07b8c7.then -> out_f3db9f\n        for_8cb3f6.onItem -> mod_b12b3a.trigger\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8b3f4d\n        in(x: 679, y: 130, name: \"b\") property(Int) b_4c7e5f\n\n        out(x: 203, y: -192, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_8a7b6c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_a49ae4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: 242) lessthanorequal_18909a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        greaterthan_a49ae4.result -> and_8a7b6c.left\n        lessthanorequal_18909a.result -> and_8a7b6c.right\n        and_8a7b6c.output -> output_a2b59d\n\n        a_8b3f4d -> greaterthan_a49ae4.left\n        b_4c7e5f -> greaterthan_a49ae4.right\n        a_8b3f4d -> lessthanorequal_18909a.left\n        b_4c7e5f -> lessthanorequal_18909a.right\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_9a7c3f root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_9a7c3f.list1\n            difference2_cd5cc4.difference -> concat_9a7c3f.list2\n\n            concat_9a7c3f.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -110, name: \"steps\") property(Number) steps_2d5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 450, y: -16) slice_7f8d9c root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -16) length_1e2b3a root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: 167) slice_7f8d9c_1 root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: 167) mod_3a4b5c root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> length_1e2b3a.execute\n        list_0c1a77 -> length_1e2b3a.list\n        steps_2d5b9f -> mod_3a4b5c.value\n        length_1e2b3a.length -> mod_3a4b5c.divisor\n        mod_3a4b5c.result -> slice_7f8d9c.start\n        mod_3a4b5c.result -> slice_7f8d9c_1.end\n        list_0c1a77 -> slice_7f8d9c.list\n        list_0c1a77 -> slice_7f8d9c_1.list\n        0 -> slice_7f8d9c_1.start\n        -1 -> slice_7f8d9c.end\n        slice_7f8d9c.result -> concat_9b38cc.left\n        slice_7f8d9c_1.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 5, y: 10, name: \"a\") property(Int) a_7c3d89\n        in(x: 240, y: 10, name: \"b\") property(Int) b_2e4f6a\n\n        out(x: 410, y: 10, name: \"output\") property(Bool) output_b5c7d8\n\n        instance(x: 135, y: 10) and_9a8b7c root.Std_k98ojb.Logic.And {}\n        instance(x: 240, y: -60) not_1f2g3h root.Std_k98ojb.Logic.Not {}\n        instance(x: 350, y: -60) greaterthan_a8b9c7 root.Std_k98ojb.Math.GreaterThan {}\n\n        a_7c3d89 -> greaterthan_a8b9c7.left\n        b_2e4f6a -> not_1f2g3h.input\n        b_2e4f6a -> greaterthan_a8b9c7.right\n        not_1f2g3h.output -> and_9a8b7c.left\n        greaterthan_a8b9c7.result -> and_9a8b7c.right\n        and_9a8b7c.output -> output_b5c7d8\n    }\n\n    instance(x: 10, y: -20) check_opposite_signs_3f4g5h root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 587, y: -155) modulo_e2a2c1 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_e2a2c1.value\n        11 -> modulo_e2a2c1.divisor\n        instance(x: 743, y: -155) equal_0e169a root.Std_k98ojb.Logic.Equal {}\n        modulo_e2a2c1.result -> equal_0e169a.left\n        0 -> equal_0e169a.right\n        equal_0e169a.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_987f32 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_987f32.input\n        search_0 -> replace_987f32.search\n        replace_0 -> replace_987f32.replace\n        replace_987f32.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -212, y: 144) unique_list root.Std_k98ojb.List.Flatten {\n            lists: []\n        }\n        instance(x: 379, y: 150) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        list_ai -> unique_list.lists\n        unique_list.flattenedList -> reduce_product.items\n        reduce_product.output -> product_ai\n    }\n\n    instance(x: -245, y: 367) unique_product_node root.main.UniqueProduct {}"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n            in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -121, y: -71) difference_a7b3d5 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: -77) difference_b4c5e6 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: -77) concat_3d5f78 root.Std_k98ojb.List.Concat {}\n\n            list1_016b2e -> difference_a7b3d5.left\n            list2_c8f404 -> difference_a7b3d5.right\n\n            list1_016b2e -> difference_b4c5e6.right\n            list2_c8f404 -> difference_b4c5e6.left\n\n            difference_a7b3d5.difference -> concat_3d5f78.list1\n            difference_b4c5e6.difference -> concat_3d5f78.list2\n\n            concat_3d5f78.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -230, y: 145, name: \"execute\") trigger() execute_8d7a4b\n        in(x: -264, y: 94, name: \"list\") property(List) list_f45e7f\n        in(x: -273, y: 201, name: \"positions\") property(Number) positions_285d8a\n\n        out(x: 846, y: 149, name: \"output\") property(List) data_0_0\n        out(x: 827, y: 39, name: \"continue\") trigger() continue_b9f9c8\n\n        instance(x: -54, y: 150) modulo_f1a63b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 153, y: 152) length_405e7a root.Std_k98ojb.List.Length {}\n        instance(x: 319, y: 152) sub_e9568d root.Std_k98ojb.Math.Sub {}\n        instance(x: 495, y: 153) slice_0f7d3e root.Std_k98ojb.List.Slice {}\n        instance(x: 495, y: 265) slice_4a665c root.Std_k98ojb.List.Slice {}\n        instance(x: 661, y: 214) concat_a0679f root.Std_k98ojb.List.Concat {}\n\n        execute_8d7a4b -> length_405e7a.execute\n        list_f45e7f -> length_405e7a.list\n        positions_285d8a -> modulo_f1a63b.value\n        length_405e7a.length -> modulo_f1a63b.divisor\n        modulo_f1a63b.result -> sub_e9568d.first\n        length_405e7a.length -> sub_e9568d.second\n        sub_e9568d.result -> slice_0f7d3e.start\n        list_f45e7f -> slice_0f7d3e.list\n        0 -> slice_0f7d3e.end\n        sub_e9568d.result -> slice_4a665c.start\n        length_405e7a.length -> slice_4a665c.end\n        list_f45e7f -> slice_4a665c.list\n        slice_0f7d3e.slice -> concat_a0679f.left\n        slice_4a665c.slice -> concat_a0679f.right\n        concat_a0679f.result -> data_0_0\n    }\n\n    \n\n    instance(x: -281, y: -31) rotate_list_defd7b5 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7f6e8a\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_b0c3d4\n\n        out(x: 1154, y: 129, name: \"output\") property(Number) output_3b768f\n        out(x: 1159, y: 315, name: \"done\") trigger() done_c2e8d9\n\n        instance(x: -104, y: 246) reduce_e3a7f1 root.Std_k98ojb.Iteration.Reduce {\n            handler: function(a: Number, b: Number): Number => a + b\n        }\n        setter(x: -205, y: 163, name: \"setter_8d4c7a\") setter_8d4c7a = sum\n        getter(x: 975, y: 244, name: \"getter_e4b9f8\") getter_e4b9f8 = sum\n\n        numbers_b0c3d4 -> reduce_e3a7f1.items\n        execute_7f6e8a -> setter_8d4c7a.execute\n        0 -> setter_8d4c7a.new_value\n        setter_8d4c7a.continue -> reduce_e3a7f1.trigger\n        getter_e4b9f8.value -> output_3b768f\n        reduce_e3a7f1.output_list -> done_c2e8d9\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -245) floordiv_83f85c root.Std_k98ojb.Math.FloorDiv {}\n        instance(x: 307, y: -344) sqrt_e41e1c root.Std_k98ojb.Math.Sqrt {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        sqrt_e41e1c.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> floordiv_83f85c.first\n        1 -> floordiv_83f85c.second\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> out_f3db9f\n        input_f5c03d -> sqrt_e41e1c.value\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 169, name: \"a\") property(Int) a_eb5d1c\n            in(x: -378, y: 210, name: \"b\") property(Int) b_846f4e\n\n            out(x: 364, y: 129, name: \"output\") property(Bool) output_d55c8a\n\n            instance(x: -377, y: 22) expression_cb9b34 root.Std_k98ojb.Math.Expression {\n                expression: \"(a < 0) != (b < 0)\"\n            }\n\n            a_eb5d1c -> expression_cb9b34.a\n            b_846f4e -> expression_cb9b34.b\n            expression_cb9b34.result -> output_d55c8a\n        }\n\n        instance(x: -207, y: -34) check_opposite_signs_a1c02b root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -493) modulo_ffd6a8 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_ffd6a8.value\n        11 -> modulo_ffd6a8.divisor\n        modulo_ffd6a8.result -> out_f3db9f\n        execute_27b8c3 -> modulo_ffd6a8.trigger\n    }\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_0\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 25) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Convert the given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 168, y: 169) unique_numbers_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc:\"reduce function to collect unique numbers.\") UniqueReducer {\n                in(x: -542, y: 303, name: \"accumulator\") property(List) accumulator_ai\n                in(x: -188, y: 307, name: \"value\") property(Number) value_ai\n                out(x: 136, y: 391, name: \"output\") property(List) output_ai\n\n                instance(x: -124, y: 440) contains_7b3b7b root.Std_k98ojb.List.Contains {\n                    item: value_ai\n                }\n                accumulator_ai -> contains_7b3b7b.list\n                instance(x: 465, y: 556) if_7b3b7b root.Std_k98ojb.Std.If {\n                    input: contains_7b3b7b.contains\n                }\n                value_ai -> if_7b3b7b.else\n                accumulator_ai -> if_7b3b7b.then\n                instance(x: 265, y: 610) add_7b3b7b root.Std_k98ojb.List.Add {\n                    item: value_ai\n                }\n                contains_7b3b7b.contains.not -> add_7b3b7b.list\n                add_7b3b7b.listWithItem -> if_7b3b7b.value\n                if_7b3b7b.value -> output_ai\n            }\n            initial_value: List.Empty()\n        }\n        list_ai -> unique_numbers_7b3b7b.items\n\n        instance(x: 168, y: 302) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc:\"reduce function to calculate the product.\") ProductReducer {\n                in(x: -542, y: 303, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -188, y: 307, name: \"value\") property(Number) value_ai\n                out(x: 136, y: 391, name: \"output\") property(Number) output_ai\n\n                instance(x: 254, y: 415) mul_7b3b7b root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: value_ai\n                }\n                mul_7b3b7b.result -> output_ai\n            }\n            initial_value: 1.0\n        }\n        unique_numbers_7b3b7b.result -> product_7b3b7b.items\n\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: -341, y: 28, name: \"list1\") property(List) list1_0a5e82\n        in(x: -369, y: 122, name: \"list2\") property(List) list2_a5d7b1\n\n        out(x: 479, y: 100, name: \"output\") property(List) output_5c7b81\n\n        instance(x: -136, y: 66) difference_1_caa85b root.Std_k98ojb.Sets.Difference {}\n        instance(x: -142, y: 208) difference_2_b69e1d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 227, y: 135) concat_2ce188 root.Std_k98ojb.List.Concat {}\n        list1_0a5e82 -> difference_1_caa85b.left\n        list2_a5d7b1 -> difference_1_caa85b.right\n        list1_0a5e82 -> difference_2_b69e1d.right\n        list2_a5d7b1 -> difference_2_b69e1d.left\n        difference_1_caa85b.difference -> concat_2ce188.list1\n        difference_2_b69e1d.difference -> concat_2ce188.list2\n        concat_2ce188.output_list -> output_5c7b81\n    }\n\n    \n\n    instance(x: 426, y: -130) find_dissimilar_elements_f51a99 root.main.find_dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -154, y: 213, name: \"execute\") trigger() execute_0c80a6\n        in(x: -199, y: -21, name: \"list\") property(List) list_f7f8a8\n        in(x: -199, y: 54, name: \"num_items\") property(Number) num_items_e3ceba\n\n        out(x: 603, y: 159, name: \"output\") property(List) output_1ebd72\n        out(x: 583, y: 53, name: \"continue\") trigger() continue_37deec\n\n        instance(x: -45, y: 101) modulo_e2106f root.Std_k98ojb.Math.Modulo {}\n        setter(x: 49, y: 145, name: \"setter_d3e3d5\") setter_d3e3d5 = num_items_mod\n        instance(x: 79, y: 228) generate_range_c01c96 root.Std_k98ojb.List.GenerateRange {}\n        getter(x: 47, y: 281, name: \"getter_9f88ef\") getter_9f88ef = num_items_mod\n        instance(x: 354, y: -10) slice_ddc5e6 root.Std_k98ojb.List.Slice {}\n        setter(x: 771, y: -223, name: \"setter_d9d2ad\") setter_d9d2ad = rotated_list\n        instance(x: 452, y: -203) slice_67ecbd root.Std_k98ojb.List.Slice {}\n        setter(x: 768, y: -179, name: \"setter_cba0eb\") setter_cba0eb = rotated_list\n        instance(x: 546, y: -99) concat_3f0cd7 root.Std_k98ojb.List.Concat {}\n        getter(x: 322, y: -184, name: \"getter_a6a6ac\") getter_a6a6ac = rotated_list\n        setter(x: 750, y: -155, name: \"setter_c8f1af\") setter_c8f1af = rotated_list\n        instance(x: 132, y: 39) length_e06b49 root.Std_k98ojb.List.Length {}\n        setter(x: 174, y: 83, name: \"setter_503a8d\") setter_503a8d = list_length\n        instance(x: -230, y: -26) empty_c8f1bf root.Std_k98ojb.List.Empty {}\n        getter(x: 47, y: 103, name: \"getter_dbdbdc\") getter_dbdbdc = list_length\n\n        execute_0c80a6 -> setter_d3e3d5.execute\n        num_items_e3ceba -> modulo_e2106f.value\n        length_e06b49.length -> modulo_e2106f.divisor\n        getter_dbdbdc.value -> generate_range_c01c96.to\n        0 -> generate_range_c01c96.from\n        setter_d3e3d5.continue -> generate_range_c01c96.trigger\n        list_f7f8a8 -> slice_ddc5e6.list\n        getter_9f88ef.value -> slice_ddc5e6.start\n        -1 -> slice_ddc5e6.end\n        setter_d9d2ad.continue -> concat_3f0cd7.left\n        list_f7f8a8 -> length_e06b49.list\n        getter_9f88ef.value -> slice_67ecbd.start\n        0 -> slice_67ecbd.end\n        setter_cba0eb.continue -> concat_3f0cd7.right\n        empty_c8f1bf.list -> setter_d9d2ad.new_value\n        empty_c8f1bf.list -> setter_cba0eb.new_value\n        getter_a6a6ac.value -> output_1ebd72\n        concat_3f0cd7.result -> setter_cba0eb.new_value\n        concat_3f0cd7.result -> setter_d9d2ad.new_value\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def6a8 root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5c213e\n        in(x: 486, y: -297, name: \"numbers\") property(List) numbers_b8b6a3\n\n        out(x: 1017, y: -225, name: \"output\") property(Number) output_e4eece\n\n        instance(x: 159, y: -229) iteration_reduce_9df0f8 root.Std_k98ojb.Iteration.Reduce {\n            handler: func {\n                in(name: \"execute\") trigger() execute_b1dbba\n                in(name: \"context\") property(Number) context_a4a953\n                in(name: \"item\") property(Number) item_c82d3f\n                out(name: \"output\") property(Number) output_8e27c0\n\n                instance(x: 61, y: -149) math_add_bf6ee1 root.Std_k98ojb.Math.Add {\n                    first: context_a4a953,\n                    second: item_c82d3f\n                }\n                instance(x: 0, y: 0) setter_5335e7 setter {\n                    new_value: math_add_bf6ee1.result,\n                    continue: execute_b1dbba\n                }\n                instance(x: 94, y: -32) getter_ecb8a1 getter {\n                    value: context_a4a953\n                }\n                execute_b1dbba -> setter_5335e7.execute\n                getter.value -> output_8e27c0\n            },\n            initial_context_value: 0\n        }\n\n        numbers_b8b6a3 -> iteration_reduce_9df0f8.items\n        execute_5c213e -> iteration_reduce_9df0f8.trigger\n        iteration_reduce_9df0f8.output -> output_e4eece\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: 264) modolo_c84d8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        input_f5c03d -> lessthanorequal_f11fda.right\n        2 -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.onItem -> modolo_c84d8c.divisor\n        input_f5c03d -> modolo_c84d8c.value\n        modolo_c84d8c.result -> if_07b8c7.predicate\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n}"
            ]
        }
    }
]