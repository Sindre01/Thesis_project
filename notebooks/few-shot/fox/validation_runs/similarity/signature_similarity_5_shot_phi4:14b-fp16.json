[
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -175, y: -247) expression_7e6c1d root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_7e6c1d.gen_0\n        y_5390f5 -> expression_7e6c1d.gen_1\n        expression_7e6c1d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -192, y: 139) opposite_signs_8b4f2f root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 186, y: -24) expression_7e8b9a root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_27f29c -> expression_7e8b9a.gen_0\n        expression_7e8b9a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -12, y: 10) is_diff_1d3f4 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 30) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -457, y: -6) set_ae7f9c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -458, y: 81) reduce_1a3d8f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -121, y: 34, name: \"acc\") property(Number) acc_9e6c0f\n\n            in(x: -113, y: 29, name: \"elem\") property(Number) elem_7a5d4b\n\n            out(x: 515, y: 44, name: \"\") property(Number) _1e8c2c\n\n            instance(x: 89, y: 29) mul_9f0b3f root.Std_k98ojb.Math.Mul {}\n            acc_9e6c0f -> mul_9f0b3f.first\n            elem_7a5d4b -> mul_9f0b3f.second\n            mul_9f0b3f.result -> _1e8c2c\n        } -> reduce_1a3d8f.reducer\n        instance(x: -457, y: 81) set_ae7f9c root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> set_ae7f9c.left\n        set_ae7f9c.difference -> reduce_1a3d8f.items\n        1 -> reduce_1a3d8f.initialValue\n        execute_19300c -> reduce_1a3d8f.trigger\n        continue_45190b <- reduce_1a3d8f.done\n        reduce_1a3d8f.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -457, y: 81) unique_product_9e7c4c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -301, y: 32, name: \"intersection\") intersection_1 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -11, y: 9) sub_4aeea6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 221, y: -48, name: \"remove_intersection_from_list1\") remove_06d2e5 root.Std_k98ojb.List.Remove {}\n        instance(x: 221, y: 88, name: \"remove_intersection_from_list2\") remove_06d2e5_1 root.Std_k98ojb.List.Remove {}\n        list1_ai -> intersection_1.left\n        list2_ai -> intersection_1.right\n        intersection_1.intersect -> sub_4aeea6.first\n        0 -> sub_4aeea6.second\n        sub_4aeea6.result -> remove_06d2e5.index\n        list1_ai -> remove_06d2e5.list\n        remove_06d2e5.listWithoutItem -> output_ai\n        intersection_1.intersect -> sub_4aeea6.first\n        0 -> sub_4aeea6.second\n        sub_4aeea6.result -> remove_06d2e5_1.index\n        list2_ai -> remove_06d2e5_1.list\n        instance(x: 221, y: 138) concat_3 root.Std_k98ojb.List.Concat {}\n        output_ai -> concat_3.left\n        remove_06d2e5_1.listWithoutItem -> concat_3.right\n        concat_3.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 45) find_dissimilar_b9ff6b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 55, y: -67) slice_7a1f8e root.Std_k98ojb.List.Slice {}\n        instance(x: 72, y: 15, name: \"slice2\") slice_5c9d4f root.Std_k98ojb.List.Slice {}\n        instance(x: 281, y: -3) concat_6e7a1c root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_7a1f8e.list\n        n_68068c -> sub_9d5f2e.first\n        length_4b8927.length -> sub_9d5f2e.second\n        sub_9d5f2e.result -> slice_7a1f8e.start\n        -1 -> slice_7a1f8e.end\n        list_48148f -> slice_5c9d4f.list\n        0 -> slice_5c9d4f.start\n        sub_9d5f2e.result -> slice_5c9d4f.end\n        slice_7a1f8e.slice -> concat_6e7a1c.right\n        slice_5c9d4f.slice -> concat_6e7a1c.left\n        concat_6e7a1c.result -> output_823209\n        list_48148f -> length_4b8927.list\n        instance(x: 0, y: -122) sub_9d5f2e root.Std_k98ojb.Math.Sub {}\n    }\n\n    \n\n    instance(x: -280, y: -111) rotate_right_1a3c8c root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 23, y: 1) reduce_5e8b7d root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_5e8b7d.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_5e8b7d.reducer\n        list_2c62ab -> reduce_5e8b7d.items\n        reduce_5e8b7d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 118, y: -26) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 0, y: 30) generaterange_8e6f2c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 333, y: -10) lessthanorequal_1d7b5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -150) for_8e9f3a root.Std_k98ojb.Std.For {}\n        instance(x: 1006, y: -50) if_e4f2da root.Std_k98ojb.Std.If {}\n        instance(x: 1017, y: 60) expression_1c0d5c root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1009, y: -20) if_3a4f2e root.Std_k98ojb.Std.If {}\n        instance(x: 1017, y: 140) add_1c8d5c root.Std_k98ojb.Math.Add {}\n        num_5c0677 -> generaterange_8e6f2c.from\n        2 -> generaterange_8e6f2c.to\n        generaterange_8e6f2c.list -> for_8e9f3a.items\n        for_8e9f3a.item -> lessthanorequal_1d7b5c.left\n        num_5c0677 -> lessthanorequal_1d7b5c.right\n        lessthanorequal_1d7b5c.result -> if_3a4f2e.predicate\n        for_8e9f3a.onItem -> if_3a4f2e.execute\n        if_3a4f2e.else -> continue_9a54bb\n        num_5c0677 -> expression_1c0d5c.gen_0\n        for_8e9f3a.item -> expression_1c0d5c.gen_1\n        expression_1c0d5c.result -> if_e4f2da.predicate\n        if_3a4f2e.then -> if_e4f2da.execute\n        1 -> add_1c8d5c.first\n        for_8e9f3a.index -> add_1c8d5c.second\n        add_1c8d5c.result -> expression_1c0d5c.gen_1\n        if_e4f2da.then -> continue_9a54bb\n        if_e4f2da.else -> for_8e9f3a.next\n        execute_b7b391 -> for_8e9f3a.reset\n        for_8e9f3a.done -> continue_9a54bb\n        0 -> if_e4f2da.value\n    }\n\n    \n\n    instance(x: -1, y: -5) num_prime_6c9d7b root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -232, y: -221) mul_f8b7c4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -222) lessthanorequal_e1e6f2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_f8b7c4.first\n        y_5390f5 -> mul_f8b7c4.second\n        lessthanorequal_e1e6f2.result -> output_3339a3\n        0 -> lessthanorequal_e1e6f2.right\n        mul_f8b7c4.result -> lessthanorequal_e1e6f2.left\n    }\n\n    \n\n    instance(x: -186, y: 139) opposite_signs_5d9a3c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 184, y: -22) modulo_c6b9d1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 442, y: 3) equal_4a8c5e root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_c6b9d1.value\n        11 -> modulo_c6b9d1.divisor\n        0 -> equal_4a8c5e.right\n        modulo_c6b9d1.result -> equal_4a8c5e.left\n        equal_4a8c5e.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -11, y: -10) is_diff_3a7d2 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_3f6d7e root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3f6d7e.input\n        search_ai -> replace_3f6d7e.search\n        replace_ai -> replace_3f6d7e.replace\n        replace_3f6d7e.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1052, y: 130) equal_8f4c5e root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_7b3b7b.input\n        input_ai -> equal_8f4c5e.left\n        tolower_7b3b7b.output -> equal_8f4c5e.right\n        equal_8f4c5e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -34, y: 127) set_1f7a9c root.Std_k98ojb.List.Flatten {}\n        list_5fda54 -> set_1f7a9c.items\n        instance(x: -34, y: 127) unique_3e6d0f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"\") property(Bool) _7dd980\n\n                instance(x: 89, y: 29) contains_1e2b5a root.Std_k98ojb.List.Contains {}\n                set_1f7a9c.flattened -> contains_1e2b5a.list\n                elem_9f6850 -> contains_1e2b5a.item\n\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                false -> notequal_807ffd.right\n                contains_1e2b5a.contains -> notequal_807ffd.left\n\n                notequal_807ffd.result -> _7dd980\n            }\n        }\n        set_1f7a9c.flattened -> unique_3e6d0f.items\n        instance(x: -34, y: 127) reduce_4b2c5f root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -113, y: 34, name: \"acc\") property(Number) acc_9f6850\n\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"\") property(Number) _7dd980\n\n                instance(x: 89, y: 29) mul_1088d5 root.Std_k98ojb.Math.Mul {}\n                acc_9f6850 -> mul_1088d5.first\n                elem_9f6850 -> mul_1088d5.second\n                mul_1088d5.result -> _7dd980\n            }\n        }\n        unique_3e6d0f.output_list -> reduce_4b2c5f.item\n        1 -> reduce_4b2c5f.initial_value\n        execute_19300c -> set_1f7a9c.trigger\n        continue_45190b -> reduce_4b2c5f.done\n        reduce_4b2c5f.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -34, y: 127) unique_product_3e6d0f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -281, y: 53) difference_1c8d4a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -381, y: 3) difference_2e9f5d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1c8d4a.left\n        list2_ai -> difference_1c8d4a.right\n        list2_ai -> difference_2e9f5d.left\n        list1_ai -> difference_2e9f5d.right\n        instance(x: 93, y: 87) concat_7b3b6d root.Std_k98ojb.List.Concat {}\n        difference_1c8d4a.difference -> concat_7b3b6d.left\n        difference_2e9f5d.difference -> concat_7b3b6d.right\n        concat_7b3b6d.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -67) find_dissimilar_1c4a8d root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 69, y: -64) length_7a9f8e root.Std_k98ojb.List.Length {}\n        instance(x: 67, y: -1) sub_5c2d6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 277, y: -3) slice_4f0a8c root.Std_k98ojb.List.Slice {}\n        instance(x: 516, y: -84) concat_9e7f1e root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_7a9f8e.list\n        n_68068c -> sub_5c2d6c.first\n        length_7a9f8e.length -> sub_5c2d6c.second\n        0 -> slice_4f0a8c.start\n        sub_5c2d6c.result -> slice_4f0a8c.end\n        list_48148f -> slice_4f0a8c.list\n        -1 -> concat_9e7f1e.rightStart\n        length_7a9f8e.length -> concat_9e7f1e.leftEnd\n        0 -> concat_9e7f1e.leftStart\n        list_48148f -> concat_9e7f1e.left\n        slice_4f0a8c.slice -> concat_9e7f1e.right\n        concat_9e7f1e.result -> output_823209\n    }\n\n    \n\n    instance(x: -230, y: -115) rotate_right_5d2b3a root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 80, y: 0) reduce_9b1e8d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -184, y: -82, name: \"accumulated\") property(Number) accumulated_6c3a4f\n            in(x: -175, y: 23, name: \"current\") property(Number) current_2d0e9b\n\n            out(x: 1071, y: -77, name: \"sum\") property(Number) sum_7f8f5e\n\n            instance(x: 75, y: 3) add_4a6c8f root.Std_k98ojb.Math.Add {}\n            accumulated_6c3a4f -> add_4a6c8f.first\n            current_2d0e9b -> add_4a6c8f.second\n            add_4a6c8f.result -> sum_7f8f5e\n        } -> reduce_9b1e8d.reducer\n        0 -> reduce_9b1e8d.initialValue\n        list_2c62ab -> reduce_9b1e8d.items\n        reduce_9b1e8d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -52, y: -3) _sum_6b0b4c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 0, y: -12) lessthanorequal_8e7f6d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -175) expression_5c4f3c root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 0, y: -87) ifexpression_8e1a7d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 0, y: 28, name: \"getter_2f5c9e\") getter_2f5c9e = previous\n        setter(x: 0, y: -221, name: \"setter_6a1b4d\") setter_6a1b4d = previous\n        instance(x: 0, y: -111) for_3b7b8f root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: -312, name: \"setter_6a1b4d\") setter_f5e2c9 = previous\n        instance(x: 0, y: -134) getat_9a3f7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_8e1a7d.else -> continue_9a54bb\n        ifexpression_8e1a7d.value -> output_c457b3\n        ifexpression_8e1a7d.then -> setter_6a1b4d.execute\n        expression_5c4f3c.result -> lessthanorequal_8e7f6d.left\n        1 -> lessthanorequal_8e7f6d.right\n        lessthanorequal_8e7f6d.result -> ifexpression_8e1a7d.predicate\n        for_3b7b8f.item -> expression_5c4f3c.gen_0\n        for_3b7b8f.index -> expression_5c4f3c.gen_1\n        getter_2f5c9e.value -> ifexpression_8e1a7d.gen_1\n        for_3b7b8f.onItem -> ifexpression_8e1a7d.execute\n        for_3b7b8f.done -> continue_9a54bb\n        for_3b7b8f.item -> setter_6a1b4d.new_value\n        num_5c0677 -> expression_5c4f3c.gen_2\n        num_5c0677 -> lessthanorequal_8e7f6d.right\n        list_0f9b2c -> for_3b7b8f.items\n        execute_b7b391 -> setter_f5e2c9.execute\n        setter_f5e2c9.continue -> getat_9a3f7f.reset\n        getter(x: 0, y: -312, name: \"getter_f5e2c9\") getter_f5e2c9 = previous\n        list_0f9b2c -> getat_9a3f7f.list\n        1 -> getat_9a3f7f.index\n        getat_9a3f7f.itemAtIndex -> setter_f5e2c9.new_value\n        getter_f5e2c9.value -> ifexpression_8e1a7d.gen_2\n        setter_6a1b4d.continue -> for_3b7b8f.next\n        instance(x: 0, y: -12) generaterange_7a2f0c root.Std_k98ojb.List.GenerateRange {}\n        num_5c0677 -> generaterange_7a2f0c.to\n        1 -> generaterange_7a2f0c.from\n        generaterange_7a2f0c.list -> list_0f9b2c\n    }\n\n    \n\n    instance(x: -111, y: 13) num_prime_3e8d5c root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -187, y: -223) expression_1e6d8c root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_1e6d8c.gen_0\n        y_5390f5 -> expression_1e6d8c.gen_1\n        expression_1e6d8c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -192, y: 139) opposite_signs_2b4a7e root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 184, y: -20) expression_c8b5d6 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_27f29c -> expression_c8b5d6.gen_0\n        expression_c8b5d6.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -1, y: 7) is_diff_2e9a4 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 30) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) if_e0a6e9 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_7b3b7b.input\n        func() {\n            in(x: -272, y: -48, name: \"left\") property(String) left_86a8fb\n\n            in(x: 24, y: -54, name: \"right\") property(String) right_9cb360\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n        } -> if_e0a6e9.inputs\n        tolower_7b3b7b.output -> if_e0a6e9.right\n        input_ai -> if_e0a6e9.left\n        if_e0a6e9.equal -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -505, y: -17) set_1e3c9d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -617, y: 40) map_7a8f0f root.Std_k98ojb.Iteration.Map {}\n        instance(x: -504, y: 112) reduce_5a6d1e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -114, y: 36, name: \"item\") property(Number) item_9c8f4e\n\n            out(x: 333, y: 50, name: \"\") property(List) _d3a1ec\n\n            instance(x: 92, y: 18) list_5b6d7d root.Std_k98ojb.List.Add {}\n            data_instance(x: -21, y: 4) data_2e9c8f = [item]\n            item_9c8f4e -> list_5b6d7d.item\n            data_2e9c8f -> list_5b6d7d.list\n            list_5b6d7d.listWithItem -> _d3a1ec\n        } -> map_7a8f0f.handler\n        func() {\n            in(x: -114, y: 36, name: \"item\") property(Number) item_9c8f4e\n\n            out(x: 333, y: 50, name: \"\") property(List) _d3a1ec\n\n            instance(x: 92, y: 18) list_5b6d7d root.Std_k98ojb.List.Add {}\n            data_instance(x: -21, y: 4) data_2e9c8f = [item]\n            item_9c8f4e -> list_5b6d7d.item\n            data_2e9c8f -> list_5b6d7d.list\n            list_5b6d7d.listWithItem -> _d3a1ec\n        } -> set_1e3c9d.right\n        map_7a8f0f.output_list -> set_1e3c9d.left\n        func() {\n            in(x: -114, y: 36, name: \"item\") property(Number) item_9c8f4e\n\n            out(x: 333, y: 50, name: \"\") property(Number) _7a0b2e\n\n            instance(x: 92, y: 18) mul_1d3f5c root.Std_k98ojb.Math.Mul {}\n            item_9c8f4e -> mul_1d3f5c.second\n            acc_6f8d6e -> mul_1d3f5c.first\n            mul_1d3f5c.result -> _7a0b2e\n        } -> reduce_5a6d1e.reducer\n        set_1e3c9d.difference -> reduce_5a6d1e.items\n        1 -> reduce_5a6d1e.initialValue\n        reduce_5a6d1e.result -> output_cffcc2\n        execute_19300c -> map_7a8f0f.trigger\n        map_7a8f0f.done -> set_1e3c9d.trigger\n        set_1e3c9d.done -> reduce_5a6d1e.trigger\n        reduce_5a6d1e.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -103, y: 0) unique_product_8f2e7b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -256, y: 38, name: \"intersection\") intersection_1 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 17, y: 95, name: \"difference1\") difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 170, y: 97, name: \"difference2\") difference_3 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> intersection_1.left\n        list2_ai -> intersection_1.right\n        list1_ai -> difference_2.left\n        intersection_1.intersection -> difference_2.right\n        list2_ai -> difference_3.left\n        intersection_1.intersection -> difference_3.right\n        instance(x: 299, y: 77) concat_4 root.Std_k98ojb.List.Concat {}\n        difference_2.difference -> concat_4.list1\n        difference_3.difference -> concat_4.list2\n        concat_4.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -79, y: 19) find_dissimilar_c root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 69, y: -99) slice_5a6b2e root.Std_k98ojb.List.Slice {}\n        instance(x: 86, y: -27) sub_4c8d9f root.Std_k98ojb.Math.Sub {}\n        instance(x: 316, y: -112) getat_7f0c3a root.Std_k98ojb.List.GetAt {}\n        instance(x: 442, y: -99) slice_6e1a5e root.Std_k98ojb.List.Slice {}\n        instance(x: 564, y: -27) add_9d4b8b root.Std_k98ojb.Math.Add {}\n        instance(x: 699, y: -112) concat_3f7c0b root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_5a6b2e.list\n        n_68068c -> sub_4c8d9f.first\n        length(list_48148f) -> sub_4c8d9f.second\n        sub_4c8d9f.result -> slice_5a6b2e.start\n        -1 -> slice_5a6b2e.end\n        list_48148f -> getat_7f0c3a.list\n        add_9d4b8b.result -> getat_7f0c3a.index\n        n_68068c -> add_9d4b8b.first\n        length(list_48148f) -> add_9d4b8b.second\n        list_48148f -> slice_6e1a5e.list\n        0 -> slice_6e1a5e.start\n        getat_7f0c3a.itemAtIndex -> slice_6e1a5e.end\n        concat_3f7c0b.result -> output_823209\n        slice_5a6b2e.slice -> concat_3f7c0b.left\n        slice_6e1a5e.slice -> concat_3f7c0b.right\n    }\n\n    \n\n    instance(x: -250, y: -107) rotate_right_9d8e4c root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 20, y: 1) reduce_7e6d4b root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_5b0d1e root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_5b0d1e.first\n            current_3f11cd -> add_5b0d1e.second\n            add_5b0d1e.result -> sum_72dd2a\n        } -> reduce_7e6d4b.reducer\n        0 -> reduce_7e6d4b.initialValue\n        list_2c62ab -> reduce_7e6d4b.items\n        reduce_7e6d4b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -76, y: -11) _sum_1f9c0d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1005, y: -63) ifexpression_6c2f4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1021, y: -168) add_7a8d9f root.Std_k98ojb.Math.Add {}\n        instance(x: 1006, y: -264) if_4c2e5d root.Std_k98ojb.Std.If {}\n        instance(x: 1053, y: -383) generaterange_1b0e7a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1039, y: -491) for_f8f6c4 root.Std_k98ojb.Std.For {}\n        add_7a8d9f.result -> ifexpression_6c2f4e.gen_0\n        num_5c0677 -> ifexpression_6c2f4e.gen_1\n        1 -> generaterange_1b0e7a.from\n        num_5c0677 -> generaterange_1b0e7a.to\n        generaterange_1b0e7a.list -> for_f8f6c4.items\n        ifexpression_6c2f4e.value -> if_4c2e5d.predicate\n        for_f8f6c4.onItem -> if_4c2e5d.execute\n        if_4c2e5d.else -> continue_9a54bb\n        1 -> add_7a8d9f.first\n        for_f8f6c4.item -> add_7a8d9f.second\n        if_4c2e5d.then -> continue_9a54bb\n        for_f8f6c4.done -> continue_9a54bb\n        execute_b7b391 -> for_f8f6c4.reset\n        1 -> output_c457b3\n        ifexpression_6c2f4e.then -> output_c457b3\n        num_5c0677 -> if_4c2e5d.value\n        if_4c2e5d.else -> for_f8f6c4.next\n    }\n\n    \n\n    instance(x: 11, y: -57) num_prime_ea1b0c root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -189, y: -246) expression_c6e7c8 root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_c6e7c8.gen_0\n        y_5390f5 -> expression_c6e7c8.gen_1\n        expression_c6e7c8.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -189, y: 59) opposite_signs_4b2d8c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -19) modulo_7e9b1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 407, y: 4) equal_8c6d3c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_7e9b1a.value\n        11 -> modulo_7e9b1a.divisor\n        modulo_7e9b1a.result -> equal_8c6d3c.left\n        0 -> equal_8c6d3c.right\n        equal_8c6d3c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -5, y: 4) is_diff_7b9e1a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_2c7b8f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2c7b8f.input\n        search_ai -> replace_2c7b8f.search\n        replace_ai -> replace_2c7b8f.replace\n        replace_2c7b8f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -34, y: -19) unique_list root.Std_k98ojb.List.Sort {\n            sort: \"it\"\n        }\n        list_5fda54 -> unique_list.list\n        instance(x: 0, y: 0) reduce_1c9e3a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_8f7d6f\n\n            in(x: -23, y: 44, name: \"val\") property(Number) val_3e5c1a\n\n            out(x: 515, y: 44, name: \"\") property(Number) _b9f0aa\n\n            instance(x: 89, y: 29) equal_7d8f2f root.Std_k98ojb.Logic.Equal {}\n            acc_8f7d6f -> equal_7d8f2f.left\n            val_3e5c1a -> equal_7d8f2f.right\n            instance(x: 310, y: 35) notequal_4f9d0c root.Std_k98ojb.Logic.Not {}\n            equal_7d8f2f.result -> notequal_4f9d0c.input\n            instance(x: 490, y: 44) mul_3e5a6f root.Std_k98ojb.Math.Mul {}\n            acc_8f7d6f -> mul_3e5a6f.first\n            val_3e5c1a -> mul_3e5a6f.second\n            instance(x: 640, y: 44) ifexpression_4d9c0b root.Std_k98ojb.Std.IfExpression {}\n            notequal_4f9d0c.result -> ifexpression_4d9c0b.expression\n            mul_3e5a6f.result -> ifexpression_4d9c0b.then\n            acc_8f7d6f -> ifexpression_4d9c0b.else_\n            ifexpression_4d9c0b.value -> _b9f0aa\n        } -> reduce_1c9e3a.reducer\n        instance(x: 426, y: -303) firstitem_5b7f8c root.Std_k98ojb.List.FirstItem {}\n        unique_list.sorted -> reduce_1c9e3a.items\n        firstitem_5b7f8c.item -> reduce_1c9e3a.initialValue\n        reduce_1c9e3a.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -34, y: -19) unique_product_4d0e6c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -279, y: 30) difference_3b7f1c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 17, y: 99) concat_4e8a9d root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_3b7f1c.left\n        list2_ai -> difference_3b7f1c.right\n        difference_3b7f1c.difference -> concat_4e8a9d.list1\n        list2_ai -> difference_3b7f1c.left\n        list1_ai -> difference_3b7f1c.right\n        difference_3b7f1c.difference -> concat_4e8a9d.list2\n        concat_4e8a9d.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 111, y: -12) find_dissimilar_e5a6f0 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 293, y: -41) slice_9a7b1f root.Std_k98ojb.List.Slice {}\n        instance(x: 513, y: -110) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        instance(x: 0, y: -40) length_5d6a2c root.Std_k98ojb.List.Length {}\n        instance(x: 293, y: 89) slice_7f3b9c root.Std_k98ojb.List.Slice {}\n        list_48148f -> concat_4e8c54.right\n        n_68068c -> length_5d6a2c.list\n        length_5d6a2c.length -> sub_1d86d4.first\n        0 -> sub_1d86d4.second\n        instance(x: -7, y: -40) sub_1d86d4 root.Std_k98ojb.Math.Sub {}\n        sub_1d86d4.result -> slice_9a7b1f.end\n        list_48148f -> slice_9a7b1f.list\n        0 -> slice_9a7b1f.start\n        slice_9a7b1f.slice -> concat_4e8c54.left\n        length_5d6a2c.length -> sub_3e8c54.first\n        n_68068c -> sub_3e8c54.second\n        instance(x: 0, y: 89) sub_3e8c54 root.Std_k98ojb.Math.Sub {}\n        -1 -> slice_7f3b9c.end\n        list_48148f -> slice_7f3b9c.list\n        sub_3e8c54.result -> slice_7f3b9c.start\n        slice_7f3b9c.slice -> concat_4e8c54.right\n        concat_4e8c54.result -> output_823209\n    }\n\n    \n\n    instance(x: -281, y: 0) rotate_right_5a6d2f root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 17, y: 10) reduce_7b9d8e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7b9d8e.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_7b9d8e.reducer\n        0 -> reduce_7b9d8e.initialValue\n        reduce_7b9d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -76, y: -3) _sum_1c6e4c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 0, y: 63) generaterange_8f2c7e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 360, y: -5) lessthanorequal_f6d3da root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -10) for_9a8f1c root.Std_k98ojb.Std.For {}\n        instance(x: 1032, y: -40) if_7e4b5c root.Std_k98ojb.Std.If {}\n        instance(x: 1026, y: 80) expression_3d0b1f root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: -2, y: -150) add_7e8a9c root.Std_k98ojb.Math.Add {}\n        instance(x: 1044, y: 140) ifexpression_1d5f3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: -2, y: 88, name: \"getter_7a8c9e\") getter_7a8c9e = previous\n        setter(x: 1031, y: -195, name: \"setter_6b3f0d\") setter_6b3f0d = previous\n        instance(x: 1024, y: -61) getat_e5f2ea root.Std_k98ojb.List.GetAt {}\n        getter(x: 1031, y: 88, name: \"getter_7a8c9e\") getter_6e3e0d = previous\n        setter(x: -4, y: -150, name: \"setter_6b3f0d\") setter_e5f2ea = previous\n\n        num_5c0677 -> generaterange_8f2c7e.from\n        1 -> generaterange_8f2c7e.to\n        generaterange_8f2c7e.list -> for_9a8f1c.items\n        lessthanorequal_f6d3da.left -> expression_3d0b1f.gen_0\n        num_5c0677 -> lessthanorequal_f6d3da.right\n        lessthanorequal_f6d3da.result -> if_7e4b5c.predicate\n        for_9a8f1c.onItem -> if_7e4b5c.execute\n        if_7e4b5c.else -> continue_9a54bb\n        expression_3d0b1f.result -> if_7e4b5c.then\n        2 -> add_7e8a9c.first\n        for_9a8f1c.index -> add_7e8a9c.second\n        add_7e8a9c.result -> expression_3d0b1f.gen_1\n        if_7e4b5c.then -> continue_9a54bb\n        for_9a8f1c.done -> continue_9a54bb\n\n        num_5c0677 -> getat_e5f2ea.list\n        0 -> getat_e5f2ea.index\n        getat_e5f2ea.itemAtIndex -> setter_e5f2ea.new_value\n        execute_b7b391 -> setter_e5f2ea.execute\n\n        for_9a8f1c.item -> ifexpression_1d5f3f.gen_2\n        for_9a8f1c.index -> ifexpression_1d5f3f.gen_0\n        getter_7a8c9e.value -> ifexpression_1d5f3f.gen_1\n        for_9a8f1c.onItem -> ifexpression_1d5f3f.execute\n\n        ifexpression_1d5f3f.else -> continue_9a54bb\n        ifexpression_1d5f3f.value -> output_c457b3\n        ifexpression_1d5f3f.then -> setter_6b3f0d.execute\n        for_9a8f1c.item -> setter_6b3f0d.new_value\n\n        setter_e5f2ea.continue -> for_9a8f1c.reset\n        setter_6b3f0d.continue -> for_9a8f1c.next\n    }\n\n    \n\n    instance(x: 13, y: -14) num_prime_7e4b5c root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -197, y: -229) mul_f8d7c4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: -220) lessthanorequal_2f6e5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_f8d7c4.first\n        y_5390f5 -> mul_f8d7c4.second\n        0 -> lessthanorequal_2f6e5f.left\n        mul_f8d7c4.result -> lessthanorequal_2f6e5f.right\n        lessthanorequal_2f6e5f.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -299, y: 75) opposite_signs_1b0b8d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 144, y: -17) modulo_ea1b9e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 438, y: 4) equal_5c6d3f root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_ea1b9e.value\n        11 -> modulo_ea1b9e.divisor\n        0 -> equal_5c6d3f.right\n        modulo_ea1b9e.result -> equal_5c6d3f.left\n        equal_5c6d3f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -16, y: -12) is_diff_8a4a2c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_3b4d7f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b4d7f.input\n        search_ai -> replace_3b4d7f.search\n        replace_ai -> replace_3b4d7f.replace\n        replace_3b4d7f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1022, y: 129, name: \"lowercase\") tolower_1c4d3f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1226, y: 128, name: \"compare\") equal_9a8e7a root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_1c4d3f.input\n        input_ai -> equal_9a8e7a.left\n        tolower_1c4d3f.lowercased -> equal_9a8e7a.right\n        equal_9a8e7a.equal -> output_ai\n    }\n\n    \n\n    instance(x: 1226, y: 128) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -37, y: 0) set_ae1c6a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -49, y: 72) reduce_8f4d3e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -114, y: 0, name: \"acc\") property(Number) acc_5a7c9c\n\n            in(x: -114, y: 43, name: \"val\") property(Number) val_2f4e1d\n\n            out(x: 517, y: 13, name: \"\") property(Number) _b3d0bf\n\n            instance(x: 38, y: 22) mul_7a5c9c root.Std_k98ojb.Math.Mul {}\n            acc_5a7c9c -> mul_7a5c9c.first\n            val_2f4e1d -> mul_7a5c9c.second\n            mul_7a5c9c.result -> _b3d0bf\n        } -> reduce_8f4d3e.reducer\n        1 -> reduce_8f4d3e.initialValue\n        set_ae1c6a.difference -> reduce_8f4d3e.items\n        reduce_8f4d3e.result -> output_cffcc2\n\n        instance(x: -507, y: 0) list_5b7b9a root.Std_k98ojb.List.Sort {}\n        instance(x: -607, y: 72) set_ae1c6a_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -707, y: 144) list_5b7b9a_2 root.Std_k98ojb.List.Sort {}\n        instance(x: -807, y: 216) set_ae1c6a_3 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -907, y: 288) list_5b7b9a_3 root.Std_k98ojb.List.Sort {}\n        instance(x: -1007, y: 360) set_ae1c6a_4 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -1107, y: 432) list_5b7b9a_4 root.Std_k98ojc.List.Sort {}\n        instance(x: -1207, y: 504) set_ae1c6a_5 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -1307, y: 576) list_5b7b9a_5 root.Std_k98ojb.List.Sort {}\n        instance(x: -1407, y: 648) set_ae1c6a_6 root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> list_5b7b9a.items\n        list_5b7b9a.sorted -> set_ae1c6a.left\n        list_5fda54 -> set_ae1c6a.right\n        set_ae1c6a.difference -> list_5b7b9a_2.items\n        list_5b7b9a_2.sorted -> set_ae1c6a_2.left\n        set_ae1c6a.difference -> set_ae1c6a_2.right\n        set_ae1c6a_2.difference -> list_5b7b9a_3.items\n        list_5b7b9a_3.sorted -> set_ae1c6a_3.left\n        set_ae1c6a_2.difference -> set_ae1c6a_3.right\n        set_ae1c6a_3.difference -> list_5b7b9a_4.items\n        list_5b7b9a_4.sorted -> set_ae1c6a_4.left\n        set_ae1c6a_3.difference -> set_ae1c6a_4.right\n        set_ae1c6a_4.difference -> list_5b7b9a_5.items\n        list_5b7b9a_5.sorted -> set_ae1c6a_5.left\n        set_ae1c6a_4.difference -> set_ae1c6a_5.right\n        set_ae1c6a_5.difference -> list_5b7b9a_6.items\n        list_5b7b9a_6.sorted -> set_ae1c6a_6.left\n        set_ae1c6a_5.difference -> set_ae1c6a_6.right\n        set_ae1c6a_6.difference -> set_ae1c6a.items\n        execute_19300c -> list_5b7b9a.trigger\n        list_5b7b9a.done -> list_5b7b9a_2.trigger\n        list_5b7b9a_2.done -> list_5b7b9a_3.trigger\n        list_5b7b9a_3.done -> list_5b7b9a_4.trigger\n        list_5b7b9a_4.done -> list_5b7b9a_5.trigger\n        list_5b7b9a_5.done -> list_5b7b9a_6.trigger\n        list_5b7b9a_6.done -> set_ae1c6a.trigger\n        set_ae1c6a.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 0, y: -16) unique_product_3f8d2c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -291, y: 23, name: \"intersection\") intersection_1 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -121, y: 95, name: \"difference\") difference_2 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> intersection_1.left\n        list2_ai -> intersection_1.right\n        intersection_1.intersect -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_2.difference -> output_ai\n\n        instance(x: -121, y: 95, name: \"difference\") difference_3 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> intersection_1.left\n        list1_ai -> intersection_1.right\n        intersection_1.intersect -> difference_3.left\n        list2_ai -> difference_3.right\n        difference_3.difference -> output_ai\n\n        instance(x: 179, y: 77, name: \"concat\") concat_4 root.Std_k98ojb.List.Concat {}\n        output_ai -> concat_4.list1\n        output_ai -> concat_4.list2\n        concat_4.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -15, y: 12) find_dissimilar_5 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 60, y: -74) slice_5a9f8e root.Std_k98ojb.List.Slice {}\n        instance(x: 65, y: 16) sub_4c6d2c root.Std_k98ojb.Math.Sub {}\n        instance(x: 287, y: -78) reversed_7f0f1c root.Std_k98ojb.List.Reversed {}\n        instance(x: 519, y: -111) concat_3a9e5f root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_5a9f8e.list\n        n_68068c -> sub_4c6d2c.first\n        length(list_48148f) -> sub_4c6d2c.second\n        sub_4c6d2c.result -> slice_5a9f8e.start\n        -1 -> slice_5a9f8e.end\n        list_48148f -> reversed_7f0f1c.list\n        0 -> slice_5a9f8e.start\n        sub_4c6d2c.result -> slice_5a9f8e.end\n        slice_5a9f8e.slice -> concat_3a9e5f.left\n        reversed_7f0f1c.reversed -> concat_3a9e5f.right\n        concat_3a9e5f.result -> output_823209\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 19, y: 9) reduce_4b1e8d root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4b1e8d.items\n        func() {\n            in(x: -170, y: -54, name: \"accumulated\") property(Number) accumulated_6a0f3f\n            in(x: -164, y: 43, name: \"current\") property(Number) current_2c4b5e\n\n            out(x: 566, y: -49, name: \"sum\") property(Number) sum_1d9c8f\n\n            instance(x: 79, y: 16) add_3a7e0f root.Std_k98ojb.Math.Add {}\n            accumulated_6a0f3f -> add_3a7e0f.first\n            current_2c4b5e -> add_3a7e0f.second\n            add_3a7e0f.result -> sum_1d9c8f\n        } -> reduce_4b1e8d.reducer\n        0 -> reduce_4b1e8d.initialValue\n        reduce_4b1e8d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -57, y: -10) _sum_5c6d9c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 0, y: -63) lessthanorequal_8e7f6d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -182) for_3c1d5e root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 54) ifexpression_ea4f8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        instance(x: -62, y: 20) mod_1d5c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: -101) add_e9a6f4 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: -121) getat_f3f2ab root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: -151) generaterange_7c5e1d root.Std_k98ojb.List.GenerateRange {}\n        lessthanorequal_8e7f6d.result -> ifexpression_ea4f8f.predicate\n        for_3c1d5e.onItem -> ifexpression_ea4f8f.execute\n        ifexpression_ea4f8f.value -> output_c457b3\n        ifexpression_ea4f8f.else -> continue_9a54bb\n        ifexpression_ea4f8f.then -> add_e9a6f4.execute\n        for_3c1d5e.item -> mod_1d5c7e.value\n        num_5c0677 -> mod_1d5c7e.divisor\n        add_e9a6f4.result -> getat_f3f2ab.index\n        0 -> generaterange_7c5e1d.from\n        num_5c0677 -> generaterange_7c5e1d.to\n        generaterange_7c5e1d.list -> for_3c1d5e.items\n        getat_f3f2ab.itemAtIndex -> add_e9a6f4.second\n        1 -> add_e9a6f4.first\n        mod_1d5c7e.result -> ifexpression_ea4f8f.gen_0\n        for_3c1d5e.index -> ifexpression_ea4f8f.gen_1\n        num_5c0677 -> ifexpression_ea4f8f.gen_2\n        execute_b7b391 -> getat_f3f2ab.execute\n        getat_f3f2ab.continue -> for_3c1d5e.reset\n        add_e9a6f4.result -> mod_1d5c7e.value\n        ifexpression_ea4f8f.then -> continue_9a54bb\n        for_3c1d5e.done -> continue_9a54bb\n        getat_f3f2ab.list -> generaterange_7c5e1d.list\n    }\n\n    \n\n    instance(x: -36, y: 4) num_prime_eb8f6f root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -224, y: -226) expression_1e6d8c root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_1e6d8c.gen_0\n        y_5390f5 -> expression_1e6d8c.gen_1\n        expression_1e6d8c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -186, y: 81) opposite_signs_2b4a7e root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 185, y: -20) expression_c8b5d6 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_27f29c -> expression_c8b5d6.gen_0\n        expression_c8b5d6.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -23, y: 18) is_diff_1a7e9 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 30) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -36, y: -33) set_1e3c9d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -40, y: 60) reduce_7a8f0c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -123, y: 52, name: \"acc\") property(Number) acc_5d4e9e\n\n            in(x: -124, y: -3, name: \"val\") property(Number) val_6c8f2b\n\n            out(x: 515, y: 44, name: \"\") property(Number) _7dd980\n\n            instance(x: 89, y: 29) mul_9e5a4d root.Std_k98ojb.Math.Mul {}\n            acc_5d4e9e -> mul_9e5a4d.first\n            val_6c8f2b -> mul_9e5a4d.second\n            mul_9e5a4d.result -> _7dd980\n        } -> reduce_7a8f0c.reducer\n        instance(x: -40, y: 60) sort_3a1c1c root.Std_k98ojb.List.Sort {}\n        list_5fda54 -> set_1e3c9d.left\n        sort_3a1c1c.sorted -> set_1e3c9d.right\n        set_1e3c9d.difference -> reduce_7a8f0c.items\n        1 -> reduce_7a8f0c.initial_value\n        reduce_7a8f0c.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -36, y: -33) unique_product_9e4b5d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -289, y: 32, name: \"difference1\") difference_5d6a7f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -292, y: -85, name: \"difference2\") difference_9c8e4f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5d6a7f.left\n        list2_ai -> difference_5d6a7f.right\n        list2_ai -> difference_9c8e4f.left\n        list1_ai -> difference_9c8e4f.right\n        instance(x: 131, y: 56, name: \"concat\") concat_3b0f6b root.Std_k98ojb.List.Concat {}\n        difference_5d6a7f.difference -> concat_3b0f6b.left\n        difference_9c8e4f.difference -> concat_3b0f6b.right\n        concat_3b0f6b.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 79, y: -7) find_dissimilar_1a5d2a root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 299, y: -67) slice_5a6b2e root.Std_k98ojb.List.Slice {}\n        instance(x: 517, y: -114) concat_4d3c7f root.Std_k98ojb.List.Concat {}\n        instance(x: 75, y: -68) length_1e0c9a root.Std_k98ojb.List.Length {}\n        instance(x: 73, y: 23) sub_2e5d6d root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_5a6b2e.list\n        n_68068c -> slice_5a6b2e.start\n        length_1e0c9a.list -> sub_2e5d6d.first\n        n_68068c -> sub_2e5d6d.second\n        -1 -> slice_5a6b2e.end\n        0 -> concat_4d3c7f.left\n        slice_5a6b2e.slice -> concat_4d3c7f.right\n        sub_2e5d6d.result -> slice_5a6b2e.start\n        list_48148f -> slice_5a6b2e.list\n        -1 -> slice_5a6b2e.end\n        length_1e0c9a.length -> concat_4d3c7f.left\n        slice_5a6b2e.slice -> concat_4d3c7f.right\n        concat_4d3c7f.result -> output_823209\n    }\n\n    \n\n    instance(x: -244, y: -119) rotate_right_b1f8a0 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 55, y: 17) reduce_1e7d6b root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -179, y: -65, name: \"accumulated\") property(Number) accumulated_4c3a2f\n            in(x: -169, y: 41, name: \"current\") property(Number) current_7e5b9d\n\n            out(x: 536, y: -62, name: \"sum\") property(Number) sum_1b6f0e\n\n            instance(x: 76, y: 8) add_3a4c2a root.Std_k98ojb.Math.Add {}\n            accumulated_4c3a2f -> add_3a4c2a.first\n            current_7e5b9d -> add_3a4c2a.second\n            add_3a4c2a.result -> sum_1b6f0e\n        } -> reduce_1e7d6b.reducer\n        0 -> reduce_1e7d6b.initialValue\n        list_2c62ab -> reduce_1e7d6b.items\n        reduce_1e7d6b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -115, y: -3) _sum_5b4a8e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1028, y: -31) ifexpression_5c2f6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1034, y: -131) if_9a3d7c root.Std_k98ojb.Std.If {}\n        instance(x: 1025, y: -216) lessthanorequal_bf8e6a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1034, y: 21) expression_9a2d3c root.Std_k98ojb.Math.Expression {\n            expression: \"num / i == i\"\n        }\n        instance(x: 1025, y: -1) and_7f8e0d root.Std_k98ojb.Logic.And {}\n        instance(x: 1034, y: 78) ifexpression_d9a3c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == 2\"\n        }\n        instance(x: 1025, y: 52) or_8d1f6e root.Std_k98ojb.Logic.Or {}\n        instance(x: 1034, y: -85) ifexpression_ea3c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"i % 2 == 0\"\n        }\n        instance(x: 1025, y: -59) not_8f1e9d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1034, y: -169) ifexpression_ea3c7c_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i % 2 == 0\"\n        }\n        instance(x: 1025, y: -143) not_8f1e9d_2 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1034, y: -217) for_7a3c6c root.Std_k98ojb.Std.For {}\n        instance(x: 1025, y: -291) generaterange_d9a3c2 root.Std_k98ojb.List.GenerateRange {}\n        lessthanorequal_bf8e6a.result -> if_9a3d7c.predicate\n        for_7a3c6c.onItem -> if_9a3d7c.execute\n        num_5c0677 -> lessthanorequal_bf8e6a.right\n        for_7a3c6c.item -> lessthanorequal_bf8e6a.left\n        ifexpression_5c2f6e.value -> and_7f8e0d.left\n        expression_9a2d3c.result -> and_7f8e0d.right\n        and_7f8e0d.result -> if_9a3d7c.then\n        num_5c0677 -> expression_9a2d3c.gen_1\n        for_7a3c6c.item -> expression_9a2d3c.gen_0\n        ifexpression_d9a3c2.value -> or_8d1f6e.left\n        ifexpression_ea3c7c.value -> or_8d1f6e.right\n        ifexpression_ea3c7c_2.value -> not_8f1e9d.predicate\n        not_8f1e9d.result -> or_8d1f6e.left\n        ifexpression_d9a3c2.value -> output_c457b3\n        num_5c0677 -> ifexpression_d9a3c2.gen_0\n        2 -> ifexpression_d9a3c2.gen_1\n        not_8f1e9d_2.predicate -> ifexpression_ea3c7c_2.predicate\n        ifexpression_ea3c7c_2.value -> or_8d1f6e.right\n        for_7a3c6c.item -> ifexpression_ea3c7c.gen_0\n        2 -> ifexpression_ea3c7c.gen_1\n        num_5c0677 -> generaterange_d9a3c2.from\n        Math.Floor(num_5c0677 / 2) -> generaterange_d9a3c2.to\n        generaterange_d9a3c2.list -> for_7a3c6c.items\n        ifexpression_ea3c7c.value -> not_8f1e9d_2.result\n        execute_b7b391 -> for_7a3c6c.reset\n        if_9a3d7c.else -> continue_9a54bb\n        or_8d1f6e.result -> ifexpression_ea3c7c.predicate\n        ifexpression_5c2f6e.value -> ifexpression_5c2f6e_2.gen_0\n        for_7a3c6c.item -> ifexpression_5c2f6e_2.gen_1\n        num_5c0677 -> ifexpression_5c2f6e_2.gen_2\n        instance(x: 1034, y: -31) ifexpression_5c2f6e_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0)\"\n        }\n        for_7a3c6c.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 11, y: -13) num_prime_c1f4d8 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -180, y: -242) expression_c6e8c1 root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_c6e8c1.gen_0\n        y_5390f5 -> expression_c6e8c1.gen_1\n        expression_c6e8c1.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -189, y: 222) opposite_signs_f0be66 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 201, y: -11) modulo_9a3b1e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 451, y: 4) equal_5c8d7c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_9a3b1e.value\n        11 -> modulo_9a3b1e.divisor\n        modulo_9a3b1e.result -> equal_5c8d7c.left\n        0 -> equal_5c8d7c.right\n        equal_5c8d7c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -10, y: 18) is_diff_3a4b2e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_2c7b8f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2c7b8f.input\n        search_ai -> replace_2c7b8f.search\n        replace_ai -> replace_2c7b8f.replace\n        replace_2c7b8f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -32, y: -20) unique_5e1f9c root.Std_k98ojb.List.Flatten {}\n        instance(x: -34, y: 60) set_8a7d0c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -42, y: 134) reduce_3f4b5e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -32, y: 210) map_1a6f2c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -34, y: 284) concat_9d8a3d root.Std_k98ojb.List.Concat {}\n        instance(x: -42, y: 358) mul_7e0c4c root.Std_k98ojb.Math.Mul {}\n        instance(x: -32, y: 432) slice_5f2c6c root.Std_k98ojb.List.Slice {}\n        instance(x: -34, y: 506) sub_1d9a8c root.Std_k98ojb.Math.Sub {}\n        instance(x: -42, y: 580) length_7e0c4c root.Std_k98ojb.List.Length {}\n\n        execute_19300c -> unique_product.execute\n        list_5fda54 -> concat_9d8a3d.left\n        slice_5f2c6c.slice -> concat_9d8a3d.right\n\n        func() {\n            in(x: -113, y: 34, name: \"x\") property(List) x_9f6850\n\n            out(x: 515, y: 44, name: \"\") property(List) _7dd980\n\n            unique_5e1f9c.items -> x_9f6850\n            unique_5e1f9c.flattened -> _7dd980\n        } -> map_1a6f2c.handler\n        concat_9d8a3d.result -> map_1a6f2c.items\n\n        func() {\n            in(x: -113, y: 34, name: \"x\") property(Number) x_9f6850\n\n            out(x: 515, y: 44, name: \"\") property(List) _7dd980\n\n            instance(x: 89, y: 29) list_5e1f9c root.Std_k98ojb.List.Empty {}\n            instance(x: 310, y: 35) add_807ffd root.Std_k98ojb.List.Add {}\n\n            x_9f6850 -> add_807ffd.item\n            list_5e1f9c.list -> add_807ffd.list\n\n            add_807ffd.listWithItem -> _7dd980\n        } -> concat_9d8a3d.handler\n\n        func() {\n            in(x: -113, y: 34, name: \"x\") property(Number) x_9f6850\n\n            in(x: -113, y: 64, name: \"y\") property(Number) y_7dd980\n\n            out(x: 515, y: 44, name: \"\") property(Number) _807ffd\n\n            mul_7e0c4c.first -> x_9f6850\n            mul_7e0c4c.second -> y_7dd980\n            mul_7e0c4c.result -> _807ffd\n        } -> reduce_3f4b5e.reducer\n\n        map_1a6f2c.output_list -> set_8a7d0c.left\n        concat_9d8a3d.result -> set_8a7d0c.right\n        set_8a7d0c.difference -> reduce_3f4b5e.items\n\n        1 -> sub_1d9a8c.first\n        length_7e0c4c.list -> length_7e0c4c.list\n        length_7e0c4c.length -> sub_1d9a8c.second\n        sub_1d9a8c.result -> slice_5f2c6c.start\n\n        reduce_3f4b5e.accumulated -> output_cffcc2\n        continue_45190b -> unique_product.continue\n    }\n\n    \n\n    instance(x: -32, y: 658) unique_product_1a6f2c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -280, y: 53, name: \"intersection\") intersection_1 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -20, y: 91, name: \"difference1\") difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 93, name: \"difference2\") difference_3 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> intersection_1.left\n        list2_ai -> intersection_1.right\n        list1_ai -> difference_2.left\n        intersection_1.intersection -> difference_2.right\n        list2_ai -> difference_3.left\n        intersection_1.intersection -> difference_3.right\n        instance(x: 320, y: 53, name: \"concat\") concat_4 root.Std_k98ojb.List.Concat {}\n        difference_2.difference -> concat_4.list1\n        difference_3.difference -> concat_4.list2\n        concat_4.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -120, y: 32) find_dissimilar_5 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 107, y: -63) slice_9a1b2f root.Std_k98ojb.List.Slice {}\n        instance(x: 224, y: -64) reversed_4e7d5c root.Std_k98ojb.List.Reversed {}\n        instance(x: 448, y: -112) concat_6e0f3c root.Std_k98ojb.List.Concat {}\n        instance(x: 672, y: -63) slice_1a8b2c root.Std_k98ojb.List.Slice {}\n        list_48148f -> reversed_4e7d5c.list\n        reversed_4e7d5c.reversed -> concat_6e0f3c.left\n        n_68068c -> slice_9a1b2f.end\n        0 -> slice_9a1b2f.start\n        list_48148f -> slice_9a1b2f.list\n        slice_9a1b2f.slice -> reversed_4e7d5c.list\n        reversed_4e7d5c.reversed -> concat_6e0f3c.right\n        list_48148f -> slice_1a8b2c.list\n        0 -> slice_1a8b2c.start\n        n_68068c -> slice_1a8b2c.end\n        slice_1a8b2c.slice -> concat_6e0f3c.left\n        concat_6e0f3c.result -> output_823209\n    }\n\n    \n\n    instance(x: -280, y: 136) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 13, y: 12) reduce_5b9d7e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_5b9d7e.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_5b9d7e.reducer\n        0 -> reduce_5b9d7e.initialValue\n        reduce_5b9d7e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -132, y: -3) _sum_1c4c6c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 0, y: 31) generaterange_6f7c8e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 333, y: -26) lessthanorequal_5d3a1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -115) for_6f7a9e root.Std_k98ojb.Std.For {}\n        instance(x: 1012, y: -26) if_8a4c5d root.Std_k98ojb.Std.If {}\n        instance(x: 1033, y: -110) expression_1a0bdc root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1026, y: -187) ifexpression_7f9c8e root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 666, y: -115) add_1d5a4c root.Std_k98ojb.Math.Add {}\n        num_5c0677 -> generaterange_6f7c8e.from\n        2 -> generaterange_6f7c8e.to\n        generaterange_6fgsdf.list -> for_6f7a9e.items\n        lessthanorequal_5d3a1c.left -> expression_1a0bdc.gen_0\n        num_5c0677 -> lessthanorequal_5d3a1c.right\n        lessthanorequal_5d3a1c.result -> ifexpression_7f9c8e.expression\n        for_6f7a9e.item -> expression_1a0bdc.gen_1\n        execute_b7b391 -> for_6f7a9e.reset\n        expression_1a0bdc.result -> if_8a4c5d.predicate\n        for_6f7a9e.onItem -> if_8a4c5d.execute\n        1 -> add_1d5a4c.first\n        1 -> add_1d5a4c.second\n        add_1d5a4c.result -> for_6f7a9e.next\n        ifexpression_7f9c8e.then -> continue_9a54bb\n        if_8a4c5d.else -> continue_9a54bb\n        for_6f7a9e.done -> continue_9a54bb\n        if_8a4c5d.then -> output_c457b3\n    }\n\n    \n\n    instance(x: 18, y: -13) num_prime_1f2c0c root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -186) mul_f8e7c4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -107, y: -47) lessthanorequal_c5d0f6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 48, y: -160) if_9a1e2c root.Std_k98ojb.Std.If {}\n        x_853326 -> mul_f8e7c4.first\n        y_5390f5 -> mul_f8e7c4.second\n        lessthanorequal_c5d0f6.result -> if_9a1e2c.predicate\n        0 -> lessthanorequal_c5d0f6.right\n        mul_f8e7c4.result -> lessthanorequal_c5d0f6.left\n        if_9a1e2c.value -> output_3339a3\n    }\n\n    \n\n    instance(x: -189, y: 222) opposite_signs_7b9c6a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -17) characters_ea9b1e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 377, y: -18) map_6c3d4f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 568, y: -19) reduce_2c0c5f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 743, y: -20) modulo_1e8a7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 880, y: -21) equal_3d4f9c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> characters_ea9b1e.input\n        func() {\n            in(x: -37, y: 45, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            instance(x: -27, y: 57, name: \"index\") property(Number) index_7a1c8e\n            instance(x: 4, y: 82, name: \"context\") property(Bool) context_e5f6d9\n\n            element_5f51f7 -> mul_2f9d09.first\n            index_7a1c8e -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6c3d4f.handler\n        characters_ea9b1e.characters -> map_6c3d4f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -110, y: 79, name: \"accumulated\") property(Number) accumulated_1a9b7c\n\n            out(x: 521, y: -28, name: \"out\") property(Number) out_4d5f6d\n\n            instance(x: 74, y: -23) add_b4554f root.Std_k98ojb.Math.Add {}\n            current_81298e -> add_b4554f.first\n            accumulated_1a9b7c -> add_b4554f.second\n            add_b4554f.result -> out_4d5f6d\n        } -> reduce_2c0c5f.reducer\n        map_6c3d4f.output_list -> reduce_2c0c5f.items\n        0 -> reduce_2c0c5f.initialValue\n        reduce_2c0c5f.result -> modulo_1e8a7e.value\n        11 -> modulo_1e8a7e.divisor\n        modulo_1e8a7e.result -> equal_3d4f9c.left\n        0 -> equal_3d4f9c.right\n        equal_3d4f9c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -33, y: 11) is_diff_1b2a6e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_6a2b7f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_6a2b7f.input\n        search_ai -> replace_6a2b7f.search\n        replace_ai -> replace_6a2b7f.replace\n        replace_6a2b7f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1041, y: 137, name: \"lowercase\") tolower_8e3d9c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_8e3d9c.input\n        tolower_8e3d9c.output -> output_ai\n    }\n\n    \n\n    instance(x: -32, y: 137) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -417, y: 0) set_ae1c6a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -304, y: -93) reduce_8f4d5c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -91, y: -35) mul_7c9f2e root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: 0) map_6a1d8f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"\") property(Number) _7dd980\n\n            instance(x: 89, y: 29) count_5d4b3e root.Std_k98ojb.Count {}\n            execute_19300c -> count_5d4b3e.trigger\n            count_5d4b3e.count -> mul_7c9f2e.first\n            elem_9f6850 -> mul_7c9f2e.second\n            1 -> mul_7c9f2e.first\n            mul_7c9f2e.result -> _7dd980\n        } -> map_6a1d8f.handler\n        list_5fda54 -> map_6a1d8f.items\n        func() {\n            in(x: -113, y: 34, name: \"accum\") property(Number) accum_eb9c0e\n\n            in(x: -53, y: 44, name: \"elem\") property(Number) elem_2d7e4a\n\n            out(x: 515, y: 44, name: \"\") property(Number) _6f8c3c\n\n            instance(x: 89, y: 29) count_5d4b3e root.Std_k98ojb.Count {}\n            execute_19300c -> count_5d4b3e.trigger\n            count_5d4b3e.count -> mul_7c9f2e.first\n            accum_eb9c0e -> mul_7c9f2e.second\n            elem_2d7e4a -> mul_7c9f2e.first\n            mul_7c9f2e.result -> _6f8c3c\n        } -> reduce_8f4d5c.reducer\n        map_6a1d8f.output_list -> reduce_8f4d5c.items\n        1 -> reduce_8f4d5c.initialValue\n        reduce_8f4d5c.result -> output_cffcc2\n        list_5fda54 -> set_ae1c6a.left\n        map_6a1d8f.output_list -> set_ae1c6a.right\n        set_ae1c6a.difference -> reduce_8f4d5c.items\n    }\n\n    \n\n    instance(x: -91, y: 0) unique_product_3b2d9f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -240, y: 67) difference_1d7f5e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -320, y: 3) difference_2a9c4c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1d7f5e.left\n        list2_ai -> difference_1d7f5e.right\n        list2_ai -> difference_2a9c4c.left\n        list1_ai -> difference_2a9c4c.right\n        instance(x: 86, y: 70) concat_8b0f6c root.Std_k98ojb.List.Concat {}\n        difference_1d7f5e.difference -> concat_8b0f6c.left\n        difference_2a9c4c.difference -> concat_8b0f6c.right\n        concat_8b0f6c.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 69, y: -1) find_dissimilar_3d7e5f root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 213, y: -83) slice_6e1f7d root.Std_k98ojb.List.Slice {}\n        instance(x: 375, y: -84) reversed_9c2a8d root.Std_k98ojb.List.Reversed {}\n        instance(x: 599, y: -85) concat_4b0c3c root.Std_k98ojb.List.Concat {}\n        instance(x: 778, y: -86) slice_7e1f6e root.Std_k98ojb.List.Slice {}\n        list_48148f -> reversed_9c2a8d.list\n        reversed_9c2a8d.reversed -> concat_4b0c3c.left\n        list_48148f -> slice_6e1f7d.list\n        n_68068c -> slice_6e1f7d.start\n        -1 -> slice_6e1f7d.end\n        slice_6e1f7d.slice -> concat_4b0c3c.right\n        list_48148f -> slice_7e1f6e.list\n        0 -> slice_7e1f6e.start\n        n_68068c -> slice_7e1f6e.end\n        slice_7e1f6e.slice -> output_823209\n        concat_4b0c3c.result -> slice_7e1f6e.list\n    }\n\n    \n\n    instance(x: 32, y: -110) rotate_right_8d9a5d root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 69, y: 15) reduce_4b9d8e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4b9d8e.initialValue\n        list_2c62ab -> reduce_4b9d8e.items\n        func() {\n            in(x: -152, y: -48, name: \"accumulated\") property(Number) accumulated_7a3f1d\n            in(x: -144, y: 49, name: \"current\") property(Number) current_6c4b2f\n\n            out(x: 557, y: -43, name: \"sum\") property(Number) sum_5e9f8a\n\n            instance(x: 101, y: 7) add_3d0a1c root.Std_k98ojb.Math.Add {}\n            accumulated_7a3f1d -> add_3d0a1c.first\n            current_6c4b2f -> add_3d0a1c.second\n            add_3d0a1c.result -> sum_5e9f8a\n        } -> reduce_4b9d8e.reducer\n        reduce_4b9d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 42, y: -12) _sum_7a6a0c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 0, y: -37) generaterange_8e7f4d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 338, y: -31) lessthanorequal_6c5f3c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -189) for_1e9a8d root.Std_k98ojb.Std.For {}\n        instance(x: 1012, y: -34) if_e7e4ab root.Std_k98ojb.Std.If {}\n        instance(x: 720, y: -31) expression_a0f3c5 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 714, y: -145) if_2e1d9a root.Std_k98ojb.Std.If {}\n        instance(x: 1028, y: -182) add_5c6f7c root.Std_k98ojb.Math.Add {}\n        lessthanorequal_6c5f3c.result -> if_2e1d9a.predicate\n        expression_a0f3c5.result -> if_e7e4ab.predicate\n        for_1e9a8d.item -> expression_a0f3c5.gen_0\n        num_5c0677 -> lessthanorequal_6c5f3c.right\n        generaterange_8e7f4d.list -> for_1e9a8d.items\n        2 -> generaterange_8e7f4d.from\n        num_5c0677 -> generaterange_8e7f4d.to\n        if_e7e4ab.else -> continue_9a54bb\n        if_2e1d9a.then -> continue_9a54bb\n        for_1e9a8d.onItem -> if_e7e4ab.execute\n        1 -> add_5c6f7c.first\n        1 -> add_5c6f7c.second\n        add_5c6f7c.result -> expression_a0f3c5.gen_1\n        for_1e9a8d.index -> add_5c6f7c.second\n        if_e7e4ab.then -> if_2e1d9a.execute\n        execute_b7b391 -> for_1e9a8d.reset\n        if_2e1d9a.else -> for_1e9a8d.next\n        0 -> if_2e1d9a.value\n        if_e7e4ab.then -> output_c457b3\n        for_1e9a8d.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -12, y: 62) num_prime_5f0c6d root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -207, y: -197) expression_1e6d8c root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_1e6d8c.gen_0\n        y_5390f5 -> expression_1e6d8c.gen_1\n        expression_1e6d8c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -186, y: 126) opposite_signs_2b4a7e root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 187, y: -20) expression_c6b5d9 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_27f29c -> expression_c6b5d9.gen_0\n        expression_c6b5d9.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -30, y: 18) is_diff_1a7e8 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 30) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -7, y: -44) set_1e3c9d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -127, y: 31) reduce_5a4f8c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -125, y: 10, name: \"acc\") property(Number) acc_7d0e9e\n\n            in(x: -113, y: 19, name: \"val\") property(Number) val_8c6f2b\n\n            out(x: 533, y: 4, name: \"\") property(Number) _a3b1dc\n\n            instance(x: 30, y: 18) mul_c5d0e7 root.Std_k98ojb.Math.Mul {}\n            acc_7d0e9e -> mul_c5d0e7.first\n            val_8c6f2b -> mul_c5d0e7.second\n            mul_c5d0e7.result -> _a3b1dc\n        } -> reduce_5a4f8c.reducer\n        1 -> reduce_5a4f8c.initialValue\n        list_5fda54 -> set_1e3c9d.left\n        list_5fda54 -> set_1e3c9d.right\n        set_1e3c9d.difference -> reduce_5a4f8c.items\n        reduce_5a4f8c.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    \n\n    instance(x: -7, y: 0) unique_product_1e3c9d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -286, y: 32, name: \"difference1\") difference_5d6a7f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -72, y: 118, name: \"difference2\") difference_4c8e3f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5d6a7f.left\n        list2_ai -> difference_5d6a7f.right\n        list2_ai -> difference_4c8e3f.left\n        list1_ai -> difference_4c8e3f.right\n        instance(x: 240, y: 93) concat_0b9c85 root.Std_k98ojb.List.Concat {}\n        difference_5d6a7f.difference -> concat_0b9c85.list1\n        difference_4c8e3f.difference -> concat_0b9c85.list2\n        concat_0b9c85.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -30, y: 87) find_dissimilar_5a6d7f root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 226, y: -89) slice_9a6f5e root.Std_k98ojb.List.Slice {}\n        instance(x: 228, y: 12) sub_4d0c2c root.Std_k98ojb.Math.Sub {}\n        instance(x: 451, y: -88) slice_7c8e1e root.Std_k98ojb.List.Slice {}\n        instance(x: 453, y: 11) concat_3f9a6b root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_9a6f5e.list\n        n_68068c -> sub_4d0c2c.first\n        length(list_48148f) -> sub_4d0c2c.second\n        sub_4d0c2c.result -> slice_9a6f5e.start\n        -1 -> slice_9a6f5e.end\n        list_48148f -> slice_7c8ee.list\n        0 -> slice_7c8ee.start\n        sub_4d0c2c.result -> slice_7c8ee.end\n        slice_9a6f5e.slice -> concat_3f9a6b.left\n        slice_7c8ee.slice -> concat_3f9a6b.right\n        concat_3f9a6b.result -> output_823209\n    }\n\n    \n\n    instance(x: 21, y: -111) rotate_right_1d5e4a root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 68, y: 13) reduce_1e7d6b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_1e7d6b.items\n        func() {\n            in(x: -162, y: -18, name: \"accumulated\") property(Number) accumulated_9f0a3e\n            in(x: -155, y: 43, name: \"current\") property(Number) current_8c1c7d\n\n            out(x: 557, y: -20, name: \"sum\") property(Number) sum_4b5b2e\n\n            instance(x: 56, y: 21) add_9f6a0b root.Std_k98ojb.Math.Add {}\n            accumulated_9f0a3e -> add_9f6a0b.first\n            current_8c1c7d -> add_9f6a0b.second\n            add_9f6a0b.result -> sum_4b5b2e\n        } -> reduce_1e7d6b.reducer\n        0 -> reduce_1e7d6b.initialValue\n        reduce_1e7d6b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -115, y: 3) _sum_9c4a8e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1047, y: -76) ifexpression_5c2f6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1028, y: -187) lessthanorequal_9d1a4f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1057, y: -315) for_c6e3c2 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: -88) generaterange_5c9d1a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 0, y: -232) add_e4f7ee root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: -347) if_2e6c8a root.Std_k98ojb.Std.If {}\n        lessthanorequal_9d1a4f.result -> ifexpression_5c2f6e.gen_0\n        num_5c0677 -> lessthanorequal_9d1a4f.right\n        for_c6e3c2.item -> lessthanorequal_9d1a4f.left\n        generaterange_5c9d1a.list -> for_c6e3c2.items\n        ifexpression_5c2f6e.value -> if_2e6c8a.predicate\n        for_c6e3c2.onItem -> ifexpression_5c2f6e.execute\n        1 -> generaterange_5c9d1a.from\n        num_5c0677 -> generaterange_5c9d1a.to\n        add_e4f7ee.result -> for_c6e3c2.index\n        1 -> add_e4f7ee.second\n        for_c6e3c2.item -> add_e4f7ee.first\n        if_2e6c8a.else -> continue_9a54bb\n        if_2e6c8a.then -> continue_9a54bb\n        if_2e6c8a.value -> output_c457b3\n        execute_b7b391 -> for_c6e3c2.reset\n        ifexpression_5c2f6e.else -> add_e4f7ee.execute\n        for_c6e3c2.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -18, y: 16) num_prime_0b1d8f root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -178, y: -247) expression_7e6c1d root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_7e6c1d.gen_0\n        y_5390f5 -> expression_7e6c1d.gen_1\n        expression_7e6c1d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -192, y: 139) opposite_signs_8b4f2f root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 186, y: -24) expression_7e8b9a root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_27f29c -> expression_7e8b9a.gen_0\n        expression_7e8b9a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -12, y: 10) is_diff_1d3f4 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 30) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -1, y: 0) set_ae4f9c root.Std_k98ojb.List.Set {}\n        list_5fda54 -> set_ae4f9c.items\n        instance(x: 0, y: 0) reduce_3a7d8f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_1e6c9c\n\n            in(x: -33, y: 44, name: \"item\") property(Number) item_7f8a2d\n\n            out(x: 515, y: 44, name: \"\") property(Number) _b4f3ad\n\n            instance(x: 89, y: 29) mul_1e9c0c root.Std_k98ojb.Math.Mul {}\n            acc_1e6c9c -> mul_1e9c0c.first\n            item_7f8a2d -> mul_1e9c0c.second\n            mul_1e9c0c.result -> _b4f3ad\n        } -> reduce_3a7d8f.reducer\n        set_ae4f9c.set -> reduce_3a7d8f.items\n        1 -> reduce_3a7d8f.initialValue\n        reduce_3a7d8f.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -1, y: 0) unique_product_5e9c4b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -301, y: 32, name: \"intersection\") intersection_3f9a1e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -201, y: 92, name: \"difference1\") difference_7c8d4f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -101, y: 152, name: \"difference2\") difference_9e3a5f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> intersection_3f9a1e.left\n        list2_ai -> intersection_3f9a1e.right\n        instance(x: -401, y: 92, name: \"concat\") concat_7c8d4f root.Std_k98ojb.List.Concat {}\n        difference_7c8d4f.difference -> concat_7c8d4f.left\n        difference_9e3a5f.difference -> concat_7c8d4f.right\n        intersection_3f9a1e.intersection -> difference_7c8d4f.right\n        intersection_3f9a1e.intersection -> difference_9e3a5f.right\n        list1_ai -> difference_7c8d4f.left\n        list2_ai -> difference_9e3a5f.left\n        concat_7c8d4f.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 100, y: -20) find_dissimilar_6b1c0e root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 55, y: -67) slice_7a1f8e root.Std_k98ojb.List.Slice {}\n        instance(x: 72, y: 15, name: \"slice2\") slice_5c9d4f root.Std_k98ojb.List.Slice {}\n        instance(x: 281, y: -3) concat_6e7a1c root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_7a1f8e.list\n        n_68068c -> sub_9d5f2e.first\n        length_4b8927.length -> sub_9d5f2e.second\n        sub_9d5f2e.result -> slice_7a1f8e.start\n        -1 -> slice_7a1f8e.end\n        list_48148f -> slice_5c9d4f.list\n        0 -> slice_5c9d4f.start\n        sub_9d5f2e.result -> slice_5c9d4f.end\n        slice_7a1f8e.slice -> concat_6e7a1c.right\n        slice_5c9d4f.slice -> concat_6e7a1c.left\n        concat_6e7a1c.result -> output_823209\n        list_48148f -> length_4b8927.list\n        instance(x: 0, y: -122) sub_9d5f2e root.Std_k98ojb.Math.Sub {}\n    }\n\n    \n\n    instance(x: -280, y: -111) rotate_right_1a3c8c root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 12, y: 11) reduce_7e1b9d root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7e1b9d.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_7e1b9d.reducer\n        0 -> reduce_7e1b9d.initialValue\n        reduce_7e1b9d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 0, y: 30) generaterange_8e6f2c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 333, y: -10) lessthanorequal_1d7b5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -150) for_8e9f3a root.Std_k98ojb.Std.For {}\n        instance(x: 1006, y: -50) if_e4f2da root.Std_k98ojb.Std.If {}\n        instance(x: 1017, y: 60) expression_1c0d5c root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1009, y: -20) if_3a4f2e root.Std_k98ojb.Std.If {}\n        instance(x: 1028, y: -140) add_1c7d5c root.Std_k98ojb.Math.Add {}\n        num_5c0677 -> generaterange_8e6f2c.from\n        2 -> generaterange_8e6f2c.to\n        generaterange_8e6f2c.list -> for_8e9f3a.items\n        for_8e9f3a.item -> lessthanorequal_1d7b5c.left\n        num_5c0677 -> lessthanorequal_1d7b5c.right\n        lessthanorequal_1d7b5c.result -> if_3a4f2e.predicate\n        for_8e9f3a.onItem -> if_3a4f2e.execute\n        if_3a4f2e.else -> continue_9a54bb\n        num_5c0677 -> expression_1c0d5c.gen_0\n        for_8e9f3a.item -> expression_1c0d5c.gen_1\n        expression_1c0d5c.result -> if_e4f2da.predicate\n        if_3a4f2e.then -> if_e4f2da.execute\n        1 -> add_1c7d5c.first\n        for_8e9f3a.index -> add_1c7d5c.second\n        add_1c7d5c.result -> expression_1c0d5c.gen_1\n        if_e4f2da.then -> continue_9a54bb\n        if_e4f2da.else -> for_8e9f3a.next\n        execute_b7b391 -> for_8e9f3a.reset\n        for_8e9f3a.done -> continue_9a54bb\n        0 -> if_e4f2da.value\n        1 -> if_e4f2da.value\n        if_e4f2da.then -> output_c457b3\n    }\n\n    \n\n    instance(x: -10, y: -12) num_prime_7e8c9d root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -189, y: -245) mul_c1b7c6 root.Std_k98ojb.Math.Mul {}\n        instance(x: -4, y: -109) lessthanorequal_d5d8e2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_c1b7c6.first\n        y_5390f5 -> mul_c1b7c6.second\n        0 -> lessthanorequal_d5d8e2.right\n        mul_c1b7c6.result -> lessthanorequal_d5d8e2.left\n        lessthanorequal_d5d8e2.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -191, y: 66) opposite_signs_b0f7ab root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 184, y: -22) mod_d4b9d1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 431, y: -19) equal_5e3c6a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> mod_d4b9d1.value\n        11 -> mod_d4b9d1.divisor\n        mod_d4b9d1.result -> equal_5e3c6a.left\n        0 -> equal_5e3c6a.right\n        equal_5e3c6a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -11, y: -7) is_diff_a2b9d8 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_6b8d9f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_6b8d9f.input\n        search_ai -> replace_6b8d9f.search\n        replace_ai -> replace_6b8d9f.replace\n        replace_6b8d9f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1043, y: 135, name: \"lowercase\") tolower_1d5f9a root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_1d5f9a.input\n        func() {\n            in(x: -271, y: -51, name: \"current\") property(String) current_b8e6c4\n\n            out(x: 404, y: -55, name: \"output\") property(Bool) output_c0b7d2\n\n            instance(x: 24, y: -57, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_9c5a6e root.Std_k98ojb.Logic.Equal {}\n            current_b8e6c4 -> equal_9c5a6e.left\n            tolower_1d5f9a.output -> equal_9c5a6e.right\n            equal_9c5a6e.equal -> output_c0b7d2\n        } -> instance(x: 1038, y: -51) ifnode_e4f3b6 root.Std_k98ojb.Std.If {}\n        tolower_1d5f9a.output -> instance(x: 1042, y: 135) not_2c0f8e root.Std_k98ojb.Logic.Not {}.input\n        not_2c0f8e.not -> ifnode_e4f3b6.input\n        func() {\n            out(x: 406, y: -55, name: \"output\") property(Bool) output_c1a5d7\n\n            instance(x: 24, y: -57, stableId: \"dnbuj51ajiozratdcge1fc3s\") true_4c8e2 root.Std_k98ojb.Std.True {}\n            true_4c8e2.true -> output_c1a5d7\n        } -> ifnode_e4f3b6.then\n        func() {\n            out(x: 406, y: -55, name: \"output\") property(Bool) output_c0c9ed\n\n            instance(x: 24, y: -57, stableId: \"dnbuj51ajiozratdcge1fc3s\") false_4d8e2 root.Std_k98ojb.Std.False {}\n            false_4d8e2.false -> output_c0c9ed\n        } -> ifnode_e4f3b6.else\n        ifnode_e4f3b6.value -> output_ai\n    }\n\n    \n\n    instance(x: 1038, y: -51) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -40, y: -11) set_a0d3c4 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -60, y: 54) product_9f7e5a root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it1 * it2\"\n        }\n        instance(x: -180, y: 55) map_4c3c0d root.Std_k98ojb.Iteration.Map {}\n        list_5fda54 -> set_a0d3c4.left\n        list_5fda54 -> set_a0d3c4.right\n        execute_19300c -> product_9f7e5a.trigger\n        1 -> product_9f7e5a.initial_value\n        map_4c3c0d.output_list -> product_9f7e5a.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8b6b1a\n\n            out(x: 515, y: 44, name: \"\") property(Number) _d3c4a2\n\n            instance(x: 89, y: 29) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n            list_5fda54 -> sub_f133b2.first\n            elem_8b6b1a -> sub_f133b2.second\n            sub_f133b2.result -> set_a0d3c4.difference\n            0 -> map_4c3c0d.index\n            set_a0d3c4.difference -> map_4c3c0d.items\n            elem_8b6b1a -> _d3c4a2\n        } -> map_4c3c0d.handler\n        product_9f7e5a.result -> output_cffcc2\n        continue_45190b <- product_9f7e5a.done\n    }\n\n    \n\n    instance(x: 100, y: -20) unique_product_a1b8c9 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -281, y: 53) intersection_5a1d7c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -201, y: 57) difference_9e6f4c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 89, y: 95) concat_e8c3a2 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> intersection_5a1d7c.left\n        list2_ai -> intersection_5a1d7c.right\n\n        difference_9e6f4c.difference -> concat_e8c3a2.list1\n        intersection_5a1d7c.intersection -> concat_e8c3a2.list2\n\n        concat_e8c3a2.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 17, y: -6) find_dissimilar_b4b8e9 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 69, y: -64) modulo_d9a7d2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 277, y: -19) slice_f3c8e4 root.Std_k98ojb.List.Slice {}\n        instance(x: 500, y: -111) concat_0f6e5f root.Std_k98ojb.List.Concat {}\n        n_68068c -> modulo_d9a7d2.value\n        list_48148f -> slice_f3c8e4.list\n        modulo_d9a7d2.result -> slice_f3c8e4.start\n        -1 -> slice_f3c8e4.end\n        list_48148f -> concat_0f6e5f.left\n        slice_f3c8e4.slice -> concat_0f6e5f.right\n        concat_0f6e5f.result -> output_823209\n    }\n\n    \n\n    instance(x: 10, y: -117) rotate_right_1d2b7e root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 24, y: 11) reduce_e6e9d8 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_e6e9d8.items\n        func() {\n            in(x: -184, y: -80, name: \"accumulated\") property(Number) accumulated_5f3a4f\n            in(x: -175, y: 21, name: \"current\") property(Number) current_a1c2b9\n\n            out(x: 1068, y: -76, name: \"sum\") property(Number) sum_6e7d0f\n\n            instance(x: 75, y: 4) add_5f3f2a root.Std_k98ojb.Math.Add {}\n            accumulated_5f3a4f -> add_5f3f2a.first\n            current_a1c2b9 -> add_5f3f2a.second\n            add_5f3f2a.result -> sum_6e7d0f\n        } -> reduce_e6e9d8.reducer\n        0 -> reduce_e6e9d8.initialValue\n        reduce_e6e9d8.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -72, y: 4) _sum_1b5c3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1005, y: -57) lessthanorequal_f0f8c4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1047, y: -157) if_2d3f1e root.Std_k98ojb.Std.If {}\n        instance(x: 1016, y: -253) mod_9a5e0f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1038, y: -349) expression_e4c9ea root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1003, y: -445) if_7e1a6d root.Std_k98ojb.Std.If {}\n        instance(x: 1048, y: -542) add_e4f5c2 root.Std_k98ojb.Math.Add {}\n        instance(x: 1050, y: -640) generaterange_b3c7ec root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1036, y: -736) for_9d1e8a root.Std_k98ojb.Std.For {}\n        lessthanorequal_f0f8c4.result -> if_2d3f1e.predicate\n        num_5c0677 -> lessthanorequal_f0f8c4.right\n        1 -> lessthanorequal_f0f8c4.left\n        if_2d3f1e.else -> continue_9a54bb\n        for_9d1e8a.item -> mod_9a5e0f.value\n        num_5c0677 -> mod_9a5e0f.divisor\n        mod_9a5e0f.result -> expression_e4c9ea.gen_0\n        if_2d3f1e.then -> for_9d1e8a.reset\n        execute_b7b391 -> for_9d1e8a.reset\n        expression_e4c9ea.result -> if_7e1a6d.predicate\n        if_7e1a6d.else -> continue_9a54bb\n        0 -> add_e4f5c2.second\n        1 -> add_e4f5c2.first\n        for_9d1e8a.index -> add_e4f5c2.gen_0\n        add_e4f5c2.result -> expression_e4c9ea.gen_1\n        if_7e1a6d.then -> continue_9a54bb\n        num_5c0677 -> generaterange_b3c7ec.from\n        2 -> generaterange_b3c7ec.to\n        generaterange_b3c7ec.list -> for_9d1e8a.items\n        if_2d3f1e.then -> continue_9a54bb\n        for_9d1e8a.onItem -> expression_e4c9ea.execute\n        for_9d1e8a.done -> continue_9a54bb\n        if_7e1a6d.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -11, y: 5) num_prime_b2f0ed root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -187, y: -221) expression_c7b2e8 root.Std_k98ojb.Math.Expression {\n            expression: \"(x < 0)\"\n        }\n        instance(x: -188, y: -99) expression_f5c1f6 root.Std_k98ojb.Math.Expression {\n            expression: \"(y < 0)\"\n        }\n        instance(x: 11, y: -219) and_2e9a8d root.Std_k98ojb.Logic.And {}\n        instance(x: 7, y: -100) not_c5d1f6 root.Std_k98ojb.Logic.Not {}\n        x_853326 -> expression_c7b2e8.gen_0\n        y_5390f5 -> expression_f5c1f6.gen_0\n        expression_c7b2e8.result -> and_2e9a8d.left\n        not_c5d1f6.input -> expression_f5c1f6.result\n        expression_f5c1f6.result -> not_c5d1f6.input\n        not_c5d1f6.result -> and_2e9a8d.right\n        and_2e9a8d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -186, y: 69) opposite_signs_a4b0c0 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n        instance(x: 210, y: -20) modulo_d4b6d7 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_d4b6d7.value\n        11 -> modulo_d4b6d7.divisor\n        modulo_d4b6d7.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -17, y: 8) is_diff_e9e3a1 root.main.is_diff {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 768, y: 127) replace_3a8b4c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3a8b4c.input\n        search_ai -> replace_3a8b4c.search\n        replace_ai -> replace_3a8b4c.replace\n        replace_3a8b4c.output -> output_ai\n    }\n\n    \n\n    instance(x: -176, y: 0) ReplaceChar_b5d6e1 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1021, y: 131) tolower_4a5f3d root.Std_k98ojb.Strings.ToLower {}\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_e7e2c6\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            current_e7e2c6 -> isnumeric_9cb360.input\n            isnumeric_9cb360.isNumeric -> output_8ba733\n        } -> tolower_4a5f3d.handler\n        input_ai -> tolower_4a5f3d.items\n        tolower_4a5f3d.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: 14, y: -52) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 0, y: 0) set_3e1a5d root.Std_k98ojb.List.Set {\n            items: []\n        }\n\n        instance(x: -40, y: -24) filter_7f9a4c root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) in_a1a5d8 root.Std_k98ojb.List.Contains {}\n            set_3e1a5d.set -> in_a1a5d8.list\n            elem_9f6850 -> in_a1a5d8.item\n\n            instance(x: -28, y: 10) not_2d3c7b root.Std_k98ojb.Logic.Not {}\n            in_a1a5d8.result -> not_2d3c7b.input\n            not_2d3c7b.output -> bool_af09a7\n        } -> filter_7f9a4c.handler\n\n        instance(x: -160, y: 88) map_6e2a2d root.Std_k98ojb.Iteration.Map {}\n\n        func() {\n\n            in(x: -113, y: 34, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_e2d4b0 root.Std_k98ojb.Math.Mul {}\n            set_3e1a5d.first -> mul_e2d4b0.first\n            x_8ee839 -> mul_e2d4b0.second\n\n            instance(x: 92, y: -22) add_a7f6c9 root.Std_k98ojb.Math.Add {}\n            _7dd980 -> add_a7f6c9.first\n            set_3e1a5d.set -> add_a7f6c9.second\n\n            instance(x: 92, y: -22) if_f8db0f root.Std_k98ojb.Std.If {\n                then_trigger: \"add_a7f6c9\"\n                else_trigger: \"_7dd980\"\n            }\n            set_3e1a5d.isEmpty -> if_f8db0f.input\n\n            add_a7f6c9.result -> set_3e1a5d.set\n            mul_e2d4b0.result -> _7dd980\n        } -> map_6e2a2d.handler\n\n\n        instance(x: -40, y: 88) reduce_5ebf8e root.Std_k98ojb.Iteration.Reduce {}\n\n        func() {\n\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_e3e6c1\n\n            in(x: -113, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_c2e5c6 root.Std_k98ojb.Math.Mul {}\n            acc_e3e6c1 -> mul_c2e5c6.first\n            x_8ee839 -> mul_c2e5c6.second\n            mul_c2e5c6.result -> _7dd980\n        } -> reduce_5ebf8e.reducer\n\n        instance(x: 40, y: -24) set_b3d9b4 root.Std_k98ojb.List.Set {\n            items: [1]\n        }\n        list_5fda54 -> filter_7f9a4c.items\n        execute_19300c -> filter_7f9a4c.execute\n        map_6e2a2d.items -> set_b3d9b4.set\n        reduce_5ebf8e.result -> output_cffcc2\n        continue_45190b -> filter_7f9a4c.continue\n\n        filter_7f9a4c.output_list -> map_6e2a2d.items\n\n        set_b3d9b4.set -> reduce_5ebf8e.item\n\n    }\n\n    \n\n    instance(x: 0, y: -24) unique_product_5a4c1e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 5, y: 89) difference_8a3e9d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 92) intersection_c6c0f7 root.Std_k98ojb.Sets.Intersection {}\n        list1_ai -> intersection_c6c0f7.left\n        list2_ai -> intersection_c6c0f7.right\n        intersection_c6c0f7.intersect -> difference_8a3e9d.left\n        instance(x: -299, y: 11) concat_f1b6e4 root.Std_k98ojb.List.Concat {}\n        list1_ai -> concat_f1b6e4.left\n        list2_ai -> concat_f1b6e4.right\n        concat_f1b6e4.concatenated -> difference_8a3e9d.right\n        difference_8a3e9d.difference -> output_ai\n    }\n\n    \n\n    instance(x: -13, y: 23) find_dissimilar_b0f5c7 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 69, y: -99) length_d8a5f6 root.Std_k98ojb.List.Length {}\n        instance(x: 269, y: -97) sub_c7d4e1 root.Std_k98ojb.Math.Sub {}\n        instance(x: 518, y: -115) slice_9c2b3f root.Std_k98ojb.List.Slice {}\n        list_48148f -> length_d8a5f6.list\n        n_68068c -> sub_c7d4e1.first\n        length_d8a5f6.length -> sub_c7d4e1.second\n        sub_c7d4e1.result -> slice_9c2b3f.end\n        list_48148b -> slice_9c2b3f.list\n        -1 -> slice_9c2b3f.start\n        slice_9c2b3f.slice -> output_823209\n    }\n\n    \n\n    instance(x: 10, y: -112) rotate_right_f5e1d6 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 20, y: -7) reduce_1e5d6b root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_1e5d6b.initialValue\n        func() {\n            in(x: -177, y: -86, name: \"accumulated\") property(Number) accumulated_d4c9a2\n            in(x: -167, y: 18, name: \"current\") property(Number) current_e7a8f0\n\n            out(x: 1071, y: -83, name: \"sum\") property(Number) sum_3d5d7e\n\n            instance(x: 76, y: 4) add_9c0b6b root.Std_k98ojb.Math.Add {}\n            accumulated_d4c9a2 -> add_9c0b6b.first\n            current_e7a8f0 -> add_9c0b6b.second\n            add_9c0b6b.result -> sum_3d5d7e\n        } -> reduce_1e5d6b.reducer\n        list_2c62ab -> reduce_1e5d6b.items\n        reduce_1e5d6b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 110, y: -20) _sum_8f4eb0 root.main._sum {}\n}"
            ],
            "48": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -4, y: 29) generaterange_7f0d5c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 332, y: -19) expression_6e2e3a root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 334, y: -131) ifexpression_8c9f4d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != 1 && index != num\"\n        }\n        instance(x: 330, y: -220) if_e3db6e root.Std_k98ojb.Std.If {}\n        instance(x: 660, y: -57) lessthan_4d7c5e root.Std_k98ojb.Math.LessThan {}\n        instance(x: 661, y: -153) and_f3f8a0 root.Std_k98ojb.Logic.And {}\n        instance(x: 659, y: -249) if_6eb9ee root.Std_k98ojb.Std.If {}\n        instance(x: 1015, y: -57) expression_b1c7e2 root.Std_k98ojb.Math.Expression {\n            expression: \"num / i == i\"\n        }\n        instance(x: 1023, y: -152) and_7f4a0d root.Std_k98ojb.Logic.And {}\n        instance(x: 1016, y: -247) if_e1e5c8 root.Std_k98ojb.Std.If {}\n        instance(x: 660, y: -346) lessthan_9f2f5c root.Std_k98ojb.Math.LessThan {}\n        instance(x: 659, y: -442) not_3d7a0c root.Std_knows.Logic.Not {}\n        instance(x: 657, y: -538) if_3e8f6c root.Std_knows.Std.If {}\n        instance(x: 661, y: -636) expression_e1b9f5 root.Std_knows.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 667, y: -732) and_4c6a8d root.Std_knows.Logic.And {}\n        instance(x: 665, y: -828) if_a1f9e2 root.Std_knows.Std.If {}\n        instance(x: 659, y: -926) expression_b5b0ac root.Std_knows.Math.Expression {\n            expression: \"num / i == i\"\n        }\n        instance(x: 667, y: -1021) and_8d6a7e root.Std_knows.Logic.And {}\n        instance(x: 665, y: -1117) if_f2c0b3 root.Std_knows.Std.If {}\n        num_5c0677 -> generaterange_7f0d5c.from\n        2 -> generaterange_7f0d5c.to\n        generaterange_7f0d5c.list -> lessthan_4d7c5e.right\n        num_5c0677 -> lessthan_4d7c5e.left\n        lessthan_4d7c5e.result -> if_e3db6e.predicate\n        execute_b7b391 -> if_e3db6e.execute\n        if_e3db6e.then -> continue_9a54bb\n        1 -> expression_6e2e3a.gen_0\n        generaterange_7f0d5c.list -> expression_6e2e3a.gen_1\n        expression_6e2e3a.result -> ifexpression_8c9f4d.gen_0\n        generaterange_7f0d5c.index -> ifexpression_8c9f4d.gen_1\n        num_5c0677 -> ifexpression_8c9f4d.gen_2\n        if_e3db6e.else -> continue_9a54bb\n        expression_6e2e3a.result -> and_f3f8a0.left\n        ifexpression_8c9f4d.value -> and_f3f8a0.right\n        and_f3f8a0.result -> if_6eb9ee.predicate\n        generaterange_7f0d5c.list -> expression_b1c7e2.gen_0\n        generaterange_7f0d5c.index -> expression_b1c7e2.gen_1\n        expression_b1c7e2.result -> and_7f4a0d.left\n        ifexpression_8c9f4d.value -> and_7f4a0d.right\n        and_7f4a0d.result -> if_e1e5c8.predicate\n        lessthan_4d7c5e.result -> if_6eb9ee.then\n        num_5c0677 -> expression_b1c7e2.gen_0\n        generaterange_7f0d5c.index -> expression_b1c7e2.gen_1\n        execute_b7b391 -> for_ae0f8a.reset\n        if_e3db6e.value -> output_c457b3\n        1 -> lessthan_9f2f5c.right\n        generaterange_7f0d5c.list -> lessthan_9f2f5c.left\n        lessthan_9f2f5c.result -> not_3d7a0c.input\n        not_3d7a0c.output -> if_3e8f6c.predicate\n        generaterange_7f0d5c.index -> expression_e1b9f5.gen_1\n        1 -> expression_e1b9f5.gen_0\n        num_5c0677 -> expression_e1b9f5.gen_2\n        expression_e1b9f5.result -> and_4c6a8d.left\n        ifexpression_8c9f4d.value -> and_4c6a8d.right\n        and_4c6a8d.result -> if_a1f9e2.predicate\n        execute_b7b391 -> if_a1f9e2.execute\n        expression_e1b9f5.result -> expression_b5b0ac.gen_0\n        generaterange_7f0d5c.index -> expression_b5b0ac.gen_1\n        num_5c0677 -> expression_b5b0ac.gen_2\n        expression_b5b0ac.result -> and_8d6a7e.left\n        ifexpression_8c9f4d.value -> and_8d6a7e.right\n        and_8d6a7e.result -> if_f2c0b3.predicate\n        not_3d7a0c.output -> if_3e8f6c.then\n        expression_e1b9f5.result -> if_a1f9e2.else\n        num_5c0677 -> expression_b5b0ac.gen_0\n        generaterange_7f0d5c.index -> expression_b5b0ac.gen_1\n        execute_b7b391 -> for_ae0f8a.next\n        if_a1f9e2.then -> continue_9a54bb\n        and_f3f8a0.result -> if_6eb9ee.else\n        num_5c0677 -> expression_b1c7e2.gen_0\n        generaterange_7f0d5c.index -> expression_b1c7e2.gen_1\n        ifexpression_8c9f4d.value -> if_e1e5c8.then\n        if_6eb9ee.else -> continue_9a54bb\n        num_5c0677 -> expression_b5b0ac.gen_0\n        generaterange_7f0d5c.index -> expression_b5b0ac.gen_1\n        ifexpression_8c9f4d.value -> if_f2c0b3.then\n        and_7f4a0d.result -> if_e1e5c8.else\n        num_5c0677 -> expression_b1c7e2.gen_0\n        generaterange_7f0d5c.index -> expression_b1c7e2.gen_1\n        if_3e8f6c.then -> continue_9a54bb\n        and_4c6a8d.result -> if_a1f"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -189, y: -217) expression_c6e7c8 root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_c6e7c8.gen_0\n        y_5390f5 -> expression_c6e7c8.gen_1\n        expression_c6e7c8.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -186, y: 67) opposite_signs_eb2d0f root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -22) characters_c9e7d8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 387, y: -23) map_1a4c6f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 604, y: -21) reduce_3a5c2f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 833, y: 0) modulo_c9e7d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1046, y: 1) equal_4f8f3a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> characters_c9e7d8.input\n        func() {\n            in(x: -24, y: 43, name: \"current\") property(String) current_5c6f2c\n\n            out(x: 479, y: 25, name: \"output\") property(Number) output_ea1b9e\n\n            instance(x: 104, y: 31) expression_3d8f4c root.Std_k98ojb.Math.Expression {\n                expression: \"(index % 2 == 0 ? parseInt(current) : -parseInt(current))\"\n            }\n            current_5c6f2c -> expression_3d8f4c.gen_1\n            func() {\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 0, y: 0, name: \"output\") property(Number) output_ea1b9e\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) mul_7f8c5c root.Std_k98ojb.Math.Mul {}\n                _index_769593 -> modulo_c76d2b.value\n                2 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> mul_7f8c5c.first\n                1 -> mul_7f8c5c.second\n                mul_7f8c5c.result -> output_ea1b9e\n            } -> expression_3d8f4c.handler\n            expression_3d8f4c.result -> out_ea1b9e\n        } -> map_1a4c6f.handler\n        characters_c9e7d8.characters -> map_1a4c6f.items\n        func() {\n            in(x: -22, y: 79, name: \"accumulated\") property(Number) accumulated_5b3c2c\n            in(x: -15, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 0, y: 0, name: \"output\") property(Number) output_ea1b9e\n\n            instance(x: 74, y: -23) add_b4554f root.Std_k98ojb.Math.Add {}\n            accumulated_5b3c2c -> add_b4554f.first\n            current_81298e -> add_b4554f.second\n            add_b4554f.result -> output_ea1b9e\n        } -> reduce_3a5c2f.reducer\n        map_1a4c6f.output_list -> reduce_3a5c2f.items\n        0 -> reduce_3a5c2f.initialValue\n        reduce_3a5c2f.result -> modulo_c9e7d8.value\n        11 -> modulo_c9e7d8.divisor\n        modulo_c9e7d8.result -> equal_4f8f3a.left\n        0 -> equal_4f8f3a.right\n        equal_4f8f3a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -5, y: -2) is_diff_9c7d1e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_2c7b8f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2c7b8f.input\n        search_ai -> replace_2c7b8f.search\n        replace_ai -> replace_2c7b8f.replace\n        replace_2c7b8f.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1040, y: 166, name: \"lowercase\") tolower_1a9c8e root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_1a9c8e.input\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            current_86a8fb -> isnumeric_9cb360.input\n            isnumeric_9cb360.isNumeric -> output_8ba733\n        } -> tolower_1a9c8e.handler\n        tolower_1a9c8e.output -> output_ai\n    }\n\n    \n\n    instance(x: 14, y: -52) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -506, y: -21) set_5f8c1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -507, y: 63) map_7a3d9c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -508, y: 153) reduce_4b0d6f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -509, y: 244) list_5e8f2a root.Std_k98ojb.List.Empty {}\n        instance(x: -510, y: 334) sub_1c9b3c root.Std_k98ojb.Math.Sub {}\n        instance(x: -511, y: 424) add_7d0d4f root.Std_k98ojb.Math.Add {}\n        instance(x: -512, y: 514) mul_5e8a6c root.Std_k98ojb.Math.Mul {}\n\n        execute_19300c -> set_5f8c1e.left\n        list_5fda54 -> set_5f8c1e.right\n\n        func() {\n            in(x: -488, y: 83, name: \"item\") property(Number) item_3b9a4d\n\n            out(x: 698, y: 93, name: \"\") property(List) _2f0c6c\n\n            instance(x: -466, y: 103) contains_7e8a1c root.Std_k98ojb.List.Contains {}\n            list_5e8f2a -> contains_7e8a1c.list\n            item_3b9a4d -> contains_7e8a1c.item\n\n            instance(x: -444, y: 123) ifexpression_6e0d4c root.Std_k98ojb.Std.IfExpression {}\n            \"!\" + contains_7e8a1c.contains -> ifexpression_6e0d4c.expression\n            item_3b9a4d -> ifexpression_6e0d4c.value\n\n            instance(x: -422, y: 143) add_2f0b5c root.Std_k98ojb.List.Add {}\n            list_5e8f2a -> add_2f0b5c.list\n            item_3b9a4d -> add_2f0b5c.item\n\n            ifexpression_6e0d4c.value -> _2f0c6c\n            add_2f0b5c.listWithItem -> _2f0c6c\n        } -> map_7a3d9c.handler\n        set_5f8c1e.difference -> map_7a3d9c.items\n\n        func() {\n            in(x: -486, y: 254, name: \"acc\") property(Number) acc_4b0c2c\n\n            in(x: -466, y: 274, name: \"item\") property(Number) item_1f8a6d\n\n            out(x: 698, y: 284, name: \"\") property(Number) _7e9c5c\n\n            instance(x: -444, y: 294) mul_2b0c4c root.Std_k98ojb.Math.Mul {}\n            acc_4b0c2c -> mul_2b0c4c.first\n            item_1f8a6d -> mul_2b0c4c.second\n\n            instance(x: -422, y: 314) ifexpression_7e9c5c root.Std_k98ojb.Std.IfExpression {}\n            \"acc == 1 ? item : acc\" + ifexpression_7e9c5c.expression\n            acc_4b0c2c -> ifexpression_7e9c5c.value\n            item_1f8a6d -> ifexpression_7e9c5c.value\n\n            mul_2b0c4c.result -> _7e9c5c\n            ifexpression_7e9c5c.value -> _7e9c5c\n        } -> reduce_4b0d6f.reducer\n        map_7a3d9c.output_list -> reduce_4b0d6f.items\n\n        instance(x: -486, y: 425) ifexpression_2f0c6c root.Std_k98ojb.Std.IfExpression {}\n        \"list == [] ? 1 : list[0]\" + ifexpression_2f0c6c.expression\n        map_7a3d9c.output_list -> ifexpression_2f0c6c.value\n\n        instance(x: -464, y: 445) length_4b0c2c root.Std_k98ojb.List.Length {}\n        map_7a3d9c.output_list -> length_4b0c2c.list\n        sub_1c9b3c.first -> ifexpression_2f0c6c.value\n\n        instance(x: -442, y: 465) ifexpression_7e9c5c root.Std_k98ojb.Std.IfExpression {}\n        \"length == 0 ? 1 : list[0]\" + ifexpression_7e9c5c.expression\n        length_4b0c2c.length -> ifexpression_7e9c5c.value\n        map_7a3d9c.output_list -> ifexpression_7e9c5c.value\n\n        instance(x: -420, y: 485) add_7d0d4f root.Std_k98ojb.Math.Add {}\n        ifexpression_2f0c6c.value -> add_7d0d4f.first\n        ifexpression_7e9c5c.value -> add_7d0d4f.second\n\n        instance(x: -398, y: 505) ifexpression_1f8a6d root.Std_k98ojb.Std.IfExpression {}\n        \"acc == 1 ? item : acc\" + ifexpression_1f8a6d.expression\n        reduce_4b0d6f.accumulated -> ifexpression_1f8a6d.value\n        reduce_4b0d6f.currentValue -> ifexpression_1f8a6d.value\n\n        add_7d0d4f.result -> sub_1c9b3c.first\n        1 -> sub_1c9b3c.second\n\n        instance(x: -376, y: 525) ifexpression_4b0c2c root.Std_k98ojb.Std.IfExpression {}\n        \"acc == 1 ? item : acc\" + ifexpression_4b0c2c.expression\n        sub_1c9b3c.result -> ifexpression_4b0c2c.value\n        reduce_4b0d6f.currentValue -> ifexpression_4b0c2c.value\n\n        instance(x: -354, y: 545) mul_5e8a6c root.Std_k98ojb.Math.Mul {}\n        ifexpression_1f8a6d.value -> mul_5e8a6c.first\n        ifexpression_4b0c2c.value -> mul_5e8a6c.second\n\n        instance(x: -332, y: 565) ifexpression_7e9c5c root.Std_k98ojb.Std.IfExpression {}\n        \"length == 0 ? 1 : list[0]\" + ifexpression_7e9c5c.expression\n        length_4b0c2c.length -> ifexpression_7e9c5c.value\n        map_7a3d9c.output_list -> ifexpression_7e9c5c.value\n\n        instance(x: -310, y: 585) mul_2b0c4c root.Std_k98ojb.Math.Mul {}\n        ifexpression_1f8a6d.value -> mul_2b0c4c.first\n        ifexpression_7e9c5c.value -> mul_2b0c4c.second\n\n        instance(x: -288, y: 605) ifexpression_3b9a4d root.Std_k98ojb.Std.IfExpression {}\n        \"length == 1 ? item : acc\" + ifexpression_3b9a4d.expression\n        length_4b0c2c.length -> ifexpression_3b9a4d.value\n        reduce_4b0d6f.currentValue -> ifexpression_3b9a4d.value\n\n        mul_5e8a6c.result -> _7e9c5c\n        mul_2b0"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -279, y: 30) difference_3b7f1c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 17, y: 99) concat_4e8a9d root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_3b7f1c.left\n        list2_ai -> difference_3b7f1c.right\n        difference_3b7f1c.difference -> concat_4e8a9d.list1\n        list2_ai -> difference_3b7f1c.left\n        list1_ai -> difference_3b7f1c.right\n        difference_3b7f1c.difference -> concat_4e8a9d.list2\n        concat_4e8a9d.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 110, y: -12) find_dissimilar_e5c0f6 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 293, y: -41) modulo_7a1f8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 292, y: 91) slice_9c3d5c root.Std_k98ojb.List.Slice {}\n        instance(x: 556, y: -67) concat_6e4b0c root.Std_k98ojb.List.Concat {}\n        n_68068c -> modulo_7a1f8e.value\n        list_48148f -> modulo_7a1f8e.divisor\n        modulo_7a1f8e.result -> slice_9c3d5c.end\n        -1 -> slice_9c3d5c.start\n        list_48148f -> slice_9c3d5c.list\n        slice_9c3d5c.slice -> concat_6e4b0c.left\n        list_48148f -> concat_6e4b0c.right\n        concat_6e4b0c.result -> output_823209\n    }\n\n    \n\n    instance(x: 8, y: -117) rotate_right_7d1a2f root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 17, y: 0) reduce_7b9d8e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7b9d8e.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_7b9d8e.reducer\n        0 -> reduce_7b9d8e.initialValue\n        reduce_7b9d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -76, y: 14) _sum_1c6e4e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1004, y: -78) ifexpression_7e8f0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1032, y: -176) add_9a3d1c root.Std_k98ojb.Math.Add {}\n        instance(x: 1016, y: -290) if_8f5e4c root.Std_k98ojb.Std.If {}\n        instance(x: 1000, y: -393) expression_c7f2ea root.Std_k98ojb.Math.Expression {\n            expression: \"i == num\"\n        }\n        instance(x: 1016, y: -496) if_9e1a8c root.Std_k98ojb.Std.If {}\n        instance(x: 1000, y: -599) lessthanorequal_e7f3d2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1016, y: -702) for_5e1a8c root.Std_k98ojb.Std.For {}\n        instance(x: 1000, y: -805) generaterange_9f4a3d root.Std_k98ojb.List.GenerateRange {}\n        add_9a3d1c.result -> ifexpression_7e8f0c.gen_0\n        num_5c0677 -> ifexpression_7e8f0c.gen_1\n        for_5e1a8c.item -> ifexpression_7e8f0c.gen_2\n        expression_c7f2ea.result -> if_9e1a8c.predicate\n        for_5e1a8c.index -> lessthanorequal_e7f3d2.left\n        num_5c0677 -> lessthanorequal_e7f3d2.right\n        lessthanorequal_e7f3d2.result -> if_8f5e4c.predicate\n        for_5e1a8c.onItem -> ifexpression_7e8f0c.execute\n        ifexpression_7e8f0c.value -> if_8f5e4c.input\n        if_9e1a8c.then -> continue_9a54bb\n        if_8f5e4c.else -> for_5e1a8c.next\n        if_8f5e4c.then -> if_9e1a8c.execute\n        1 -> generaterange_9f4a3d.from\n        num_5c0677 -> generaterange_9f4a3d.to\n        generaterange_9f4a3d.list -> for_5e1a8c.items\n        if_9e1a8c.else -> continue_9a54bb\n        if_8f5e4c.value -> output_c457b3\n        execute_b7b391 -> generaterange_9f4a3d.execute\n        for_5e1a8c.done -> continue_9a54bb\n        1 -> add_9a3d1c.first\n        ifexpression_7e8f0c.value -> add_9a3d1c.second\n    }\n\n    \n\n    instance(x: -40, y: -17) num_prime_5b6c2c root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -206, y: -240) mul_a7d8c4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -88, y: -212) lessthanorequal_e0f6e5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_a7d8c4.first\n        y_5390f5 -> mul_a7d8c4.second\n        0 -> lessthanorequal_e0f6e5.right\n        mul_a7d8c4.result -> lessthanorequal_e0f6e5.left\n        lessthanorequal_e0f6e5.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -188, y: 71) opposite_signs_b0b7f1 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 175, y: -12) mod_c8e3d9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 434, y: 5) equal_6a4cfe root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> mod_c8e3d9.value\n        11 -> mod_c8e3d9.divisor\n        mod_c8e3d9.result -> equal_6a4cfe.left\n        0 -> equal_6a4cfe.right\n        equal_6a4cfe.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -25, y: 28) is_diff_b2a1e5 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 776, y: 124) strings_replace_9f0d8a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_9f0d8a.input\n        search_ai -> strings_replace_9f0d8a.search\n        replace_ai -> strings_replace_9f0d8a.replace\n        strings_replace_9f0d8a.output -> output_ai\n    }\n\n    \n\n    instance(x: 7, y: -10) ReplaceChar_d3d5f4 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1107, y: 139, name: \"lowercase\") tolower_9f5b3a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1386, y: 136, name: \"if\") if_b1c4a2 root.Std_k98ojb.Std.If {}\n        input_ai -> tolower_9f5b3a.input\n        func() {\n            in(x: -278, y: -64, name: \"input\") property(String) input_7e8d88\n\n            out(x: 401, y: -67, name: \"then\") trigger(Std_k98ojb.Trigger)\n\n            out(x: 401, y: 65, name: \"else\") trigger(Std_k98ojb.Trigger)\n\n            in(x: -278, y: 66, name: \"value\") property(String) value_3c8c6e\n\n            instance(x: 24, y: -60, stableId: \"kq2l5xj7d0m1v9g0yfz3u4b\") isnumeric_ba6c73 root.Std_k98ojb.Strings.IsNumeric {}\n            input_7e8d88 -> isnumeric_ba6c73.input\n            isnumeric_ba6c73.isNumeric -> then\n        } -> if_b1c4a2.if\n        tolower_9f5b3a.output -> value_b1c4a2\n        true -> else\n        false -> output_ai\n    }\n\n    \n\n    instance(x: 142, y: -67) is_lower_8b0f9e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -38, y: -13) set_a1f0d9 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 1015, y: -28) reduce_6a4e3c root.Std_k98ojb.Iteration.Reduce {\n            func() {\n                in(x: -53, y: 26, name: \"accum\") property(Number) accum_7f8d50\n                in(x: -23, y: 42, name: \"item\") property(Number) item_c2a9e4\n\n                out(x: 488, y: 38, name: \"\") property(Number) _3eb0b1\n\n                instance(x: 40, y: 37) mul_8c5f64 root.Std_k98ojb.Math.Mul {}\n                accum_7f8d50 -> mul_8c5f64.first\n                item_c2a9e4 -> mul_8c5f64.second\n                mul_8c5f64.result -> _3eb0b1\n            }\n        }\n\n        list_5fda54 -> set_a1f0d9.left\n\n        instance(x: 101, y: -71) reduce_d6a2e4 root.Std_k98ojb.Iteration.Reduce {\n            func() {\n                in(x: -44, y: 29, name: \"accum\") property(Number) accum_8e5d3c\n                in(x: -13, y: 43, name: \"item\") property(Number) item_f2f0a9\n\n                out(x: 475, y: 37, name: \"\") property(Number) _1b4f6c\n\n                instance(x: 40, y: 38) mul_8c5f64 root.Std_k98ojb.Math.Mul {}\n                accum_8e5d3c -> mul_8c5f64.first\n                item_f2f0a9 -> mul_8c5f64.second\n                mul_8c5f64.result -> _1b4f6c\n            }\n        }\n\n        list_5fda54 -> reduce_d6a2e4.items\n\n        1 -> reduce_d6a2e4.accum\n\n        set_a1f0d9.difference -> reduce_6a4e3c.items\n\n        1 -> reduce_6a4e3c.accum\n\n        execute_19300c -> continue_45190b\n        reduce_6a4e3c.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -20, y: 0) unique_product_a5d7f8 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -231, y: 17) union_9b1bc3 root.Std_k98ojb.Sets.Union {}\n        instance(x: 61, y: 30) difference_4e8c54 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> union_9b1bc3.left\n        list2_ai -> union_9b1bc3.right\n        union_9b1bc3.union -> difference_4e8c54.left\n        list1_ai -> difference_4e8c54.right\n        difference_4e8c54.difference -> output_ai\n    }\n\n    \n\n    instance(x: 90, y: -2) find_dissimilar_ea0b7d root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 274, y: -34) modulo_f6f1d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 494, y: -88) slice_b3e5ba root.Std_k98ojb.List.Slice {}\n        instance(x: 698, y: -41) concat_4c2f8a root.Std_k98ojb.List.Concat {}\n        n_68068c -> modulo_f6f1d8.value\n        list_48148f.length -> modulo_f6f1d8.divisor\n        modulo_f6f1d8.result -> slice_b3e5ba.start\n        -1 -> slice_b3e5ba.end\n        list_48148f -> slice_b3e5ba.list\n        slice_b3e5ba.slice -> concat_4c2f8a.right\n        list_48148f -> concat_4c2f8a.left\n        concat_4c2f8a.result -> output_823209\n    }\n\n    \n\n    instance(x: 7, y: -114) rotate_right_9b5e0f root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 16, y: 29) reduce_b7e1d8 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_b7e1d8.items\n        func() {\n            in(x: -182, y: -55, name: \"accumulated\") property(Number) accumulated_e9b6a4\n            in(x: -165, y: 38, name: \"current\") property(Number) current_0c0f5e\n\n            out(x: 526, y: -53, name: \"sum\") property(Number) sum_c1d7fa\n\n            instance(x: 79, y: 3) add_9a2e6b root.Std_k98ojb.Math.Add {}\n            accumulated_e9b6a4 -> add_9a2e6b.first\n            current_0c0f5e -> add_9a2e6b.second\n            add_9a2e6b.result -> sum_c1d7fa\n        } -> reduce_b7e1d8.reducer\n        0 -> reduce_b7e1d8.initialValue\n        reduce_b7e1d8.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -118, y: -17) _sum_c5b4c9 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1082, y: -184) expression_e8c7d6 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1023, y: -71) lessthanorequal_5f6e51 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1074, y: 21) ifexpression_c2a9d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        instance(x: 332, y: -19) for_8f1ebe root.Std_k98ojb.Std.For {}\n        instance(x: 679, y: -317) setter_9d4f1c root.Std_k98ojb.Setter {}\n        instance(x: 321, y: 162) getter_b280eb root.Std_k98ojb.Getter {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        num_5c0677 -> lessthanorequal_5f6e51.right\n        expression_e8c7d6.result -> ifexpression_c2a9d7.gen_1\n        for_8f1ebe.item -> expression_e8c7d6.gen_0\n        getter_b280eb.value -> ifexpression_c2a9d7.gen_2\n        lessthanorequal_5f6e51.result -> ifexpression_c2a9d7.predicate\n        num_5c067b -> lessthanorequal_5f6e51.left\n        1 -> getat_ce2a48.index\n        list_3af6ba -> getat_ce2a48.list\n        for_8f1ebe.item -> setter_9d4f1c.new_value\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.value\n        getter_b280eb.value -> ifexpression_c2a9d7.gen_0\n        execute_b7b391 -> setter_9d4f1c.execute\n        for_8f1ebe.onItem -> expression_e8c7d6.execute\n        list_3af6ba -> for_8f1ebe.items\n        ifexpression_c2a9d7.value -> output_c457b3\n        ifexpression_c2a9d7.then -> setter_9d4f1c.execute\n        ifexpression_c2a9d7.else -> continue_9a54bb\n        for_8f1ebe.done -> continue_9a54bb\n        for_8f1ebe.index -> ifexpression_c2a9d7.gen_0\n        setter_9d4f1c.continue -> for_8f1ebe.next\n        execute_b7b391 -> getter_b280eb.execute\n        getter_b280eb.value -> ifexpression_c2a9d7.gen_1\n        setter_9d4f1c.continue -> for_8f1ebe.reset\n    }\n\n    \n\n    instance(x: -80, y: 14) num_prime_f0b6ed root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -216, y: -239) lessthanorequal_7c4e2b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -223, y: -132) lessthanorequal_b1d5ee root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 30, y: -212) or_8f0c7e root.Std_k98ojb.Logic.Or {}\n        instance(x: 26, y: -128) and_fdaa17 root.Std_k98ojb.Logic.And {}\n        x_853326 -> lessthanorequal_7c4e2b.left\n        0 -> lessthanorequal_7c4e2b.right\n        x_853326 -> lessthanorequal_b1d5ee.left\n        0 -> lessthanorequal_b1d5ee.right\n        y_5390f5 -> lessthanorequal_b1d5ee.right\n        y_5390f5 -> lessthanorequal_7c4e2b.right\n        or_8f0c7e.left -> and_fdaa17.input\n        lessthanorequal_7c4e2b.result -> or_8f0c7e.right\n        lessthanorequal_b1d5ee.result -> or_8f0c7e.left\n        not_9db7fa.input -> and_fdaa17.right\n        or_8f0c7e.result -> not_9db7fa.input\n        and_fdaa17.result -> output_3339a3\n\n        instance(x: -147, y: -96) not_9db7fa root.Std_k98ojb.Logic.Not {}\n    }\n\n    \n\n    instance(x: -210, y: 56) opposite_signs_a4f1d0 root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n        instance(x: 205, y: -24) expression_d6b4a5 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_27f29c -> expression_d6b4a5.gen_0\n        expression_d6b4a5.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -32, y: -17) is_diff_e9e8cd root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 856, y: 134) replace_7e1a3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7e1a3c.input\n        search_ai -> replace_7e1a3c.search\n        replace_ai -> replace_7e1a3c.replace\n        replace_7e1a3c.output -> output_ai\n    }\n\n    \n\n    instance(x: 11, y: 52) replace_char_a8d6b4 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1019, y: 176) tolower_4a0c2e root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_4a0c2e.input\n        tolower_4a0c2e.output -> output_ai\n    }\n\n    \n\n    instance(x: -31, y: 145) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 0, y: 0) set_b3bbd7 root.Std_k98ojb.Sets.Difference {}\n        func() {\n            in(x: -110, y: 34, name: \"left\") property(List) left_9e8c4a\n            in(x: 89, y: 35, name: \"right\") property(List) right_e1f6ea\n\n            out(x: 515, y: 44, name: \"\") property(List) _3de2d0\n\n            instance(x: 310, y: 25) contains_4c81ab root.Std_k98ojb.List.Contains {}\n            left_5fda54 -> set_b3bbd7.left\n            instance(x: -40, y: 69) list_9d6aa9 root.Std_k98ojb.Iteration.Map {\n                items: right_e1f6ea\n            }\n            func() {\n                in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n                out(x: 333, y: -50, name: \"\") property(List) _7dd980\n\n                instance(x: 92, y: -22) list_e4bca1 root.Std_k98ojb.List.GenerateRange {\n                    from: x_8ee839\n                    to: x_8ee839 + 1\n                }\n                list_e4bca1.list -> _7dd980\n            } -> list_9d6aa9.handler\n            list_9d6aa9.output_list -> right_e1f6ea\n            contains_4c81ab.item -> left_5fda54\n            instance(x: 89, y: 29) not_equal_7e8ca2 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -113, y: 34) list_8ec3d1 root.Std_k98ojb.List.GetAt {\n                index: contains_4c81ab.index\n                list: left_5fda54\n            }\n            not_equal_7e8ca2.right -> right_e1f6ea\n            list_8ec3d1.item -> not_equal_7e8ca2.left\n            contains_4c81ab.list -> set_b3bbd7.right\n            set_b3bbd7.difference -> _3de2d0\n        } -> unique_product.on_trigger\n\n        instance(x: -55, y: 529) reduce_dbf5ce root.Std_k98ojb.Iteration.Reduce {\n            context: list_5fda54\n        }\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_d3a7d9\n            in(x: 89, y: 35, name: \"val\") property(Number) val_a2e4b5\n\n            out(x: 515, y: 44, name: \"\") property(Number) _1dbf0a\n\n            instance(x: 310, y: 25) mul_9d7c3b root.Std_k98ojb.Math.Mul {}\n            acc_d3a7d9 -> mul_9d7c3b.first\n            val_a2e4b5 -> mul_9d7c3b.second\n            mul_9d7c3b.result -> _1dbf0a\n        } -> reduce_dbf5ce.reducer\n        set_b3bbd7.intersect -> reduce_dbf5ce.items\n\n        instance(x: 94, y: -105) if_e6e1dd root.Std_k98ojb.Std.If {\n            input: list_5fda54\n        }\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") trigger() _7dd980\n\n            instance(x: 92, y: -22) ifexpression_4e0fc5 root.Std_k98ojb.Std.IfExpression {\n                expression: \"x.length == 0 ? 1 : x[0]\"\n            }\n            list_5fda54 -> ifexpression_4e0fc5.x\n            ifexpression_4e0fc5.value -> x_8ee839\n        } -> if_e6e1dd.then\n\n        instance(x: 119, y: -188) output_cffcc2_node root.Std_k98ojb.Output {\n            value: reduce_dbf5ce.output\n        }\n        instance(x: 119, y: -288) continue_45190b_node root.Std_k98ojb.Trigger {}\n        if_e6e1dd.else -> continue_45190b_node.trigger\n        output_cffcc2_node.value -> output_cffcc2\n    }\n\n    \n\n    instance(x: -1050, y: 27) unique_product_ae3a9f root.main.unique_product {}\n\n    \n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 30, y: 92) difference_0e9a4d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 224, y: -11) concat_e3c2a5 root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_0e9a4d.left\n        list2_ai -> difference_0e9a4d.right\n        difference_0e9a4d.difference -> concat_e3c2a5.list1\n        instance(x: 221, y: 104) difference_a8bcad root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_a8bcad.left\n        list1_ai -> difference_a8bcad.right\n        difference_a8bcad.difference -> concat_e3c2a5.list2\n        concat_e3c2a5.listWithItem -> output_ai\n    }\n\n    \n\n    instance(x: 86, y: 28) find_dissimilar_34e1f0 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 60, y: -79) slice_b2b0a6 root.Std_k98ojb.List.Slice {}\n        instance(x: 51, y: -16) sub_d8d4e3 root.Std_k98ojb.Math.Sub {}\n        instance(x: 276, y: -99) getat_9f1c5b root.Std_k98ojb.List.GetAt {}\n        instance(x: 498, y: -111) add_ba0da7 root.Std_k98ojb.List.Add {}\n        instance(x: 692, y: -118) concat_cae2d4 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_b2b0a6.list\n        sub_d8d4e3.result -> slice_b2b0a6.start\n        list_48148b.Length -> sub_d8d4e3.first\n        n_68068c -> sub_d8d4e3.second\n        -1 -> slice_b2b0a6.end\n        getat_9f1c5b.itemAtIndex -> add_ba0da7.item\n        list_48148f -> getat_9f1c5b.list\n        n_68068c -> getat_9f1c5b.index\n        slice_b2b0a6.slice -> concat_cae2d4.left\n        add_ba0da7.listWithItem -> concat_cae2d4.right\n        concat_cae2d4.result -> output_823209\n    }\n\n    \n\n    instance(x: -210, y: 20) rotate_right_e3a0c1 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 86, y: -12) reduce_1e5c6d root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_1e5c6d.initialValue\n        func() {\n            in(x: -164, y: -44, name: \"accumulated\") property(Number) accumulated_d3d8a2\n            in(x: -160, y: 48, name: \"current\") property(Number) current_9f4b7c\n\n            out(x: 560, y: -45, name: \"sum\") property(Number) sum_a5a4e2\n\n            instance(x: 87, y: 25) add_d3d8ca root.Std_k98ojb.Math.Add {}\n            accumulated_d3d8a2 -> add_d3d8ca.first\n            current_9f4b7c -> add_d3d8ca.second\n            add_d3d8ca.result -> sum_a5a4e2\n        } -> reduce_1e5c6d.reducer\n        list_2c62ab -> reduce_1e5c6d.items\n        reduce_1e5c6d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -86, y: 42) _sum_c4b3bc root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -52, y: 34) generaterange_8c5e4d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 339, y: -53) if_6f0cc3 root.Std_k98ojb.Std.If {}\n        instance(x: 550, y: -52) lessthanorequal_1a9a04 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 738, y: -56) expression_f4d6e7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 840, y: -43) if_3c1a9f root.Std_k98ojb.Std.If {}\n        instance(x: 1125, y: -52) add_fcc9e8 root.Std_k98ojb.Math.Add {}\n        instance(x: 1040, y: -147) for_d4c5fa root.Std_k98ojb.Std.For {}\n        instance(x: 1391, y: -142) and_7e2d6f root.Std_k98ojb.Logic.And {}\n        instance(x: 1588, y: -143) if_e9c0bb root.Std_k98ojb.Std.If {}\n\n        getter(x: 1181, y: -24, name: \"getter_f9a4fb\") getter_f9a4fb = i\n        setter(x: 1316, y: -165, name: \"setter_3f5c2e\") setter_3f5c2e = i\n\n        num_5c0677 -> generaterange_8c5e4d.from\n        1 -> generaterange_8c5e4d.to\n        generaterange_8c5e4d.list -> for_d4c5fa.items\n\n        lessthanorequal_1a9a04.left -> getter_f9a4fb.value\n        num_5c0677 -> lessthanorequal_1a9a04.right\n\n        lessthanorequal_1a9a04.result -> if_6f0cc3.predicate\n        for_d4c5fa.onItem -> if_6f0cc3.execute\n        if_6f0cc3.else -> continue_9a54bb\n        if_6f0cc3.then -> lessthanorequal_1afor_d4c5fa.onItem\n\n        expression_f4d6e7.gen_1 -> and_7e2d6f.left\n        for_d4c5fa.item -> expression_f4d6e7.gen_0\n        num_5c0677 -> expression_f4d6e7.gen_1\n\n        if_3c1a9f.predicate -> expression_f4d6e7.result\n        lessthanorequal_1a9a04.value -> if_3c1a9f.execute\n        for_d4c5fa.index -> add_fcc9e8.first\n        1 -> add_fcc9e8.second\n        add_fcc9e8.result -> expression_f4d6e7.gen_0\n\n        and_7e2d6f.right -> if_e9c0bb.predicate\n        if_3c1a9f.else -> continue_9a54bb\n        if_3c1a9f.then -> and_7e2d6f.execute\n\n        getter_f9a4fb.value -> for_d4c5fa.item\n        for_d4c5fa.index -> setter_3f5c2e.new_value\n        setter_3f5c2e.continue -> if_e9c0bb.then\n        and_7e2d6f.result -> if_e9c0bb.execute\n\n        if_e9c0bb.else -> continue_9a54bb\n        if_e9c0bb.then -> for_d4c5fa.next\n        for_d4c5fa.done -> continue_9a54bb\n\n        if_6f0cc3.value -> output_c457b3\n\n        execute_b7b391 -> setter_3f5c2e.execute\n        setter_3f5c2e.continue -> for_d4c5fa.reset\n    }\n\n    \n\n    instance(x: 43, y: -71) num_prime_e6e8ca root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -180, y: -230) expression_c6e8c1 root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_c6e8c1.gen_0\n        y_5390f5 -> expression_c6e8c1.gen_1\n        expression_c6e8c1.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -188, y: 139) opposite_signs_4b7d2c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 230, y: -22) modulo_c6e9d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 499, y: 3) equal_7a5c1c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_c6e9d8.value\n        11 -> modulo_c6e9d8.divisor\n        modulo_c6e9d8.result -> equal_7a5c1c.left\n        0 -> equal_7a5c1c.right\n        equal_7a5c1c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -17, y: 23) is_diff_4e6d2b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 128) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1052, y: 154, name: \"lowercase\") tolower_9e3c1f root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_9e3c1f.input\n        func() {\n            in(x: -270, y: -50, name: \"current\") property(String) current_6a7d5b\n\n            out(x: 406, y: -52, name: \"output\") property(Bool) output_4e0b8c\n\n            instance(x: 25, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_7a9f2d root.Std_k98ojb.Logic.Equal {}\n            current_6a7d5b -> equal_7a9f2d.left\n            tolower_9e3c1f.output -> equal_7a9f2d.right\n            equal_7a9f2d.equal -> output_4e0b8c\n        } -> instance(x: 726, y: 130) filter_c5f6a6 root.Std_k98ojb.Iteration.Filter {}\n        tolower_9e3c1f.output -> instance(x: 723, y: 131) length_2d4f7f root.Std_k98ojb.List.Length {} .list\n        func() {\n            in(x: -270, y: -50, name: \"current\") property(String) current_6a7d5b\n\n            out(x: 406, y: -52, name: \"output\") property(Bool) output_4e0b8c\n\n            instance(x: 25, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_7a9f2d root.Std_k98ojb.Logic.Equal {}\n            current_6a7d5b -> equal_7a9f2d.left\n            tolower_9e3c1f.output -> equal_7a9f2d.right\n            equal_7a9f2d.equal -> output_4e0b8c\n        } -> filter_c5f6a6.handler\n        length_2d4f7f.length -> instance(x: 724, y: 131) if_3f1b64 root.Std_k98ojb.Std.If {} .input\n        1 -> if_3f1b64.then\n        false -> if_3f1b64.else_\n        filter_c5f6a6.output_list -> instance(x: 724, y: 131) if_3f1b64 root.Std_k98ojb.Std.If {} .value\n        if_3f1b64.value -> output_ai\n    }\n\n    \n\n    instance(x: -4, y: 132) is_lower_2d5a6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -420, y: -32) set_3f7c1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -510, y: 33) concat_4d9a5f root.Std_k98ojb.List.Concat {}\n        instance(x: -620, y: 122) reduce_8c6b0c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -740, y: 213) map_1e2b7c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -860, y: 304) filter_5a3d4f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -980, y: 395) list_6b8c9d root.Std_k98ojb.List.Empty {}\n\n        execute_19300c -> map_1e2b7c.trigger\n        execute_19300c -> filter_5a3d4f.trigger\n        execute_19300c -> concat_4d9a5f.trigger\n        execute_19300c -> set_3f7c1e.trigger\n        execute_19300c -> reduce_8c6b0c.trigger\n\n        list_5fda54 -> map_1e2b7c.items\n        func() {\n            in(x: -119, y: 76, name: \"x\") property(Number) x_3a9d4b\n\n            out(x: 333, y: 88, name: \"\") property(List) _8f5a0b\n\n            instance(x: 92, y: 61) list_6b8c9d root.Std_k98ojb.List.Empty {}\n            instance(x: 212, y: 82) add_7e4b2a root.Std_k98ojb.List.Add {}\n\n            x_3a9d4b -> add_7e4b2a.item\n            list_6b8c9d.list -> add_7e4b2a.list\n\n            add_7e4b2a.listWithItem -> _8f5a0b\n        } -> map_1e2b7c.handler\n        map_1e2b7c.output_list -> concat_4d9a5f.left\n        list_5fda54 -> concat_4d9a5f.right\n\n        concat_4d9a5f.concat -> filter_5a3d4f.items\n        func() {\n            in(x: -119, y: 76, name: \"x\") property(List) x_3a9d4b\n\n            out(x: 333, y: 88, name: \"\") property(Bool) _8f5a0b\n\n            instance(x: 92, y: 61) length_7c2e1a root.Std_k98ojb.List.Length {}\n            instance(x: 212, y: 82) sub_4d9a5f root.Std_k98ojb.Math.Sub {}\n\n            x_3a9d4b -> length_7c2e1a.list\n            length_7c2e1a.length -> sub_4d9a5f.first\n            1 -> sub_4d9a5f.second\n\n            sub_4d9a5f.result -> _8f5a0b\n        } -> filter_5a3d4f.handler\n        filter_5a3d4f.output_list -> set_3f7c1e.left\n        list_5fda54 -> set_3f7c1e.right\n\n        set_3f7c1e.difference -> reduce_8c6b0c.items\n        func() {\n            in(x: -119, y: 76, name: \"acc\") property(Number) acc_9d4a5b\n\n            in(x: -119, y: 76, name: \"x\") property(Number) x_3a9d4b\n\n            out(x: 333, y: 88, name: \"\") property(Number) _8f5a0b\n\n            instance(x: 92, y: 61) mul_7e4b2a root.Std_k98ojb.Math.Mul {}\n\n            acc_9d4a5b -> mul_7e4b2a.first\n            x_3a9d4b -> mul_7e4b2a.second\n\n            mul_7e4b2a.result -> _8f5a0b\n        } -> reduce_8c6b0c.reducer\n        1 -> reduce_8c6b0c.initialValue\n        reduce_8c6b0c.result -> output_cffcc2\n\n        continue_45190b <- map_1e2b7c.done\n        continue_45190b <- filter_5a3d4f.done\n        continue_45190b <- concat_4d9a5f.done\n        continue_45190b <- set_3f7c1e.done\n        continue_45190b <- reduce_8c6b0c.done\n    }\n\n    \n\n    instance(x: 101, y: -67) unique_product_496e5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -232, y: 49) difference_3b7f9c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -331, y: 68) union_4e1d5a root.Std_k98ojb.Sets.Union {}\n        list1_ai -> union_4e1d5a.left\n        list2_ai -> union_4e1d5a.right\n        union_4e1d5a.union -> difference_3b7f9c.left\n        instance(x: -330, y: 49) intersection_78d487 root.Std_k98ojb.Sets.Intersection {}\n        list1_ai -> intersection_78d487.left\n        list2_ai -> intersection_78d487.right\n        intersection_78d487.intersection -> difference_3b7f9c.right\n        difference_3b7f9c.difference -> output_ai\n    }\n\n    \n\n    instance(x: 101, y: -67) find_dissimilar_ea0e5c root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 107, y: -63) slice_9a1b2f root.Std_k98ojb.List.Slice {}\n        instance(x: 224, y: -126) sub_4e7d3c root.Std_k98ojb.Math.Sub {}\n        instance(x: 428, y: -64) getat_6a0c5f root.Std_k98ojb.List.GetAt {}\n        instance(x: 627, y: -125) slice_8e1b9f root.Std_k98ojb.List.Slice {}\n        instance(x: 844, y: -63) concat_7d4c4c root.Std_k98ojb.List.Concat {}\n        list_48148f -> sub_4e7d3c.first\n        n_68068c -> sub_4e7d3c.second\n        sub_4e7d3c.result -> slice_9a1b2f.end\n        0 -> slice_9a1b2f.start\n        list_48148f -> slice_9a1b2f.list\n        n_68068c -> getat_6a0c5f.index\n        list_48148f -> getat_6a0c5f.list\n        getat_6a0c5f.itemAtIndex -> concat_7d4c4c.right\n        slice_9a1b2f.slice -> concat_7d4c4c.left\n        n_68068c -> slice_8e1b9f.start\n        list_48148f -> slice_8e1b9f.list\n        -1 -> slice_8e1b9f.end\n        slice_8e1b9f.slice -> concat_7d4c4c.left\n        concat_7d4c4c.result -> output_823209\n    }\n\n    \n\n    instance(x: 20, y: -108) rotate_right_2a0f6f root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 66, y: 8) reduce_5b9d1e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_5b9d1e.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_5b9d1e.reducer\n        list_2c62ab -> reduce_5b9d1e.items\n        reduce_5b9d1e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 15, y: -6) _sum_3a0b4f root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1030, y: -53) if_e7f8c6 root.Std_k98ojb.Std.If {}\n        instance(x: 1012, y: -168) lessthanorequal_3d1e5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1074, y: -255) add_ea0c7c root.Std_k98ojb.Math.Add {}\n        instance(x: 1046, y: -342) expression_8e9f1d root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1035, y: -425) if_2a4c3c root.Std_k98ojb.Std.If {}\n        instance(x: 1047, y: -512) floor_e9f6e8 root.Std_k98ojb.Math.Floor {}\n        instance(x: 1050, y: -599) generaterange_5e1d93 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1022, y: -686) for_7c3a4f root.Std_k98ojb.Std.For {}\n        lessthanorequal_3d1e5f.result -> if_e7f8c6.predicate\n        execute_b7b391 -> if_e7f8c6.execute\n        2 -> generaterange_5e1d93.from\n        num_5c0677 -> floor_e9f6e8.input\n        floor_e9f6e8.result -> generaterange_5e1d93.to\n        generaterange_5e1d93.list -> for_7c3a4f.items\n        for_7c3a4f.item -> expression_8e9f1d.gen_0\n        num_5c0677 -> expression_8e9f1d.gen_1\n        expression_8e9f1d.result -> if_2a4c3c.predicate\n        for_7c3a4f.onItem -> if_2a4c3c.execute\n        1 -> add_ea0c7c.first\n        for_7c3a4f.index -> add_ea0c7c.second\n        add_ea0c7c.result -> lessthanorequal_3d1e5f.left\n        num_5c0677 -> lessthanorequal_3d1e5f.right\n        if_e7f8c6.else -> continue_9a54bb\n        if_2a4c3c.then -> continue_9a54bb\n        for_7c3a4f.done -> continue_9a54bb\n        if_e7f8c6.then -> for_7c3a4f.reset\n        if_2a4c3c.else -> for_7c3a4f.next\n        if_e7f8c6.value -> output_c457b3\n    }\n\n    \n\n    instance(x: 20, y: -30) num_prime_b5e1d9 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -244, y: -211) lessthanorequal_c6e7c4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -121, y: -208) expression_d5d8fa root.Std_k98ojb.Math.Expression {\n            expression: \"x < 0\"\n        }\n        instance(x: 48, y: -211) lessthanorequal_6f4c2e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 142, y: -208) expression_7a8d40 root.Std_k98ojb.Math.Expression {\n            expression: \"y < 0\"\n        }\n        instance(x: 308, y: -211) or_8c9f48 root.Std_k98ojb.Logic.Or {}\n        instance(x: 397, y: -208) and_c6d99a root.Std_k98ojb.Logic.And {}\n        x_853326 -> lessthanorequal_c6e7c4.left\n        0 -> lessthanorequal_c6e7c4.right\n        expression_d5d8fa.result -> or_8c9f48.left\n        y_5390f5 -> lessthanorequal_6f4c2e.left\n        0 -> lessthanorequal_6f4c2e.right\n        expression_7a8d40.result -> or_8c9f48.right\n        and_c6d99a.left -> lessthanorequal_c6e7c4.result\n        and_c6d99a.right -> lessthanorequal_6f4c2e.result\n        or_8c9f48.result -> and_c6d99a.predicate\n        and_c6d99a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -250, y: 78) opposite_signs_b0f5ca root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 179, y: -12) characters_b7b3d4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 406, y: 14) map_6e5c48 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 640, y: -10) expression_c2a1f0 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_27f29c -> characters_b7b3d4.input\n        func() {\n            in(x: -28, y: 45, name: \"current\") property(String) current_5e4a2e\n\n            out(x: 381, y: 13, name: \"output\") property(Number) output_1c0f7b\n\n            instance(x: 128, y: 34) expression_a3d8db root.Std_k98ojb.Math.Expression {\n                expression: \"(it.charCodeAt(0) - 48)\"\n            }\n            current_5e4a2e -> expression_a3d8db.gen_0\n            expression_a3d8db.result -> output_1c0f7b\n        } -> map_6e5c48.handler\n        characters_b7b3d4.characters -> map_6e5c48.items\n        instance(x: 485, y: -21) reduce_2f96ac root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -34, y: 25, name: \"acc\") property(Number) acc_e5a1d0\n            in(x: -15, y: 82, name: \"current\") property(Number) current_6f7a53\n\n            out(x: 524, y: 45, name: \"output\") property(Number) output_2b2c4e\n\n            instance(x: 210, y: 44) expression_b8d0ce root.Std_k98ojb.Math.Expression {\n                expression: \"(acc + current)\"\n            }\n            acc_e5a1d0 -> expression_b8d0ce.gen_0\n            current_6f7a53 -> expression_b8d0ce.gen_1\n            expression_b8d0ce.result -> output_2b2c4e\n        } -> reduce_2f96ac.reducer\n        map_6e5c48.output_list -> reduce_2f96ac.items\n        0 -> reduce_2f96ac.initial_value\n        reduce_2f96ac.result -> expression_c2a1f0.gen_0\n        n_27f29c -> expression_c2a1f0.gen_1\n        expression_c2a1f0.result -> output_f2630f\n    }\n\n    \n\n    instance(x: 45, y: -37) is_diff_b5d9b7 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 774, y: 126) replace_8b0c7f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_8b0c7f.input\n        search_ai -> replace_8b0c7f.search\n        replace_ai -> replace_8b0c7f.replace\n        replace_8b0c7f.output -> output_ai\n    }\n\n    \n\n    instance(x: -193, y: 58) replace_char_2a4d12 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 778, y: 154, name: \"toLower\") tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -31, y: 144, name: \"ifExpression\") ifexpression_0c5eaa root.Std_k98ojb.Std.IfExpression {}\n        input_ai -> tolower_7b3b7b.input\n        func() {\n            in(x: -263, y: -16, name: \"input\") property(String) input_8f4d1a\n\n            out(x: 406, y: -20, name: \"value\") property(Bool) value_7c6eb2\n\n            instance(x: 38, y: -22, stableId: \"b3m9j5hflg0p3v8y4r1nbsf\") equal_caa2a8 root.Std_k98ojb.Logic.Equal {}\n            input_ai -> equal_caa2a8.left\n            input_8f4d1a -> equal_caa2a8.right\n            equal_caa2a8.equal -> value_7c6eb2\n        } -> ifexpression_0c5eaa.expression\n        tolower_7b3b7b.output -> ifexpression_0c5eaa.a\n        input_ai -> ifexpression_0c5eaa.b\n        ifexpression_0c5eaa.value -> output_ai\n    }\n\n    \n\n    instance(x: 778, y: 154) is_lower_a2d4d6 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -25, y: -24) set_a1f0d9 root.Std_k98ojb.List.Flatten {}\n        list_5fda54 -> set_a1f0d9.items\n        instance(x: 40, y: 42) filter_d4e6a2 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -111, y: 25, name: \"item\") property(Number) item_8c7b3f\n\n            out(x: 378, y: 56, name: \"\") property(Bool) _a5a6ee\n\n            instance(x: 33, y: 42) contains_d1e9f1 root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -95, y: 36, name: \"item\") property(Number) item_3d4c6c\n\n                out(x: 231, y: 49, name: \"\") property(Bool) _a7e4ad\n\n                instance(x: 61, y: 47) set_a1f0d9_2 root.Std_k98ojb.List.Flatten {}\n                item_3d4c6c -> set_a1f0d9_2.items\n                filter_d4e6a2.output_list -> set_a1f0d9_2.items\n            } -> contains_d1e9f1.list\n            item_8c7b3f -> contains_d1e9f1.item\n            contains_d1e9f1.contains -> _a5a6ee\n        } -> filter_d4e6a2.handler\n        set_a1f0d9.flattened -> filter_d4e6a2.items\n        filter_d4e6a2.output_list -> reduce_3fde7c.items\n\n        instance(x: 292, y: -35) reduce_3fde7c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -117, y: 1, name: \"acc\") property(Number) acc_6d4e97\n            in(x: -109, y: 31, name: \"item\") property(Number) item_d7aef3\n\n            out(x: 441, y: 44, name: \"\") property(Number) _9f1eb0\n\n            instance(x: 201, y: 33) mul_2e4b29 root.Std_k98ojb.Math.Mul {}\n            acc_6d4e97 -> mul_2e4b29.first\n            item_d7aef3 -> mul_2e4b29.second\n            mul_2e4b29.result -> _9f1eb0\n        } -> reduce_3fde7c.reducer\n        1 -> reduce_3fde7c.initialValue\n        reduce_3fde7c.reduced -> output_cffcc2\n\n        execute_19300c -> continue_45190b\n    }\n\n    \n\n    instance(x: -105, y: 44) unique_product_ea2d4e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -300, y: 67) intersection_5c0a0e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -202, y: 72) difference_6f4d64 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> intersection_5c0a0e.left\n        list2_ai -> intersection_5c0a0e.right\n        instance(x: -16, y: 65) concat_f3a8a7 root.Std_k98ojb.List.Concat {}\n        difference_6f4d64.difference -> concat_f3a8a7.list1\n        intersection_5c0a0e.intersection -> concat_f3a8a7.list2\n        list1_ai -> difference_6f4d64.left\n        intersection_5c0a0e.intersection -> difference_6f4d64.right\n        concat_f3a8a7.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 111, y: -18) find_dissimilar_e3b9ab root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 53, y: -81) modulo_f1a9d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 186, y: -6) sub_d4c0fe root.Std_k98ojb.Math.Sub {}\n        instance(x: 388, y: -115) slice_2f5bcb root.Std_k98ojb.List.Slice {}\n        instance(x: 526, y: -32) concat_7e3a8d root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_2f5bcb.list\n        n_68068c -> sub_d4c0fe.first\n        length(list_48148f) -> sub_d4c0fe.second\n        sub_d4c0fe.result -> modulo_f1a9d8.value\n        length(list_48148f) -> modulo_f1a9d8.divisor\n        0 -> slice_2f5bcb.start\n        modulo_f1a9d8.result -> slice_2f5bcb.end\n        list_48148f -> concat_7e3a8d.left\n        slice_2f5bcb.slice -> concat_7e3a8d.right\n        concat_7e3a8d.result -> output_823209\n    }\n\n    \n\n    instance(x: 31, y: -101) rotate_right_6c1f51 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 14, y: 36) reduce_b6d0b8 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_b6d0b8.items\n        func() {\n            in(x: -152, y: -68, name: \"accumulated\") property(Number) accumulated_e5e9a1\n            in(x: -131, y: 36, name: \"current\") property(Number) current_1c4f92\n\n            out(x: 533, y: -71, name: \"sum\") property(Number) sum_f2b3d0\n\n            instance(x: 88, y: 8) add_9e6eb7 root.Std_k98ojb.Math.Add {}\n            accumulated_e5e9a1 -> add_9e6eb7.first\n            current_1c4f92 -> add_9e6eb7.second\n            add_9e6eb7.result -> sum_f2b3d0\n        } -> reduce_b6d0b8.reducer\n        0 -> reduce_b6d0b8.initialValue\n        reduce_b6d0b8.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -80, y: -1) _sum_f5c9c7 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 4, y: 34) generaterange_f6e7c5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 308, y: -27) ifexpression_e2dbd0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 302, y: -118) for_3c9a1e root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: -78) if_8b5d83 root.Std_k98ojb.Std.If {}\n        instance(x: 852, y: -14) add_ea2f0e root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_f6e7c5.from\n        num_5c0677 -> generaterange_f6e7c5.to\n        generaterange_f6e7c5.list -> for_3c9a1e.items\n        ifexpression_e2dbd0.value -> if_8b5d83.predicate\n        for_3c9a1e.item -> ifexpression_e2dbd0.gen_1\n        num_5c0677 -> ifexpression_e2dbd0.gen_0\n        for_3c9a1e.onItem -> ifexpression_e2dbd0.execute\n        if_8b5d83.then -> continue_9a54bb\n        if_8b5d83.else -> add_ea2f0e.execute\n        1 -> add_ea2f0e.first\n        for_3c9a1e.index -> add_ea2f0e.second\n        add_ea2f0e.result -> generaterange_f6e7c5.from\n        ifexpression_e2dbd0.then -> continue_9a54bb\n        for_3c9a1e.done -> continue_9a54bb\n        execute_b7b391 -> for_3c9a1e.reset\n        true -> output_c457b3\n        if_8b5d83.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -37, y: 45) num_prime_d4f6d2 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -174, y: -188) expression_c7b6e8 root.Std_k98ojb.Math.Expression {\n            expression: \"(x < 0)\"\n        }\n        instance(x: -169, y: 2) and_e0d3f1 root.Std_k98ojb.Logic.And {}\n        instance(x: -60, y: -139) expression_7e8c6a root.Std_k98ojb.Math.Expression {\n            expression: \"(y < 0)\"\n        }\n        instance(x: -17, y: -84) or_5e2f1d root.Std_k98ojb.Logic.Or {}\n        expression_c7b6e8.result -> and_e0d3f1.left\n        expression_7e8c6a.result -> and_e0d3f1.right\n        x_853326 -> expression_c7b6e8.gen_0\n        y_5390f5 -> expression_7e8c6a.gen_0\n        and_e0d3f1.result -> or_5e2f1d.left\n        instance(x: 96, y: -169) expression_f4ba00 root.Std_k98ojb.Math.Expression {\n            expression: \"(x > 0)\"\n        }\n        instance(x: 101, y: -19) and_fce3c8 root.Std_k98ojb.Logic.And {}\n        expression_f4ba00.result -> and_fce3c8.left\n        instance(x: 147, y: -77) expression_91a2ef root.Std_k98ojb.Math.Expression {\n            expression: \"(y > 0)\"\n        }\n        expression_91a2ef.result -> and_fce3c8.right\n        x_853326 -> expression_f4ba00.gen_0\n        y_5390f5 -> expression_91a2ef.gen_0\n        and_fce3c8.result -> or_5e2f1d.right\n        or_5e2f1d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -276, y: 77) opposite_signs_6b85de root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n        instance(x: 214, y: -20) modulo_d4b5e1 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_d4b5e1.value\n        11 -> modulo_d4b5e1.divisor\n        modulo_d4b5e1.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_diff_b7b8a9 root.main.is_diff {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 844, y: 122) replace_3a8bba root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3a8bba.input\n        search_ai -> replace_3a8bba.search\n        replace_ai -> replace_3a8bba.replace\n        replace_3a8bba.output -> output_ai\n    }\n\n    \n\n    instance(x: 15, y: -17) ReplaceChar_b0d6e5 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1060, y: 176) tolower_4a5f6d root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_4a5f6d.input\n        tolower_4a5f6d.output -> output_ai\n    }\n\n    \n\n    instance(x: -80, y: 186) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 1040, y: 26) if_e57c22 root.Std_k98ojb.Std.If {\n            input: execute_19300c\n            then: unique_product_node.root.main.unique_product.if_e57c22.then\n            else: continue_45190b\n        }\n\n        func() {\n\n            in(x: -133, y: 60, name: \"list\") property(List) list_5fda54\n\n            out(x: 1070, y: 106, name: \"\") trigger() _a2d85e\n\n            instance(x: -83, y: 69) set_1b59c9 root.Std_k98ojb.List.Set {}\n            instance(x: 196, y: 64) distinct_f8f3fc root.Std_k98ojb.Iteration.Filter {\n                handler: func() {\n                    in(x: -88, y: 14, name: \"item\") property(Number) item_3e3d0d\n\n                    out(x: 315, y: 32, name: \"\") property(Bool) _f2af5a\n\n                    instance(x: 123, y: 22) contains_d8c4ad root.Std_k98ojb.List.Contains {}\n                    instance(x: -25, y: 42) not_1e36d7 root.Std_k98ojb.Logic.Not {}\n                    list_5fda54 -> contains_d8c4ad.list\n                    item_3e3d0d -> contains_d8c4ad.item\n                    contains_d8c4ad.contains -> not_1e36d7.input\n                    not_1e36d7.result -> _f2af5a\n                }\n            } root.Std_k98ojb.Iteration.Filter {\n            items: list_5fda54\n        }\n\n            distinct_f8f3fc.output_list -> set_1b59c9.list\n            list_5fda54 -> set_1b59c9.value\n            set_1b59c9.set -> output_cffcc2\n            _a2d85e\n        } -> if_e57c22.then\n\n    }\n\n    \n\n    instance(x: -100, y: 13) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 39, y: 47) difference_0e8a5d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 210, y: 66) notempty_d2e6c7 root.Std_k98ojb.List.NotEmpty {}\n        instance(x: -57, y: 88) concat_9f65ca root.Std_k98ojb.List.Concat {}\n        instance(x: -223, y: 110) difference_e8a1fe root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> concat_9f65ca.left\n        list2_ai -> concat_9f65ca.right\n        concat_9f65ca.concatenated -> difference_0e8a5d.left\n        list2_ai -> difference_0e8a5d.right\n\n        difference_e8a1fe.difference -> notempty_d2e6c7.list\n        notempty_d2e6c7.isEmpty -> concat_9f65ca.right\n        list1_ai -> difference_e8a1fe.left\n        list2_ai -> difference_e8a1fe.right\n\n        difference_0e8a5d.difference -> output_ai\n    }\n\n    \n\n    instance(x: -112, y: 38) find_dissimilar_a76f4c root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 213, y: -92) slice_b2b0a6 root.Std_k98ojb.List.Slice {}\n        instance(x: 320, y: -56) length_a3e4f1 root.Std_k98ojb.List.Length {}\n        instance(x: 516, y: -113) add_9c7d0b root.Std_k98ojb.Math.Add {}\n        instance(x: 616, y: 8) slice_f6a0cb root.Std_k98ojb.List.Slice {}\n        instance(x: 735, y: -64) concat_c17e3f root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_a3e4f1.list\n        n_68068c -> add_9c7d0b.first\n        length_a3e4f1.length -> add_9c7d0b.second\n        0 -> slice_b2b0a6.start\n        list_48148f -> slice_b2b0a6.list\n        slice_f6a0cb.slice -> concat_c17e3f.right\n        -1 -> slice_f6a0cb.end\n        add_9c7d0b.result -> slice_f6a0cb.start\n        list_48148f -> slice_f6a0cb.list\n        0 -> slice_b2b0a6.end\n        slice_b2b0a6.slice -> concat_c17e3f.left\n        concat_c17e3f.result -> output_823209\n    }\n\n    \n\n    instance(x: -235, y: -97) rotate_right_fcb9c7 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 210, y: -9) reduce_7e8d31 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -161, y: -82, name: \"accumulated\") property(Number) accumulated_c5ad3c\n            in(x: -150, y: 30, name: \"current\") property(Number) current_6d7a9b\n\n            out(x: 520, y: -77, name: \"sum\") property(Number) sum_2f07e1\n\n            instance(x: 118, y: 20) add_d0c1c4 root.Std_k98ojb.Math.Add {}\n            accumulated_c5ad3c -> add_d0c1c4.first\n            current_6d7a9b -> add_d0c1c4.second\n            add_d0c1c4.result -> sum_2f07e1\n        } -> reduce_7e8d31.reducer\n        0 -> reduce_7e8d31.initialValue\n        list_2c62ab -> reduce_7e8d31.items\n        reduce_7e8d31.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 70, y: -20) _sum_fd3b5a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -79, y: 14) generaterange_7f6d2c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 352, y: -66) ifexpression_d8ab4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || num % current != 0\"\n        }\n        getter(x: 145, y: 69, name: \"getter_1fbc7d\") getter_1fbc7d = previous\n        setter(x: 384, y: -215, name: \"setter_f4a8e5\") setter_f4a8e5 = previous\n        instance(x: 154, y: -156) for_df2c3b root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: -225, name: \"setter_7f6b69\") setter_7f6b69 = previous\n        instance(x: -276, y: -48) getat_8be9a2 root.Std_k98ojb.List.GetAt {}\n        ifexpression_d8ab4e.else -> continue_9a54bb\n        ifexpression_d8ab4e.value -> output_c457b3\n        ifexpression_d8ab4e.then -> setter_f4a8e5.execute\n        generaterange_7f6d2c.list -> for_df2c3b.items\n        for_df2c3b.item -> ifexpression_d8ab4e.gen_2\n        for_df2c3b.index -> ifexpression_d8ab4e.gen_0\n        getter_1fbc7d.value -> ifexpression_d8ab4e.gen_1\n        for_df2c3b.onItem -> ifexpression_d8ab4e.execute\n        for_df2c3b.done -> continue_9a54bb\n        for_df2c3b.item -> setter_f4a8e5.new_value\n        num_5c0677 -> generaterange_7f6d2c.to\n        1 -> generaterange_7f6d2c.from\n        list_empty_e0e9da.listWithoutItem -> getat_8be9a2.list\n        0 -> getat_8be9a2.index\n        getat_8be9a2.itemAtIndex -> setter_7f6b69.new_value\n        execute_b7b391 -> setter_7f6b69.execute\n        setter_7f6b69.continue -> for_df2c3b.reset\n        setter_f4a8e5.continue -> for_df2c3b.next\n    }\n\n    \n\n    instance(x: 62, y: -33) num_prime_c1d21e root.main.num_prime {}\n    instance(x: -309, y: -58) empty_6ce7f9 root.Std_k98ojb.List.Empty {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -178, y: -247) expression_7e6c1d root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_7e6c1d.gen_0\n        y_5390f5 -> expression_7e6c1d.gen_1\n        expression_7e6c1d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -192, y: 139) opposite_signs_8b4f2f root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 186, y: -24) expression_7e8b9a root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_27f29c -> expression_7e8b9a.gen_0\n        expression_7e8b9a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -12, y: 10) is_diff_1d3f4 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_2c3b8f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2c3b8f.input\n        search_ai -> replace_2c3b8f.search\n        replace_ai -> replace_2c3b8f.replace\n        replace_2c3b8f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -1, y: 0) set_ae4f9c root.Std_k98ojb.List.Set {}\n        list_5fda54 -> set_ae4f9c.items\n        instance(x: 0, y: 0) reduce_3a7d8f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_1e6c9c\n\n            in(x: -33, y: 44, name: \"item\") property(Number) item_7f8a2d\n\n            out(x: 515, y: 44, name: \"\") property(Number) _b4f3ad\n\n            instance(x: 89, y: 29) mul_1e9c0c root.Std_k98ojb.Math.Mul {}\n            acc_1e6c9c -> mul_1e9c0c.first\n            item_7f8a2d -> mul_1e9c0c.second\n            mul_1e9c0c.result -> _b4f3ad\n        } -> reduce_3a7d8f.reducer\n        set_ae4f9c.set -> reduce_3a7d8f.items\n        1 -> reduce_3a7d8f.initialValue\n        reduce_3a7d8f.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -1, y: 0) unique_product_5e9c4b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -301, y: 32, name: \"intersection\") intersection_3f9a1e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -201, y: 92, name: \"difference1\") difference_7c8d4f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -101, y: 152, name: \"difference2\") difference_9e3a5f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> intersection_3f9a1e.left\n        list2_ai -> intersection_3f9a1e.right\n        instance(x: -401, y: 92, name: \"concat\") concat_7c8d4f root.Std_k98ojb.List.Concat {}\n        difference_7c8d4f.difference -> concat_7c8d4f.left\n        difference_9e3a5f.difference -> concat_7c8d4f.right\n        intersection_3f9a1e.intersection -> difference_7c8d4f.right\n        intersection_3f9a1e.intersection -> difference_9e3a5f.right\n        list1_ai -> difference_7c8d4f.left\n        list2_ai -> difference_9e3a5f.left\n        concat_7c8d4f.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 100, y: -20) find_dissimilar_6b1c0e root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 55, y: -67) slice_7a1f8e root.Std_k98ojb.List.Slice {}\n        instance(x: 72, y: 15, name: \"slice2\") slice_5c9d4f root.Std_k98ojb.List.Slice {}\n        instance(x: 281, y: -3) concat_6e7a1c root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_7a1f8e.list\n        n_68068c -> sub_9d5f2e.first\n        length_4b8927.length -> sub_9d5f2e.second\n        sub_9d5f2e.result -> slice_7a1f8e.start\n        -1 -> slice_7a1f8e.end\n        list_48148f -> slice_5c9d4f.list\n        0 -> slice_5c9d4f.start\n        sub_9d5f2e.result -> slice_5c9d4f.end\n        slice_7a1f8e.slice -> concat_6e7a1c.right\n        slice_5c9d4f.slice -> concat_6e7a1c.left\n        concat_6e7a1c.result -> output_823209\n        list_48148f -> length_4b8927.list\n        instance(x: 0, y: -122) sub_9d5f2e root.Std_k98ojb.Math.Sub {}\n    }\n\n    \n\n    instance(x: -232, y: -107) rotate_right_1a3c8c root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 12, y: 11) reduce_7e1b9d root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7e1b9d.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_7e1b9d.reducer\n        0 -> reduce_7e1b9d.initialValue\n        reduce_7e1b9d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 0, y: 30) generaterange_8e6f2c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 333, y: -10) lessthanorequal_1d7b5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -150) for_8e9f3a root.Std_k98ojb.Std.For {}\n        instance(x: 1006, y: -50) if_e4f2da root.Std_k98ojb.Std.If {}\n        instance(x: 1017, y: 60) expression_1c0d5c root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1009, y: -20) if_3a4f2e root.Std_k98ojb.Std.If {}\n        instance(x: 1028, y: -140) add_1c7d5c root.Std_k98ojb.Math.Add {}\n        num_5c0677 -> generaterange_8e6f2c.from\n        2 -> generaterange_8e6f2c.to\n        generaterange_8e6f2c.list -> for_8e9f3a.items\n        for_8e9f3a.item -> lessthanorequal_1d7b5c.left\n        num_5c0677 -> lessthanorequal_1d7b5c.right\n        lessthanorequal_1d7b5c.result -> if_3a4f2e.predicate\n        for_8e9f3a.onItem -> if_3a4f2e.execute\n        if_3a4f2e.else -> continue_9a54bb\n        num_5c0677 -> expression_1c0d5c.gen_0\n        for_8e9f3a.item -> expression_1c0d5c.gen_1\n        expression_1c0d5c.result -> if_e4f2da.predicate\n        if_3a4f2e.then -> if_e4f2da.execute\n        1 -> add_1c7d5c.first\n        for_8e9f3a.index -> add_1c7d5c.second\n        add_1c7d5c.result -> expression_1c0d5c.gen_1\n        if_e4f2da.then -> continue_9a54bb\n        if_e4f2da.else -> for_8e9f3a.next\n        execute_b7b391 -> for_8e9f3a.reset\n        for_8e9f3a.done -> continue_9a54bb\n        0 -> if_e4f2da.value\n        1 -> if_e4f2da.value\n        if_e4f2da.then -> output_c457b3\n    }\n\n    \n\n    instance(x: -10, y: -12) num_prime_7e8c9d root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -189, y: -223) lessthanorequal_f7e8c1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6, y: -221) notequal_e2f4d8 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 226, y: -222) and_5f3a0e root.Std_k98ojb.Logic.And {}\n        x_853326 -> lessthanorequal_f7e8c1.left\n        0 -> lessthanorequal_f7e8c1.right\n        y_5390f5 -> lessthanorequal_f7e8c1.left\n        0 -> lessthanorequal_f7e8c1.right\n        lessthanorequal_f7e8c1.result -> notequal_e2f4d8.left\n        lessthanorequal_f7e8c1.result -> and_5f3a0e.left\n        notequal_e2f4d8.right -> notequal_e2f4d8.left\n        notequal_e2f4d8.result -> and_5f3a0e.right\n        and_5f3a0e.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -186, y: 69) opposite_signs_b1c7c8 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 184, y: -23) mod_c8b9d4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 427, y: -22) equal_5e3c6a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> mod_c8b9d4.value\n        11 -> mod_c8b9d4.divisor\n        mod_c8b9d4.result -> equal_5e3c6a.left\n        0 -> equal_5e3c6a.right\n        equal_5e3c6a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -11, y: -10) is_diff_a1b8c9 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 126) replace_3b2c9f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b2c9f.input\n        search_ai -> replace_3b2c9f.search\n        replace_ai -> replace_3b2c9f.replace\n        replace_3b2c9f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1043, y: 135, name: \"lowercase\") tolower_1d5f9a root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_1d5f9a.input\n        func() {\n            in(x: -271, y: -51, name: \"current\") property(String) current_b8e6c4\n\n            out(x: 404, y: -54, name: \"output\") property(Bool) output_c0b7d2\n\n            instance(x: 24, y: -56, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            current_b8e6c4 -> isnumeric_9cb360.input\n            isnumeric_9cb360.isNumeric -> output_c0b7d2\n        } -> tolower_1d5f9a.handler\n        tolower_1d5f9a.output -> output_ai\n    }\n\n    \n\n    instance(x: 14, y: -54) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 0, y: 0) set_ae4f9a root.Std_k98ojb.List.Sort {}\n        list_5fda54 -> set_ae4f9a.list\n        instance(x: -20, y: 40) zip_8d6c2f root.Std_k98ojb.Iteration.Zip {}\n        func() {\n            in(x: -114, y: 0, name: \"x\") property(Number) x_1a5e7f\n\n            in(x: -4, y: 26, name: \"y\") property(Number) y_e8c9ea\n\n            out(x: 107, y: 17, name: \"\") trigger() _3b0c2d\n        } -> zip_8d6c2f.handler\n        instance(x: -100, y: 20) if_5e7a4c root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -82, y: 12, name: \"input\") property(Bool) input_d1e0d8\n\n            out(x: 17, y: 27, name: \"\") trigger() then_9a2f6d\n            out(x: 17, y: 47, name: \"\") trigger() else_f3c5b7\n        } -> if_5e7a4c.handler\n        instance(x: -80, y: 40) not_equal_8e1f1e root.Std_k98ojb.Logic.NotEqual {}\n        x_1a5e7f -> not_equal_8e1f1e.left\n        y_e8c9ea -> not_equal_8e1f1e.right\n        not_equal_8e1f1e.result -> if_5e7a4c.input\n        instance(x: -60, y: 64) multiply_b6d0a2 root.Std_k98ojb.Math.Mul {}\n        x_1a5e7f -> multiply_b6d0a2.first\n        y_e8c9ea -> multiply_b6d0a2.second\n        instance(x: -20, y: 80) set_3c1e9f root.Std_k98ojb.List.Set {}\n        list_5fda54 -> set_3c1e9f.list\n        multiply_b6d0a2.result -> set_3c1e9f.value\n        instance(x: -20, y: 100) getat_f4f8ef root.Std_k98ojb.List.GetAt {}\n        func() {\n            in(x: -114, y: 40, name: \"index\") property(Number) index_7a3d1c\n\n            out(x: 107, y: 57, name: \"\") trigger() _e5f6ba\n        } -> getat_f4f8ef.handler\n        instance(x: -100, y: 80) count_e9b2ec root.Std_k98ojb.Std.Count {}\n        func() {\n            in(x: -82, y: 72, name: \"input\") property(Bool) input_1e7c3d\n\n            out(x: 17, y: 87, name: \"\") trigger() then_f8f9a0\n            out(x: 17, y: 107, name: \"\") trigger() else_e4d6b5\n        } -> count_e9b2ec.handler\n        instance(x: -80, y: 120) add_3c1e8e root.Std_k98ojb.Math.Add {}\n        index_7a3d1c -> add_3c1e8e.first\n        1 -> add_3c1e8e.second\n        add_3c1e8e.result -> count_e9b2ec.count\n        instance(x: -60, y: 140) set_a0b6a4 root.Std_k98ojb.List.Set {}\n        list_5fda54 -> set_a0b6a4.list\n        getat_f4f8ef.item -> set_a0b6a4.value\n        func() {\n            in(x: -114, y: 160, name: \"index\") property(Number) index_e7e3c9\n\n            out(x: 107, y: 177, name: \"\") trigger() _5d1f8f\n        } -> set_a0b6a4.handler\n        instance(x: -100, y: 200) getat_8b2f1e root.Std_k98ojb.List.GetAt {}\n        func() {\n            in(x: -114, y: 220, name: \"index\") property(Number) index_e5d0c6\n\n            out(x: 107, y: 237, name: \"\") trigger() _a2f7e1\n        } -> getat_8b2f1e.handler\n        instance(x: -80, y: 240) if_4b3c9e root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -62, y: 252, name: \"input\") property(Bool) input_e6a0d5\n\n            out(x: 17, y: 267, name: \"\") trigger() then_1f8c4e\n            out(x: 17, y: 287, name: \"\") trigger() else_3b2f9a\n        } -> if_4b3c9e.handler\n        instance(x: -40, y: 320) greaterthan_f7d5d6 root.Std_k98ojb.Math.GreaterThan {}\n        index_e7e3c9 -> greaterthan_f7d5d6.left\n        getat_8b2f1e.length -> greaterthan_f7d5d6.right\n        greaterthan_f7d5d6.result -> if_4b3c9e.input\n        instance(x: -20, y: 360) set_ba8b8a root.Std_k98ojb.List.Set {}\n        list_5fda54 -> set_ba8b8a.list\n        getat_f4f8ef.item -> set_ba8b8a.value\n        func() {\n            in(x: -114, y: 380, name: \"index\") property(Number) index_c0d3e7\n\n            out(x: 107, y: 397, name: \"\") trigger() _1f5c9e\n        } -> set_ba8b8a.handler\n        instance(x: -80, y: 440) reduce_2b1e4e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -114, y: 480, name: \"accum\") property(Number) accum_c0d3e7\n\n            in(x: -34, y: 500, name: \"curr\") property(Number) curr_1f5c9e\n\n            out(x: 107, y: 517, name: \"\") trigger() _b6a8fa\n        } -> reduce_2b1e4e.handler\n        instance(x: -20, y: 560) set_a0b6d7 root.Std_k98ojb.List.Set {}\n        list_5fda54 -> set_a0b6d7.list\n        execute_19300c -> set_a0b6d7.reset\n        1 -> set_a0b6d7.value\n        func() {\n            in(x: -114, y: 580, name: \"index\") property(Number) index_e5d0c6\n\n            out(x: 107, y: 597, name: \"\") trigger() _a2f7e1\n        } -> set_a0b6d7.handler\n        instance(x: -100, y: 640) getat_8b2fa9 root.Std_k98ojb.List.GetAt {}\n        func() {\n            in(x: -114, y: 660, name: \"index\") property(Number) index_e5d0c6\n\n            out(x: 107, y: 677, name: \"\") trigger() _a2f7e1\n        } -> getat_8b2fa9.handler\n        instance(x: -80, y: 720) if_4b3c8e root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -62, y: 732, name: \"input\") property(Bool) input_e6a0d5\n\n            out(x: 17, y:"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -279, y: 41) intersection_5a1c6d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -89, y: 91) difference_3e4f7c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 179, y: 92) concat_f0c2d5 root.Std_k98ojb.List.Concat {}\n        list1_ai -> intersection_5a1c6d.left\n        list2_ai -> intersection_5a1c6d.right\n        list1_ai -> difference_3e4f7c.left\n        intersection_5a1c6d.intersection -> difference_3e4f7c.right\n        list2_ai -> difference_3e4f7c.left\n        intersection_5a1c6d.intersection -> difference_3e4f7c.right\n        concat_f0c2d5.list1 -> difference_3e4f7c.difference\n        concat_f0c2d5.list2 -> difference_3e4f7c.difference\n        concat_f0c2d5.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 91, y: -8) find_dissimilar_ea6b8e root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 69, y: -92) modulo_f6f1d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 277, y: -93) slice_b9c7e4 root.Std_k98ojb.List.Slice {}\n        instance(x: 494, y: -91) slice_3e0a5e root.Std_k98ojb.List.Slice {}\n        instance(x: 712, y: -90) concat_6f1d8e root.Std_k98ojb.List.Concat {}\n        n_68068c -> modulo_f6f1d8.value\n        list_48148f.length -> modulo_f6f1d8.divisor\n        modulo_f6f1d8.result -> slice_b9c7e4.end\n        0 -> slice_b9c7e4.start\n        -1 -> slice_3e0a5e.end\n        list_48148f -> slice_b9c7e4.list\n        slice_b9c7e4.slice -> concat_6f1d8e.left\n        modulo_f6f1d8.result -> slice_3e0a5e.start\n        list_48148f -> slice_3e0a5e.list\n        slice_3e0a5e.slice -> concat_6f1d8e.right\n        concat_6f1d8e.result -> output_823209\n    }\n\n    \n\n    instance(x: -250, y: -117) rotate_right_7b2c9c root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 24, y: 11) reduce_b4d0b8 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_b4d0b8.items\n        func() {\n            in(x: -184, y: -80, name: \"accumulated\") property(Number) accumulated_5e1f3a\n            in(x: -174, y: 21, name: \"current\") property(Number) current_a7f6c2\n\n            out(x: 1068, y: -76, name: \"sum\") property(Number) sum_9b4d0a\n\n            instance(x: 75, y: 3) add_e1b5ef root.Std_k98ojb.Math.Add {}\n            accumulated_5e1f3a -> add_e1b5ef.first\n            current_a7f11c2 -> add_e1b5ef.second\n            add_e1b5ef.result -> sum_9b4d0a\n        } -> reduce_b4d0b8.reducer\n        0 -> reduce_b4d0b8.initialValue\n        reduce_b4d0b8.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: 10) _sum_1c3f6c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1025, y: -25) if_f7e6c8 root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -129) lessthanorequal_c4d0ef root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1019, y: -212) add_3a5e7c root.Std_k98ojb.Math.Add {}\n        instance(x: 1021, y: -299) mod_e8f2ec root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1006, y: -384) if_a9e0d4 root.Std_k98ojb.Std.If {}\n        instance(x: 1045, y: -466) expression_7c3a3d root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1026, y: -548) if_b9e2f8 root.Std_k98ojb.Std.If {}\n        instance(x: 1044, y: -632) expression_1a3c5f root.Std_k98ojb.Math.Expression {\n            expression: \"i == num\"\n        }\n        instance(x: 1016, y: -716) and_8d7b0e root.Std_k98ojb.Logic.And {}\n        instance(x: 1002, y: -798) not_f9a4f5 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1023, y: -881) if_6c3a5d root.Std_k98ojb.Std.If {}\n        instance(x: 1011, y: -964) for_d7e8ed root.Std_k98ojb.Std.For {}\n        lessthanorequal_c4d0ef.left -> add_3a5e7c.first\n        1 -> add_3a5e7c.second\n        add_3a5e7c.result -> mod_e8f2ec.gen_0\n        num_5c0677 -> mod_e8f2ec.divisor\n        expression_7c3a3d.result -> if_a9e0d4.predicate\n        for_d7e8ed.item -> lessthanorequal_c4d0ef.right\n        num_5c0677 -> lessthanorequal_c4d0ef.left\n        execute_b7b391 -> for_d7e8ed.reset\n        if_a9e0d4.then -> continue_9a54bb\n        expression_1a3c5f.result -> and_8d7b0e.right\n        mod_e8f2ec.result -> expression_1a3c5f.gen_1\n        for_d7e8ed.item -> expression_1a3c5f.gen_0\n        if_b9e2f8.then -> continue_9a54bb\n        and_8d7b0e.left -> not_f9a4f5.input\n        not_f9a4f5.result -> if_6c3a5d.predicate\n        for_d7e8ed.onItem -> expression_7c3a3d.execute\n        num_5c0677 -> expression_7c3a3d.gen_0\n        for_d7e8ed.item -> expression_7c3a3d.gen_1\n        if_6c3a5d.then -> continue_9a54bb\n        if_6c3a5d.else -> for_d7e8ed.next\n        for_d7e8ed.done -> continue_9a54bb\n        num_5c0677 -> lessthanorequal_c4d0ef.left\n        1 -> add_3a5e7c.first\n        if_f7e6c8.predicate -> output_c457b3\n        if_a9e0d4.else -> expression_7c3a3d.execute\n        num_5c0677 -> if_f7e6c8.predicate\n        1 -> for_d7e8ed.items\n        if_b9e2f8.else -> if_6c3a5d.execute\n    }\n\n    \n\n    instance(x: -57, y: 14) prime_num_0b4f7a root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 12, y: -221) expression_c7b2e1 root.Std_k98ojb.Math.Expression {\n            expression: \"(x > 0 && y < 0 || x < 0 && y > 0)\"\n        }\n        x_853326 -> expression_c7b2e1.gen_1\n        y_5390f5 -> expression_c7b2e1.gen_2\n        expression_c7b2e1.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -293, y: 55) opposite_signs_bf7d6a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n        instance(x: 210, y: -20) modulo_d4b6a5 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_d4b6a5.value\n        11 -> modulo_d4b6a5.divisor\n        modulo_d4b6a5.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -17, y: 8) is_diff_e2f7e9 root.main.is_diff {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 774, y: 134) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -191, y: 31) ReplaceChar_b0a9f6 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1046, y: 131) tolowercase_5a3d9a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -11, y: 209) equals_d4e0f1 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolowercase_5a3d9a.input\n        input_ai -> equals_d4e0f1.left\n        tolowercase_5a3d9a.lowercased -> equals_d4e0f1.right\n        equals_d4e0f1.equals -> output_ai\n    }\n\n    \n\n    instance(x: 1046, y: -11) is_lower_e8c2e6 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\nfunc(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n\tinstance(x: -357, y: -19) set_f9d5e1 root.Std_k98ojb.Sets.Difference {}\n\tlist_5fda54 -> set_f9d5e1.left\n\tlist_5fda54 -> set_f9d5e1.right\n\tset_f9d5e1.difference -> list_5fda54\n\n\tinstance(x: -113, y: 0) map_ba1b2c root.Std_k98ojb.Iteration.Map {}\n\tlist_5fda54 -> map_ba1b2c.items\n\tfunc() {\n\t\tin(x: -111, y: 37, name: \"value\") property(Number) value_d4eb6d\n\n\t\tout(x: 335, y: 45, name: \"\") property(List) _7f1f9f\n\n\t\tinstance(x: -14, y: 27) add_3a1b5e root.Std_k98ojb.List.Add {}\n\t\tlist_empty -> add_3a1b5e.list\n\t\tvalue_d4eb6d -> add_3a1b5e.item\n\t\tadd_3a1b5e.listWithItem -> _7f1f9f\n\t} -> map_ba1b2c.handler\n\n\tinstance(x: -13, y: 84) reduce_8d3e4a root.Std_k98ojb.Iteration.Reduce {}\n\tfunc() {\n\t\tin(x: -110, y: 134, name: \"accum\") property(Number) accum_e0f8ae\n\t\tin(x: -113, y: 156, name: \"value\") property(List) value_b9c7e2\n\n\t\tout(x: 334, y: 165, name: \"\") property(Number) _1d4b6f\n\n\t\tinstance(x: 10, y: 150) mul_8c7a5e root.Std_k98ojb.Math.Mul {}\n\t\tmul_8c7a5e.second -> value_b9c7e2.firstItem\n\t\taccum_e0f8ae -> mul_8c7a5e.first\n\n\t\tmul_8c7a5e.result -> _1d4b6f\n\t} -> reduce_8d3e4a.reducer\n\tmap_ba1b2c.output_list -> reduce_8d3e4a.items\n\tinstance(x: -12, y: 211) empty_e9f0dc root.Std_k98ojb.List.Empty {}\n\tempty_e9f0dc.empty -> reduce_8d3e4a.initial\n\n\treduce_8d3e4a.reduced -> output_cffcc2\n\n\texecute_19300c -> set_f9d5e1.trigger\n\tset_f9d5e1.trigger -> map_ba1b2c.trigger\n\tmap_ba1b2c.done -> reduce_8d3e4a.trigger\n\treduce_8d3e4a.done -> continue_45190b\n\n}\n\ninstance(x: -104, y: 102) unique_product_d6f9c7 root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 5, y: 89) difference_8a3e4d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 6, y: -10) difference_f0e1f7 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_8a3e4d.left\n        list2_ai -> difference_8a3e4d.right\n        list2_ai -> difference_f0e1f7.left\n        list1_ai -> difference_f0e1f7.right\n        instance(x: 185, y: -13) concat_e9e6cd root.Std_k98ojb.List.Concat {}\n        difference_8a3e4d.difference -> concat_e9e6cd.list1\n        difference_f0e1f7.difference -> concat_e9e6cd.list2\n        concat_e9e6cd.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -93, y: 23) find_dissimilar_2c4a3d root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 278, y: -39) sub_f8d0b6 root.Std_k98ojb.Math.Sub {}\n        getter(x: 515, y: -114, name: \"getter_b1e2f4\") getter_b1e2f4 = list\n        instance(x: 514, y: -40) slice_9b3a2c root.Std_k98ojb.List.Slice {}\n        sub_f8d0b6.first -> n_68068c\n        sub_f8d0b6.second -> length_5e8d4c.length\n        list_48148f -> length_5e8d4c.list\n        instance(x: 514, y: -168) slice_a1a2ea root.Std_k98ojb.List.Slice {}\n        0 -> slice_a1a2ea.start\n        sub_f8d0b6.result -> slice_a1a2ea.end\n        list_48148f -> slice_a1a2ea.list\n        instance(x: -13, y: -113) concat_bf8c5a root.Std_k98ojb.List.Concat {}\n        slice_9b3a2c.slice -> concat_bf8c5a.right\n        getter_b1e2f4.value -> concat_bf8c5a.left\n        slice_a1a2ea.slice -> slice_9b3a2c.list\n        list_48148f -> slice_9b3a2c.list\n        sub_f8d0b6.result -> slice_9b3a2c.start\n        concat_bf8c5a.result -> output_823209\n    }\n\n    \n\n    instance(x: 12, y: -111) rotate_right_c5e1e7 root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 20, y: -7) reduce_1e4f0d root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 333, y: 62) data_b9e6aa  = 0\n        func() {\n            in(x: -177, y: -85, name: \"accumulated\") property(Number) accumulated_7c8f2d\n            in(x: -168, y: 23, name: \"current\") property(Any) current_b5d9aa\n\n            out(x: 1056, y: -82, name: \"sum\") property(Number) sum_f0a4ab\n\n            instance(x: 80, y: 10) add_7b8e2c root.Std_k98ojb.Math.Add {}\n            data_b9e6aa -> add_7b8e2c.first\n            current_b5d9aa -> add_7b8e2c.second\n            add_7b8e2c.result -> sum_f0a4ab\n        } -> reduce_1e4f0d.reducer\n        list_2c62ab -> reduce_1e4f0d.items\n        data_b9e6aa -> reduce_1e4f0d.initialValue\n        reduce_1e4f0d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 88, y: -24) _sum_f5b8c3 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -4, y: 29) generaterange_e5c6e7 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 302, y: -28) lessthan_1a2b0d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 540, y: -32) expression_bf4c8f root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i != 0)\"\n        }\n        instance(x: 632, y: -130) if_a5a1e3 root.Std_k98ojb.Std.If {}\n        instance(x: 1006, y: 11) for_b2c9d4 root.Std_k98ojb.Std.For {}\n        instance(x: 1080, y: 14) and_9ef6f8 root.Std_k98ojb.Logic.And {}\n        instance(x: 1285, y: -95) if_c6a3ab root.Std_k98ojb.Std.If {}\n        generaterange_e5c6e7.to -> lessthan_1a2b0d.right\n        num_5c0677 -> lessthan_1a2b0d.left\n        lessthan_1a2b0d.result -> for_b2c9d4.items\n        expression_bf4c8f.gen_0 -> and_9ef6f8.left\n        1 -> generaterange_e5c6e7.from\n        num_5c0677 -> generaterange_e5c6e7.to\n        for_b2c9d4.item -> expression_bf4c8f.gen_1\n        for_b2c9d4.index -> expression_bf4c8f.gen_0\n        execute_b7b391 -> generaterange_e5c6e7.execute\n        for_b2c9d4.onItem -> if_a5a1e3.execute\n        and_9ef6f8.right -> if_c6a3ab.predicate\n        expression_bf4c8f.result -> and_9ef6f8.left\n        if_a5a1e3.value -> if_c6a3ab.thenTrigger\n        0 -> lessthan_1a2c7d.from\n        for_b2c9d4.item -> lessthan_1a2c7d.to\n        lessthan_1a2c7d.result -> if_a5a1e3.predicate\n        if_a5a1e3.value -> output_c457b3\n        if_a5a1e3.else -> continue_9a54bb\n        for_b2c9d4.done -> continue_9a54bb\n        and_9ef6f8.result -> num_prime\n        if_c6a3ab.then -> continue_9a54bb\n        if_c6a3ab.else -> for_b2c9d4.next\n    }\n\n    \n\n    instance(x: 10, y: -187) num_prime_0e7e0b root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -189, y: -217) expression_c6e7c8 root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y < 0)\"\n        }\n        x_853326 -> expression_c6e7c8.gen_0\n        y_5390f5 -> expression_c6e7c8.gen_1\n        expression_c6e7c8.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -186, y: 67) opposite_signs_eb2d7c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -22) characters_c9e7d8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 387, y: -23) map_1a4c6f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 604, y: -21) reduce_3a5c2f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 833, y: 0) modulo_c9e7d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1046, y: 1) equal_4f8f3a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> characters_c9e7d8.input\n        func() {\n            in(x: -24, y: 43, name: \"current\") property(String) current_5c6f2c\n\n            out(x: 479, y: 25, name: \"output\") property(Number) output_ea1b9e\n\n            instance(x: 104, y: 31) expression_c0d3c8 root.Std_k98ojb.Math.Expression {\n                expression: \"(index % 2 == 0 ? parseInt(current) : -parseInt(current))\"\n            }\n            current_5c6f2c -> expression_c0d3c8.gen_1\n            func() {\n                in(x: -22, y: 17, name: \"current\") property(Number) current_4e9a9b\n\n                out(x: 226, y: 37, name: \"output\") property(Number) output_e6f0d7\n\n                instance(x: 78, y: 33) parseInt_1c8e3f root.Std_k98ojb.Strings.IsNumeric {}\n                current_4e9a9b -> parseInt_1c8e3f.input\n                parseInt_1c8e3f.result -> output_e6f0d7\n            } -> expression_c0d3c8.handler\n            map_1a4c6f.index -> expression_c0d3c8.gen_0\n            characters_c9e9e8.output -> map_1a4c6f.items\n        } -> map_1a4c6f.handler\n        map_1a4c6f.output_list -> reduce_3a5c2f.item\n        func() {\n            in(x: -25, y: 7, name: \"accumulated\") property(Number) accumulated_9e0d8b\n            in(x: -17, y: 80, name: \"current\") property(Number) current_1e6a4c\n\n            out(x: 499, y: 50, name: \"output\") property(Number) output_7f5c3f\n\n            instance(x: 108, y: 45) add_9d8b1c root.Std_k98ojb.Math.Add {}\n            accumulated_9e0d8b -> add_9d8b1c.first\n            current_1e6a4c -> add_9d8b1c.second\n            add_9d8b1c.result -> output_7f5c3f\n        } -> reduce_3a5c2f.reducer\n        0 -> reduce_3a5c2f.initialValue\n        modulo_c9e7d8.divisor -> 11\n        reduce_3a5c2f.result -> modulo_c9e7d8.value\n        equal_4f8f3a.left -> modulo_c9e7d8.result\n        0 -> equal_4f8f3a.right\n        equal_4f8f3a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: -2) is_diff_1b5c8f root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 131) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1032, y: 178, name: \"lowercase\") tolower_1a9c8e root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_1a9c8e.input\n        func() {\n            in(x: -271, y: -47, name: \"current\") property(String) current_6f7d4f\n\n            out(x: 404, y: -51, name: \"output\") property(Bool) output_2b1a5c\n\n            instance(x: 24, y: -53, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            current_6f7d4f -> isnumeric_9cb360.input\n            isnumeric_9cb360.isNumeric -> output_2b1a5c\n        } -> instance(x: 1028, y: -46, name: \"filter\") filter_c3e0c9 root.Std_k98ojb.Iteration.Filter {}\n        tolower_1a9c8e.output -> filter_c3e0c9.items\n        func() {\n            in(x: -271, y: 57, name: \"current\") property(String) current_6f7d4f\n\n            out(x: 404, y: 53, name: \"output\") property(Bool) output_2b1a5c\n\n            instance(x: 24, y: 51, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            current_6f7d4f -> isnumeric_9cb360.input\n            isnumeric_9cb360.isNumeric -> output_2b1a5c\n        } -> instance(x: 1028, y: 58, name: \"filter\") filter_3e0c9 root.Std_k98ojb.Iteration.Filter {}\n        input_ai -> filter_3e0c9.items\n        filter_c3e0c9.output_list -> output_ai\n        filter_3e0c9.output_list -> instance(x: 1028, y: 132, name: \"logic\") logic_1a9c8e root.Std_k98ojb.Logic.Equal {}\n        logic_1a9c8e.left -> tolower_1a9c8e.output\n        logic_1a9c8e.right -> filter_3e0c9.output_list\n        logic_1a9c8e.equal -> output_ai\n    }\n\n    \n\n    instance(x: 14, y: -52) is_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -506, y: -21) set_5f8c1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -507, y: 63) map_7a3d9c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -508, y: 153) reduce_4b0d6f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -509, y: 244) list_1e8f5a root.Std_k98ojb.List.Empty {}\n        instance(x: -510, y: 334) mul_7c9f2f root.Std_k98ojb.Math.Mul {}\n        execute_19300c -> set_5f8c1e.left\n        list_5fda54 -> set_5f8c1e.right\n        func() {\n            in(x: -493, y: 87, name: \"item\") property(Number) item_ea7d9b\n\n            out(x: 699, y: 106, name: \"\") property(List) _6f3c2a\n\n            instance(x: -479, y: 112) contains_5e8f0c root.Std_k98ojb.List.Contains {}\n            list_1e8f5a.list -> contains_5e8f0c.list\n            item_ea7d9b -> contains_5e8f0c.item\n            instance(x: -463, y: 129) add_3b4b2f root.Std_k98ojb.List.Add {}\n            list_1e8f5a.list -> add_3b4b2f.list\n            item_ea7d9b -> add_3b4b2f.item\n            contains_5e8f0c.contains -> if_5a5f6e.input\n            add_3b4b2f.listWithItem -> if_5a5f6e.then\n            list_1e8f5a.list -> if_5a5f6e.else\n            instance(x: -441, y: 145) if_5a5f6e root.Std_k98ojb.Std.If {}\n            if_5a5f6e.value -> _6f3c2a\n        } -> map_7a3d9c.handler\n        set_5f8c1e.difference -> map_7a3d9c.items\n        func() {\n            in(x: -495, y: 211, name: \"acc\") property(Number) acc_4b2d6c\n\n            in(x: -495, y: 292, name: \"item\") property(Number) item_ea7d9b\n\n            out(x: 699, y: 311, name: \"\") property(Number) _e3f1a0\n\n            instance(x: -482, y: 228, name: \"\") root.Std_k98ojb.Math.Mul {}\n            acc_4b2d6c -> mul_7c9f2f.first\n            item_ea7d9b -> mul_7c9f2f.second\n            mul_7c9f2f.result -> _e3f1a0\n        } -> reduce_4b0d6f.reducer\n        map_7a3d9c.output_list -> reduce_4b0d6f.items\n        1 -> reduce_4b0d6f.initialValue\n        reduce_4b0d6f.result -> output_cffcc2\n        continue_45190b -> execute_19300c\n    }\n\n    \n\n    instance(x: -107, y: 102) unique_product_5e8a1f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -279, y: 30) difference_3b7f1c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 17, y: 99) concat_4e8a9d root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_3b7f1c.left\n        list2_ai -> difference_3b7f1c.right\n        difference_3b7f1c.difference -> concat_4e8a9d.list1\n        list2_ai -> difference_3b7f1c.left\n        list1_ai -> difference_3b7f1c.right\n        difference_3b7f1c.difference -> concat_4e8a9d.list2\n        concat_4e8a9d.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 110, y: -12) find_dissimilar_e5c0f6 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 293, y: -41) modulo_7a1f8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 292, y: 91) slice_9c3d5c root.Std_k98ojb.List.Slice {}\n        instance(x: 556, y: -67) concat_6e4b0c root.Std_k98ojb.List.Concat {}\n        n_68068c -> modulo_7a1f8e.value\n        list_48148f -> modulo_7a1f8e.divisor\n        modulo_7a1f8e.result -> slice_9c3d5c.end\n        -1 -> slice_9c3d5c.start\n        list_48148f -> slice_9c3d5c.list\n        slice_9c3d5c.slice -> concat_6e4b0c.left\n        list_48148f -> concat_6e4b0c.right\n        concat_6e4b0c.result -> output_823209\n    }\n\n    \n\n    instance(x: 8, y: -117) rotate_right_7d1a2f root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 17, y: 0) reduce_7b9d8e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7b9d8e.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_7b9d8e.reducer\n        0 -> reduce_7b9d8e.initialValue\n        reduce_7b9d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -76, y: 14) _sum_1c6e4e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1020, y: -7) ifexpression_e6f8c4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1012, y: -93) if_1d9e3a root.Std_k98ojb.Std.If {}\n        instance(x: 1057, y: -187) lessthanorequal_f8c4f6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1000, y: -273) for_5d1e9a root.Std_k98ojb.Std.For {}\n        instance(x: 1352, y: -187) if_e3f7ed root.Std_k98ojb.Std.If {}\n        instance(x: 1296, y: -271) add_4c8b2f root.Std_k98ojb.Math.Add {}\n        1 -> for_5d1e9a.items\n        num_5c0677 -> lessthanorequal_f8c4f6.right\n        for_5d1e9a.index -> lessthanorequal_f8c4f6.left\n        lessthanorequal_f8c4f6.result -> if_1d9e3a.predicate\n        execute_b7b391 -> for_5d1e9a.reset\n        for_5d1e9a.onItem -> if_1d9e3a.execute\n        num_5c0677 -> add_4c8b2f.first\n        1 -> add_4c8b2f.second\n        add_4c8b2f.result -> for_5d1e9a.next\n        if_1d9e3a.else -> continue_9a54bb\n        num_5c0677 -> ifexpression_e6f8c4.gen_0\n        for_5d1e9a.item -> ifexpression_e6f8c4.gen_2\n        if_1d9e3a.then -> ifexpression_e6f8c4.execute\n        ifexpression_e6f8c4.value -> if_e3f7ed.predicate\n        if_e3f7ed.else -> continue_9a54bb\n        if_e3f7ed.then -> for_5d1e9a.next\n        ifexpression_e6f8c4.result -> output_c457b3\n        for_5d1e9a.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 16, y: -57) num_prime_2b7f1f root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -206, y: -231) mul_d6c7b4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -17, y: -214) lessthanorequal_ea2e0d root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_d6c7b4.first\n        y_5390f5 -> mul_d6c7b4.second\n        0 -> lessthanorequal_ea2e0d.left\n        mul_d6c7b4.result -> lessthanorequal_ea2e0d.right\n        lessthanorequal_ea2e0d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -179, y: 91) opposite_signs_c4e5d1 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 175, y: -12) generaterange_c8a9d4 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 431, y: -14) lessthanorequal_6c2eaa root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 647, y: -10) modulob_d3a9fe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 312, y: -31) for_c5f8d1 root.Std_k98ojb.Std.For {}\n        instance(x: 576, y: -40) add_0e5e2c root.Std_k98ojb.Math.Add {}\n        instance(x: 758, y: -35) expression_6ab4ba root.Std_k98ojb.Math.Expression {\n            expression: \"n % i\"\n        }\n        instance(x: 858, y: -25) equal_d3d7e1 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -20, y: 36, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_c5f8d1.handler\n        generaterange_c8a9d4.list -> for_c5f8d1.items\n        1 -> generaterange_c8a9d4.from\n        n_27f29c -> generaterange_c8a9d4.to\n        lessthanorequal_6c2eaa.result -> for_c5f8d1.predicate\n        n_27f29c -> lessthanorequal_6c2eaa.left\n        for_c5f8d1.item -> lessthanorequal_6c2eaa.right\n        0 -> modulob_d3a9fe.divisor\n        expression_6ab4ba.result -> equal_d3d7e1.left\n        0 -> equal_d3d7e1.right\n        n_27f29c -> expression_6ab4ba.gen_0\n        for_c5f8d1.item -> expression_6ab4ba.gen_1\n        modulob_d3a9fe.result -> output_f2630f\n        0 -> modulob_d3a9fe.value\n        equal_d3d7e1.result -> add_0e5e2c.left\n        for_c5f8d1.index -> add_0e5e2c.second\n        1 -> add_0e5e2c.first\n        add_0e5e2c.result -> modulob_d3a9fe.value\n        for_c5f8d1.onItem -> output_f2630f\n    }\n\n    \n\n    instance(x: -23, y: 7) is_diff_b9b4c6 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 770, y: 126) replace_4d8c0f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_4d8c0f.input\n        search_ai -> replace_4d8c0f.search\n        replace_ai -> replace_4d8c0f.replace\n        replace_4d8c0f.output -> output_ai\n    }\n\n    \n\n    instance(x: -175, y: 127) replace_char_9a6e92 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1127, y: 140, name: \"lowercase\") tolower_2f8e4d root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_2f8e4d.input\n        func() {\n            in(x: -340, y: -52, name: \"input\") property(String) input_d9f0a5\n\n            out(x: 205, y: -48, name: \"output\") property(Bool) output_eb3c1c\n\n            instance(x: 26, y: -50, stableId: \"g8v2r4l6x7t8u9v1w2x3y4z5a6b7c8d9e0f\") islowercase_2b4d93 root.Std_k98ojb.Strings.IsNumeric {}\n            instance(x: 174, y: -50) contains_cfaab4 root.Std_k98ojb.Strings.Contains {}\n            input_d9f0a5 -> tolower_2f8e4d.input\n            func() {\n                in(x: -268, y: -120, name: \"contains\") property(String) contains_e3bbfb\n\n                out(x: 401, y: -124, name: \"output\") property(Bool) output_b5d3a1\n\n                input_d9f0a5 -> contains_cfaab4.input\n                contains_e3bbfb -> contains_cfaab4.contains\n                contains_cfaab4.contains -> output_b5d3a1\n            } -> islowercase_2b4d93.value\n            islowercase_2b4d93.isNumeric -> output_eb3c1c\n        } -> Std_k98ojb.Logic.Not {}\n        tolower_2f8e4d.output -> Std_k98ojb.Logic.Not.input\n        Std_k98ojb.Logic.Not.output -> output_ai\n    }\n\n    \n\n    instance(x: 111, y: -52) is_lower_9c6e7e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 0, y: 0) set_3d8c2e root.Std_k98ojb.List.Set {}\n        list_5fda54 -> set_3d8c2e.items\n        execute_19300c -> set_3d8c2e.trigger\n        continue_45190b <- set_3d8c2e.done\n        instance(x: 0, y: 0) reduce_a1b4a9 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"accum\") property(Number) accum_5f7d88\n\n            in(x: -13, y: 54, name: \"value\") property(Number) value_2c9a6e\n\n            out(x: 515, y: 44, name: \"\") property(Number) _1b0dc8\n\n            instance(x: 89, y: 29) mul_fdf5d7 root.Std_k98ojb.Math.Mul {}\n            accum_5f7d88 -> mul_fdf5d7.first\n            value_2c9a6e -> mul_fdf5d7.second\n            mul_fdf5d7.result -> _1b0dc8\n        } -> reduce_a1b4a9.reducer\n        set_3d8c2e.set -> reduce_a1b4a9.items\n        1 -> reduce_a1b4a9.initialValue\n        execute_19300c -> reduce_a1b4a9.trigger\n        continue_45190b <- reduce_a1b4a9.done\n        reduce_a1b4a9.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 100, y: -27) unique_product_8d1a7f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -320, y: 55, name: \"union\") union_9c0d2e root.Std_k98ojb.List.Concat {}\n        instance(x: -119, y: 32, name: \"intersection\") intersection_c4edf5 root.Std_k98ojb.Sets.Intersection {}\n        list1_ai -> union_9c0d2e.left\n        list2_ai -> union_9c0d2e.right\n        union_9c0d2e.listWithItem -> intersection_c4edf5.left\n        list2_ai -> intersection_c4edf5.right\n        instance(x: -15, y: 99, name: \"difference\") difference_3a7b1f root.Std_k98ojb.Sets.Difference {}\n        union_9c0d2e.listWithItem -> difference_3a7b1f.left\n        intersection_c4edf5.intersection -> difference_3a7b1f.right\n        difference_3a7b1f.difference -> output_ai\n    }\n\n    \n\n    instance(x: 61, y: -16) find_dissimilar_f1d3d2 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 274, y: -34) modulo_f6f7d1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 491, y: -88) slice_b3e5ba root.Std_k98ojb.List.Slice {}\n        instance(x: 675, y: -12) concat_4b2f01 root.Std_k98ojb.List.Concat {}\n        list_48148f -> modulo_f6f7d1.value\n        n_68068c -> modulo_f6f9e8.divisor\n        modulo_f6f9e8.result -> slice_b3e5ba.end\n        -1 -> slice_b3e5ba.start\n        list_48148f -> slice_b3e5ba.list\n        0 -> slice_b3e5ba.start\n        slice_b3e5ba.slice -> concat_4b2f01.left\n        list_48148f -> concat_4b2f01.right\n        concat_4b2f01.result -> output_823209\n    }\n\n    \n\n    instance(x: 13, y: -94) rotate_right_e9b7b5 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 16, y: 23) reduce_b6d9b8 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_b6d9b8.items\n        func() {\n            in(x: -167, y: -38, name: \"accumulated\") property(Number) accumulated_e5b3f1\n            in(x: -165, y: 56, name: \"current\") property(Number) current_9e9a8d\n\n            out(x: 543, y: -32, name: \"sum\") property(Number) sum_b0a7ad\n\n            instance(x: 80, y: 41) add_eb2c51 root.Std_k98ojb.Math.Add {}\n            accumulated_e5b3f1 -> add_eb2c51.first\n            current_9e9a8d -> add_eb2c51.second\n            add_eb2c51.result -> sum_b0a7ad\n        } -> reduce_b6d9b8.reducer\n        0 -> reduce_b6d9b8.initialValue\n        reduce_b6d9b8.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -109, y: 18) _sum_9c7eac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1122, y: -92) and_f7e8c4 root.Std_k98ojb.Logic.And {}\n        instance(x: 1136, y: -192) expression_b0d2f3 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1079, y: -277) if_7c1a4f root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -38) lessthanorequal_f3db2d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1000, y: 6) generaterange_9a5e7c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1094, y: -140) if_ea3b3f root.Std_k98ojb.Std.If {}\n        instance(x: 1128, y: -247) add_d0b7ce root.Std_k98ojb.Math.Add {}\n        instance(x: 1111, y: -361) for_5ebd2e root.Std_k98ojb.Std.For {}\n        num_5c0677 -> lessthanorequal_f3db2d.left\n        2 -> lessthanorequal_f3db2d.right\n        lessthanorequal_f3db2d.result -> if_7c1a4f.predicate\n        execute_b7b391 -> if_7c1a4f.execute\n        2 -> generaterange_9a5e7c.from\n        num_5c0677 -> generaterange_9a5e7c.to\n        generaterange_9a5e7c.list -> for_5ebd2e.items\n        if_7c1a4f.then -> generaterange_9a5e7c.execute\n        if_7c1a4f.value -> output_c457b3\n        1 -> add_d0b7ce.first\n        for_5ebd2e.index -> add_d0b7ce.second\n        add_d0b7ce.result -> expression_b0d2f3.gen_0\n        num_5c0677 -> expression_b0d2f3.gen_1\n        expression_b0d2f3.result -> if_ea3b3f.predicate\n        for_5ebd2e.onItem -> if_ea3b3f.execute\n        if_ea3b3f.else -> continue_9a54bb\n        for_5ebd2e.done -> continue_9a54bb\n        if_ea3b3f.then -> add_d0b7ce.execute\n        if_ea3b3f.value -> and_f7e8c4.left\n        1 -> and_f7e8c4.right\n        and_f7e8c4.result -> if_7c1a4f.else\n    }\n\n    \n\n    instance(x: -14, y: 26) num_prime_d3d3b0 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 35, y: -234) lessthanorequal_8cbe4d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -14, y: -114) expression_ef6cf2 root.Std_k98ojb.Math.Expression {\n            expression: \"(x >= 0 && y < 0) || (y >= 0 && x < 0)\"\n        }\n        instance(x: 121, y: -122) and_9f7fa5 root.Std_k98ojb.Logic.And {}\n        instance(x: -4, y: -205) not_3eb2d8 root.Std_k98ojb.Logic.Not {}\n        instance(x: -29, y: -135) notequal_a0e4a1 root.Std_k98ojb.Logic.NotEqual {}\n        x_853326 -> lessthanorequal_8cbe4d.left\n        0 -> lessthanorequal_8cbe4d.right\n        and_9f7fa5.right -> expression_ef6cf2.gen_0\n        y_5390f5 -> lessthanorequal_8cbe4d.right\n        x_853326 -> not_3eb2d8.input\n        not_3eb2d8.result -> and_9f7fa5.left\n        notequal_a0e4a1.left -> expression_ef6cf2.gen_1\n        lessthanorequal_8cbe4d.result -> notequal_a0e4a1.right\n        y_5390f5 -> notequal_a0e4a1.left\n        x_853326 -> and_9f7fa5.left\n        not_3eb2d8.input -> expression_ef6cf2.gen_2\n        y_5390f5 -> lessthanorequal_8cbe4d.left\n        0 -> lessthanorequal_8cbe4d.right\n        and_9f7fa5.left -> expression_ef6cf2.gen_3\n        notequal_a0e4a1.result -> and_9f7fa5.right\n        expression_ef6cf2.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -217, y: 65) opposite_signs_2ebd49 root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n        instance(x: 205, y: -24) mod_a3d2b1 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_a3d2b1.value\n        11 -> mod_a3d2b1.divisor\n        mod_a3d2b1.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -41, y: 35) is_diff_c9cc7a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 860, y: 135) replace_3e8d78 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3e8d78.input\n        search_ai -> replace_3e8d78.search\n        replace_ai -> replace_3e8d78.replace\n        replace_3e8d78.output -> output_ai\n    }\n\n    \n\n    instance(x: 11, y: -16) char_replace_k6zqg2 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1060, y: 134, name: \"toLowerInstance\") tolower_93cbb8 root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_93cbb8.input\n        func() {\n            in(x: -273, y: -36, name: \"current\", stableId: \"d4zj3w5h8f9e7p2o1x0q\") current_d47eb4 property(String)\n            in(x: 15, y: -33, name: \"lower\", stableId: \"y76b5u2w8j9k0l4m3nqsrxz\") lower_fbbfb7 property(String)\n\n            out(x: 406, y: -38, name: \"output\", stableId: \"oqj6f3r1p4t8e2sxdznyiwbkhgmvlu\") output_5cf7ec property(Bool)\n\n            instance(x: 62, y: -37) equals_e3b8fc root.Std_k98ojb.Logic.Equal {}\n            current_d47eb4 -> equals_e3b8fc.left\n            lower_fbbfb7 -> equals_e3b8fc.right\n            equals_e3b8fc.equal -> output_5cf7ec\n        } -> instance(x: 1120, y: -2) filter_c41c92 root.Std_k98ojb.Iteration.Filter {}\n        tolower_93cbb8.output -> instance(x: 1069, y: 40, name: \"mapToLower\") map_1fe3f6 root.Std_k98ojb.Iteration.Map {}.handler.input\n        0 -> instance(x: 1120, y: -2) filter_c41c92.root.Std_k98ojb.Iteration.Filter.handler.index\n        input_ai -> instance(x: 1069, y: 40, name: \"mapToLower\") map_1fe3f6.root.Std_k98ojb.Iteration.Map.handler.input\n        func() {\n            out(x: -275, y: 46, name: \"\") output_7e5a83 property(String)\n\n            instance(x: 16, y: 53) upper_a2ffbc root.Std_k98ojb.Strings.ToUpper {}\n            input_ai -> upper_a2ffbc.input\n            upper_a2ffbc.output -> output_7e5a83\n        } -> map_1fe3f6.handler\n        func() {\n            in(x: -272, y: 72, name: \"current\", stableId: \"d4zj3w5h8f9e7p2o1x0q\") current_ebbfa8 property(String)\n            out(x: 405, y: 74, name: \"output\", stableId: \"y76b5u2w8j9k0l4m3nqsrxz\") output_6cbecf property(Bool)\n\n            instance(x: 64, y: 78) not_e0c36e root.Std_k98ojb.Logic.Not {}\n            func() {\n                in(x: -273, y: -2, name: \"current\", stableId: \"d4zj3w5h8f9e7p2o1x0q\") current_93ab6a property(String)\n                in(x: 15, y: 1, name: \"lower\", stableId: \"y76b5u2w8j9k0l4m3nqsrxz\") lower_fdacbd property(String)\n\n                out(x: 406, y: -7, name: \"output\", stableId: \"oqj6f3r1p4t8e2sxdznyiwbkhgmvlu\") output_bfc5c4 property(Bool)\n\n                instance(x: 62, y: -10) equals_88a66e root.Std_k98ojb.Logic.Equal {}\n                current_93ab6a -> equals_88a66e.left\n                lower_fdacbd -> equals_88a66e.right\n                equals_88a66e.equal -> output_bfc5c4\n            } -> not_e0c36e.input\n            not_e0c36e.not -> output_6cbecf\n        } -> map_1fe3f6.context\n\n        instance(x: 1120, y: -2) filter_c41c92.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -240, y: 131) is_lower_d8b5a7 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\nfunc(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n\tinstance(x: -482, y: -14) unique_nodr root.Std_k98ojb.List.Sort {\n\t\tinput: list_5fda54\n\t}\n\tinstance(x: -355, y: 16) filter_node root.Std_k98ojb.Iteration.Filter {}\n\tfunc() {\n\tin(x: -175, y: 68, name: \"elem\") property(Number) elem_ea9af6\n\n\tout(x: 441, y: 71, name: \"\") property(Bool) _2f4d88\n\t\tinstance(x: 25, y: 31) sub_1e3b57 root.Std_k98ojb.Math.Sub {}\n\t\tfunc() {\n\t\t\tinstance(x: -28, y: 39) contains_ab9a8a root.Std_k98ojb.List.Contains {}\n\t\t\tlist_5fda54 -> contains_ab9a8a.list\n\t\t\telem_ea9af6 -> contains_ab9a8a.item\n\n\t\t\tinstance(x: 33, y: 48) index_c4dd21 root.Std_k98ojb.List.GetAt {}\n\t\t\tlist_5fda54 -> index_c4dd21.list\n\t\t\tsub_1e3b57.result -> index_c4dd21.index\n\t\t\t0 -> sub_1e3b57.second\n\n\t\t\tinstance(x: 65, y: 64) not_aea6a7 root.Std_k98ojb.Logic.Not {}\n\t\t\tcontains_ab9a8a.contains -> not_aea6a7.input\n\t\t\tnot_aea6a7.result -> _2f4d88\n\t\t\tindex_c4dd21.item -> sub_1e3b57.first\n\t\t\telem_ea9af6 -> sub_1e3b57.first\n\t\t}\n\t} -> filter_node.handler\n\tfilter_node.output_list -> unique_nodr.input\n\n\tinstance(x: -52, y: 102) reduce_node root.Std_k98ojb.Iteration.Reduce {\n\t\titems: filter_node.output_list\n\t\treducer: func() {\n\n\t\t\tin(x: -23, y: 136, name: \"acc\") property(Number) acc_3eeaa0\n\n\t\t\tin(x: -13, y: 143, name: \"current\") property(Number) current_a0e61a\n\n\t\t\tout(x: 211, y: 138, name: \"\") property(Number) _2be4d7\n\t\t\tacc_3eeaa0 -> mul_ab2b16.first\n\t\t\tcurrent_a0e61a -> mul_ab2b16.second\n\t\t\tmul_ab2b16.result -> _2be4d7\n\n\t\t\tinstance(x: -23, y: 156, name: \"\") root.Std_k98ojb.Math.Mul {}\n\t\t}\n\t\tinit: 1\n\n\t}\n\n\treduce_node.output_value -> output_cffcc2\n\texecute_19300c -> unique_nodr.reset\n\tcontinue_45190b -> reduce_node.continue\n}\n    \ninstance(x: -55, y: 529) func_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 30, y: 44) difference_0d9ef6 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -154, y: 108) difference_d4b9e5 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_0d9ef6.left\n        list2_ai -> difference_0d9ef6.right\n        list2_ai -> difference_d4b9e5.left\n        list1_ai -> difference_d4b9e5.right\n        instance(x: 184, y: 57) concat_fbe8ed root.Std_k98ojb.List.Concat {}\n        concat_fbe8ed.list_0 -> difference_0d9ef6.difference\n        concat_fbe8ed.list_1 -> difference_d4b9e5.difference\n        concat_fbe8ed.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -96, y: -31) find_dissimilar_c77f8a root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 299, y: -63) getat_f6df4d root.Std_k98ojb.List.GetAt {}\n        instance(x: 429, y: -115) slice_a3b0e2 root.Std_k98ojb.List.Slice {}\n        setter(x: 695, y: -10, name: \"setter_9f7c6e\") setter_9f7c6e = n\n        setter(x: -21, y: -212, name: \"setter_c0d3db\") setter_c0d3db = temp_list\n        func() {\n            in(x: -235, y: 26, name: \"list\") property(List) list_2be4c9\n            out(x: -18, y: -67, name: \"output\") property(Any) output_fdebc0\n\n            instance(x: 21, y: -47) length_0dce7e root.Std_k98ojb.List.Length {}\n            list_2be4c9 -> length_0dce7e.list\n            length_0dce7e.length -> setter_c0d3db.new_value\n        } -> setter_c0d3db.execute\n        instance(x: -169, y: -222) sub_ddbdf6 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> getat_f6df4d.list\n        n_68068c -> getter_bf5a9c.value\n        getter_bf5a9c.value -> getat_f6df4d.index\n        setter_c0d3db.value -> sub_ddbdf6.first\n        1 -> sub_ddbdf6.second\n        sub_ddbdf6.result -> slice_a3b0e2.start\n        list_48148f -> slice_a3b0e2.list\n        -1 -> slice_a3b0e2.end\n        slice_a3b0e2.slice -> setter_9f7c6e.new_value\n        getat_f6df4d.itemAtIndex -> data_c6f8d7.value\n        list_48148f -> data_c6f8d7.items\n        setter_9f7c6e.value -> List.Add(data_c6f8d7.value, data_c6f8d7.items)\n        add_e5f0a4.listWithItem -> output_823209\n    }\n\n    \n\n    getter(x: -226, y: 35, name: \"getter_bf5a9c\") getter_bf5a9c = n\n    data_instance(x: 515, y: 36, name: \"data_c6f8d7\") data_c6f8d7  = []\n    instance(x: 653, y: -40) add_e5f0a4 root.Std_k98ojb.List.Add {}\n    instance(x: -262, y: -282) rotate_right_6f5a81 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 86, y: -15) reduce_1b6cc7 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -168, y: -83, name: \"accumulated\") property(Number) current_71d6ef\n            in(x: -166, y: 36, name: \"current\") property(Number) current_d5c7ec\n\n            out(x: 567, y: -76, name: \"sum\") property(Number) sum_ea9b77\n\n            instance(x: 85, y: 21) add_96a3f6 root.Std_k98ojb.Math.Add {}\n            current_71d6ef -> add_96a3f6.first\n            current_d5c7ec -> add_96a3f6.second\n            add_96a3f6.result -> sum_ea9b77\n        } -> reduce_1b6cc7.reducer\n        0 -> reduce_1b6cc7.initialValue\n        list_2c62ab -> reduce_1b6cc7.items\n        reduce_1b6cc7.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -100, y: -21) _sum_fc4d1f root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -52, y: 12) generaterange_e5d4cb root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 299, y: 8) expression_bff3ce root.Std_k98ojb.Math.Expression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: -25, y: -121) if_5f3e9c root.Std_k98ojb.Std.If {}\n        instance(x: 532, y: -70) and_cfc1fe root.Std_k98ojb.Logic.And {}\n        instance(x: 724, y: -63) expression_ea8ca6 root.Std_k98ojb.Math.Expression {\n            expression: \"i <= n / i\"\n        }\n        instance(x: 842, y: -42) if_fbe0c5 root.Std_k98ojb.Std.If {}\n        instance(x: 1109, y: -105) for_3f2ce4 root.Std_k98ojb.Std.For {}\n        expression_bff3ce.result -> and_cfc1fe.left\n        generaterange_e5d4cb.list -> expression_bff3ce.gen_1\n        num_5c0677 -> expression_bff3ce.gen_0\n        for_3f2ce4.item -> and_cfc1fe.right\n        and_cfc1fe.result -> if_5f3e9c.predicate\n        for_3f2ce4.onItem -> if_5f3e9c.execute\n        if_5f3e9c.then -> continue_9a54bb\n        if_5f3e9c.else -> expression_ea8ca6.execute\n        num_5c0677 -> expression_ea8ca6.gen_0\n        for_3f2ce4.item -> expression_ea8ca6.gen_1\n        expression_ea8ca6.result -> if_fbe0c5.predicate\n        if_fbe0c5.then -> continue_9a54bb\n        if_fbe0c5.else -> for_3f2ce4.next\n        generaterange_e5d4cb.to -> output_c457b3\n        generaterange_e5d4cb.from -> for_3f2ce4.items\n        1 -> generaterange_e5d4cb.from\n        execute_b7b391 -> continue_9a54bb\n        if_5f3e9c.value -> output_c457b3\n        for_3f2ce4.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 53, y: -32) num_prime_a1d6ca root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -198, y: -249) expression_c6e8c1 root.Std_k98ojb.Math.Expression {\n            expression: \"(x < 0)\"\n        }\n        instance(x: -196, y: -109) expression_e7f5d2 root.Std_k98ojb.Math.Expression {\n            expression: \"(y < 0)\"\n        }\n        instance(x: 8, y: -224) and_9a3e4c root.Std_k98ojb.Logic.And {}\n        instance(x: 8, y: -88) or_e7d6f1 root.Std_k98ojb.Logic.Or {}\n        x_853326 -> expression_c6e8c1.gen_0\n        y_5390f5 -> expression_e7f5d2.gen_0\n        expression_c6e8c1.result -> and_9a3e4c.left\n        expression_e7f5d2.result -> and_9a3e4c.right\n        x_853326 -> or_e7d6f1.left\n        y_5390f5 -> or_e7d6f1.right\n        and_9a3e4c.result -> output_3339a3\n        or_e7d6f1.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -198, y: 63) opposite_signs_8b2f5f root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 230, y: -22) modulo_c6e9d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 499, y: 3) equal_7a5c4c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_c6e9d8.value\n        11 -> modulo_c6e9d8.divisor\n        modulo_c6e9d8.result -> equal_7a5c4c.left\n        0 -> equal_7a5c4c.right\n        equal_7a5c4c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -17, y: 23) is_diff_3e6d8b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 128) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -178, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1016, y: 157, name: \"lowercase\") tolower_9b1bc3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1217, y: 156, name: \"isLower\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> tolower_9b1bc3.input\n        tolower_9b1bc3.lowercase -> isnumeric_9cb360.input\n        isnumeric_9cb360.isNumeric -> output_ai\n    }\n\n    \n\n    instance(x: 1016, y: 157) is_lower_node root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -420, y: -32) set_3f7c1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -510, y: 33) concat_4d9a5f root.Std_k98ojb.List.Concat {}\n        instance(x: -620, y: 122) reduce_8c6b7f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -728, y: 209) map_1e0f3f root.Std_k98ojb.Iteration.Map {}\n        instance(x: -840, y: 296) filter_2d5a4c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -948, y: 383) set_9c7c5c root.Std_k98ojb.Sets.Intersection {}\n\n        execute_19300c -> concat_4d9a5f.trigger\n        list_5fda54 -> concat_4d9a5f.left\n        List.Empty() -> concat_4d9a5f.right\n\n        concat_4d9a5f.listWithItem -> filter_2d5a4c.items\n\n        func() {\n            in(x: -529, y: 107, name: \"item\") property(Number) item_e6b3e7\n\n            out(x: 520, y: 123, name: \"\") property(Bool) _f0a8cf\n\n            instance(x: 45, y: 88) contains_5d9c2c root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -49, y: 46, name: \"item\") property(Number) item_7e6f1f\n                list_5fda54 -> contains_5d9c2c.list\n                item_e6b3e7 -> contains_5d9c2c.item\n            } -> contains_5d9c2c.handler\n\n            instance(x: 177, y: 111) not_1a4a3f root.Std_k98ojb.Logic.Not {}\n            contains_5d9c2c.result -> not_1a4a3f.input\n            not_1a4a3f.output -> _f0a8cf\n        } -> filter_2d5a4c.handler\n\n        filter_2d5a4c.output_list -> map_1e0f3f.items\n\n        func() {\n            in(x: -513, y: 229, name: \"item\") property(Number) item_e6b3e7\n\n            out(x: 512, y: 245, name: \"\") property(Number) _c9a8cf\n\n            instance(x: 46, y: 212) mul_5d9c2c root.Std_k98ojb.Math.Mul {}\n            func() {\n                in(x: -49, y: 170, name: \"first\") property(Number) first_7e6f1f\n                in(x: -39, y: 180, name: \"second\") property(Number) second_7e6f1f\n\n                out(x: 471, y: 186, name: \"\") property(Number) _c9a8cf\n\n                first_7e6f1f -> mul_5d9c2c.first\n                item_e6b3e7 -> mul_5d9c2c.second\n            } -> mul_5d9c2c.handler\n\n            1 -> mul_5d9c2c.first\n            mul_5d9c2c.result -> _c9a8cf\n        } -> map_1e0f3f.handler\n\n        map_1e0f3f.output_list -> set_3f7c1e.left\n\n        concat_4d9a5f.listWithItem -> set_3f7c1e.right\n\n        set_3f7c1e.difference -> reduce_8c6b7f.items\n\n        func() {\n            in(x: -529, y: 397, name: \"acc\") property(Number) acc_e6b3e7\n            in(x: -519, y: 407, name: \"item\") property(Number) item_e6b3e7\n\n            out(x: 520, y: 413, name: \"\") property(Number) _f0a8cf\n\n            instance(x: 45, y: 386) mul_5d9c2c root.Std_k98ojb.Math.Mul {}\n            func() {\n                in(x: -49, y: 344, name: \"first\") property(Number) first_7e6f1f\n                in(x: -39, y: 354, name: \"second\") property(Number) second_7e6f1f\n\n                out(x: 471, y: 360, name: \"\") property(Number) _c9a8cf\n\n                acc_e6b3e7 -> mul_5d9c2c.first\n                item_e6b3e7 -> mul_5d9c2c.second\n            } -> mul_5d9c2c.handler\n\n            mul_5d9c2c.result -> _f0a8cf\n        } -> reduce_8c6b7f.reducer\n\n        1 -> reduce_8c6b7f.initialValue\n\n        reduce_8c6b7f.reduced -> output_cffcc2\n\n        execute_19300c -> continue_45190b\n    }\n\n    \n\n    instance(x: -105, y: 117) unique_product_4e3d0a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -232, y: 49) difference_3b7f9c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -331, y: 68) union_4e1d5a root.Std_k98ojb.Sets.Union {}\n        list1_ai -> union_4e1d5a.left\n        list2_ai -> union_4e1d5a.right\n        union_4e1d5a.union -> difference_3b7f9c.left\n        instance(x: -231, y: 49) intersection_78d487 root.Std_k98ojb.Sets.Intersection {}\n        list1_ai -> intersection_78d487.left\n        list2_ai -> intersection_78d487.right\n        intersection_78d487.intersection -> difference_3b7f9c.right\n        difference_3b7f9c.difference -> output_ai\n    }\n\n    \n\n    instance(x: 100, y: -67) find_dissimilar_e5a1e6 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 107, y: -53) slice_9a1f7e root.Std_k98ojb.List.Slice {}\n        instance(x: 108, y: -189) length_5d8c0f root.Std_k98ojb.List.Length {}\n        instance(x: 329, y: -133) sub_4f3a6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 528, y: -114) slice_1e7c6e root.Std_k98ojb.List.Slice {}\n        list_48148f -> length_5d8c0f.list\n        n_68068c -> sub_4f3a6c.first\n        length_5d8c0f.length -> sub_4f3a6c.second\n        sub_4f3a6c.result -> slice_9a1f7e.end\n        -1 -> slice_9a1f7e.start\n        list_48148f -> slice_9a1f7e.list\n        0 -> slice_1e7c6e.start\n        sub_4f3a6c.result -> slice_1e7c6e.end\n        list_48148f -> slice_1e7c6e.list\n        concat_5b2d8e.left -> slice_9a1f7e.slice\n        concat_5b2d8e.right -> slice_1e7c6e.slice\n        instance(x: 529, y: -4) concat_5b2d8e root.Std_k98ojb.List.Concat {}\n        concat_5b2d8e.result -> output_823209\n    }\n\n    \n\n    instance(x: -217, y: -112) rotate_right_7f3a0c root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 66, y: 13) reduce_5b9d7e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_5b9d7e.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_5b9d7e.reducer\n        list_2c62ab -> reduce_5b9d7e.items\n        reduce_5b9d7e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 15, y: -3) _sum_6c1c4f root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1030, y: -53) if_e7f8c6 root.Std_k98ojb.Std.If {}\n        instance(x: 1012, y: -168) lessthanorequal_3d1e9f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1075, y: -255) for_0a8c4c root.Std_k98ojb.Std.For {}\n        instance(x: 1007, y: -376) expression_b6b3d1 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1049, y: -464) if_2a8f4c root.Std_k98ojb.Std.If {}\n        instance(x: 1075, y: -547) add_e6d1e7 root.Std_k98ojb.Math.Add {}\n        lessthanorequal_3d1e9f.result -> if_e7f8c6.predicate\n        num_5c0677 -> lessthanorequal_3d1e9f.left\n        1 -> lessthanorequal_3d1e9f.right\n        execute_b7b391 -> for_0a8c4c.reset\n        if_e7f8c6.else -> continue_9a54bb\n        expression_b6b3d1.result -> if_2a8f4c.predicate\n        for_0a8c4c.item -> expression_b6b3d1.gen_0\n        num_5c0677 -> expression_b6b3d1.gen_1\n        for_0a8c4c.onItem -> expression_b6b3d1.execute\n        if_e7f8c6.then -> for_0a8c4c.next\n        1 -> add_e6d1e7.first\n        for_0a8c4c.index -> add_e6d1e7.second\n        add_e6d1e7.result -> expression_b6b3d1.gen_2\n        if_2a8f4c.then -> continue_9a54bb\n        if_2a8f4c.else -> for_0a8c4c.next\n        if_e7f8c6.value -> output_c457b3\n        for_0a8c4c.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 13, y: -10) num_prime_2d5e1c root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -240, y: -237) mul_d4c1d2 root.Std_k98ojb.Math.Mul {}\n        instance(x: -45, y: -230) lessthanorequal_c6a5cc root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_d4c1d2.first\n        y_5390f5 -> mul_d4c1d2.second\n        0 -> lessthanorequal_c6a5cc.right\n        mul_d4c1d2.result -> lessthanorequal_c6a5cc.left\n        lessthanorequal_c6a5cc.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -185, y: 122) opposite_signs_e4b4ee root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 167, y: -9) generaterange_c6b3d1 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 429, y: -5) lessthanorequal_ee8e0a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 297, y: -54) for_d2a1f6 root.Std_k98ojb.Std.For {}\n        instance(x: 602, y: -70) add_4c7d3f root.Std_k98ojb.Math.Add {}\n        instance(x: 616, y: -17) expression_bfe9af root.Std_k98ojb.Math.Expression {\n            expression: \"n % i\"\n        }\n        instance(x: 604, y: 15) modulo_3c4ef7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 608, y: -107) equal_f2e0ed root.Std_k98ojb.Logic.Equal {}\n        instance(x: 621, y: -144) expression_cfc7a8 root.Std_k98ojb.Math.Expression {\n            expression: \"n / i\"\n        }\n        instance(x: 619, y: -195) floor_4aef1c root.Std_k98ojb.Math.Floor {}\n        instance(x: 627, y: -240) sub_f9e7ab root.Std_k98ojb.Math.Sub {}\n        instance(x: 625, y: -275) mul_c3f6d5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 622, y: -312) expression_4ef8aa root.Std_k98ojb.Math.Expression {\n            expression: \"i * floor(n / i)\"\n        }\n        instance(x: 620, y: -354) sub_e3a1ee root.Std_k98ojb.Math.Sub {}\n        instance(x: 617, y: -390) equal_4d8e6f root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -46, y: 43, name: \"element\") property(Number) element_7a5df3\n\n            out(x: 387, y: 18, name: \"out\") property(Number) out_74f2d1\n\n            instance(x: 110, y: 19) mul_cedc5e root.Std_k98ojb.Math.Mul {}\n            element_7a5df3 -> mul_cedc5e.first\n            element_7a5df3 -> mul_cedc5e.second\n            mul_cedc5e.result -> out_74f2d1\n        } -> for_d2a1f6.handler\n        generaterange_c6b3d1.list -> for_d2a1f6.items\n        lessthanorequal_ee8e0a.left -> expression_bfe9af.gen_1\n        n_27f29c -> expression_bfe9af.gen_0\n        11 -> modulo_3c4ef7.divisor\n        n_27f29c -> modulo_3c4ef7.value\n        modulo_3c4ef7.result -> equal_f2e0ed.left\n        0 -> equal_f2e0ed.right\n        for_d2a1f6.onItem -> expression_bfe9af.execute\n        lessthanorequal_ee8e0a.result -> for_d2a1f6.predicate\n        n_27f29c -> lessthanorequal_ee8e0a.left\n        generaterange_c6b3d1.to -> lessthanorequal_ee8e0a.right\n        expression_bfe9af.result -> equal_f2e0ed.input\n        for_d2a1f6.index -> add_4c7d3f.first\n        1 -> add_4c7d3f.second\n        add_4c7d3f.result -> lessthanorequal_ee8e0a.left\n        expression_cfc7a8.gen_0 -> floor_4aef1c.value\n        n_27f29c -> expression_cfc7a8.gen_1\n        for_d2a1f6.index -> sub_f9e7ab.first\n        floor_4aef1c.result -> sub_f9e7ab.second\n        sub_f9e7ab.result -> mul_c3f6d5.first\n        expression_cfc7a8.gen_0 -> mul_c3f6d5.second\n        mul_c3f6d5.result -> expression_4ef8aa.gen_1\n        n_27f29c -> expression_4ef8aa.gen_0\n        sub_e3a1ee.first -> n_27f29c\n        expression_4ef8aa.result -> sub_e3a1ee.second\n        sub_e3a1ee.result -> equal_4d8e6f.left\n        0 -> equal_4d8e6f.right\n        for_d2a1f6.onItem -> expression_cfc7a8.execute\n        for_d2a1f6.index -> modulo_3c4ef7.value\n        for_d2a1f6.done -> output_f2630f\n        equal_4d8e6f.result -> output_f2630f\n        for_d2a1f6.reset -> output_f2630f\n    }\n\n    \n\n    instance(x: -43, y: 57) is_diff_a3b9ed root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 775, y: 124) replace_9d5c7f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9d5c7f.input\n        search_ai -> replace_9d5c7f.search\n        replace_ai -> replace_9d5c7f.replace\n        replace_9d5c7f.output -> output_ai\n    }\n\n    \n\n    instance(x: -173, y: 56) replace_char_0e2a48 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 1184, y: 152, name: \"lowercase\") tolower_9a2f41 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1226, y: 131, name: \"equal\") equal_d8f5e7 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_9a2f41.input\n        input_ai -> equal_d8f5e7.left\n        tolower_9a2f41.lowercase -> equal_d8f5e7.right\n        equal_d8f5e7.equal -> output_ai\n    }\n\n    \n\n    instance(x: 126, y: 132) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 110, y: -12) set_b8a0a6 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 36, y: 66) reduce_3c5d67 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -112, y: 14, name: \"acc\") property(Number) acc_c4f8a0\n            in(x: -23, y: 70, name: \"val\") property(Number) val_3b7ec6\n\n            out(x: 392, y: 60, name: \"\") property(Number) _2d1c66\n\n            instance(x: 81, y: 38) mul_fad4a9 root.Std_k98ojb.Math.Mul {}\n            acc_c4f8a0 -> mul_fad4a9.first\n            val_3b7ec6 -> mul_fad4a9.second\n            mul_fad4a9.result -> _2d1c66\n        } -> reduce_3c5d67.reducer\n        list_5fda54 -> set_b8a0a6.left\n        list_5fda54 -> set_b8a0a6.right\n        set_b8a0a6.difference -> reduce_3c5d67.items\n        1 -> reduce_3c5d67.initialValue\n        reduce_3c5d67.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    \n\n    instance(x: -100, y: 108) unique_product_aeb5e9 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -300, y: 11, name: \"\") difference_1f7b0c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 24, y: 30, name: \"\") union_f8b5b4 root.Std_k98ojb.Sets.Union {}\n        instance(x: -132, y: 119, name: \"\") intersection_1e7a3c root.Std_k98ojb.Sets.Intersection {}\n        list1_ai -> difference_1f7b0c.left\n        list2_ai -> difference_1f7b0c.right\n        list1_ai -> union_f8b5b4.left\n        list2_ai -> union_f8b5b4.right\n        list1_ai -> intersection_1e7a3c.left\n        list2_ai -> intersection_1e7a3c.right\n        difference_1f7b0c.difference -> output_ai\n        union_f8b5b4.union -> difference_1f7b0c.right\n        intersection_1e7a3c.intersection -> difference_1f7b0c.left\n    }\n\n    \n\n    instance(x: -27, y: 6) find_dissimilar_a9cccf root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 53, y: -81) modulo_f1a9d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 186, y: -76) slice_b2e6dc root.Std_k98ojb.List.Slice {}\n        instance(x: 375, y: -69) slice_1c5d66 root.Std_k98ojb.List.Slice {}\n        instance(x: 544, y: -63) concat_ea8f0f root.Std_k98ojb.List.Concat {}\n        n_68068c -> modulo_f1a9d8.value\n        list_48148f.length -> modulo_f1a9d8.divisor\n        modulo_f1a9d8.result -> slice_b2e6dc.end\n        -1 -> slice_b2e6dc.start\n        list_48148f -> slice_b2e6dc.list\n        slice_b2e6dc.slice -> concat_ea8f0f.left\n        0 -> slice_1c5d66.start\n        modulo_f1a9d8.result -> slice_1c5d66.end\n        list_48148f -> slice_1c5d66.list\n        slice_1c5d66.slice -> concat_ea8f0f.right\n        concat_ea8f0f.result -> output_823209\n    }\n\n    \n\n    instance(x: -263, y: -86) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 10, y: 33) reduce_bf6e8d root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_bf6e8d.items\n        func() {\n            in(x: -164, y: -60, name: \"accumulated\") property(Number) accumulated_e9bb3a\n            in(x: -154, y: 51, name: \"current\") property(Number) current_1eb5da\n\n            out(x: 530, y: -52, name: \"sum\") property(Number) sum_b7d3f8\n\n            instance(x: 88, y: 16) add_9a0b5e root.Std_k98ojb.Math.Add {}\n            accumulated_e9bb3a -> add_9a0b5e.first\n            current_1eb5da -> add_9a0b5e.second\n            add_9a0b5e.result -> sum_b7d3f8\n        } -> reduce_bf6e8d.reducer\n        0 -> reduce_bf6e8d.initialValue\n        reduce_bf6e8d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -68, y: -15) _sum_14a9b5 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 1168, y: -199) and_f5e7c4 root.Std_k98ojb.Logic.And {}\n        instance(x: 1182, y: -78) lessthanorequal_ea0abf root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1146, y: -142) expression_7eb3e1 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1088, y: -284) if_9a2cfc root.Std_k98ojb.Std.If {}\n        instance(x: 1094, y: -43) for_c8f7cc root.Std_k98ojb.Std.For {}\n        instance(x: 1176, y: -313) not_d9f85d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1150, y: -179) expression_2e2df1 root.Std_k98ojb.Math.Expression {\n            expression: \"(num / i == i)\"\n        }\n        instance(x: 1057, y: -6) generaterange_3f5db4 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1099, y: -96) ifexpression_a0f77c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 1071, y: 21, name: \"getter_8a5e4d\") getter_8a5e4d = previous\n        setter(x: 1173, y: -235, name: \"setter_b8bba6\") setter_b8bba6 = previous\n        instance(x: 1117, y: -9) getat_f2b0c4 root.Std_k98ojb.List.GetAt {}\n        getter(x: 1141, y: -59, name: \"getter_6a1e2f\") getter_6a1e2f = previous\n        setter(x: 1067, y: -169, name: \"setter_5d9cc3\") setter_5d9cc3 = previous\n\n        num_5c0677 -> generaterange_3f5db4.from\n        2 -> generaterange_3f5db4.to\n        generaterange_3f5db4.list -> for_c8f7cc.items\n        func() {\n            in(x: -79, y: 32, name: \"element\") property(Number) element_eb1d91\n\n            out(x: 399, y: 15, name: \"out\") property(Number) out_5e2d0c\n\n            instance(x: 106, y: 13) mul_f3f7a8 root.Std_k98ojb.Math.Mul {}\n            element_eb1d91 -> mul_f3f7a8.first\n            element_eb1d91 -> mul_f3f7a8.second\n            mul_f3f7a8.result -> out_5e2d0c\n        } -> for_c8f7cc.handler\n        for_c8f7cc.item -> lessthanorequal_ea0abf.left\n        num_5c0677 -> lessthanorequal_ea0abf.right\n        lessthanorequal_ea0abf.result -> if_9a2cfc.predicate\n        for_c8f7cc.onItem -> if_9a2cfc.execute\n        execute_b7b391 -> for_c8f7cc.reset\n        1 -> getat_f2b0c4.index\n        list_empty_5e1ebc.list -> getat_f2b0c4.list\n        getat_f2b0c4.itemAtIndex -> setter_5d9cc3.new_value\n        if_9a2cfc.else -> continue_9a54bb\n        for_c8f7cc.index -> expression_7eb3e1.gen_1\n        num_5c0677 -> expression_7eb3e1.gen_0\n        expression_7eb3e1.result -> and_f5e7c4.left\n        expression_2e2df1.result -> and_f5e7c4.right\n        for_c8f7cc.item -> expression_2e2df1.gen_1\n        num_5c0677 -> expression_2e2df1.gen_0\n        ifexpression_a0f77c.then -> setter_b8bba6.execute\n        list_empty_5e1ebc.list -> getat_f2b0c4.list\n        for_c8f7cc.item -> ifexpression_a0f77c.gen_2\n        for_c8f7cc.index -> ifexpression_a0f77c.gen_0\n        getter_6a1e2f.value -> ifexpression_a0f77c.gen_1\n        for_c8f7cc.onItem -> ifexpression_a0f77c.execute\n        and_f5e7c4.result -> not_d9f85d.input\n        not_d9f85d.output -> if_9a2cfc.then\n        num_5c0677 -> getat_f2b0c4.list\n        getter_8a5e4d.value -> ifexpression_a0f77c.previous\n        setter_b8bba6.continue -> for_c8f7cc.next\n        setter_5d9cc3.continue -> for_c8f7cc.next\n        and_f5e7c4.result -> output_c457b3\n        not_d9f85d.output -> ifexpression_a0f77c.predicate\n        getter_6a1e2f.value -> ifexpression_a0f77c.previous\n        setter_b8bba6.new_value -> for_c8f7cc.item\n        ifexpression_a0f77c.else -> continue_9a54bb\n        for_c8f7cc.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -16, y: 5) num_prime_dad2b4 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "phi4:14b-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 68, y: -192) lessthanorequal_8c83e2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -30, y: -80) logicaland_a4aa73 root.Std_k98ojb.Logic.And {}\n        instance(x: -206, y: -188) greaterthan_57a9f6 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 32, y: -67) expression_ec0ac8 root.Std_k98ojb.Math.Expression {\n            expression: \"x > 0\"\n        }\n        instance(x: -165, y: -89) lessthanorequal_ed5e22 root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> expression_ec0ac8.gen_0\n        expression_ec0ac8.result -> logicaland_a4aa73.left\n        logicaland_a4aa73.right -> greaterthan_57a9f6.left\n        y_5390f5 -> lessthanorequal_ed5e22.left\n        0 -> lessthanorequal_ed5e22.right\n        greaterthan_57a9f6.result -> logicaland_a4aa73.right\n        expression_ec0ac8.result -> lessthanorequal_8c83e2.left\n        lessthanorequal_ed5e22.result -> lessthanorequal_8c83e2.right\n        lessthanorequal_8c83e2.result -> logicaland_a4aa73.input_0\n        logicaland_a4aa73.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -229, y: 21) opposite_signs_cb7b1c root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n        instance(x: 214, y: -20) mod_a6e53a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 494, y: 18) equal_c3ab60 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> mod_a6e53a.value\n        11 -> mod_a6e53a.divisor\n        0 -> equal_c3ab60.right\n        mod_a6e53a.result -> equal_c3ab60.left\n        equal_c3ab60.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -16, y: -9) is_diff_7b4ce5 root.main.is_diff {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 800, y: 109) replace_2c7e41 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2c7e41.input\n        search_ai -> replace_2c7e41.search\n        replace_ai -> replace_2c7e41.replace\n        replace_2c7e41.output -> output_ai\n    }\n\n    \n\n    instance(x: 21, y: -22) char_replace_ef8da3 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 774, y: 126) tolower_72e1cd root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -26, y: 111) compare_dca4ec root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_72e1cd.input\n        tolower_72e1cd.output -> compare_dca4ec.left\n        input_ai -> compare_dca4ec.right\n        compare_dca4ec.equal -> output_ai\n    }\n\n    \n\n    instance(x: -181, y: 133) is_lower_2f0be5 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\nfunc(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n\tinstance(x: -35, y: -50) unique_l1u4v0 root.Std_k98ojb.List.Sort {}\n\tinstance(x: 247, y: -77) reduce_8f6e22 root.Std_k98ojb.Iteration.Reduce {}\n\tfunc() {\n\t\tin(x: -41, y: -12, name: \"accumulated\") property(Number) accumulated_ea5cb0\n\t\tin(x: 81, y: -10, name: \"item\") property(Number) item_8ed67e\n\n\t\tout(x: 377, y: 18, name: \"\") property(Number) _7d4fb2\n\n\t\tinstance(x: 55, y: -1) equal_jk87d5 root.Std_k98ojb.Logic.Equal {}\n\t\tinstance(x: 248, y: 24) mul_6a9f3e root.Std_k98ojb.Math.Mul {}\n\n\t\tequal_jk87d5.left -> item_8ed67e\n\t\tequal_jk87d5.right -> accumulated_ea5cb0\n\t\tequal_jk87d5.result -> notequal_l2ef7m.input\n\t\tinstance(x: 373, y: 13) not_gx1h71 root.Std_k98ojb.Logic.Not {}\n\t\tnot_gx1h71.input -> notequal_l2ef7m.output\n\t\tnotequal_l2ef7m.result -> if_3l6m4o.if\n\t\tif_3l6m4o.then {\n\t\t\tmul_6a9f3e.first -> accumulated_ea5cb0\n\t\t\titem_8ed67e -> mul_6a9f3e.second\n\t\t\tmul_6a9f3e.result -> _7d4fb2\n\t\t}\n\t\tif_3l6m4o.else {\n\t\t\titem_8ed67e -> _7d4fb2\n\t\t}\n\n\t} -> reduce_8f6e22.reducer\n\treduce_8f6e22.context -> 1\n\n\tlist_5fda54 -> unique_l1u4v0.list\n\tunique_l1u4v0.sorted -> reduce_8f6e22.items\n\treduce_8f6e22.result -> output_cffcc2\n\texecute_19300c -> unique_l1u4v0.trigger\n\tcontinue_45190b -> continue_fz0w7l.upstream\n\treduce_8f6e22.done -> continue_fz0w7l.trigger\n\n\tinstance(x: 1049, y: -39) reduce_instance root.Std_k98ojb.Iteration.Reduce {}\n\treduce_8f6e22.items -> reduce_instance.items\n\texecute_19300c -> reduce_instance.trigger\n\t1 -> reduce_instance.context\n}\n\n    \n    instance(x: -704, y: -134) unique_product_b9d3ba root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 49, y: 37) difference_61c9da root.Std_k98ojb.Sets.Difference {}\n        instance(x: -20, y: -10) diff1_e4cfc2 root.Std_k98ojb.List.Difference {}\n        instance(x: -92, y: -15) diff2_f3a5dd root.Std_k98ojb.List.Difference {}\n        list1_ai -> difference_61c9da.left\n        list2_ai -> difference_61c9da.right\n        instance(x: 182, y: 41) concat_a3e7dc root.Std_k98ojb.List.Concat {}\n\n        diff1_e4cfc2.first <- list1_ai\n        diff1_e4cfc2.second <- difference_61c9da.difference\n        diff2_f3a5dd.first <- list2_ai\n        diff2_f3a5dd.second <- difference_61c9da.difference\n\n        diff1_e4cfc2.resultWithoutSecond -> concat_a3e7dc.list1\n        diff2_f3a5dd.resultWithoutSecond -> concat_a3e7dc.list2\n        concat_a3e7dc.listWithList -> output_ai\n    }\n\n    \n\n    instance(x: -41, y: 64) find_dissimilar_c7ac30 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 290, y: -52) getat_f0cc9e root.Std_k98ojb.List.GetAt {}\n        instance(x: 322, y: 144) length_ced9a2 root.Std_k98ojb.List.Length {}\n        getter(x: 574, y: 71, name: \"getter_7f1c92\") getter_7f1c92 = slice\n        setter(x: 826, y: -5, name: \"setter_f0d62e\") setter_f0d62e = slice\n        instance(x: -38, y: 123) mod_e6ebda root.Std_k98ojb.Math.Modulo {}\n        getter(x: 827, y: -223, name: \"getter_2ea61c\") getter_2ea61c = slice\n        setter(x: -7, y: -274, name: \"setter_d29af5\") setter_d29af5 = listWithItem\n        instance(x: -145, y: 39) add_a6ee9d root.Std_k98ojb.List.Add {}\n        instance(x: 549, y: -191) slice_4bb8ae root.Std_k98ojb.List.Slice {}\n        getter(x: -220, y: -279, name: \"getter_72aeb2\") getter_72aeb2 = listWithItem\n        data_instance(x: 534, y: -11) data_f3cfd7  = [beginning, slice]\n        instance(x: 300, y: -277) concat_48b4e9 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_ced9a2.list\n        list_48148f -> add_a6ee9d.list\n        n_68068c -> mod_e6ebda.value\n        length_ced9a2.length -> mod_e6ebda.divisor\n        mod_e6ebda.result -> getat_f0cc9e.index\n        getter_7f1c92.value -> slice_4bb8ae.list\n        list_48148f -> slice_4bb8ae.list\n        0 -> slice_4bb8ae.start\n        getter_2ea61c.value -> slice_4bb8ae.end\n        getat_f0cc9e.itemAtIndex -> add_a6ee9d.item\n        data_f3cfd7.middle -> concat_48b4e9.left\n        0 -> add_a6ee9d.item\n        getter_d29af5.value -> slice_4bb8ae.list\n        concat_48b4e9.result -> output_823209\n        add_a6ee9d.listWithItem -> setter_d29af5.new_value\n        mod_e6ebda.result -> getat_f0cc9e.index\n        slice_4bb8ae.slice -> data_f3cfd7.middle\n        getat_f0cc9e.itemAtIndex -> getter_2ea61c.value\n        add_a6ee9d.listWithItem -> setter_f0d62e.new_value\n        getter_72aeb2.value -> data_f3cfd7.beginning\n        list_48148f -> slice_4bb8ae.list\n        0 -> slice_4bb8ae.start\n        mod_e6ebda.result -> slice_4bb8ae.end\n        concat_48b4e9.right -> data_f3cfd7.beginning\n    }\n\n    \n\n    instance(x: -260, y: -95) rotate_right_da30c0 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 232, y: -17) reduce_f0b1ec root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 448, y: 58) data_e0d04c = 0\n        func() {\n            in(x: -147, y: -93, name: \"accumulated\") property(Number) current_6edf85\n            in(x: -137, y: 10, name: \"current\") property(Number) current_b9a2de\n\n            out(x: 529, y: -81, name: \"sum\") property(Number) sum_b3bf27\n\n            instance(x: 98, y: 25) add_5f5ad6 root.Std_k98ojb.Math.Add {}\n            current_b9a2de -> add_5f5ad6.first\n            current_6edf85 -> add_5f5ad6.second\n            add_5f5ad6.result -> sum_b3bf27\n        } -> reduce_f0b1ec.reducer\n        list_2c62ab -> reduce_f0b1ec.items\n        data_e0d04c -> reduce_f0b1ec.initialValue\n        reduce_f0b1ec.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 36, y: -16) _sum_a8ba12 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -88, y: 42) generaterange_e5d6ee root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 322, y: 23) lessthanorequal_cb8bc7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 602, y: -39) expression_b4e01f root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 595, y: 71) for_43d2cf root.Std_k98ojb.Std.For {}\n        instance(x: 1055, y: -77) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 840, y: -171) floor_d7bf12 root.Std_k98ojb.Math.Floor {}\n        instance(x: 849, y: 63) add_b0d9ec root.Std_k98ojb.Math.Add {}\n        getter(x: -25, y: -95, name: \"getter_6fe2e4\") getter_6fe2e4 = i\n        setter(x: 1003, y: -139, name: \"setter_f37ccf\") setter_f37ccf = i\n        getter(x: 971, y: 20, name: \"getter_c5d9b0\") getter_c5d9b0 = i\n        num_5c0677 -> generaterange_e5d6ee.to\n        2 -> generaterange_e5d6ee.from\n        generaterange_e5d6ee.list -> for_43d2cf.items\n        lessthanorequal_cb8bc7.result -> if_e19a62.predicate\n        num_5c0677 -> lessthanorequal_cb8bc7.right\n        getter_c5d9b0.value -> lessthanorequal_cb8bc7.left\n        floor_d7bf12.input -> add_b0d9ec.first\n        1 -> add_b0d9ec.second\n        add_b0d9ec.result -> generaterange_e5d6ee.to\n        getter_6fe2e4.value -> expression_b4e01f.gen_0\n        num_5c0677 -> expression_b4e01f.gen_1\n        expression_b4e01f.result -> if_e19a62.predicate\n        for_43d2cf.item -> getter_c5d9b0.value\n        for_43d2cf.index -> getter_6fe2e4.value\n        num_5c0677 -> floor_d7bf12.input\n        for_43d2cf.onItem -> if_e19a62.execute\n        if_e19a62.else -> setter_f37ccf.execute\n        if_e19a62.then -> continue_9a54bb\n        for_43d2cf.done -> continue_9a54bb\n        execute_b7b391 -> for_43d2cf.reset\n        getter_6fe2e4.value -> if_e19a62.value\n        setter_f37ccf.new_value -> for_43d2cf.next\n        if_e19a62.value -> output_c457b3\n    }\n\n    \n\n    instance(x: 85, y: -28) num_prime_b9a7c0 root.main.num_prime {}\n\n\n}"
            ]
        }
    }
]