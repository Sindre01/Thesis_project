[
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c5b3d root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c5b3d.first\n        y_5390f5 -> mul_2c5b3d.second\n        mul_2c5b3d.result -> less_than_zero_8f1e5a.left\n        0 -> less_than_zero_8f1e5a.right\n        less_than_zero_8f1e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_4d6b3c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5b2d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -24) equal_3c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5b2d1a.value\n        11 -> modulo_5b2d1a.divisor\n        modulo_5b2d1a.result -> equal_3c7e1b.left\n        0 -> equal_3c7e1b.right\n        equal_3c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 59) is_diff_15f9e9 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 177, y: 210) tolower_4b5c2a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 466, y: 210) equal_3f8e1d root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b5c2a.input\n        input_ai -> equal_3f8e1d.left\n        tolower_4b5c2a.output -> equal_3f8e1d.right\n        equal_3f8e1d.equal -> output_ai\n    }\n\n    \n\n    instance(x: -60, y: 179) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(List) _7dd980\n\n                instance(x: 0, y: 25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4a7c3f -> contains_node.list\n                item_9b1bc3 -> contains_node.item\n                instance(x: 0, y: -25) if_node root.Std_k98ojb.Std.If {}\n                contains_node.contains -> if_node.input\n                func() {\n                    acc_4a7c3f -> _7dd980\n                } -> if_node.then\n                func() {\n                    instance(x: 0, y: -25) add_node root.Std_k98ojb.List.Add {}\n                    item_9b1bc3 -> add_node.item\n                    acc_4a7c3f -> add_node.list\n                    add_node.listWithItem -> _7dd980\n                } -> if_node.else\n            }\n        }\n\n        instance(x: 200, y: -100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(Number) _7dd980\n\n                instance(x: 0, y: 25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4a7c3f -> mul_node.first\n                item_9b1bc3 -> mul_node.second\n                mul_node.result -> _7dd980\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        product_node.done -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -11) difference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a2b3c.left\n        list2_ai -> difference_1a2b3c.right\n\n        instance(x: 405, y: -11) difference_4d5e6f root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_4d5e6f.left\n        list1_ai -> difference_4d5e6f.right\n\n        instance(x: 305, y: 77) concat_7g8h9i root.Std_k98ojb.List.Concat {}\n        difference_1a2b3c.difference -> concat_7g8h9i.left\n        difference_4d5e6f.difference -> concat_7g8h9i.right\n\n        concat_7g8h9i.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -10, y: 30) find_dissimilar_jk root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -140) length_1b2d3a root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: -175) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -140) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 460, y: -175) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 460, y: -40) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 620, y: -105) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2d3a.list\n        length_1b2d3a.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b2d3a.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        sub_f133b2.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.right\n        slice_76ecda.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -122) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_4d2b1e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4d2b1e.items\n        0 -> reduce_4d2b1e.initialValue\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_8f9a1c\n            in(x: -167, y: 22, name: \"current\") property(Number) current_0b1dcd\n\n            out(x: 1072, y: -34, name: \"sum\") property(Number) sum_58f9a1\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_8f9a1c -> add_6e8af5.first\n            current_0b1dcd -> add_6e8af5.second\n            add_6e8af5.result -> sum_58f9a1\n        } -> reduce_4d2b1e.reducer\n        reduce_4d2b1e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -307, y: 16) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6d6c5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e1a8c root.Std_k98ojb.Std.If {}\n        instance(x: 144, y: -104) lessthanorequal_6d6c5f_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 327, y: -104) if_2e1a8c_1 root.Std_k98ojb.Std.If {}\n        instance(x: 534, y: -104) lessthanorequal_6d6c5f_2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 741, y: -104) if_2e1a8c_2 root.Std_k98ojb.Std.If {}\n        instance(x: 948, y: -104) lessthanorequal_6d6c5f_3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1155, y: -104) if_2e1a8c_3 root.Std_k98ojb.Std.If {}\n        instance(x: 1362, y: -104) lessthanorequal_6d6c5f_4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1569, y: -104) if_2e1a8c_4 root.Std_k98ojb.Std.If {}\n        instance(x: 1776, y: -104) lessthanorequal_6d6c5f_5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1983, y: -104) if_2e1a8c_5 root.Std_k98ojb.Std.If {}\n        instance(x: 2190, y: -104) lessthanorequal_6d6c5f_6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2397, y: -104) if_2e1a8c_6 root.Std_k98ojb.Std.If {}\n        instance(x: 2604, y: -104) lessthanorequal_6d6c5f_7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2811, y: -104) if_2e1a8c_7 root.Std_k98ojb.Std.If {}\n        instance(x: 3018, y: -104) lessthanorequal_6d6c5f_8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3225, y: -104) if_2e1a8c_8 root.Std_k98ojb.Std.If {}\n        instance(x: 3432, y: -104) lessthanorequal_6d6c5f_9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3639, y: -104) if_2e1a8c_9 root.Std_k98ojb.Std.If {}\n        instance(x: 3846, y: -104) lessthanorequal_6d6c5f_10 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4053, y: -104) if_2e1a8c_10 root.Std_k98ojb.Std.If {}\n        instance(x: 4260, y: -104) lessthanorequal_6d6c5f_11 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4467, y: -104) if_2e1a8c_11 root.Std_k98ojb.Std.If {}\n        instance(x: 4674, y: -104) lessthanorequal_6d6c5f_12 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4881, y: -104) if_2e1a8c_12 root.Std_k98ojb.Std.If {}\n        instance(x: 5088, y: -104) lessthanorequal_6d6c5f_13 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5295, y: -104) if_2e1a8c_13 root.Std_k98ojb.Std.If {}\n        instance(x: 5502, y: -104) lessthanorequal_6d6c5f_14 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5709, y: -104) if_2e1a8c_14 root.Std_k98ojb.Std.If {}\n        instance(x: 5916, y: -104) lessthanorequal_6d6c5f_15 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6123, y: -104) if_2e1a8c_15 root.Std_k98ojb.Std.If {}\n        instance(x: 6330, y: -104) lessthanorequal_6d6c5f_16 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6537, y: -104) if_2e1a8c_16 root.Std_k98ojb.Std.If {}\n        instance(x: 6744, y: -104) lessthanorequal_6d6c5f_17 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6951, y: -104) if_2e1a8c_17 root.Std_k98ojb.Std.If {}\n        instance(x: 7158, y: -104) lessthanorequal_6d6c5f_18 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7365, y: -104) if_2e1a8c_18 root.Std_k98ojb.Std.If {}\n        instance(x: 7572, y: -104) lessthanorequal_6d6c5f_19 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7779, y: -104) if_2e1a8c_19 root.Std_k98ojb.Std.If {}\n        instance(x: 7986, y: -104) lessthanorequal_6d6c5f_20 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8193, y: -104) if_2e1a8c_20 root.Std_k98ojb.Std.If {}\n        instance(x: 8376, y: -104) lessthanorequal_6d6c5f_21 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8573, y: -104) if_2e1a8c_21 root.Std_k98ojb.Std.If {}\n        instance(x: 8770, y: -104) lessthanorequal_6d6c5f_22 root.Std_k98ojb.Math.L"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -86, y: -174) mul_2b6c8e root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -180) less_than_zero_e1d6f4 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2b6c8e.first\n        y_5390f5 -> mul_2b6c8e.second\n        mul_2b6c8e.result -> less_than_zero_e1d6f4.left\n        0 -> less_than_zero_e1d6f4.right\n        less_than_zero_e1d6f4.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -172, y: 58) opposite_signs_7b3c7e root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_3b2a7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 345, y: -25) equal_1c2e4f root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_3b2a7d.value\n        11 -> modulo_3b2a7d.divisor\n        modulo_3b2a7d.result -> equal_1c2e4f.left\n        0 -> equal_1c2e4f.right\n        equal_1c2e4f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -8, y: 5) is_diff_7a9b3d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 278, y: 212) tolower_4b5f0a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 603, y: 214) equal_7c2d3e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b5f0a.input\n        input_ai -> equal_7c2d3e.left\n        tolower_4b5f0a.output -> equal_7c2d3e.right\n        equal_7c2d3e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 164) is_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4d7f3c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_6b2a89\n\n                out(x: 50, y: 0, name: \"\") property(List) _123456\n\n                instance(x: 0, y: 0) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4d7f3c -> contains_node.list\n                item_6b2a89 -> contains_node.item\n                instance(x: 0, y: 50) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _123456\n                        acc_4d7f3c -> _123456\n                    }\n                    else: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _123456\n                        instance(x: 0, y: 0) add_node root.Std_k98ojb.List.Add {}\n                        acc_4d7f3c -> add_node.list\n                        item_6b2a89 -> add_node.item\n                        add_node.listWithItem -> _123456\n                    }\n                }\n                contains_node.contains -> if_node.input\n            }\n        }\n\n        instance(x: 0, y: 0) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4d7f3c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_6b2a89\n\n                out(x: 50, y: 0, name: \"\") property(Number) _123456\n\n                instance(x: 0, y: 0) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4d7f3c -> mul_node.first\n                item_6b2a89 -> mul_node.second\n                mul_node.result -> _123456\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        [] -> unique_list_node.initialValue\n\n        unique_list_node.value -> product_node.items\n        1 -> product_node.initialValue\n\n        product_node.value -> output_cffcc2\n        continue_45190b -> execute_19300c\n    }\n\n    instance(x: -757, y: -167) unique_product_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -296, y: -10) difference_1a5b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5b3c.left\n        list2_ai -> difference_1a5b3c.right\n\n        instance(x: 47, y: -10) difference_2a5b3c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_2a5b3c.left\n        list1_ai -> difference_2a5b3c.right\n\n        instance(x: 247, y: -10) concat_1a5b3c root.Std_k98ojb.List.Concat {}\n        difference_1a5b3c.difference -> concat_1a5b3c.left\n        difference_2a5b3c.difference -> concat_1a5b3c.right\n\n        concat_1a5b3c.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 67) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -128) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: -128) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -128) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -128) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 500, y: -128) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 640, y: -128) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_4b8927.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_3f3ee6.end\n        list_48148f -> slice_3f3ee6.list\n        modulo_4e8c54.result -> slice_76ecda.start\n        -1 -> slice_76ecda.end\n        list_48148f -> slice_76ecda.list\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -128) rotate_right_496e5e root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -11) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3d7de6.initialValue\n        list_2c62ab -> reduce_3d7de6.items\n        func() {\n            in(x: -154, y: -12, name: \"accumulated\") property(Number) accumulated_8f9b2a\n            in(x: -140, y: 10, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 675, y: -14, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 89, y: 1) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_8f9b2a -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3d7de6.reducer\n        reduce_3d7de6.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -150, y: 10) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 83, y: -338) lessthanorequal_6d5c8e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 271, y: -330) greaterthan_bf1a49 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 478, y: -356) and_4d2c5e root.Std_k98ojb.Logic.And {}\n        instance(x: 699, y: -330) lessthanorequal_1a2f9b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 702, y: -456) greaterthan_3c7d5e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 877, y: -391) and_2a8f9c root.Std_k98ojb.Logic.And {}\n        instance(x: 1046, y: -330) and_e5d2e7 root.Std_k98ojb.Logic.And {}\n        instance(x: 1215, y: -330) if_1a2f9c root.Std_k98ojb.Std.If {}\n        instance(x: 1465, y: -330) for_e7d2e7 root.Std_k98ojb.Std.For {}\n        instance(x: 1745, y: -330) mathexpression_1a2f9c root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1965, y: -330) if_e5d2e7 root.Std_k98ojb.Std.If {}\n        instance(x: 2245, y: -330) not_1a2f9c root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> lessthanorequal_6d5c8e.left\n        1 -> lessthanorequal_6d5c8e.right\n        num_5c0677 -> greaterthan_bf1a49.left\n        1 -> greaterthan_bf1a49.right\n        lessthanorequal_6d5c8e.result -> and_4d2c5e.left\n        greaterthan_bf1a49.result -> and_4d2c5e.right\n        num_5c0677 -> lessthanorequal_1a2f9b.left\n        4 -> lessthanorequal_1a2f9b.right\n        num_5c0677 -> greaterthan_3c7d5e.left\n        2 -> greaterthan_3c7d5e.right\n        lessthanorequal_1a2f9b.result -> and_2a8f9c.left\n        greaterthan_3c7d5e.result -> and_2a8f9c.right\n        and_4d2c5e.result -> if_1a2f9c.predicate\n        and_2a8f9c.result -> if_e5d2e7.predicate\n        not_1a2f9c.result -> output_c457b3\n        2 -> for_e7d2e7.items\n        num_5c0677 -> mathexpression_1a2f9c.gen_0\n        for_e7d2e7.item -> mathexpression_1a2f9c.gen_1\n        mathexpression_1a2f9c.result -> if_e5d2e7.predicate\n        if_e5d2e7.then -> continue_9a54bb\n        if_e5d2e7.else -> not_1a2f9c.execute\n        for_e7d2e7.onItem -> mathexpression_1a2f9c.execute\n        for_e7d2e7.done -> not_1a2f9c.execute\n        execute_b7b391 -> if_1a2f9c.execute\n        if_1a2f9c.then -> and_e5d2e7.left\n        and_e5d2e7.right -> for_e7d2e7.reset\n    }\n\n    \n\n    instance(x: -84, y: 60) num_prime_3b2f9c root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -46, y: -187) mul_3d5b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 102, y: -191) less_than_zero_6f1e4a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_3d5b9c.first\n        y_5390f5 -> mul_3d5b9c.second\n        mul_3d5b9c.result -> less_than_zero_6f1e4a.left\n        0 -> less_than_zero_6f1e4a.right\n        less_than_zero_6f1e4a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -287, y: 5) opposite_signs_5d2b9c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_5b3a8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 327, y: -25) equal_4c3e1a root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5b3a8d.value\n        11 -> modulo_5b3a8d.divisor\n        modulo_5b3a8d.result -> equal_4c3e1a.left\n        0 -> equal_4c3e1a.right\n        equal_4c3e1a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -97, y: 5) is_diff_8d5b1f root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 279, y: 212) tolower_4a5b0f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: 216) equal_3c7d1e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a5b0f.input\n        input_ai -> equal_3c7d1e.left\n        tolower_4a5b0f.output -> equal_3c7d1e.right\n        equal_3c7d1e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -280, y: 136) is_lower_72ef29 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n            out(x: 50, y: 0, name: \"bool\") property(Bool) bool_8d2e5b\n\n            instance(x: 0, y: -50) index_node root.Std_k98ojb.List.IndexOf {}\n            item_7a3f4c -> index_node.item\n            unique_list_node.items -> index_node.list\n            instance(x: 0, y: 50) equal_node root.Std_k98ojb.Logic.Equal {}\n            index_node.index -> equal_node.left\n            unique_list_node.index -> equal_node.right\n            equal_node.result -> bool_8d2e5b\n        } -> unique_list_node.predicate\n\n        instance(x: 100, y: -100) reduce_node root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -50, y: 0, name: \"acc\") property(Number) acc_7a3f4c\n            in(x: 50, y: 0, name: \"item\") property(Number) item_8d2e5b\n            out(x: 100, y: 0, name: \"\") property(Number) _9e6f6c\n\n            instance(x: 0, y: -50) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_7a3f4c -> mul_node.first\n            item_8d2e5b -> mul_node.second\n            mul_node.result -> _9e6f6c\n        } -> reduce_node.reducer\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        unique_list_node.result -> reduce_node.items\n        1 -> reduce_node.initial_value\n        reduce_node.accumulated_value -> output_cffcc2\n        reduce_node.done -> continue_45190b\n    }\n\n    instance(x: -300, y: -300) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -196, y: -105) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 236, y: -104) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 356, y: -104) concat root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -73, y: 56) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -143) length_7a1b5f root.Std_k98ojb.List.Length {}\n        instance(x: 169, y: -145) modulo_9d4c8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -137) sub_6a9f1a root.Std_k98ojb.Math.Sub {}\n        instance(x: 419, y: -155) slice_8e5d1c root.Std_k98ojb.List.Slice {}\n        instance(x: 420, y: -37) slice_62f6a5 root.Std_k98ojb.List.Slice {}\n        instance(x: 556, y: -102) concat_9d3c5e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_7a1b5f.list\n        length_7a1b5f.length -> modulo_9d4c8e.first\n        n_68068c -> modulo_9d4c8e.divisor\n        modulo_9d4c8e.result -> sub_6a9f1a.second\n        length_7a1b5f.length -> sub_6a9f1a.first\n        sub_6a9f1a.result -> slice_8e5d1c.start\n        -1 -> slice_8e5d1c.end\n        list_48148f -> slice_8e5d1c.list\n        0 -> slice_62f6a5.start\n        sub_6a9f1a.result -> slice_62f6a5.end\n        list_48148f -> slice_62f6a5.list\n        slice_8e5d1c.slice -> concat_9d3c5e.left\n        slice_62f6a5.slice -> concat_9d3c5e.right\n        concat_9d3c5e.result -> output_823209\n    }\n\n    \n\n    instance(x: -47, y: -105) rotate_right_6b9d7c root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -10) reduce_4b2d2e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4b2d2e.items\n        0 -> reduce_4b2d2e.initialValue\n        func() {\n            in(x: -175, y: -35, name: \"accumulated\") property(Number) accumulated_8a9f8c\n            in(x: -167, y: 21, name: \"current\") property(Number) current_4d0e1b\n\n            out(x: 1072, y: -35, name: \"sum\") property(Number) sum_3a9f8c\n\n            instance(x: 74, y: 2) add_6f8b34 root.Std_k98ojb.Math.Add {}\n            accumulated_8a9f8c -> add_6f8b34.first\n            current_4d0e1b -> add_6f8b34.second\n            add_6f8b34.result -> sum_3a9f8c\n        } -> reduce_4b2d2e.reducer\n        reduce_4b2d2e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -170, y: 56) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 89, y: -145) lessthanorequal_f6d7e7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 326, y: -107) ifexpression_1f8c2a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 540, y: -110) ifexpression_2d8e3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 2\"\n        }\n        instance(x: 761, y: -110) ifexpression_4f4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 326, y: -350) ifexpression_8d7e3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 540, y: -350) ifexpression_ae4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 2\"\n        }\n        instance(x: 761, y: -350) ifexpression_ce4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 982, y: -350) ifexpression_ea4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 1203, y: -350) ifexpression_fa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 1424, y: -350) ifexpression_ga4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 1645, y: -350) ifexpression_ha4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 1866, y: -350) ifexpression_ia4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 2087, y: -350) ifexpression_ja4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 2308, y: -350) ifexpression_ka4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 2529, y: -350) ifexpression_la4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 2750, y: -350) ifexpression_ma4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 2971, y: -350) ifexpression_na4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 3192, y: -350) ifexpression_oa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 3413, y: -350) ifexpression_pa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 3634, y: -350) ifexpression_qa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 3855, y: -350) ifexpression_ra4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 4076, y: -350) ifexpression_sa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 4297, y: -350) ifexpression_ta4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 4518, y: -350) ifexpression_ua4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 4739, y: -350) ifexpression_va4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 4960, y: -350) ifexpression_wa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 5181, y: -350) ifexpression_xa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 5402, y: -350) ifexpression_ya4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 5623, y: -350) ifexpression_za4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 5844, y: -350) ifexpression_aaa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 6065, y: -350) ifexpression_baa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 6286, y: -350) ifexpression_caa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 6507, y: -350) ifexpression_daa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 6728, y: -350) ifexpression_eaa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 6949, y: -350) ifexpression_faa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 7170, y: -350) ifexpression_gaa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 7391, y: -350) ifexpression_haa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 7612, y: -350) ifexpression_iaa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 7833, y: -350) if"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c8d5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c8d5b.first\n        y_5390f5 -> mul_2c8d5b.second\n        mul_2c8d5b.result -> less_than_zero_8f1e5a.left\n        0 -> less_than_zero_8f1e5a.right\n        less_than_zero_8f1e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_8b3d8c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5d3b9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -24) equal_8c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5d3b9a.value\n        11 -> modulo_5d3b9a.divisor\n        modulo_5d3b9a.result -> equal_8c7e1b.left\n        0 -> equal_8c7e1b.right\n        equal_8c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 15) is_diff_9a2d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 177, y: 210) tolower_45b2c9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 489, y: 216) equal_3f8a5d root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_45b2c9.input\n        input_ai -> equal_3f8a5d.left\n        tolower_45b2c9.output -> equal_3f8a5d.right\n        equal_3f8a5d.equal -> output_ai\n    }\n\n    \n\n    instance(x: -176, y: 108) is_lower_4e5b3a root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(List) _7dd980\n\n                instance(x: 0, y: 25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4a7c3f -> contains_node.list\n                item_9b1bc3 -> contains_node.item\n                instance(x: 0, y: -25) if_node root.Std_k98ojb.Std.If {}\n                contains_node.contains -> if_node.input\n                func() {\n                    acc_4a7c3f -> _7dd980\n                } -> if_node.then\n                func() {\n                    instance(x: 0, y: -25) add_node root.Std_k98ojb.List.Add {}\n                    item_9b1bc3 -> add_node.item\n                    acc_4a7c3f -> add_node.list\n                    add_node.listWithItem -> _7dd980\n                } -> if_node.else\n            }\n        }\n\n        instance(x: 200, y: -100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(Number) _7dd980\n\n                instance(x: 0, y: 25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4a7c3f -> mul_node.first\n                item_9b1bc3 -> mul_node.second\n                mul_node.result -> _7dd980\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        product_node.done -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -11) difference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a2b3c.left\n        list2_ai -> difference_1a2b3c.right\n\n        instance(x: 405, y: -11) difference_4d5e6f root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_4d5e6f.left\n        list1_ai -> difference_4d5e6f.right\n\n        instance(x: 305, y: 77) concat_7g8h9i root.Std_k98ojb.List.Concat {}\n        difference_1a2b3c.difference -> concat_7g8h9i.left\n        difference_4d5e6f.difference -> concat_7g8h9i.right\n\n        concat_7g8h9i.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -10, y: 30) find_dissimilar_jk root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -140) length_1b3a5f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -140) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 295, y: -140) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -140) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 650, y: -140) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 820, y: -140) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b3a5f.list\n        length_1b3a5f.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b3a5f.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        sub_f133b2.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.right\n        slice_76ecda.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -112) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_4b2d8e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4b2d8e.initialValue\n        list_2c62ab -> reduce_4b2d8e.items\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_9f1a0a\n            in(x: -167, y: 22, name: \"current\") property(Number) current_8d2b1c\n\n            out(x: 1052, y: -34, name: \"sum\") property(Number) sum_9f1a0a\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1a0a -> add_6e8af5.first\n            current_8d2b1c -> add_6e8af5.second\n            add_6e8af5.result -> sum_9f1a0a\n        } -> reduce_4b2d8e.reducer\n        reduce_4b2d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -37, y: 11) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6c5d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e2a89 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -104) lessthanorequal_f5d6c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -244) if_8a2e1f root.Std_k98ojb.Std.If {}\n        instance(x: 204, y: -245) lessthanorequal_6c5d8f_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -384) if_2e2a89_1 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -385) lessthanorequal_f5d6c9_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 402, y: -385) mathexpression_7a2e1f root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 602, y: -385) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 474, y: -245) mathexpression_7a2e1f_1 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 674, y: -245) if_e19a62_1 root.Std_k98ojb.Std.If {}\n        instance(x: 37, y: -524) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 37, y: -664) for_8cb3f6_1 root.Std_k98ojb.Std.For {}\n\n        num_5c0677 -> lessthanorequal_6c5d8f.left\n        2 -> lessthanorequal_6c5d8f.right\n        lessthanorequal_6c5d8f.result -> if_2e2a89.predicate\n        if_2e2a89.then -> continue_9a54bb\n        if_2e2a89.else -> lessthanorequal_f5d6c9.left\n        num_5c0677 -> lessthanorequal_f5d6c9.right\n        lessthanorequal_f5d6c9.result -> if_8a2e1f.predicate\n        if_8a2e1f.then -> continue_9a54bb\n        if_8a2e1f.else -> lessthanorequal_6c5d8f_1.left\n        num_5c0677 -> lessthanorequal_6c5d8f_1.right\n        lessthanorequal_6c5d8f_1.result -> if_2e2a89_1.predicate\n        if_2e2a89_1.then -> continue_9a54bb\n        if_2e2a89_1.else -> lessthanorequal_f5d6c9_1.left\n        num_5c0677 -> lessthanorequal_f5d6c9_1.right\n        lessthanorequal_f5d6c9_1.result -> for_8cb3f6.reset\n        2 -> for_8cb3f6.start\n        num_5c0677 -> mathexpression_7a2e1f.gen_1\n        for_8cb3f6.item -> mathexpression_7a2e1f.gen_0\n        mathexpression_7a2e1f.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> lessthanorequal_6c5d8f_1.left\n        num_5c0677 -> lessthanorequal_6c5d8f_1.right\n        lessthanorequal_6c5d8f_1.result -> if_2e2a89_1.predicate\n        if_2e2a89_1.then -> continue_9a54bb\n        if_2e2a89_1.else -> for_8cb3f6_1.reset\n        2 -> for_8cb3f6_1.start\n        num_5c0677 -> mathexpression_7a2e1f_1.gen_1\n        for_8cb3f6_1.item -> mathexpression_7a2e1f_1.gen_0\n        mathexpression_7a2e1f_1.result -> if_e19a62_1.predicate\n        if_e19a62_1.then -> continue_9a54bb\n        if_e19a62_1.else -> for_8cb3f6_1.next\n        for_8cb3f6_1.done -> output_c457b3\n        true -> output_c457b3\n        execute_b7b391 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -20, y: 11) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -186, y: -247) mul_4d6c2b root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -248) less_than_zero_9f1e4c root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_4d6c2b.first\n        y_5390f5 -> mul_4d6c2b.second\n        mul_4d6c2b.result -> less_than_zero_9f1e4c.left\n        0 -> less_than_zero_9f1e4c.right\n        less_than_zero_9f1e4c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -185, y: 26) opposite_signs_7b1d8c root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_3b2a7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 345, y: -25) equal_1c4e2b root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_3b2a7d.value\n        11 -> modulo_3b2a7d.divisor\n        modulo_3b2a7d.result -> equal_1c4e2b.left\n        0 -> equal_1c4e2b.right\n        equal_1c4e2b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -8, y: 5) is_diff_7a9d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 278, y: 212) tolower_4b5f0a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 603, y: 214) equal_7c2d3e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b5f0a.input\n        input_ai -> equal_7c2d3e.left\n        tolower_4b5f0a.output -> equal_7c2d3e.right\n        equal_7c2d3e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 164) is_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_7a3c2d\n                in(x: -50, y: 50, name: \"item\") property(Number) item_8b4d3e\n\n                out(x: 50, y: 0, name: \"\") property(List) _9c5e4f\n\n                instance(x: 100, y: -25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_7a3c2d -> contains_node.list\n                item_8b4d3e -> contains_node.item\n                instance(x: 100, y: 25) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _a1b2c3\n                        acc_7a3c2d -> _a1b2c3\n                    }\n                    else: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _d4e5f6\n\n                        instance(x: 100, y: 25) add_node root.Std_k98ojb.List.Add {}\n                        acc_7a3c2d -> add_node.list\n                        item_8b4d3e -> add_node.item\n                        add_node.listWithItem -> _d4e5f6\n                    }\n                }\n                contains_node.contains -> if_node.input\n                if_node.value -> _9c5e4f\n            }\n        }\n\n        instance(x: 100, y: -200) reduce_product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_7a3c2d\n                in(x: -50, y: 50, name: \"item\") property(Number) item_8b4d3e\n\n                out(x: 50, y: 0, name: \"\") property(Number) _9c5e4f\n\n                instance(x: 100, y: -25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_7a3c2d -> mul_node.first\n                item_8b4d3e -> mul_node.second\n                mul_node.result -> _9c5e4f\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initialValue\n\n        unique_list_node.value -> reduce_product_node.items\n        1 -> reduce_product_node.initialValue\n\n        reduce_product_node.value -> output_cffcc2\n        continue_45190b -> execute_19300c\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -296, y: -10) difference_1a5b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5b3c.left\n        list2_ai -> difference_1a5b3c.right\n\n        instance(x: 47, y: -10) difference_2a5b3c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_2a5b3c.left\n        list1_ai -> difference_2a5b3c.right\n\n        instance(x: 247, y: -10) concat_1a5b3c root.Std_k98ojb.List.Concat {}\n        difference_1a5b3c.difference -> concat_1a5b3c.left\n        difference_2a5b3c.difference -> concat_1a5b3c.right\n\n        concat_1a5b3c.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 67) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -125) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 163, y: -125) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -125) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 427, y: -125) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 570, y: -125) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 714, y: -125) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_4b8927.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_3f3ee6.end\n        list_48148f -> slice_3f3ee6.list\n        modulo_4e8c54.result -> slice_76ecda.start\n        -1 -> slice_76ecda.end\n        list_48148f -> slice_76ecda.list\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -125) rotate_right_496e5e root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -11) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3d7de6.initialValue\n        list_2c62ab -> reduce_3d7de6.items\n        func() {\n            in(x: -154, y: -12, name: \"accumulated\") property(Number) accumulated_8f9b2a\n            in(x: -140, y: 10, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 675, y: -10, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 89, y: 1) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_8f9b2a -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3d7de6.reducer\n        reduce_3d7de6.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -150, y: 11) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 80, y: -300) lessthanorequal_6d5f1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 275, y: -300) lessthanorequal_4a7e2d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 600, y: -100) ifexpression_8f4c5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 725, y: -300) lessthanorequal_3a6d1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 400, y: -100) ifexpression_1e5c6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 3\"\n        }\n        instance(x: 275, y: -100) ifexpression_6a7d2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % 2 == 0 || num % 3 == 0)\"\n        }\n        instance(x: 400, y: 100) for_5e5c6f root.Std_k98ojb.Std.For {}\n        instance(x: 700, y: -100) ifexpression_2e5d6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0 || num % (i + 2) == 0)\"\n        }\n        instance(x: 400, y: 300) add_1e5c6f root.Std_k98ojb.Math.Add {}\n        instance(x: 700, y: 100) ifexpression_3e5d6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"true\"\n        }\n        instance(x: 400, y: 200) add_2e5c6f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_6d5f1c.left\n        1 -> lessthanorequal_6d5f1c.right\n        lessthanorequal_6d5f1c.result -> ifexpression_8f4c5e.predicate\n        ifexpression_8f4c5e.then -> continue_9a54bb\n        num_5c0677 -> lessthanorequal_4a7e2d.left\n        3 -> lessthanorequal_4a7e2d.right\n        lessthanorequal_4a7e2d.result -> ifexpression_1e5c6f.predicate\n        ifexpression_1e5c6f.then -> ifexpression_3e5d6f.execute\n        num_5c0677 -> lessthanorequal_3a6d1f.left\n        2 -> lessthanorequal_3a6d1f.right\n        lessthanorequal_3a6d1f.result -> ifexpression_6a7d2d.predicate\n        num_5c0677 -> ifexpression_6a7d2d.gen_0\n        2 -> ifexpression_6a7d2d.gen_1\n        3 -> ifexpression_6a7d2d.gen_2\n        ifexpression_6a7d2d.then -> continue_9a54bb\n        num_5c0677 -> for_5e5c6f.items\n        5 -> add_1e5c6f.first\n        6 -> add_1e5c6f.second\n        add_1e5c6f.result -> for_5e5c6f.item\n        for_5e5c6f.index -> add_2e5c6f.first\n        2 -> add_2e5c6f.second\n        add_2e5c6f.result -> ifexpression_2e5d6f.gen_1\n        num_5c0677 -> ifexpression_2e5d6f.gen_0\n        for_5e5c6f.item -> ifexpression_2e5d6f.gen_2\n        ifexpression_2e5d6f.then -> continue_9a54bb\n        ifexpression_3e5d6f.result -> output_c457b3\n        execute_b7b391 -> for_5e5c6f.reset\n        for_5e5c6f.onItem -> ifexpression_2e5d6f.execute\n        for_5e5c6f.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 80, y: -177) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -46, y: -187) mul_3d5b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 102, y: -191) less_than_zero_6f1e4a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_3d5b9c.first\n        y_5390f5 -> mul_3d5b9c.second\n        mul_3d5b9c.result -> less_than_zero_6f1e4a.left\n        0 -> less_than_zero_6f1e4a.right\n        less_than_zero_6f1e4a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -287, y: 5) opposite_signs_0d2b6c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_6b3a8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 327, y: -25) equal_4c2e1a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_6b3a8d.value\n        11 -> modulo_6b3a8d.divisor\n        modulo_6b3a8d.result -> equal_4c2e1a.left\n        0 -> equal_4c2e1a.right\n        equal_4c2e1a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -5, y: 7) is_diff_8b9d9c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 279, y: 212) tolower_4a5b0f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: 216) equal_3c7d1e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a5b0f.input\n        input_ai -> equal_3c7d1e.left\n        tolower_4a5b0f.output -> equal_3c7d1e.right\n        equal_3c7d1e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -280, y: 136) is_lower_72ef29 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n            out(x: 50, y: 0, name: \"bool\") property(Bool) bool_8d2e5b\n\n            instance(x: 0, y: -50) index_node root.Std_k98ojb.List.IndexOf {}\n            item_7a3f4c -> index_node.item\n            unique_list_node.items -> index_node.list\n            instance(x: 0, y: 50) equal_node root.Std_k98ojb.Logic.Equal {}\n            index_node.index -> equal_node.left\n            unique_list_node.index -> equal_node.right\n            equal_node.result -> bool_8d2e5b\n        } -> unique_list_node.predicate\n\n        instance(x: 100, y: -100) reduce_node root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -50, y: 0, name: \"acc\") property(Number) acc_7a3f4c\n            in(x: 50, y: 0, name: \"item\") property(Number) item_8d2e5b\n            out(x: 100, y: 0, name: \"\") property(Number) _9e6f6c\n\n            instance(x: 0, y: -50) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_7a3f4c -> mul_node.first\n            item_8d2e5b -> mul_node.second\n            mul_node.result -> _9e6f6c\n        } -> reduce_node.reducer\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        unique_list_node.result -> reduce_node.items\n        1 -> reduce_node.initial_value\n        reduce_node.accumulated_value -> output_cffcc2\n        reduce_node.done -> continue_45190b\n    }\n\n    instance(x: -300, y: -300) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -196, y: -105) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 236, y: -104) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 356, y: -104) concat root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -73, y: 56) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -143) length_5b2d7a root.Std_k98ojb.List.Length {}\n        instance(x: 169, y: -145) modulo_7c5f6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 304, y: -146) sub_2d9a51 root.Std_k98ojb.Math.Sub {}\n        instance(x: 455, y: -147) slice_2e4c5f root.Std_k98ojb.List.Slice {}\n        instance(x: 453, y: -36) slice_0d7a52 root.Std_k98ojb.List.Slice {}\n        instance(x: 607, y: -148) concat_6e1c8f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_5b2d7a.list\n        length_5b2d7a.length -> modulo_7c5f6e.first\n        n_68068c -> modulo_7c5f6e.divisor\n        modulo_7c5f6e.result -> sub_2d9a51.second\n        length_5b2d7a.length -> sub_2d9a51.first\n        sub_2d9a51.result -> slice_2e4c5f.start\n        0 -> slice_2e4c5f.end\n        list_48148f -> slice_2e4c5f.list\n        modulo_7c5f6e.result -> slice_0d7a52.start\n        -1 -> slice_0d7a52.end\n        list_48148f -> slice_0d7a52.list\n        slice_2e4c5f.slice -> concat_6e1c8f.right\n        slice_0d7a52.slice -> concat_6e1c8f.left\n        concat_6e1c8f.result -> output_823209\n    }\n\n    \n\n    instance(x: -40, y: -128) rotate_right_7b8f1a root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -10) reduce_8d2b0e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_8d2b0e.initialValue\n        list_2c62ab -> reduce_8d2b0e.items\n        func() {\n            in(x: -175, y: -43, name: \"accumulated\") property(Number) accumulated_9a2f8e\n            in(x: -167, y: 21, name: \"current\") property(Number) current_0d2c9b\n\n            out(x: 1059, y: -36, name: \"sum\") property(Number) sum_4a3f8e\n\n            instance(x: 85, y: 2) add_7f2d8a root.Std_k98ojb.Math.Add {}\n            accumulated_9a2f8e -> add_7f2d8a.first\n            current_0d2c9b -> add_7f2d8a.second\n            add_7f2d8a.result -> sum_4a3f8e\n        } -> reduce_8d2b0e.reducer\n        reduce_8d2b0e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -195, y: 16) _sum_7c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 89, y: -145) lessthanorequal_f6d7e7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 321, y: -100) if_1c7a8f root.Std_k98ojb.Std.If {}\n        instance(x: 548, y: -168) lessthanorequal_5d9e5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 230, y: -373) if_ea6f99 root.Std_k98ojb.Std.If {}\n        instance(x: 416, y: -475) mathexpression_9d2c7e root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 330, y: -594) if_5f1a83 root.Std_k98ojb.Std.If {}\n        instance(x: 627, y: -594) mathexpression_7d3c8e root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 115, y: -678) add_8f8a72 root.Std_k98ojb.Math.Add {}\n        instance(x: 439, y: -678) add_b1d5e1 root.Std_k98ojb.Math.Add {}\n        instance(x: 704, y: -678) add_2a6f8c root.Std_k98ojb.Math.Add {}\n        instance(x: 354, y: -795) for_6d1e9b root.Std_k98ojb.Std.For {}\n\n        num_5c0677 -> lessthanorequal_f6d7e7.left\n        2 -> lessthanorequal_f6d7e7.right\n        lessthanorequal_f6d7e7.result -> if_1c7a8f.predicate\n        execute_b7b391 -> if_1c7a8f.execute\n        num_5c0677 -> lessthanorequal_5d9e5c.left\n        1 -> lessthanorequal_5d9e5c.right\n        lessthanorequal_5d9e5c.result -> if_ea6f99.predicate\n        if_1c7a8f.then -> if_ea6f99.execute\n        num_5c0677 -> mathexpression_9d2c7e.gen_0\n        for_6d1e9b.index -> mathexpression_9d2c7e.gen_1\n        mathexpression_9d2c7e.result -> if_5f1a83.predicate\n        if_ea6f99.then -> if_5f1a83.execute\n        num_5c0677 -> mathexpression_7d3c8e.gen_0\n        for_6d1e9b.index -> add_b1d5e1.first\n        2 -> add_b1d5e1.second\n        add_b1d5e1.result -> mathexpression_7d3c8e.gen_1\n        mathexpression_7d3c8e.result -> if_5f1a83.predicate\n        if_ea6f99.else -> for_6d1e9b.reset\n        2 -> add_8f8a72.first\n        1 -> add_8f8a72.second\n        add_8f8a72.result -> for_6d1e9b.items\n        if_5f1a83.then -> continue_9a54bb\n        if_5f1a83.else -> add_2a6f8c.first\n        for_6d1e9b.index -> add_2a6f8c.second\n        add_2a6f8c.result -> for_6d1e9b.next\n        for_6d1e9b.done -> continue_9a54bb\n        if_ea6f99.else -> output_c457b3\n        true -> output_c457b3\n    }\n\n    \n\n    instance(x: -20, y: 8) num_prime_8c1d7e root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c8d5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c8d5b.first\n        y_5390f5 -> mul_2c8d5b.second\n        mul_2c8d5b.result -> less_than_zero_8f1e5a.left\n        0 -> less_than_zero_8f1e5a.right\n        less_than_zero_8f1e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_8b3d8c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5d3b9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -24) equal_8c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5d3b9a.value\n        11 -> modulo_5d3b9a.divisor\n        modulo_5d3b9a.result -> equal_8c7e1b.left\n        0 -> equal_8c7e1b.right\n        equal_8c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 15) is_diff_9a2d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 177, y: 210) tolower_45b2c9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 489, y: 216) equal_3f8a5d root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_45b2c9.input\n        input_ai -> equal_3f8a5d.left\n        tolower_45b2c9.output -> equal_3f8a5d.right\n        equal_3f8a5d.equal -> output_ai\n    }\n\n    \n\n    instance(x: -176, y: 108) is_lower_4e5b3a root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(List) _7dd980\n\n                instance(x: 0, y: 25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4a7c3f -> contains_node.list\n                item_9b1bc3 -> contains_node.item\n                instance(x: 0, y: -25) if_node root.Std_k98ojb.Std.If {}\n                contains_node.contains -> if_node.input\n                func() {\n                    acc_4a7c3f -> _7dd980\n                } -> if_node.then\n                func() {\n                    instance(x: 0, y: -25) add_node root.Std_k98ojb.List.Add {}\n                    item_9b1bc3 -> add_node.item\n                    acc_4a7c3f -> add_node.list\n                    add_node.listWithItem -> _7dd980\n                } -> if_node.else\n            }\n        }\n\n        instance(x: 200, y: -100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(Number) _7dd980\n\n                instance(x: 0, y: 25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4a7c3f -> mul_node.first\n                item_9b1bc3 -> mul_node.second\n                mul_node.result -> _7dd980\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        product_node.done -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -11) difference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a2b3c.left\n        list2_ai -> difference_1a2b3c.right\n\n        instance(x: 405, y: -11) difference_4d5e6f root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_4d5e6f.left\n        list1_ai -> difference_4d5e6f.right\n\n        instance(x: 305, y: 77) concat_7g8h9i root.Std_k98ojb.List.Concat {}\n        difference_1a2b3c.difference -> concat_7g8h9i.left\n        difference_4d5e6f.difference -> concat_7g8h9i.right\n\n        concat_7g8h9i.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -10, y: 30) find_dissimilar_jk root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -140) length_1b3a5f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -140) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 295, y: -140) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -140) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 650, y: -140) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 820, y: -140) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b3a5f.list\n        length_1b3a5f.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b3a5f.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        sub_f133b2.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.right\n        slice_76ecda.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -112) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_4b2d8e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4b2d8e.initialValue\n        list_2c62ab -> reduce_4b2d8e.items\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_9f1a0a\n            in(x: -167, y: 22, name: \"current\") property(Number) current_8d2b1c\n\n            out(x: 1052, y: -34, name: \"sum\") property(Number) sum_9f1a0a\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1a0a -> add_6e8af5.first\n            current_8d2b1c -> add_6e8af5.second\n            add_6e8af5.result -> sum_9f1a0a\n        } -> reduce_4b2d8e.reducer\n        reduce_4b2d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -37, y: 11) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6c5d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e2a89 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -104) lessthanorequal_f5d6c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -244) if_8a2e1f root.Std_k98ojb.Std.If {}\n        instance(x: 204, y: -245) lessthanorequal_6c5d8f_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -384) if_2e2a89_1 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -385) lessthanorequal_f5d6c9_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 402, y: -385) mathexpression_7a2e1f root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 602, y: -385) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 474, y: -245) mathexpression_7a2e1f_1 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 674, y: -245) if_e19a62_1 root.Std_k98ojb.Std.If {}\n        instance(x: 37, y: -524) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 37, y: -664) for_8cb3f6_1 root.Std_k98ojb.Std.For {}\n\n        num_5c0677 -> lessthanorequal_6c5d8f.left\n        2 -> lessthanorequal_6c5d8f.right\n        lessthanorequal_6c5d8f.result -> if_2e2a89.predicate\n        if_2e2a89.then -> continue_9a54bb\n        if_2e2a89.else -> lessthanorequal_f5d6c9.left\n        num_5c0677 -> lessthanorequal_f5d6c9.right\n        lessthanorequal_f5d6c9.result -> if_8a2e1f.predicate\n        if_8a2e1f.then -> continue_9a54bb\n        if_8a2e1f.else -> lessthanorequal_6c5d8f_1.left\n        num_5c0677 -> lessthanorequal_6c5d8f_1.right\n        lessthanorequal_6c5d8f_1.result -> if_2e2a89_1.predicate\n        if_2e2a89_1.then -> continue_9a54bb\n        if_2e2a89_1.else -> lessthanorequal_f5d6c9_1.left\n        num_5c0677 -> lessthanorequal_f5d6c9_1.right\n        lessthanorequal_f5d6c9_1.result -> for_8cb3f6.reset\n        2 -> for_8cb3f6.start\n        num_5c0677 -> mathexpression_7a2e1f.gen_1\n        for_8cb3f6.item -> mathexpression_7a2e1f.gen_0\n        mathexpression_7a2e1f.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> lessthanorequal_6c5d8f_1.left\n        num_5c0677 -> lessthanorequal_6c5d8f_1.right\n        lessthanorequal_6c5d8f_1.result -> if_2e2a89_1.predicate\n        if_2e2a89_1.then -> continue_9a54bb\n        if_2e2a89_1.else -> for_8cb3f6_1.reset\n        2 -> for_8cb3f6_1.start\n        num_5c0677 -> mathexpression_7a2e1f_1.gen_1\n        for_8cb3f6_1.item -> mathexpression_7a2e1f_1.gen_0\n        mathexpression_7a2e1f_1.result -> if_e19a62_1.predicate\n        if_e19a62_1.then -> continue_9a54bb\n        if_e19a62_1.else -> for_8cb3f6_1.next\n        for_8cb3f6_1.done -> output_c457b3\n        true -> output_c457b3\n        execute_b7b391 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -20, y: 11) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    }
]