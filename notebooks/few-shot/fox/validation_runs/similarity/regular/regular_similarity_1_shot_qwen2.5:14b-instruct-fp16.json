[
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8b0e4d\n        in(x: 789, y: 101112, name: \"num2\") property(Number) num2_7a2f5c\n\n        out(x: -36, y: 312, name: \"output\") property(Bool) output_4d6b6e\n\n        instance(x: 390, y: 189) ifexpression_7db5d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num1 < 0 && num2 > 0) || (num1 > 0 && num2 < 0)\"\n        }\n        num1_8b0e4d -> ifexpression_7db5d5.num1\n        num2_7a2f5c -> ifexpression_7db5d5.num2\n        ifexpression_7db5d5.value -> output_4d6b6e\n    }\n\n    \n\n    instance(x: 390, y: -18) check_opposite_signs_7f3f5a root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -20, y: 348, name: \"input\") property(Number) input_f5c03d\n        out(x: -69, y: 374, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: -10, y: 284) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> out_f3db9f\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_6b7dce\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_b2f30a\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 446, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        oldChar_6b7dce -> replace_306f69.search\n        newChar_b2f30a -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_8b4dfe root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9b7e2d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9b7e2d.input\n    tolower_9b7e2d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -340, y: 215, name: \"inputList\") property(List) inputList_ai\n        out(x: 367, y: 218, name: \"product\") property(Number) product_ai\n\n        instance(x: -192, y: 216) unique_4b root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n            where: \"!list.Contains(it)\"\n        }\n        inputList_ai -> unique_4b.items\n        unique_4b.output_list -> product_7b.list\n\n        instance(x: 32, y: 156) product_7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"Math.Mul(first, second)\"\n        }\n    }\n\n    instance(x: -104, y: 127) uniqueProduct_node root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9b8a\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_bf3e6c\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7d9b8a\n\n        instance(x: -105, y: 186) differenceList_a1b2c3 root.Std_k98ojb.Sets.Difference {}\n        list1_3d9b8a -> differenceList_a1b2c3.left\n        list2_bf3e6c -> differenceList_a1b2c3.right\n\n        instance(x: -105, y: 126) reverseDifferenceList_d4e5f6 root.Std_k98ojb.Sets.Difference {}\n        list2_bf3e6c -> reverseDifferenceList_d4e5f6.left\n        list1_3d9b8a -> reverseDifferenceList_d4e5f6.right\n\n        instance(x: -105, y: 66) concatLists_g7h8i9 root.Std_k98ojb.List.Concat {}\n        differenceList_a1b2c3.difference -> concatLists_g7h8i9.left\n        reverseDifferenceList_d4e5f6.difference -> concatLists_g7h8i9.right\n\n        concatLists_g7h8i9.list -> output_7d9b8a\n    }\n\n    \n\n    instance(x: 105, y: 246) FindDissimilarInstance root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8bddd4\n        in(x: -169, y: 274, name: \"rotate_by\") property(Number) rotateBy_0d9fbc\n\n        out(x: 154, y: 203, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -86, y: 175) generateRange_7a7bdc root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 145, y: 238) slice_6f5d6c root.Std_k98ojb.List.Slice {}\n        instance(x: -86, y: 280) add_7a7bdc root.Std_k98ojb.Math.Add {}\n        instance(x: 145, y: 301) concat_6f5d6c root.Std_k98ojb.List.Concat {}\n\n        list_8bddd4 -> generateRange_7a7bdc.to\n        rotateBy_0d9fbc -> add_7a7bdc.second\n        generateRange_7a7bdc.from -> add_7a7bdc.first\n        add_7a7bdc.result -> slice_6f5d6c.start\n        list_8bddd4 -> slice_6f5d6c.list\n        0 -> slice_6f5d6c.end\n        rotateBy_0d9fbc -> generateRange_7a7bdc.from\n        -1 -> generateRange_7a7bdc.to\n        list_8bddd4 -> concat_6f5d6c.right\n        slice_6f5d6c.listWithEndRemoved -> concat_6f5d6c.left\n        concat_6f5d6c.result -> data_0_0\n    }\n\n    \n\n    instance(x: -238, y: 14) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -156, name: \"num1\") property(Number) num1_24d4b5\n        in(x: 398, y: -179, name: \"num2\") property(Number) num2_24d4b5\n\n        instance(x: 0, y: 64) ifexpression_24d4b5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num1 < 0 ? (num2 > 0) : (num2 < 0)\"\n        }\n        num1_24d4b5 -> ifexpression_24d4b5.num1\n        num2_24d4b5 -> ifexpression_24d4b5.num2\n        ifexpression_24d4b5.value\n    }"
            ],
            "3": [
                "func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -24, y: 36, name: \"input\") property(Number) input_f5c03d\n        out(x: -79, y: -84, name: \"output\") property(Bool) output_8ba06b\n\n        instance(x: -103, y: -22) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> output_8ba06b\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of a specific character with another one.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 150, name: \"searchChar\") property(String) searchChar_0\n        in(x: -230, y: 300, name: \"replaceChar\") property(String) replaceChar_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        searchChar_0 -> replace_306f69.search\n        replaceChar_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -143, y: 25) property(String) input_ai\n    out(x: 307, y: 25) property(String) output_ai\n\n    instance(x: 89, y: 24) tolower_6b8e29 root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_6b8e29.input\n    tolower_6b8e29.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -450, y: 216, name: \"inputList\") property(List) inputList_ai\n        out(x: 370, y: 89, name: \"product\") property(Number) product_ai\n\n        instance(x: 150, y: 216) removeDuplicates_4d5c4a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 370, y: 216) reduceProduct_4d5c4a root.Std_k98ojb.Iteration.Reduce {\n            initial: 1\n            handler: \"acc * it\"\n        }\n\n        inputList_ai -> removeDuplicates_4d5c4a.items\n        removeDuplicates_4d5c4a.output_list -> reduceProduct_4d5c4a.item\n        reduceProduct_4d5c4a.result -> product_ai\n    }\n    \n    instance(x: -30, y: 127) uniqueProduct_node root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") findDissimilarElements {\n        in(x: -100, y: 50, name: \"list1\") property(List) list1_789\n        in(x: -100, y: 100, name: \"list2\") property(List) list2_789\n\n        out(x: 300, y: 50, name: \"dissimilarElements\") property(List) dissimilarElements_789\n\n        instance(x: -40, y: 50) differenceList1_6b2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -40, y: 100) differenceList2_6b2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_789 -> differenceList1_6b2.left\n        list2_789 -> differenceList1_6b2.right\n\n        list2_789 -> differenceList2_6b2.left\n        list1_789 -> differenceList2_6b2.right\n\n        differenceList1_6b2.difference -> dissimilarElements_789\n        differenceList2_6b2.difference -> dissimilarElements_789 root.Std_k98ojb.List.Concat {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8f6d7a\n        in(x: -154, y: 239, name: \"rotateBy\") property(Number) rotateBy_6c4e2b\n\n        out(x: 244, y: 203, name: \"output\") property(List) data_0_0\n        instance(x: -158, y: 75) length_9a4f4d root.Std_k98ojb.List.Length {}\n        instance(x: -160, y: 112) modulo_e3c2e5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -158, y: 147) generateRange_9f5dfe root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -160, y: 183) slice_d2eacf root.Std_k98ojb.List.Slice {}\n        instance(x: -158, y: 220) concat_4f7a9d root.Std_k98ojb.List.Concat {}\n\n        list_8f6d7a -> length_9a4f4d.list\n        rotateBy_6c4e2b -> modulo_e3c2e5.value\n        length_9a4f4d.length -> modulo_e3c2e5.divisor\n        modulo_e3c2e5.result -> generateRange_9f5dfe.from\n        0 -> generateRange_9f5dfe.to\n        generateRange_9f5dfe.list -> slice_d2eacf.start\n        list_8f6d7a -> slice_d2eacf.list\n        modulo_e3c2e5.result -> slice_d2eacf.end\n        -1 -> slice_d2eacf.end\n        slice_d2eacf.restOfList -> concat_4f7a9d.right\n        list_8f6d7a -> concat_4f7a9d.left\n        concat_4f7a9d.result -> data_0_0\n    }\n\n    \n\n    instance(x: -154, y: 273) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"List.IsEmpty(array)\"\n        }\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        1 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.n_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_digits_96023e.execute_cdac2a\n        sum_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        array_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n\n        instance(x: 29, y: -12) reduce_5eacf5 root.Std_k98ojb.Iteration.Reduce {\n            in(x: 45, y: -12, name: \"items\") property(List) items_3d7de6\n            in(x: 105, y: -12, name: \"context\") property(Number) context_3d7de6\n            out(x: 189, y: -12, name: \"output_list\") property(Number) output_list_3d7de6\n\n            instance(x: 45, y: -12) add_0 root.Std_k98ojb.Math.Add {\n                in(x: 45, y: -12, name: \"first\") property(Number) first_add\n                in(x: 45, y: -12, name: \"second\") property(Number) second_add\n\n                out(x: 45, y: -12, name: \"result\") property(Number) result_add\n            }\n\n            items_3d7de6 -> add_0.first\n            context_3d7de6 -> add_0.second\n            add_0.result -> output_list_3d7de6\n        }\n    }\n\n    instance(x: -176, y: -38) sum_array_5eacf5 root.main.sum_array {\n        array_6b655b -> reduce_5eacf5.items_3d7de6\n        0 -> reduce_5eacf5.context_3d7de6\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) div_b4554f root.Std_k98ojb.Math.Div {}\n        instance(x: 1121, y: -54) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> for_8cb3f6.from\n        List.GenerateRange(2, input_f5c03d) -> for_8cb3f6.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            div_b4554f.result -> if_07b8c7.predicate\n            element_5f51f7 -> div_b4554f.first\n            input_f5c03d -> div_b4554f.second\n            \n            for_8cb3f6.item -> if_e19a62.left\n            1 -> if_e19a62.right\n\n            if_e19a62.result -> if_07b8c7.value\n        } -> for_8cb3f6.onItem\n        \n        for_8cb3f6.done -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        if_07b8c7.value -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.then -> continue_8ba06b\n    }\n}\n\ninstance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -149, name: \"num1\") property(Number) num1_5b8d2e\n        in(x: 367, y: 115, name: \"num2\") property(Number) num2_d6f5a9\n\n        instance(x: 0, y: -49) expression_5c3072 root.Std_k98ojb.Math.Expression {\n            expression: \"num1 * num2 < 0\"\n        }\n        num1_5b8d2e -> expression_5c3072.gen_0\n        num2_d6f5a9 -> expression_5c3072.gen_1\n    }"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -248, y: 350, name: \"input_number\") property(Number) input_number_f7f9a6\n        out(x: -248, y: 550, name: \"isDivisibleByEleven\") property(Bool) is_divisible_by_11_c8e9b2\n\n        instance(x: -313, y: 420) modulo_7f6d8a root.Std_k98ojb.Math.Modulo {}\n        input_number_f7f9a6 -> modulo_7f6d8a.value\n        11 -> modulo_7f6d8a.divisor\n        modulo_7f6d8a.result -> is_divisible_by_11_c8e9b2\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 150, name: \"searchChar\") property(String) searchChar_0\n        in(x: -230, y: 300, name: \"replaceChar\") property(String) replaceChar_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        searchChar_0 -> replace_306f69.search\n        replaceChar_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 411, y: 30) property(String) output_ai\n\n    instance(x: 189, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_7b3b7b.input\n    tolower_7b3b7b.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -320, y: 145, name: \"numbers\") property(List) inputList_ai\n        out(x: 67, y: 145, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -89, y: 145) removeDuplicates_23d0a root.std.List {\n            operation: \"Remove Duplicates\"\n        }\n        inputList_ai -> removeDuplicates_23d0a.list\n        removeDuplicates_23d0a.result -> reduceNode_7b3b7b.initial\n\n        instance(x: -89, y: 165) reduceNode_7b3b7b root.std.Iteration.Reduce {\n            operation: \"Multiply\"\n            initialValue: 1\n        }\n        removeDuplicates_23d0a.result -> reduceNode_7b3b7b.items\n\n        instance(x: -89, y: 185) mathMul_4c6f root.std.Math.Mul {\n        }\n        reduceNode_7b3b7b.accumulatedValue -> mathMul_4c6f.first\n        reduceNode_7b3b7b.itemBeingAccumulated -> mathMul_4c6f.second\n\n        mathMul_4c6f.result -> reduceNode_7b3b7b.nextAccumulatedValue\n\n        reduceNode_7b3b7b.result -> outputProduct_ai\n    }\n\n    instance(x: -10, y: 125) uniqueProduct_node root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") findDissimilar {\n        in(x: -120, y: 30, name: \"list1\") property(List) list1_879de6\n        in(x: -120, y: 90, name: \"list2\") property(List) list2_879de6\n\n        out(x: 441, y: -72, name: \"dissimilarElements\") property(List) dissimilarElements_879de6\n        \n        instance(x: -30, y: 30) differenceList1_5b3a6c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -30, y: 90) differenceList2_5b3a6c root.Std_k98ojb.Sets.Difference {}\n\n        list1_879de6 -> differenceList1_5b3a6c.left\n        list2_879de6 -> differenceList1_5b3a6c.right\n        list2_879de6 -> differenceList2_5b3a6c.left\n        list1_879de6 -> differenceList2_5b3a6c.right\n\n        differenceList1_5b3a6c.difference -> dissimilarElements_879de6\n        differenceList2_5b3a6c.difference -> dissimilarElements_879de6 root.Std_k98ojb.List.Concat {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -142, y: 30, name: \"list\") property(List) list_8f5bdf\n        in(x: -169, y: -71, name: \"rotateBy\") property(Number) rotateBy_6a2e0d\n\n        out(x: 248, y: 30, name: \"output\") property(List) data_0_0\n\n        instance(x: 54, y: -92) count_1f7bdc root.Std_k98ojb.Std.Count {}\n        instance(x: 64, y: -17) for_2a3e0d root.Std_k98ojb.Std.For {}\n        setter(x: 245, y: -161, name: \"setter_7f5c7a\") setter_7f5c7a = rotatedList\n        getter(x: 245, y: -230, name: \"getter_b9d8e2\") getter_b9d8e2 = rotatedList\n        instance(x: 161, y: -16) slice_7f5c7a root.Std_k98ojb.List.Slice {}\n        setter(x: 463, y: -104, name: \"setter_0\") setter_0 = listToRotate\n        getter(x: 245, y: -110, name: \"getter_0\") getter_0 = listToRotate\n\n        count_1f7bdc.reset -> for_2a3e0d.reset\n        rotateBy_6a2e0d -> count_1f7bdc.count\n        setter_0.new_value -> slice_7f5c7a.end\n        getter_b9d8e2.value -> data_0_0\n        list_8f5bdf -> for_2a3e0d.items\n        0 -> slice_7f5c7a.start\n        count_1f7bdc.count -> setter_0.execute\n        for_2a3e0d.onItem -> setter_0.execute\n        getter_0.value -> setter_7f5c7a.new_value\n        for_2a3e0d.done -> slice_7f5c7a.trigger\n    }\n\n    \n\n    instance(x: -164, y: 9) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_3a7e8d\n        in(x: -436, y: -213, name: \"array\") property(List) array_9bddd9\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_5c0a3e\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_b8d4b4\n\n        instance(x: 80, y: -417) ifexpression_aebf6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"array.length == 0\"\n        }\n        instance(x: 325, y: -378) sum_7d9a1e root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 90, y: -127) first_item_5f3d8c root.Std_k98ojb.List.FirstItem {}\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        instance(x: -202, y: -236) reduce_9d4b9a root.Std_k98ojb.Iteration.Reduce {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_aebf6c.execute\n        ifexpression_aebf6c.then -> continue_5c0a3e\n        execute_3a7e8d -> setter_41e4ad.execute\n        ifexpression_aebf6c.else -> reduce_9d4b9a.execute_cdac2a\n        array_9bddd9 -> first_item_5f3d8c.list\n        first_item_5f3d8c.item -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> continue_5c0a3e\n        reduce_9d4b9a.output_list -> getter_38583a.sum\n        getter_38583a.value -> output_b8d4b4\n        array_9bddd9 -> reduce_9d4b9a.items\n        0 -> setter_375321.new_value\n        setter_375321.continue -> sum_7d9a1e.execute\n        reduce_9d4b9a.index -> setter_375321.context\n        reduce_9d4b9a.item -> sum_7d9a1e.first\n        setter_375321.new_value -> sum_7d9d08.second\n        sum_7d9d08.result -> reduce_9d4b9a.context\n        sum_7d9a1e.result -> reduce_9d4b9a.continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) for_6030c9 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) div_b4554f root.Std_k98ojb.Math.Div {}\n        instance(x: 1361, y: -198) equal_8e7a5d root.Std_k98ojb.Logic.Equal {}\n\n        input_f5c03d -> for_6030c9.from\n        2 -> for_6030c9.to\n        for_6030c9.item -> div_b4554f.first\n        input_f5c03d -> div_b4554f.second\n        div_b4554f.result -> if_07b8c7.input\n        1 -> equal_8e7a5d.left\n        if_07b8c7.value -> equal_8e7a5d.right\n        equal_8e7a5d.output -> if_07b8c7.predicate\n\n        for_6030c9.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        execute_27b8c3 -> for_6030c9.reset\n        for_6030c9.next -> continue_8ba06b\n    }\n}\n\ninstance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8b0dce\n        in(x: 789, y: -101, name: \"num2\") property(Number) num2_7f3a2c\n\n        out(x: 321, y: 654, name: \"output\") property(Bool) output_6b4d5e\n\n        instance(x: 987, y: -321) ifexpression_70bddd root.Std_k98ojb.Std.IfExpression {\n            expression: \"num1 < 0 && num2 > 0 || num1 > 0 && num2 < 0\"\n        }\n        num1_8b0dce -> ifexpression_70bddd.gen_0\n        num2_7f3a2c -> ifexpression_70bddd.gen_1\n        ifexpression_70bddd.value -> output_6b4d5e\n    }\n\n    \n\n    instance(x: 98, y: -12) check_opposite_signs_6b4d5e root.main.check_opposite_signs {\n        num1: -3\n        num2: 5\n    }\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -20, y: 348, name: \"input\") property(Number) input_number\n        out(x: 67, y: -59, name: \"output\") property(Bool) output_result\n\n        instance(x: -10, y: 150) modulo_eeb2a4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 130, y: -67) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        input_number -> modulo_eeb2a4.value\n        11 -> modulo_eeb2a4.divisor\n        modulo_eeb2a4.result -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> output_result\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_6b7d5e\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_b3f2a0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 400, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        oldChar_6b7d5e -> replace_306f69.search\n        newChar_b3f2a0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9f3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9f3b7b.input\n    tolower_9f3b7b.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -340, y: 215, name: \"inputList\") property(List) inputList_ai\n        out(x: 367, y: 218, name: \"product\") property(Number) product_ai\n\n        instance(x: -192, y: 216) unique_4d0a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 35, y: 217) reduce_7e9c root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"Math.Mul.result(first, second)\"\n        }\n\n        inputList_ai -> unique_4d0a.items\n        unique_4d0a.output_list -> reduce_7e9c.item\n        reduce_7e9c.result -> product_ai\n\n    }\n    \n    instance(x: -152, y: 36) uniqueProduct_node root.main.UniqueProduct {\n        inputList: [2, 3, 3, 4, 5]\n    }\n\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9b8a\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_fadee9\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7f3d6b\n\n        instance(x: -18, y: 246) difference_5c4a7a root.Std_k98ojb.Sets.Difference {}\n        list1_3d9b8a -> difference_5c4a7a.left\n        list2_fadee9 -> difference_5c4a7a.right\n\n        instance(x: 60, y: 246) reverseDifference_bf2dcb root.Std_k98ojb.Sets.Difference {}\n        list2_fadee9 -> reverseDifference_bf2dcb.left\n        list1_3d9b8a -> reverseDifference_bf2dcb.right\n\n        instance(x: 150, y: 246) concat_7c9b6a root.Std_k98ojb.List.Concat {}\n        difference_5c4a7a.difference -> concat_7c9b6a.left\n        reverseDifference_bf2dcb.difference -> concat_7c9b6a.right\n\n        concat_7c9b6a.list -> output_7f3d6b\n    }\n\n    \n\n    instance(x: 405, y: -186) FindDissimilar_33ad55 root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8bddd4\n        in(x: -169, y: 274, name: \"rotate_by\") property(Number) rotateBy_7d9f5a\n\n        out(x: 244, y: 203, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -168, y: 128) generateRange_7bddd9 root.Std_k98ojb.List.GenerateRange {\n            from: 0,\n            to: rotateBy_7d9f5a\n        }\n        instance(x: 34, y: 128) slice_6c4e4a root.Std_k98ojb.List.Slice {}\n        instance(x: -168, y: 36) generateRange_0bddd9 root.Std_k98ojb.List.GenerateRange {\n            from: rotateBy_7d9f5a,\n            to: listLength_2c4e4a\n        }\n        instance(x: 34, y: 36) slice_1c4e4a root.Std_k98ojb.List.Slice {}\n        instance(x: 108, y: 128) concat_7d5f5a root.Std_k98ojb.List.Concat {}\n        instance(x: 108, y: 36) concat_0d5f5a root.Std_k98ojb.List.Concat {}\n        listLength_2c4e4a.value -> slice_6c4e4a.end\n        rotateBy_7d9f5a -> generateRange_7bddd9.to\n        list_8bddd4 -> slice_1c4e4a.list\n        listLength_2c4e4a.value -> slice_1c4e4a.end\n        rotateBy_7d9f5a -> slice_6c4e4a.start\n        generateRange_0bddd9.to -> slice_1c4e4a.start\n        list_8bddd4 -> slice_6c4e4a.list\n        concat_0d5f5a.result -> data_0_0\n        rotateBy_7d9f5a -> generateRange_0bddd9.from\n        listLength_2c4e4a.value -> generateRange_0bddd9.to\n        slice_1c4e4a.listWithEnd -> concat_0d5f5a.right\n        listLength_2c4e4a.value -> slice_6c4e4a.end\n        rotateBy_7d9f5a -> generateRange_7bddd9.from\n        list_8bddd4 -> slice_6c4e4a.list\n        concat_7d5f5a.result -> concat_0d5f5a.left\n        slice_6c4e4a.listWithEnd -> concat_7d5f5a.right\n    }\n\n    \n\n    func(doc: \"Gets the length of a list.\") get_list_length {\n        in(x: -198, y: 23) property(List) list_0bddd4\n\n        out(x: 264, y: 23, name: \"length\") property(Number) data_0_0\n        instance(x: -197, y: -52) length_2c4e4a root.Std_k98ojb.List.Length {}\n        list_0bddd4 -> length_2c4e4a.list\n    }\n\n    \n\n    func(doc: \"Main function to test the rotate_list functionality.\") main {\n        in(x: -167, y: 35) property(List) list_8bddd4\n        in(x: -169, y: 102) property(Number) rotateBy_7d9f5a\n\n        out(x: 244, y: 35, name: \"rotated_list\") property(List) data_0_0\n        getter(x: -184, y: 169, name: \"getter_e808a2\") getter_e808a2 = listLength\n        instance(x: -170, y: 53) rotate_list_def9ac root.main.rotate_list {}\n        setter(x: 244, y: 102, name: \"setter_6d5f5a\") setter_6d5f5a = rotatedList\n        getter_e808a2.value -> rotate_list_def9ac.listLength\n        list_8bddd4 -> rotate_list_def9ac.list\n        rotateBy_7d9f5a -> rotate_list_def9ac.rotateBy\n        rotate_list_def9ac.rotated_list -> setter_6d5f5a.new_value\n    }\n\n    \n\n    instance(x: -230, y: 14) main_def9ac root.main.main {}\n    instance(x: -238, y: -74) get_list_length_ebddd4 root.main.get_list_length {}\n    instance(x: -256, y: -14) rotate_list_edef9a root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -156, name: \"num1\") property(Number) num1_2b4d9e\n        in(x: 38, y: 173, name: \"num2\") property(Number) num2_ea9f7c\n\n        out(x: 306, y: -58, name: \"output\") property(Bool) output_6b4d9e\n\n        instance(x: 285, y: 137) ifexpression_6b4d9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num1 * num2 < 0\"\n        }\n        ifexpression_6b4d9e.value -> output_6b4d9e\n        num1_2b4d9e -> ifexpression_6b4d9e.num1\n        num2_ea9f7c -> ifexpression_6b4d9e.num2\n    }"
            ],
            "3": [
                "func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -24, y: 36, name: \"input\") property(Number) input_f5c03d\n        out(x: -79, y: -85, name: \"output\") property(Bool) output_8ba06b\n\n        instance(x: -111, y: 24) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> output_8ba06b\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of a specific character with another one.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 150, name: \"searchChar\") property(String) searchChar_0\n        in(x: -230, y: 300, name: \"replaceChar\") property(String) replaceChar_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        searchChar_0 -> replace_306f69.search\n        replaceChar_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -143, y: 25) property(String) input_ai\n    out(x: 307, y: 25) property(String) output_ai\n\n    instance(x: 89, y: 24) tolower_6b0e0d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_6b0e0d.input\n    tolower_6b0e0d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -450, y: 216, name: \"inputList\") property(List) inputList_ai\n        out(x: 370, y: 89, name: \"product\") property(Number) product_ai\n\n        instance(x: 150, y: 216) removeDuplicates_4d5e {\n            list: inputList_ai\n        }\n        \n        instance(x: 150, y: 376) mapToProduct_8b9c {\n            items: removeDuplicates_4d5e.result\n            handler: \"it\"\n        }\n\n        instance(x: 150, y: 526) reduceProduct_abc {\n            item: mapToProduct_8b9c.output_list\n            handler: \"acc * it\"\n            initial: 1\n        }\n        \n        reduceProduct_abc.result -> product_ai\n\n    }\n\n    instance(x: -34, y: 127) uniqueProduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") findDissimilarElements {\n        in(x: -100, y: 50, name: \"list1\") property(List) list1_789\n        in(x: -100, y: 100, name: \"list2\") property(List) list2_789\n\n        out(x: 300, y: 50, name: \"dissimilarElements\") property(List) dissimilarElements_789\n\n        instance(x: -40, y: 50) differenceList1_6b2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -40, y: 100) differenceList2_6b2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_789 -> differenceList1_6b2.left\n        list2_789 -> differenceList1_6b2.right\n\n        list2_789 -> differenceList2_6b2.left\n        list1_789 -> differenceList2_6b2.right\n\n        differenceList1_6b2.difference -> dissimilarElements_789\n        differenceList2_6b2.difference -> dissimilarElements_789 root.Std_k98ojb.List.Concat {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8f2d4a\n        in(x: -167, y: 239, name: \"rotateBy\") property(Number) rotateBy_b5bddd\n\n        out(x: 241, y: 203, name: \"output\") property(List) data_0_0\n\n        instance(x: -88, y: 67) length_7c9f6d root.Std_k98ojb.List.Length {}\n        instance(x: 152, y: 41) modulo_d3a2e5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -100, y: 157) slice_5f6dce root.Std_k98ojb.List.Slice {}\n        instance(x: 152, y: 141) concat_3c4a8e root.Std_k98ojb.List.Concat {}\n\n        list_8f2d4a -> length_7c9f6d.list\n        rotateBy_b5bddd -> modulo_d3a2e5.value\n        length_7c9f6d.length -> modulo_d3a2e5.divisor\n        list_8f2d4a -> slice_5f6dce.list\n        0 -> slice_5f6dce.start\n        modulo_d3a2e5.result -> slice_5f6dce.end\n        list_8f2d4a -> concat_3c4a8e.right\n        slice_5f6dce.rest -> concat_3c4a8e.left\n        concat_3c4a8e.result -> data_0_0\n    }\n\n    \n\n    instance(x: -179, y: 29) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"List.IsEmpty(array)\"\n        }\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        1 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.n_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_digits_96023e.execute_cdac2a\n        sum_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        array_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n\n        instance(x: 97, y: -24) reduce_5eacf4 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"add(left, right)\"\n        }\n        array_6b655b -> reduce_5eacf4.items\n        0 -> setter_375321.new_value\n        execute_cdac2a -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) div_b4554f root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> for_8cb3f6.from\n        List.GenerateRange(2, input_f5c03d + 1).list -> for_8cb3f6.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) div_2f9d09 root.Std_k98ojb.Math.Div {}\n            element_5f51f7 -> div_2f9d09.first\n            input_f5c03d -> div_2f9d09.second\n\n            div_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n\n        for_8cb3f6.item -> if_07b8c7.predicate\n        1 -> if_07b8c7.value\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.onItem -> if_07b8c7.execute\n\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        if_07b8c7.then -> out_f3db9f\n        true -> out_f3db9f\n    }\n}\n\ninstance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -149, name: \"num1\") property(Number) num1_5b8d2e\n        in(x: 367, y: 115, name: \"num2\") property(Number) num2_d6f5a9\n\n        instance(x: 0, y: -47) sign_num1_2c97aa root.Std_k98ojb.Math.GreaterThan {\n            left: num1_5b8d2e\n            right: root.Std_k98ojb.Math.Expression { expression: \"0\" }.result\n        }\n        instance(x: 36, y: -4) sign_num2_7c0a5f root.Std_k98ojb.Math.LessThanOrEqual {\n            left: num2_d6f5a9\n            right: root.Std_k98ojb.Math.Expression { expression: \"0\" }.result\n        }\n        instance(x: 13, y: -4) opposite_signs_7d1c4e root.Std_k98ojb.Logic.And {\n            left: sign_num1_2c97aa.input\n            right: sign_num2_7c0a5f.input\n        }\n        instance(x: 163, y: -1) opposite_signs_2d7e45 root.Std_k98ojb.Logic.And {\n            left: sign_num1_2c97aa.not_input\n            right: sign_num2_7c0a5f.not_input\n        }\n        instance(x: 36, y: -2) final_check_6d1e4d root.Std_k98ojb.Logic.Or {\n            left: opposite_signs_7d1c4e.input\n            right: opposite_signs_2d7e45.input\n        }\n\n        sign_num1_2c97aa.not_input -> opposite_signs_2d7e45.left\n        num1_5b8d2e -> sign_num1_2c97aa.left\n        num2_d6f5a9 -> sign_num2_7c0a5f.left\n        sign_num2_7c0a5f.not_input -> opposite_signs_2d7e45.right\n        sign_num1_2c97aa.input -> opposite_signs_7d1c4e.left\n        sign_num2_7c0a5f.input -> opposite_signs_7d1c4e.right\n        opposite_signs_7d1c4e.input -> final_check_6d1e4d.left\n        opposite_signs_2d7e45.input -> final_check_6d1e4d.right\n\n        out(x: 308, y: -9) output_9b8d2e root.Std_k98ojb.Logic.Or { left: final_check_6d1e4d.input } .input\n    }\n\n    \n\n    instance(x: 257, y: 121) check_opposite_sign_3c0a5f root.main.check_opposite_sign {\n        num1: -10\n        num2: 5\n    }"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -248, y: 350, name: \"input_number\") property(Number) input_number_f7f9a6\n        out(x: -248, y: 550, name: \"isDivisibleByEleven\") property(Bool) is_divisible_by_11_c5e9b6\n\n        instance(x: -380, y: 485) modulo_7f5d5c root.Std_k98ojb.Math.Modulo {}\n        input_number_f7f9a6 -> modulo_7f5d5c.value\n        11 -> modulo_7f5d5c.divisor\n        modulo_7f5d5c.result -> is_divisible_by_11_c5e9b6\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 150, name: \"searchChar\") property(String) searchChar_0\n        in(x: -230, y: 300, name: \"replaceChar\") property(String) replaceChar_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        searchChar_0 -> replace_306f69.search\n        replaceChar_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 411, y: 30) property(String) output_ai\n\n    instance(x: 189, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_7b3b7b.input\n    tolower_7b3b7b.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -320, y: 145, name: \"numbers\") property(List) inputList_ai\n        out(x: 67, y: 145, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -89, y: 145) removeDuplicates_23d0a root.std.List {\n            operation: \"Remove Duplicates\"\n        }\n        inputList_ai -> removeDuplicates_23d0a.list\n        removeDuplicates_23d0a.result -> reduceNode_7b3b7b.initial\n\n        instance(x: -89, y: 165) reduceNode_7b3b7b root.std.Iteration.Reduce {\n            operation: \"Multiply\"\n            initialValue: 1\n        }\n        removeDuplicates_23d0a.result -> reduceNode_7b3b7b.items\n\n        instance(x: -89, y: 185) mathMul_4c6f root.std.Math.Mul {\n        }\n        reduceNode_7b3b7b.accumulatedValue -> mathMul_4c6f.first\n        reduceNode_7b3b7b.itemBeingAccumulated -> mathMul_4c6f.second\n\n        mathMul_4c6f.result -> reduceNode_7b3b7b.nextAccumulatedValue\n\n        reduceNode_7b3b7b.result -> outputProduct_ai\n    }\n\n    instance(x: -10, y: 125) uniqueProduct_node root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") findDissimilar {\n        in(x: -120, y: 30, name: \"list1\") property(List) list1_879de6\n        in(x: -120, y: 90, name: \"list2\") property(List) list2_879de6\n\n        out(x: 441, y: -72, name: \"dissimilarElements\") property(List) dissimilarElements_879de6\n        \n        instance(x: -30, y: 30) differenceList1_5b2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -30, y: 90) differenceList2_5b2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_879de6 -> differenceList1_5b2.left\n        list2_879de6 -> differenceList1_5b2.right\n        \n        list2_879de6 -> differenceList2_5b2.left\n        list1_879de6 -> differenceList2_5b2.right\n\n        differenceList1_5b2.difference -> dissimilarElements_879de6\n        differenceList2_5b2.difference -> Iteration_k98ojb.Map {\n            in(x: 0, y: -30) handler_4e0 root.Std_k98ojb.Iteration.Map {}\n            \n            instance(x: 120, y: 30) concat_7f6 root.Std_k98ojb.List.Concat {}\n                differenceList2_5b2.difference -> concat_7f6.list\n                handler_4e0.output_list -> concat_7f6.list\n            \n            handler_4e0.items -> concat_7f6.list\n            concat_7f6.listWithItem -> dissimilarElements_879de6\n        }\n    }\n\n    \n\n    instance(x: 250, y: -186) findDissimilar_33ad55 root.findDissimilar.findDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -142, y: 30, name: \"list\") property(List) list_8f5b6a\n        in(x: -142, y: -79, name: \"rotateBy\") property(Number) rotateBy_3d0c9e\n\n        out(x: 183, y: 30, name: \"output\") property(List) data_0_0\n\n        instance(x: -65, y: -24) length_7f9bfa root.Std_k98ojb.List.Length {}\n        instance(x: 183, y: -124) slice_4c9d3a root.Std_k98ojb.List.Slice {}\n        instance(x: 183, y: -56) concat_70f4e2 root.Std_k98ojb.List.Concat {}\n\n        list_8f5b6a -> length_7f9bfa.list\n        rotateBy_3d0c9e -> slice_4c9d3a.start\n        list_8f5b6a -> slice_4c9d3a.list\n        length_7f9bfa.length -> slice_4c9d3a.end\n        rotateBy_3d0c9e -> concat_70f4e2.right\n        slice_4c9d3a.restOfList -> concat_70f4e2.left\n        concat_70f4e2.result -> data_0_0\n    }\n\n    \n\n    instance(x: -186, y: 15) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -104, y: 325, name: \"items\") property(List) items_0e8d1b\n        out(x: 739, y: 65, name: \"output\") property(Number) output_ea4c9f\n\n        instance(x: 111, y: -112) reduce_2ce72c root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n            handler: add_63d5e5\n        }\n        instance(x: 493, y: -123) add_63d5e5 root.Std_k98ojb.Math.Add {}\n        items_0e8d1b -> reduce_2ce72c.items\n        reduce_2ce72c.output_list -> output_ea4c9f\n        1 -> add_63d5e5.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) for_6030c9 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) div_b4554f root.Std_k98ojb.Math.Div {}\n        instance(x: 1361, y: -190) equal_8e7a6d root.Std_k98ojb.Logic.Equal {}\n\n        input_f5c03d -> for_6030c9.from\n        2 -> for_6030c9.to\n        for_6030c9.item -> div_b4554f.first\n        input_f5c03d -> div_b4554f.second\n        div_b4554f.result -> if_07b8c7.left\n        1 -> if_07b8c7.right\n        if_07b8c7.predicate -> for_6030c9.next\n        for_6030c9.done -> continue_8ba06b\n        execute_27b8c3 -> for_6030c9.reset\n\n        div_b4554f.result -> equal_8e7a6d.left\n        1 -> equal_8e7a6d.right\n        equal_8e7a6d.result -> if_07b8c7.predicate\n        for_6030c9.done -> out_f3db9f\n        false -> out_f3db9f\n    }\n}\n\ninstance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8b0dce\n        in(x: 789, y: -101, name: \"num2\") property(Number) num2_8b0dce\n\n        out(x: 321, y: 654, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 203, y: -192) ifexpression_7f3e2a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num1 * num2 < 0\"\n        }\n        ifexpression_7f3e2a.value -> output_a2b59d\n        num1_8b0dce -> ifexpression_7f3e2a.gen_0\n        num2_8b0dce -> ifexpression_7f3e2a.gen_1\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -20, y: 348, name: \"input\") property(Number) input_number\n        out(x: 67, y: -59, name: \"output\") property(Bool) output_result\n\n        instance(x: -10, y: 150) modulo_eeb2a4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 130, y: -67) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        input_number -> modulo_eeb2a4.value\n        11 -> modulo_eeb2a4.divisor\n        modulo_eeb2a4.result -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> output_result\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_6b7d5e\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_b3f2a0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 400, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        oldChar_6b7d5e -> replace_306f69.search\n        newChar_b3f2a0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9f3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9f3b7b.input\n    tolower_9f3b7b.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -340, y: 215, name: \"inputList\") property(List) inputList_ai\n        out(x: 367, y: 218, name: \"product\") property(Number) product_ai\n\n        instance(x: -192, y: 216) unique_4d0a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 35, y: 217) reduce_7e9c root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"Math.Mul.result(first, second)\"\n        }\n\n        inputList_ai -> unique_4d0a.items\n        unique_4d0a.output_list -> reduce_7e9c.item\n        reduce_7e9c.result -> product_ai\n\n    }\n    \n    instance(x: -152, y: 36) uniqueProduct_node root.main.UniqueProduct {\n        inputList: [2, 3, 3, 4, 5]\n    }\n\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9b8a\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_fadee9\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7f3d6b\n\n        instance(x: -18, y: 246) difference_5c4a7a root.Std_k98ojb.Sets.Difference {}\n        list1_3d9b8a -> difference_5c4a7a.left\n        list2_fadee9 -> difference_5c4a7a.right\n\n        instance(x: 60, y: 246) reverseDifference_bf2dcb root.Std_k98ojb.Sets.Difference {}\n        list2_fadee9 -> reverseDifference_bf2dcb.left\n        list1_3d9b8a -> reverseDifference_bf2dcb.right\n\n        instance(x: 150, y: 246) concat_7c9b6a root.Std_k98ojb.List.Concat {}\n        difference_5c4a7a.difference -> concat_7c9b6a.left\n        reverseDifference_bf2dcb.difference -> concat_7c9b6a.right\n\n        concat_7c9b6a.list -> output_7f3d6b\n    }\n\n    \n\n    instance(x: 405, y: -186) FindDissimilar_33ad55 root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8bddd4\n        in(x: -169, y: 274, name: \"rotate_by\") property(Number) rotateBy_7d9f5a\n\n        out(x: 244, y: 203, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -168, y: 128) generateRange_7bddd9 root.Std_k98ojb.List.GenerateRange {\n            from: 0,\n            to: rotateBy_7d9f5a\n        }\n        instance(x: 34, y: 128) slice_6c4e4a root.Std_k98ojb.List.Slice {}\n        instance(x: -168, y: 36) generateRange_09d967 root.Std_k98ojb.List.GenerateRange {\n            from: rotateBy_7d9f5a,\n            to: listLength_2e4cdd\n        }\n        instance(x: 34, y: 36) slice_1f306b root.Std_k98ojb.List.Slice {}\n        instance(x: -168, y: 70) concat_5d9aeb root.Std_k98ojb.List.Concat {}\n        getter(x: -204, y: 203, name: \"getter_e808a2\") getter_e808a2 = listLength\n        getter(x: -168, y: 5) getter_7d9f5a = rotateBy\n        getter(x: -204, y: 274, name: \"getter_c18a69\") getter_c18a69 = list\n        getter_e808a2.value -> listLength_2e4cdd\n        getter_c18a69.value -> slice_6c4e4a.list\n        generateRange_7bddd9.result -> slice_6c4e4a.start\n        0 -> slice_6c4e4a.end\n        getter_e808a2.value -> listLength_5d9aeb\n        rotateBy_7d9f5a -> generateRange_09d967.from\n        getter_c18a69.value -> slice_1f306b.list\n        generateRange_09d967.result -> slice_1f306b.start\n        listLength_2e4cdd -> slice_1f306b.end\n        slice_6c4e4a.restOfList -> concat_5d9aeb.right\n        slice_1f306b.slice -> concat_5d9aeb.left\n        concat_5d9aeb.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -156, name: \"num1\") property(Number) num1_2b4d9e\n        in(x: 38, y: 173, name: \"num2\") property(Number) num2_ea9f7c\n\n        out(x: 306, y: -58, name: \"output\") property(Bool) output_6b4d9e\n\n        instance(x: 285, y: 137) ifexpression_6b4d9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num1 * num2 < 0\"\n        }\n        ifexpression_6b4d9e.value -> output_6b4d9e\n        num1_2b4d9e -> ifexpression_6b4d9e.num1\n        num2_ea9f7c -> ifexpression_6b4d9e.num2\n    }"
            ],
            "3": [
                "func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -24, y: 36, name: \"input\") property(Number) input_f5c03d\n        out(x: -79, y: -85, name: \"output\") property(Bool) output_8ba06b\n\n        instance(x: -111, y: 24) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> output_8ba06b\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of a specific character with another one.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 150, name: \"searchChar\") property(String) searchChar_0\n        in(x: -230, y: 300, name: \"replaceChar\") property(String) replaceChar_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        searchChar_0 -> replace_306f69.search\n        replaceChar_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -143, y: 25) property(String) input_ai\n    out(x: 307, y: 25) property(String) output_ai\n\n    instance(x: 89, y: 24) tolower_6b0e0d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_6b0e0d.input\n    tolower_6b0e0d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -450, y: 216, name: \"inputList\") property(List) inputList_ai\n        out(x: 370, y: 89, name: \"product\") property(Number) product_ai\n\n        instance(x: 150, y: 216) removeDuplicates_4d5e {\n            list: inputList_ai\n        }\n        \n        instance(x: 150, y: 376) mapToProduct_8b9c {\n            items: removeDuplicates_4d5e.result\n            handler: \"it\"\n        }\n\n        instance(x: 150, y: 526) reduceProduct_abc {\n            item: mapToProduct_8b9c.output_list\n            handler: \"acc * it\"\n            initial: 1\n        }\n        \n        reduceProduct_abc.result -> product_ai\n\n    }\n\n    instance(x: -34, y: 127) uniqueProduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") findDissimilarElements {\n        in(x: -100, y: 50, name: \"list1\") property(List) list1_789\n        in(x: -100, y: 100, name: \"list2\") property(List) list2_789\n\n        out(x: 300, y: 50, name: \"dissimilarElements\") property(List) dissimilarElements_789\n\n        instance(x: -40, y: 50) differenceList1_6b2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -40, y: 100) differenceList2_6b2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_789 -> differenceList1_6b2.left\n        list2_789 -> differenceList1_6b2.right\n\n        list2_789 -> differenceList2_6b2.left\n        list1_789 -> differenceList2_6b2.right\n\n        differenceList1_6b2.difference -> dissimilarElements_789\n        differenceList2_6b2.difference -> dissimilarElements_789 root.Std_k98ojb.List.Concat {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8f2d4a\n        in(x: -167, y: 239, name: \"rotateBy\") property(Number) rotateBy_b5bddd\n\n        out(x: 241, y: 203, name: \"output\") property(List) data_0_0\n\n        instance(x: -88, y: 67) length_7c9f6d root.Std_k98ojb.List.Length {}\n        instance(x: 152, y: 41) modulo_d3a2e5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -100, y: 157) slice_5f6dce root.Std_k98ojb.List.Slice {}\n        instance(x: 152, y: 141) concat_3c4a8e root.Std_k98ojb.List.Concat {}\n\n        list_8f2d4a -> length_7c9f6d.list\n        rotateBy_b5bddd -> modulo_d3a2e5.value\n        length_7c9f6d.length -> modulo_d3a2e5.divisor\n        list_8f2d4a -> slice_5f6dce.list\n        0 -> slice_5f6dce.start\n        modulo_d3a2e5.result -> slice_5f6dce.end\n        list_8f2d4a -> concat_3c4a8e.right\n        slice_5f6dce.rest -> concat_3c4a8e.left\n        concat_3c4a8e.result -> data_0_0\n    }\n\n    \n\n    instance(x: -179, y: 29) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"List.IsEmpty(array)\"\n        }\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        1 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.n_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_digits_96023e.execute_cdac2a\n        sum_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        array_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n\n        instance(x: 97, y: -24) reduce_5eacf4 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"add(left, right)\"\n        }\n        array_6b655b -> reduce_5eacf4.items\n        0 -> setter_375321.new_value\n        execute_cdac2a -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) div_b4554f root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> for_8cb3f6.from\n        List.GenerateRange(2, input_f5c03d + 1).list -> for_8cb3f6.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) div_2f9d09 root.Std_k98ojb.Math.Div {}\n            element_5f51f7 -> div_2f9d09.first\n            input_f5c03d -> div_2f9d09.second\n\n            div_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n\n        for_8cb3f6.item -> if_07b8c7.predicate\n        1 -> if_07b8c7.value\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.onItem -> if_07b8c7.execute\n\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        if_07b8c7.then -> out_f3db9f\n        true -> out_f3db9f\n    }\n}\n\ninstance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -149, name: \"num1\") property(Number) num1_5b8d2e\n        in(x: 367, y: 115, name: \"num2\") property(Number) num2_d6f5a9\n\n        instance(x: 0, y: -47) sign_num1_2c97aa root.Std_k98ojb.Math.GreaterThan {\n            left: num1_5b8d2e\n            right: root.Std_k98ojb.Math.Expression { expression: \"0\" }.result\n        }\n        instance(x: 36, y: -4) sign_num2_7c0a5f root.Std_k98ojb.Math.LessThanOrEqual {\n            left: num2_d6f5a9\n            right: root.Std_k98ojb.Math.Expression { expression: \"0\" }.result\n        }\n        instance(x: 13, y: -4) opposite_signs_7d1c4e root.Std_k98ojb.Logic.And {\n            left: sign_num1_2c97aa.input\n            right: sign_num2_7c0a5f.input\n        }\n        instance(x: 163, y: -1) opposite_signs_2d7e45 root.Std_k98ojb.Logic.And {\n            left: sign_num1_2c97aa.not_input\n            right: sign_num2_7c0a5f.not_input\n        }\n        instance(x: 36, y: -2) final_check_6d1e4d root.Std_k98ojb.Logic.Or {\n            left: opposite_signs_7d1c4e.input\n            right: opposite_signs_2d7e45.input\n        }\n\n        sign_num1_2c97aa.not_input -> opposite_signs_2d7e45.left\n        num1_5b8d2e -> sign_num1_2c97aa.left\n        num2_d6f5a9 -> sign_num2_7c0a5f.left\n        sign_num2_7c0a5f.not_input -> opposite_signs_2d7e45.right\n        sign_num1_2c97aa.input -> opposite_signs_7d1c4e.left\n        sign_num2_7c0a5f.input -> opposite_signs_7d1c4e.right\n        opposite_signs_7d1c4e.input -> final_check_6d1e4d.left\n        opposite_signs_2d7e45.input -> final_check_6d1e4d.right\n\n        out(x: 308, y: -9) output_9b8d2e root.Std_k98ojb.Logic.Or { left: final_check_6d1e4d.input } .input\n    }\n\n    \n\n    instance(x: 257, y: 121) check_opposite_sign_3c0a5f root.main.check_opposite_sign {\n        num1: -10\n        num2: 5\n    }"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -248, y: 350, name: \"input_number\") property(Number) input_number_f7f9a6\n        out(x: -248, y: 550, name: \"isDivisibleByEleven\") property(Bool) is_divisible_by_11_c5e9b6\n\n        instance(x: -380, y: 485) modulo_7f5d5c root.Std_k98ojb.Math.Modulo {}\n        input_number_f7f9a6 -> modulo_7f5d5c.value\n        11 -> modulo_7f5d5c.divisor\n        modulo_7f5d5c.result -> is_divisible_by_11_c5e9b6\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -145, y: 0, name: \"oldChar\") property(String) oldChar_0\n        in(x: -60, y: 0, name: \"newChar\") property(String) newChar_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 315, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        oldChar_0 -> replace_306f69.search\n        newChar_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 411, y: 30) property(String) output_ai\n\n    instance(x: 189, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_7b3b7b.input\n    tolower_7b3b7b.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -320, y: 145, name: \"numbers\") property(List) inputList_ai\n        out(x: 67, y: 145, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -89, y: 145) removeDuplicates_23d0a root.std.List {\n            operation: \"Remove Duplicates\"\n        }\n        inputList_ai -> removeDuplicates_23d0a.list\n        removeDuplicates_23d0a.result -> reduceNode_7b3b7b.initial\n\n        instance(x: -89, y: 165) reduceNode_7b3b7b root.std.Iteration.Reduce {\n            operation: \"Reduce\"\n            handler: \"mulHandler\"\n        }\n\n        func(doc:\"Multiply two numbers\") mulHandler {\n            in(x: -204, y: 189, name: \"acc\") property(Number) acc_ai\n            in(x: -204, y: 236, name: \"value\") property(Number) value_ai\n            out(x: 57, y: 189, name: \"result\") property(Number) result_ai\n\n            instance(x: -204, y: 208) mulNode_7b3b7b root.std.Math.Mul {}\n\n            acc_ai -> mulNode_7b3b7b.first\n            value_ai -> mulNode_7b3b7b.second\n            mulNode_7b3b7b.result -> result_ai\n        }\n\n        removeDuplicates_23d0a.result -> reduceNode_7b3b7b.items\n        reduceNode_7b3b7b.output -> outputProduct_ai\n    }\n    \n    instance(x: -189, y: 145) uniqueProduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") findDissimilar {\n        in(x: -120, y: 30, name: \"list1\") property(List) list1_879de6\n        in(x: -120, y: 90, name: \"list2\") property(List) list2_879de6\n\n        out(x: 441, y: -72, name: \"dissimilarElements\") property(List) dissimilarElements_879de6\n        \n        instance(x: -30, y: 30) differenceList1_5b2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -30, y: 90) differenceList2_5b2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_879de6 -> differenceList1_5b2.left\n        list2_879de6 -> differenceList1_5b2.right\n        \n        list2_879de6 -> differenceList2_5b2.left\n        list1_879de6 -> differenceList2_5b2.right\n\n        differenceList1_5b2.difference -> dissimilarElements_879de6\n        differenceList2_5b2.difference -> Iteration_k98ojb.Map {\n            handler: func(doc: \"map function to flatten the list\") mapHandler {\n                in(x: -30, y: 30) property(List) inputList_879de6\n\n                out(x: 441, y: -72, name: \"output\") property(List) outputList_879de6\n                \n                instance(x: -30, y: 30) flattenList_5b2 root.Std_k98ojb.List.Flatten {}\n                \n                inputList_879de6 -> flattenList_5b2.list\n                flattenList_5b2.flattened -> outputList_879de6\n            }\n        } {\n            items: differenceList2_5b2.difference\n        }.output_list\n\n    }\n\n    \n\n    instance(x: 425, y: -186) findDissimilarElements_33ad55 root.findDissimilar.findDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -142, y: 30, name: \"list\") property(List) list_8f5b6a\n        in(x: -142, y: -79, name: \"rotateBy\") property(Number) rotateBy_3d0c9e\n\n        out(x: 183, y: 30, name: \"output\") property(List) data_0_0\n\n        instance(x: -65, y: -24) length_7f9bfa root.Std_k98ojb.List.Length {}\n        instance(x: 183, y: -124) slice_4c9d3a root.Std_k98ojb.List.Slice {}\n        instance(x: 183, y: -56) concat_70f4e2 root.Std_k98ojb.List.Concat {}\n\n        list_8f5b6a -> length_7f9bfa.list\n        rotateBy_3d0c9e -> slice_4c9d3a.start\n        list_8f5b6a -> slice_4c9d3a.list\n        length_7f9bfa.length -> slice_4c9d3a.end\n        rotateBy_3d0c9e -> concat_70f4e2.right\n        slice_4c9d3a.restOfList -> concat_70f4e2.left\n        concat_70f4e2.result -> data_0_0\n    }\n\n    \n\n    instance(x: -186, y: 15) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -104, y: 325, name: \"items\") property(List) items_0e8d1b\n        out(x: 739, y: 65, name: \"output\") property(Number) output_ea4c9f\n\n        instance(x: 111, y: -112) reduce_2efc8c root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n            handler: add_67e5d3\n        }\n        instance(x: 493, y: -123) add_67e5d3 root.Std_k98ojb.Math.Add {}\n        items_0e8d1b -> reduce_2efc8c.items\n        reduce_2efc8c.output_list -> output_ea4c9f\n\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) for_6030c9 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) div_b4554f root.Std_k98ojb.Math.Div {}\n        instance(x: 1361, y: -190) equal_8e7a6d root.Std_k98ojb.Logic.Equal {}\n\n        input_f5c03d -> for_6030c9.from\n        2 -> for_6030c9.to\n        for_6030c9.item -> div_b4554f.first\n        input_f5c03d -> div_b4554f.second\n        div_b4554f.result -> if_07b8c7.left\n        1 -> if_07b8c7.right\n        if_07b8c7.predicate -> for_6030c9.next\n        for_6030c9.done -> continue_8ba06b\n        execute_27b8c3 -> for_6030c9.reset\n\n        div_b4554f.result -> equal_8e7a6d.left\n        1 -> equal_8e7a6d.right\n        equal_8e7a6d.result -> if_07b8c7.predicate\n        for_6030c9.done -> out_f3db9f\n        false -> out_f3db9f\n    }\n}\n\ninstance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8b0e4d\n        in(x: 789, y: 101112, name: \"num2\") property(Number) num2_7a2f5c\n\n        out(x: -36, y: 312, name: \"output\") property(Bool) output_4d6b6e\n\n        instance(x: 390, y: 189) ifexpression_7db5d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num1 < 0 && num2 > 0) || (num1 > 0 && num2 < 0)\"\n        }\n        num1_8b0e4d -> ifexpression_7db5d5.num1\n        num2_7a2f5c -> ifexpression_7db5d5.num2\n        ifexpression_7db5d5.value -> output_4d6b6e\n    }\n\n    \n\n    instance(x: 390, y: -18) check_opposite_signs_7f3f5a root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -240, y: 36, name: \"input\") property(Number) input_f5c03d\n        out(x: -289, y: -75, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: -168, y: 48) modulo_6bddd9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6bddd9.value\n        11 -> modulo_6bddd9.divisor\n        modulo_6bddd9.result -> out_f3db9f\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_67b9d6\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_b2f30a\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 400, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        oldChar_67b9d6 -> replace_306f69.search\n        newChar_b2f30a -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_8b4e9d root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9b7e2d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9b7e2d.input\n    tolower_9b7e2d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -304, y: 215, name: \"numbers\") property(List) inputList_ai\n        out(x: 367, y: 219, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -88, y: 215) removeDuplicates_4d0bdc root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 367, y: 215) reduceProduct_4d0bdc root.Std_k98ojb.Iteration.Reduce {\n            initial: 1\n            operation: \"a * b\"\n        }\n\n        inputList_ai -> removeDuplicates_4d0bdc.items\n        removeDuplicates_4d0bdc.output_list -> reduceProduct_4d0bdc.item\n        reduceProduct_4d0bdc.result -> outputProduct_ai\n\n    }\n    \n    instance(x: -32, y: 157) uniqueproduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9b8a\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_bf3e6c\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7d9b8a\n\n        instance(x: -105, y: 186) differenceList_a1b2c3 root.Std_k98ojb.Sets.Difference {}\n        list1_3d9b8a -> differenceList_a1b2c3.left\n        list2_bf3e6c -> differenceList_a1b2c3.right\n\n        instance(x: -105, y: 126) reverseDifferenceList_d4e5f6 root.Std_k98ojb.Sets.Difference {}\n        list2_bf3e6c -> reverseDifferenceList_d4e5f6.left\n        list1_3d9b8a -> reverseDifferenceList_d4e5f6.right\n\n        instance(x: -105, y: 66) concatLists_g7h8i9 root.Std_k98ojb.List.Concat {}\n        differenceList_a1b2c3.difference -> concatLists_g7h8i9.left\n        reverseDifferenceList_d4e5f6.difference -> concatLists_g7h8i9.right\n\n        concatLists_g7h8i9.list -> output_7d9b8a\n    }\n\n    \n\n    instance(x: 105, y: 246) FindDissimilarInstance root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8e4bdf\n        in(x: -169, y: 274, name: \"rotate_by\") property(Number) rotateBy_0d9fbc\n\n        out(x: 544, y: 232, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -168, y: 171) generateRange_6eacf5 root.Std_k98ojb.List.GenerateRange {\n            from: 0,\n            to: rotateBy_0d9fbc\n        }\n        instance(x: 342, y: 232) slice_6a7c9a root.Std_k98ojb.List.Slice {}\n        instance(x: 512, y: 232) concat_6eacf5 root.Std_k98ojb.List.Concat {}\n        list_8e4bdf -> generateRange_6eacf5.to\n        rotateBy_0d9fbc -> generateRange_6eacf5.from\n        generateRange_6eacf5.list -> slice_6a7c9a.end\n        list_8e4bdf -> slice_6a7c9a.list\n        0 -> slice_6a7c9a.start\n        slice_6a7c9a.result -> concat_6eacf5.right\n        list_8e4bdf -> concat_6eacf5.left\n        concat_6eacf5.result -> data_0_0\n    }\n\n    \n\n    instance(x: -231, y: 11) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 10, y: -20, name: \"num1\") property(Number) num1\n        in(x: 345, y: 87, name: \"num2\") property(Number) num2\n\n        instance(x: 196, y: 316) sign_1 root.Std.IfExpression {\n            expression: \"num1 >= 0 ? 'positive' : 'negative'\"\n        }\n        instance(x: -45, y: 278) sign_2 root.Std.IfExpression {\n            expression: \"num2 >= 0 ? 'positive' : 'negative'\"\n        }\n        instance(x: 36, y: 199) opposite_signs root.Std.If {\n            input: sign_1.value == \"positive\" && sign_2.value == \"negative\" || sign_1.value == \"negative\" && sign_2.value == \"positive\"\n            then: true\n            else: false\n        }\n\n        num1 -> sign_1.num1\n        num2 -> sign_2.num2\n\n        opposite_signs.then -> output\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -35, y: 204, name: \"input\") property(Number) input_8f4a7d\n        in(x: -16, y: 98, name: \"execute\") trigger() execute_c4b6e7\n\n        out(x: 143, y: -54, name: \"out\") property(Bool) out_f20c3f\n        instance(x: -319, y: -149) modulo_8a7d95 root.Std_k98ojb.Math.Modulo {}\n        input_8f4a7d -> modulo_8a7d95.value\n        11 -> modulo_8a7d95.divisor\n        modulo_8a7d95.result -> out_f20c3f\n        execute_c4b6e7 -> modulo_8a7d95.reset\n    }\n\n    \n\n    instance(x: -25, y: 15) is_divisible_by_11_7f5dbd root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of 'oldChar' with 'newChar'.\") replace_char {\n        in(x: -230, y: 0, name: \"inputString\") property(String) input_0\n        in(x: -230, y: 150, name: \"oldChar\") property(String) input_1\n        in(x: -230, y: 300, name: \"newChar\") property(String) input_2\n\n        out(x: 776, y: 0, name: \"outputString\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_root root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_root.input\n        input_1 -> replace_root.search\n        input_2 -> replace_root.replace\n        replace_root.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_char_root root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -324, y: 105, name: \"input\") property(String) input_ai\n    out(x: 354, y: 106, name: \"output\") property(String) output_ai\n\n    instance(x: 79, y: 105) tolower_2c8a7d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_2c8a7d.input\n    tolower_2c8a7d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -150, y: 246, name: \"inputList\") property(List) inputList_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: 189, y: 100) unique_5b3c root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 264, y: 175) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"mul\"\n        }\n\n        inputList_ai -> unique_5b3c.items\n        unique_5b3c.output_list -> reduce_7b3b7b.item\n        reduce_7b3b7b.result -> product_ai\n\n    }\n    \n    instance(x: -120, y: 98) uniqueProduct_node root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "func(doc: \"Finds dissimilar elements between two lists.\") dissimilar_elements {\n        in(x: -100, y: 50, name: \"list1\") property(List) list1_2937b6\n        in(x: -100, y: 100, name: \"list2\") property(List) list2_e8e4c7\n\n        out(x: 200, y: 50, name: \"dissimilarElements\") property(List) dissimilarElements_9f3b6a\n\n        instance(x: -50, y: 150) difference_a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 50, y: 150) difference_b root.Std_k98ojb.Sets.Difference {}\n\n        list1_2937b6 -> difference_a.left\n        list2_e8e4c7 -> difference_a.right\n\n        list2_e8e4c7 -> difference_b.left\n        list1_2937b6 -> difference_b.right\n\n        difference_a.difference -> dissimilarElements_9f3b6a\n        difference_b.difference -> dissimilarElements_9f3b6a root.Std_k98ojb.List.Concat {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a list by the specified number of positions to the right.\") rotate {\n        in(x: -154, y: 203, name: \"execute\") trigger() execute_8f6e7d\n        in(x: -94, y: 231, name: \"list\") property(List) list_c0b0c9\n        in(x: -154, y: 259, name: \"positions\") property(Number) positions_ea8f6b\n\n        out(x: 722, y: 231, name: \"output\") property(List) data_0_0\n        instance(x: 244, y: -39) generateRange_f5e2d7 root.Std_k98ojb.List.GenerateRange {}\n        setter(x: 685, y: 231, name: \"setter_ea3c4f\") setter_ea3c4f = zeroList\n        instance(x: -154, y: 101) map_7d90b6 root.Std_k98ojb.Iteration.Map {}\n        getter(x: 244, y: 259, name: \"getter_f5e2d7\") getter_f5e2d7 = zeroList\n        instance(x: -154, y: 13) mod_60f8a2 root.Std_k98ojb.Math.Modulo {}\n        setter(x: 685, y: 101, name: \"setter_caf5c5\") setter_caf5c5 = zeroList\n        getter(x: -154, y: 37) name_2e9fbc root.Std_k98ojb.Http_q7o96c.Http.Get {}\n        instance(x: 685, y: 169) slice_0a2dfe root.Std_k98ojb.List.Slice {}\n        setter(x: -154, y: 169, name: \"setter_b3f47e\") setter_b3f47e = zeroList\n        getter(x: 244, y: 203, name: \"getter_f5e2d7_1\") getter_f5e2d7_1 = zeroList\n\n        execute_8f6e7d -> map_7d90b6.trigger\n        list_c0b0c9 -> map_7d90b6.items\n        positions_ea8f6b -> mod_60f8a2.value\n        getter_f5e2d7_1.value -> slice_0a2dfe.end\n        0 -> slice_0a2dfe.start\n        list_c0b0c9 -> slice_0a2dfe.list\n        map_7d90b6.output_list -> setter_ea3c4f.new_value\n        getter_f5e2d7.value -> setter_b3f47e.new_value\n        mod_60f8a2.result -> setter_caf5c5.new_value\n        slice_0a2dfe.rest -> setter_caf5c5.new_value\n        setter_ea3c4f.continue -> data_0_0\n        setter_b3f47e.value -> map_7d90b6.handler\n        setter_caf5c5.value -> getter_f5e2d7_1.setter\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Sums all numbers in an array\") sum_array {\n        in(x: -450, y: 123, name: \"items\") property(List) items_5d0f8a\n        out(x: 749, y: 126, name: \"output\") property(Number) output_2e9bfa\n\n        instance(x: -166, y: -253) reduce_dce5c5 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"Math.Add\"\n        }\n        0 -> reduce_dce5c5.accumulator\n        items_5d0f8a -> reduce_dce5c5.items\n        reduce_dce5c5.output_list -> output_2e9bfa\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -160, name: \"input\") property(Number) input_f5c03d\n        in(x: 289, y: -78, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 349, y: 201, name: \"out\") property(Bool) out_f3db9f\n        out(x: 526, y: 213, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: -74, y: -264) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -54, y: -201) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 74, y: -104) modulo_d5e4d4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 221, y: -145) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 370, y: -162) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 456, y: -146) and_80a119 root.Std_k98ojb.Logic.And {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        modulo_d5e4d4.value -> and_80a119.left\n        0 -> and_80a119.right\n        and_80a119.result -> if_07b8c7.predicate\n        for_8cb3f6.item -> modulo_d5e4d4.divisor\n        input_f5c03d -> modulo_d5e4d4.value\n        for_8cb3f6.index -> lessthanorequal_f11fda.left\n        2 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.else -> for_8cb3f6.next\n    }\n}\n\ninstance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two integers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -152, name: \"integer_a\") property(Number) integer_a_4e89a3\n        in(x: 0, y: 67, name: \"integer_b\") property(Number) integer_b_ebddd6\n\n        out(x: 286, y: 415, name: \"opposite_signs\") property(Bool) opposite_signs_9e3d42\n\n        instance(x: -90, y: 275) expression_90a7f3 root.Std_k98ojb.Math.Expression {\n            expression: \"(integer_a < 0 && integer_b > 0) || (integer_a > 0 && integer_b < 0)\"\n        }\n        expression_90a7f3.result -> opposite_signs_9e3d42\n        integer_a_4e89a3 -> expression_90a7f3.integer_a\n        integer_b_ebddd6 -> expression_90a7f3.integer_b\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -237, y: 456, name: \"inputNumber\") property(Number) input_f0be66\n        out(x: -298, y: 241, name: \"isDivisibleByEleven\") property(Bool) output_8ba06b\n\n        instance(x: -337, y: 353) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f0be66 -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> output_8ba06b\n    }\n}\n\ninstance(x: -524, y: -17) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Replace all occurrences of one character with another\") replace_chars {\n        in(x: 0, y: 175, name: \"inputString\") property(String) input_string\n        in(x: 342, y: 175, name: \"searchChar\") property(String) search_char\n        in(x: 684, y: 175, name: \"replaceChar\") property(String) replace_char\n\n        out(x: 0, y: 300, name: \"resultString\") property(String) result_string\n        \n        instance(x: 294, y: 175) stringReplace root.Std_k98ojb.Strings.Replace {}\n\n        input_string -> stringReplace.input\n        search_char -> stringReplace.search\n        replace_char -> stringReplace.replace\n\n        stringReplace.output -> result_string\n    }\n\n    instance(x: 0, y: -25) replace_chars_function root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -210, y: 34, name: \"input\") property(String) input_ai\n    out(x: 354, y: 78, name: \"output\") property(String) output_ai\n\n    instance(x: 164, y: 77) tolower_2f0b9d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_2f0b9d.input\n    tolower_2f0b9d.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"calculate the product of unique numbers\") UniqueProduct {\n        in(x: -214, y: 375, name: \"input_list\") property(List) inputList_ai\n        out(x: 304, y: 398, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: 64, y: 372) removeDuplicates_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"\"\"\n                var seen = {};\n                return !seen[it] && (seen[it] = true);\n            \"\"\"\n        }\n\n        instance(x: 590, y: 364) calculateProduct_2 root.Std_k98ojb.Iteration.Reduce {\n            initial: 1\n            handler: \"a * b\"\n        }\n    \n        inputList_ai -> removeDuplicates_1.items \n        removeDuplicates_1.output_list -> calculateProduct_2.item\n        calculateProduct_2.result -> outputProduct_ai\n    }\n\n    instance(x: -394, y: 85) unique_product root.main.UniqueProduct {\n        input_list: [4, 6, 9, 4, 6, 10]\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds dissimilar elements in the given two lists\") dissimilar_elements {\n        in(x: -315, y: 22, name: \"list1\") property(List) list1_016b2e\n        in(x: -287, y: 24, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 359, y: -120, name: \"dissimilarElements\") property(List) dissimilarElements_6c9a8b\n\n        instance(x: -75, y: -167) difference_abcd12 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 143, y: -163) difference_cdab12 root.Std_k98ojb.Sets.Difference {}\n\n        list1_016b2e -> difference_abcd12.left\n        list2_c8f404 -> difference_abcd12.right\n\n        list2_c8f404 -> difference_cdab12.left\n        list1_016b2e -> difference_cdab12.right\n        \n        difference_abcd12.difference -> dissimilarElements_6c9a8b\n        difference_cdab12.difference -> iter_add_5d7f8a.items\n\n        instance(x: 243, y: -202) iter_add_5d7f8a root.Iteration_k98ojb.Zip {\n            handler: func(doc: \"add dissimilar elements from both differences\") add_elements {\n                in(x: -215, y: -68, name: \"itemLeft\") property(List) itemLeft_c0e43c\n                in(x: -173, y: -69, name: \"itemRight\") property(List) itemRight_6a7b0d\n                \n                out(x: 253, y: -185, name: \"listWithItem\") property(List) listWithItem_d4f5c8\n\n                instance(x: 313, y: -191) list_concat_efgh12 root.Std_k98ojb.List.Concat {}\n                \n                itemLeft_c0e43c -> list_concat_efgh12.left\n                itemRight_6a7b0d -> list_concat_efgh12.right\n                \n                list_concat_efgh12.list -> listWithItem_d4f5c8\n            }\n        }\n\n    }\n\n    \n\n    instance(x: 395, y: -279) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -205, y: 154, name: \"list\") property(List) list_38d4e5\n        in(x: -205, y: 196, name: \"rotateBy\") property(Number) rotateBy_bf575c\n\n        out(x: 417, y: 154, name: \"output\") property(List) data_0_0\n\n        instance(x: -38, y: -12) generateRange_c5e96a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -38, y: 117) slice_e4c6d4 root.Std_k98ojb.List.Slice {}\n        instance(x: -38, y: 220) concat_5e5f45 root.Std_k98ojb.List.Concat {}\n\n        list_38d4e5 -> generateRange_c5e96a.to\n        List.Length(list_38d4e5) -> generateRange_c5e96a.from\n        generateRange_c5e96a.result -> slice_e4c6d4.start\n        rotateBy_bf575c -> slice_e4c6d4.end\n        list_38d4e5 -> concat_5e5f45.right\n        slice_e4c6d4.list -> concat_5e5f45.left\n        concat_5e5f45.result -> data_0_0\n    }\n}"
            ],
            "42": [
                "func(doc: \"Returns the sum of all elements in the list\") SumArray {\n        in(x: 0, y: -317, name: \"numbers\") property(List) numbers_2b59d6\n        out(x: 480, y: -317, name: \"sum\") property(Number) sum_d2a9e5\n\n        instance(x: 231, y: -317) reduce_1c21f9 root.Iteration_k98ojb.Iteration.Reduce {\n            handler: \"add(numbers[0], numbers[1])\"\n        }\n        numbers_2b59d6 -> reduce_1c21f9.items\n        0 -> reduce_1c21f9.initValue\n        reduce_1c21f9.output_list -> sum_d2a9e5\n\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 158, y: -178) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> for_8cb3f6.item\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n            instance(x: 106, y: 17) lessthan_f5bddd root.Std_k98ojb.Math.GreaterThan {}\n            \n            element_5f51f7 -> lessthan_f5bddd.left\n            2 -> lessthan_f5bddd.right\n            \n            lessthan_f5bddd.result -> out_d0fd24\n        } -> for_8cb3f6.next\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n            instance(x: 106, y: 17) lessthan_f5bddd root.Std_k98ojb.Math.GreaterThan {}\n            \n            element_5f51f7 -> lessthan_f5bddd.left\n            input_f5c03d -> lessthan_f5bddd.right\n            \n            lessthan_f5bddd.result -> out_d0fd24\n        } -> for_8cb3f6.predicate\n\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> if_e19a62.predicate\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8b0dce\n        in(x: 789, y: -101, name: \"num2\") property(Number) num2_7f3a2c\n\n        out(x: 321, y: 654, name: \"output\") property(Bool) output_6b4d5e\n\n        instance(x: 987, y: -321) ifexpression_70b44a root.Std_k98ojb.Std.IfExpression {}\n        num1_8b0dce -> ifexpression_70b44a.a\n        num2_7f3a2c -> ifexpression_70b44a.b\n        instance(x: 654, y: -21) mul_9eacf5 root.Std_k98ojb.Math.Mul {}\n        num1_8b0dce -> mul_9eacf5.first\n        num2_7f3a2c -> mul_9eacf5.second\n        mul_9eacf5.result -> ifexpression_70b44a.expression\n        instance(x: 321, y: -65) lessorequal_8d9e4d root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_9eacf5.result -> lessorequal_8d9e4d.left\n        instance(x: 0, y: 321) zero_7f6a4c root.Std_k98ojb.Math.Expression {}\n        zero_7f6a4c.expression: \"0\"\n        zero_7f6a4c.result -> lessorequal_8d9e4d.right\n        lessorequal_8d9e4d.result -> ifexpression_70b44a.gen_1\n        ifexpression_70b44a.result -> output_6b4d5e\n    }\n\n    \n\n    instance(x: 321, y: -65) check_opposite_signs_8f9cbb root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -240, y: 368, name: \"input\") property(Number) input_f5c03d\n        out(x: -279, y: 35) property(Bool) output_5f51f7\n\n        instance(x: -154, y: 311) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> output_5f51f7\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_67b4a7\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_2f30d4\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_5b1e9a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5b1e9a.input\n        oldChar_67b4a7 -> replace_5b1e9a.search\n        newChar_2f30d4 -> replace_5b1e9a.replace\n        replace_5b1e9a.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9f3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9f3b7b.input\n    tolower_9f3b7b.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -304, y: 215, name: \"numbers\") property(List) inputList_ai\n        out(x: 367, y: 219, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -88, y: 215) removeDuplicates_4d0a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 367, y: 215) reduceProduct_4d0b root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * it\"\n        }\n\n        inputList_ai -> removeDuplicates_4d0a.items\n        removeDuplicates_4d0a.output_list -> reduceProduct_4d0b.item\n        reduceProduct_4d0b.result -> outputProduct_ai\n\n    }\n\n    instance(x: -32, y: 127) uniqueProduct root.main.UniqueProduct {\n        numbers: [5, 3, 5, 2, 3, 8]\n    }\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9e8b\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_fadea4\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7f3d9c\n\n        instance(x: -18, y: 246) difference_6b4e2b root.Std_k98ojb.Sets.Difference {}\n        list1_3d9e8b -> difference_6b4e2b.left\n        list2_fadea4 -> difference_6b4e2b.right\n        difference_6b4e2b.difference -> output_7f3d9c\n\n        instance(x: 50, y: 246) reverse_difference_81bdfb root.Std_k98ojb.Sets.Difference {}\n        list2_fadea4 -> reverse_difference_81bdfb.left\n        list1_3d9e8b -> reverse_difference_81bdfb.right\n        reverse_difference_81bdfb.difference -> output_7f3d9c\n\n    }\n\n    \n\n    instance(x: 205, y: -164) find_dissimilar_c9a2a7 root.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8e9b5d\n        in(x: -167, y: 239, name: \"rotate_by\") property(Number) rotateBy_7f3a4c\n\n        out(x: 165, y: 203, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -84, y: 198) generateRange_6d5bdf root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 175, y: 238) slice_6eacf4 root.Std_k98ojb.List.Slice {}\n        instance(x: -80, y: 238) add_6d5aeb root.Std_k98ojb.Math.Add {}\n        setter(x: 167, y: 165, name: \"setter_6eacf4\") setter_6eacf4 = rotatedList\n        getter(x: -104, y: 238, name: \"getter_6d5aeb\") getter_6d5aeb = listLength\n\n        rotateBy_7f3a4c -> add_6d5aeb.second\n        list_8e9b5d -> slice_6eacf4.list\n        generateRange_6d5bdf.to -> setter_6eacf4.new_value\n        getter_6d5aeb.value -> add_6d5aeb.first\n        rotateBy_7f3a4c -> getter_6d5aeb.value\n        list_8e9b5d -> getter_6d5aeb.value\n        slice_6eacf4.start -> generateRange_6d5bdf.from\n        add_6d5aeb.result -> generateRange_6d5bdf.from\n        0 -> generateRange_6d5bdf.to\n        -1 -> slice_6eacf4.end\n        list_8e9b5d -> slice_6eacf4.list\n        slice_6eacf4.rest -> setter_6eacf4.new_value\n        setter_6eacf4.value -> data_0_0\n    }\n\n    \n\n    instance(x: -237, y: 19) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 10, y: -20, name: \"num1\") property(Number) num1\n        in(x: 345, y: 87, name: \"num2\") property(Number) num2\n\n        instance(x: 196, y: 315) sign_1 root.Std.IfExpression {\n            expression: \"num1 >= 0 ? true : false\"\n        }\n        instance(x: -45, y: 287) sign_2 root.Std.IfExpression {\n            expression: \"num2 >= 0 ? false : true\"\n        }\n        instance(x: 369, y: 264) opposite_signs root.Std.And {}\n\n        sign_1.value -> opposite_signs.left\n        sign_2.value -> opposite_signs.right\n\n        num1 -> sign_1.input\n        num2 -> sign_2.input\n\n        opposite_signs.result -> out(x: -57, y: 439, name: \"oppositeSigns\") property(Bool)\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -35, y: 204, name: \"input\") property(Number) input_8f4d5a\n        in(x: -67, y: 97, name: \"execute\") trigger() execute_c6b6e9\n\n        out(x: -13, y: -121, name: \"out\") property(Bool) out_0c98f7\n        instance(x: -54, y: 32) modulo_9a7d77 root.Std_k98ojb.Math.Modulo {}\n        input_8f4d5a -> modulo_9a7d77.value\n        11 -> modulo_9a7d77.divisor\n        modulo_9a7d77.result -> out_0c98f7\n        execute_c6b6e9 -> modulo_9a7d77.reset\n    }\n\n    \n\n    instance(x: -32, y: 14) is_divisible_by_11_f51db2 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of 'oldChar' with 'newChar'.\") replace_char {\n        in(x: -230, y: 0, name: \"inputString\") property(String) input_0\n        in(x: -230, y: 150, name: \"oldChar\") property(String) input_1\n        in(x: -230, y: 300, name: \"newChar\") property(String) input_2\n\n        out(x: 776, y: 0, name: \"outputString\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_foo root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_foo.input\n        input_1 -> replace_foo.search\n        input_2 -> replace_foo.replace\n        replace_foo.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_char_root root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -324, y: 105, name: \"input\") property(String) input_ai\n    out(x: 354, y: 106, name: \"output\") property(String) output_ai\n\n    instance(x: 79, y: 105) tolower_2f8a7d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_2f8a7d.input\n    tolower_2f8a7d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -150, y: 246, name: \"inputList\") property(List) inputList_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: 189, y: 100) unique_5b3c2d root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 462, y: 170) map_5b3c2e root.Std_k98ojb.Iteration.Map {\n            handler: \"it\"\n        }\n        instance(x: 654, y: 242) reduce_5b3c2f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"*\"\n        }\n\n        inputList_ai -> unique_5b3c2d.items\n        unique_5b3c2d.output_list -> map_5b3c2e.items\n        map_5b3c2e.output_list -> reduce_5b3c2f.item\n        reduce_5b3c2f.result -> product_ai\n\n    }\n\n    instance(x: -10, y: 87) uniqueProduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"Finds dissimilar elements between two lists.\") dissimilar_elements {\n        in(x: -100, y: 50, name: \"list1\") property(List) list1_3d7a6b\n        in(x: -100, y: 120, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 200, y: 50, name: \"output\") property(List) output_3e7a6b\n        \n        instance(x: -50, y: 100) difference_a root.Std_k98ojb.Sets.Difference {}\n        list1_3d7a6b -> difference_a.left\n        list2_c8f404 -> difference_a.right\n\n        instance(x: 150, y: 100) reverse_difference_b root.Std_k98ojb.Sets.Difference {}\n        list2_c8f404 -> reverse_difference_b.left\n        list1_3d7a6b -> reverse_difference_b.right\n        \n        instance(x: 100, y: 150) concat_output root.Std_k98ojb.List.Concat {}\n        difference_a.difference -> concat_output.left\n        reverse_difference_b.difference -> concat_output.right\n\n        concat_output.output_list -> output_3e7a6b\n    }\n\n    \n\n    instance(x: 425, y: -186) dissimilar_elements_9f3d root.main.dissimilar_elements {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a list by the specified number of positions to the right.\") rotate {\n        in(x: -154, y: 203, name: \"execute\") trigger() execute_8f2e7d\n        in(x: -262, y: 169, name: \"list\") property(List) list_eb6c9a\n        in(x: -262, y: 140, name: \"positions\") property(Number) positions_5f83e5\n\n        out(x: 717, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 719, y: -28, name: \"continue\") trigger() continue_f43c8d\n\n        instance(x: 50, y: 134) count_9bddd6 root.Std_k98ojb.Std.Count {}\n        instance(x: 254, y: 137) modulo_2a2e8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 50, y: -106) for_2d30c5 root.Std_k98ojb.Std.For {}\n        setter(x: 444, y: -170, name: \"setter_ccebaa\") setter_ccebaa = rotatedList\n        instance(x: 438, y: 168) slice_2c5e9d root.Std_k98ojb.List.Slice {}\n        getter(x: 238, y: -270, name: \"getter_bdb9f4\") getter_bdb9f4 = rotatedList\n        instance(x: 437, y: -16) add_5d2a2c root.Std_k98ojb.Math.Add {}\n        setter(x: 443, y: -130, name: \"setter_e577e6\") setter_e577e6 = rotatedList\n        getter(x: 250, y: -246, name: \"getter_9a2c8b\") getter_9a2c8b = rotatedList\n        instance(x: 310, y: -14) zip_5f7dbd root.Std_k98ojb.Iteration.Zip {}\n        setter(x: 726, y: -166, name: \"setter_60e7c9\") setter_60e7c9 = rotatedList\n        getter(x: 346, y: 256, name: \"getter_b8a9f6\") getter_b8a9f6 = rotatedList\n        instance(x: -182, y: 22) empty_50d71c root.Std_k98ojb.List.Empty {}\n        setter(x: 439, y: -228, name: \"setter_fdcdbd\") setter_fdcdbd = rotatedList\n        getter(x: 266, y: -272, name: \"getter_501c5f\") getter_501c5f = rotatedList\n\n        execute_8f2e7d -> count_9bddd6.reset\n        list_eb6c9a -> for_2d30c5.items\n        positions_5f83e5 -> modulo_2a2e8f.value\n        1 -> modulo_2a2e8f.divisor\n        modulo_2a2e8f.result -> count_9bddd6.count\n        for_2d30c5.onItem -> setter_fdcdbd.execute\n        for_2d30c5.item -> zip_5f7dbd.left\n        getter_bdb9f4.value -> zip_5f7dbd.right\n        count_9bddd6.trigger -> for_2d30c5.trigger\n        setter_fdcdbd.continue -> continue_f43c8d\n        slice_2c5e9d.result -> setter_ccebaa.new_value\n        getter_b8a9f6.value -> setter_e577e6.new_value\n        for_2d30c5.done -> setter_ccebaa.execute\n        empty_50d71c.list -> setter_fdcdbd.new_value\n        0 -> add_5d2a2c.gen_0\n        count_9bddd6.trigger -> add_5d2a2c.gen_1\n        add_5d2a2c.result -> slice_2c5e9d.end\n        getter_9a2c8b.value -> setter_fdcdbd.new_value\n        setter_ccebaa.continue -> continue_f43c8d\n        setter_e577e6.continue -> for_2d30c5.next\n        slice_2c5e9d.list -> data_0_0\n    }\n\n    \n\n    instance(x: -172, y: 28) rotate_ba74b4 root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Returns the sum of all numbers in the list\") sum_list {\n        in(x: -145, y: 230, name: \"items\") property(List) items_8a2b0f\n        out(x: 79, y: 268, name: \"output\") property(Number) output_f2d4c4\n\n        instance(x: -114, y: 235) reduce_e2e9c7 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        items_8a2b0f -> reduce_e2e9c7.items\n        0 -> reduce_e2e9c7.accumulator\n        instance(x: -134, y: 265) add_5d0db9 root.Std_k98ojb.Math.Add {}\n        reduce_e2e9c7.accumulator -> add_5d0db9.first\n        reduce_e2e9c7.value -> add_5d0db9.second\n        add_5d0db9.result -> output_f2d4c4\n\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -160, name: \"input\") property(Number) input_f5c03d\n        in(x: 289, y: -79, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 341, y: 213, name: \"out\") property(Bool) out_f3db9f\n        out(x: 560, y: 203, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: -78, y: 42) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 159, y: -10) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 257, y: -42) modulo_d3a7e9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 351, y: -30) lessthan_5f6c4d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 434, y: -24) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 151, y: -159) not_e6e75a root.Std_k98ojb.Logic.Not {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_d3a7e9.value\n        input_f5c03d -> modulo_d3a7e9.divisor\n        modulo_d3a7e9.result -> lessthan_5f6c4d.left\n        1 -> lessthan_5f6c4d.right\n        lessthan_5f6c4d.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        not_e6e75a.value -> out_f3db9f\n        if_07b8c7.else -> continue_8ba06b\n        input_f5c03d -> if_07b8c7.value\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -149, y: 15) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two integers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -152, name: \"integer_a\") property(Number) integer_a_4e89a3\n        in(x: 0, y: 67, name: \"integer_b\") property(Number) integer_b_ebddd6\n\n        out(x: 288, y: 61) property(Bool) output_5c2fbc\n\n        instance(x: 147, y: -39) mul_f0aebd root.Std_k98ojb.Math.Mul {}\n        instance(x: 386, y: 115) if_c0e0ae root.Std_k98ojb.Std.If {}\n\n        integer_a_4e89a3 -> mul_f0aebd.first\n        integer_b_ebddd6 -> mul_f0aebd.second\n        mul_f0aebd.result -> if_c0e0ae.input\n        instance(x: 275, y: -176) const_4f9c8b root.Std_k98ojb.Constant {\n            value: -1\n        }\n        const_4f9c8b.value -> if_c0e0ae.then\n        instance(x: 382, y: 65) const_d4a7d3 root.Std_k98ojb.Constant {\n            value: 1\n        }\n        const_d4a7d3.value -> if_c0e0ae.else\n        if_c0e0ae.value -> output_5c2fbc\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -237, y: 456, name: \"inputNumber\") property(Number) input_f0be66\n        out(x: -298, y: 249, name: \"isDivisibleByEleven\") property(Bool) output_1fddfe\n\n        instance(x: -176, y: 358) modulo_d7d3f8 root.Std_k98ojb.Math.Modulo {}\n        input_f0be66 -> modulo_d7d3f8.value\n        11 -> modulo_d7d3f8.divisor\n        modulo_d7d3f8.result -> output_1fddfe\n\n    }\n}\n\ninstance(x: -245, y: 369) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Replace all occurrences of one character with another\") replace_chars {\n        in(x: 0, y: 175, name: \"inputString\") property(String) input_string\n        in(x: 342, y: 175, name: \"searchChar\") property(String) search_char\n        in(x: 684, y: 175, name: \"replaceChar\") property(String) replace_char\n\n        out(x: 0, y: 300, name: \"resultString\") property(String) result_string\n        \n        instance(x: 294, y: 175) stringReplace root.Std_k98ojb.Strings.Replace {}\n\n        input_string -> stringReplace.input\n        search_char -> stringReplace.search\n        replace_char -> stringReplace.replace\n\n        stringReplace.output -> result_string\n    }\n\n    instance(x: 0, y: -25) replace_chars_function root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -210, y: 34, name: \"input\") property(String) input_ai\n    out(x: 354, y: 78, name: \"output\") property(String) output_ai\n\n    instance(x: 164, y: 77) tolower_2b0c9d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_2b0c9d.input\n    tolower_2b0c9d.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Get unique items from a list\") Unique {\n        in(x: -462, y: 103) property(List) input_ai\n        out(x: -75, y: 246) property(List) output_ai\n        instance(x: -189, y: 103) filter_5a0bfc root.Std_k98ojb.Iteration.Filter {\n            handler: \"not list.Contains(output_ai, it)\"\n        }\n        input_ai -> filter_5a0bfc.items\n        filter_5a0bfc.output_list -> output_ai\n    }\n\n    func(doc:\"Calculate product of a list\") Product {\n        in(x: -436, y: 127) property(List) numbers_ai\n        out(x: 298, y: 127) number result_ai\n        instance(x: -189, y: 127) reduce_04b5a1 root.Std_k98ojb.Iteration.Reduce {\n            initial: \"1\"\n            handler: \"Math.Mul(it, item)\"\n        }\n        numbers_ai -> reduce_04b5a1.item\n        reduce_04b5a1.result -> result_ai\n    }\n\n    func(doc:\"Calculate product of unique items in a list\") UniqueProduct {\n        in(x: -689, y: 73) property(List) inputList_ai\n        out(x: 298, y: 73) number output_ai\n        instance(x: -415, y: 73) unique_0b3cfc root.main.Unique {}\n        instance(x: 61, y: 73) product_0a0ffc root.main.Product {}\n        inputList_ai -> unique_0b3cfc.input_ai\n        unique_0b3cfc.output_ai -> product_0a0ffc.numbers_ai\n        product_0a0ffc.result_ai -> output_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds dissimilar elements in the given two lists\") dissimilar_elements {\n        in(x: -315, y: 22, name: \"list1\") property(List) list1_016b2e\n        in(x: -287, y: 24, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 359, y: -12, name: \"dissimilarElements\") property(List) dissimilarElements_6cdeaf\n\n        instance(x: -117, y: 26) union_ebcb9a root.Std_k98ojb.Sets.Union {}\n        instance(x: -117, y: 30) intersection_554d6f root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> union_ebcb9a.left\n        list1_016b2e -> intersection_554d6f.left\n        list2_c8f404 -> union_ebcb9a.right\n        list2_c8f404 -> intersection_554d6f.right\n\n        instance(x: 321, y: -14) difference_f7dbd5 root.Std_k98ojb.Sets.Difference {}\n        union_ebcb9a.union -> difference_f7dbd5.left\n        intersection_554d6f.intersect -> difference_f7dbd5.right\n\n        difference_f7dbd5.difference -> dissimilarElements_6cdeaf\n    }\n\n    \n\n    instance(x: 380, y: -192) dissimilar_elements_ebcb9a root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -205, y: 154, name: \"list\") property(List) list_38b0f5\n        in(x: -205, y: 196, name: \"rotateBy\") property(Number) rotateBy_ea97db\n\n        out(x: 813, y: 147, name: \"rotatedList\") property(List) data_0_0\n        getter(x: -205, y: 236, name: \"getter_83c4f9\") getter_83c4f9 = itemsToMove\n        getter(x: -167, y: 162, name: \"getter_c8fae3\") getter_c8fae3 = rotateBy\n        instance(x: -205, y: 30) length_9d0c4b root.Std_k98ojb.List.Length {}\n        instance(x: -74, y: 167) modulo_d2a2f0 root.Std_k98ojb.Math.Modulo {\n            divisor: \"length\"\n        }\n        instance(x: 350, y: 147) slice_9eacf0 root.Std_k98ojb.List.Slice {}\n        instance(x: 618, y: 147) concat_2cfecc root.Std_k98ojb.List.Concat {}\n        getter_83c4f9.value -> length_9d0c4b.list\n        list_38b0f5 -> modulo_d2a2f0.value\n        rotateBy_ea97db -> modulo_d2a2f0.divisor\n        0 -> slice_9eacf0.start\n        modulo_d2a2f0.result -> slice_9eacf0.end\n        list_38b0f5 -> slice_9eacf0.list\n        slice_9eacf0.rest -> concat_2cfecc.right\n        0 -> getter_c8fae3.value\n        getter_c8fae3.value -> slice_9eacf0.start\n        list_38b0f5 -> concat_2cfecc.left\n        concat_2cfecc.result -> data_0_0\n    }\n}"
            ],
            "42": [
                "func(doc: \"sums up all elements in an array\") ArraySum {\n        in(x: -312, y: 78, name: \"items\") property(List) items_504e6b\n        out(x: -92, y: -125, name: \"output\") property(Number) output_aeb0c9\n\n        instance(x: -312, y: -95) sum_7f8d1a root.Std_k98ojb.Iteration.Reduce {\n            func(sum: Number, value: Any, index: Number, context: Object): Number {\n                Math_q98ojb.Mul(input1: sum, input2: 1).result + Math_q98ojb.Mul(input1: value, input2: 1).result\n            }\n        }\n\n        items_504e6b -> sum_7f8d1a.items\n        0 -> sum_7f8d1a.accumulatedValue\n        sum_7f8d1a.output -> output_aeb0c9\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 158, y: -174) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> for_8cb3f6.item\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n            instance(x: 106, y: 17) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            \n            element_5f51f7 -> lessthanorequal_f11fda.left\n            input_f5c03d -> lessthanorequal_f11fda.right\n            \n            lessthanorequal_f11fda.result -> out_d0fd24\n        } -> for_8cb3f6.item\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n            instance(x: 106, y: 17) expression_9fba8c root.Std_k98ojb.Math.Expression {\n                expression: \"(n % i == 0)\"\n            }\n            \n            element_5f51f7 -> expression_9fba8c.gen_1\n            input_f5c03d -> expression_9fba8c.gen_0\n            \n            expression_9fba8c.result -> out_d0fd24\n        } -> for_8cb3f6.index\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n            instance(x: 106, y: 17) add_b4554f root.Std_k98ojb.Math.Add {}\n            \n            element_5f51f7 -> add_b4554f.first\n            1 -> add_b4554f.second\n            \n            add_b4554f.result -> out_d0fd24\n        } -> for_8cb3f6.next\n\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8a0bdc\n        in(x: 789, y: 321, name: \"num2\") property(Number) num2_bf9d6c\n\n        out(x: -321, y: 456, name: \"output\") property(Bool) output_0b9aeb\n\n        instance(x: 789, y: 123) ifexpression_6eacf5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num1 < 0 && num2 > 0 || num1 > 0 && num2 < 0\"\n        }\n        num1_8a0bdc -> ifexpression_6eacf5.gen_0\n        num2_bf9d6c -> ifexpression_6eacf5.gen_1\n        ifexpression_6eacf5.value -> output_0b9aeb\n    }\n\n    \n\n    instance(x: 321, y: -456) check_opposite_signs_789cde root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -240, y: 368, name: \"input\") property(Number) input_f5c03d\n        out(x: -279, y: 35) property(Bool) output_5f51f7\n\n        instance(x: -154, y: 311) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> output_5f51f7\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_67b4a7\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_2f30d4\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_5b1e9a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5b1e9a.input\n        oldChar_67b4a7 -> replace_5b1e9a.search\n        newChar_2f30d4 -> replace_5b1e9a.replace\n        replace_5b1e9a.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9f3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9f3b7b.input\n    tolower_9f3b7b.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -304, y: 215, name: \"numbers\") property(List) inputList_ai\n        out(x: 367, y: 219, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -88, y: 215) removeDuplicates_4d0a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 367, y: 215) reduceProduct_4d0b root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * it\"\n        }\n\n        inputList_ai -> removeDuplicates_4d0a.items\n        removeDuplicates_4d0a.output_list -> reduceProduct_4d0b.item\n        reduceProduct_4d0b.result -> outputProduct_ai\n\n    }\n\n    instance(x: -32, y: 127) uniqueProduct root.main.UniqueProduct {\n        numbers: [5, 3, 5, 2, 3, 8]\n    }\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9e8b\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_fadea4\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7f3d9c\n\n        instance(x: -186, y: 246) difference_6b4e5b root.Std_k98ojb.Sets.Difference {}\n        list1_3d9e8b -> difference_6b4e5b.left\n        list2_fadea4 -> difference_6b4e5b.right\n        difference_6b4e5b.difference -> output_7f3d9c\n\n        instance(x: -186, y: 206) reverseDifference_b4e5ba root.Std_k98ojb.Sets.Difference {}\n        list2_fadea4 -> reverseDifference_b4e5ba.left\n        list1_3d9e8b -> reverseDifference_b4e5ba.right\n        reverseDifference_b4e5ba.difference -> difference_6b4e5b.right\n\n    }\n\n    \n\n    instance(x: 0, y: -27) findDissimilar_7f3d9c root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8e9b5d\n        in(x: -167, y: 239, name: \"rotate_by\") property(Number) rotateBy_7f3a4c\n\n        out(x: 165, y: 203, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -84, y: 198) generateRange_6d5bdf root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 175, y: 238) slice_6eacf4 root.Std_k98ojb.List.Slice {}\n        instance(x: -80, y: 238) add_6d5aeb root.Std_k98ojb.Math.Add {}\n        setter(x: 167, y: 165, name: \"setter_6eacf4\") setter_6eacf4 = rotatedList\n        getter(x: -104, y: 238, name: \"getter_6d5aeb\") getter_6d5aeb = listLength\n\n        rotateBy_7f3a4c -> add_6d5aeb.second\n        list_8e9b5d -> slice_6eacf4.list\n        generateRange_6d5bdf.to -> setter_6eacf4.new_value\n        getter_6d5aeb.value -> add_6d5aeb.first\n        rotateBy_7f3a4c -> getter_6d5aeb.value\n        list_8e9b5d -> getter_6d5aeb.value\n        slice_6eacf4.start -> generateRange_6d5bdf.from\n        add_6d5aeb.result -> generateRange_6d5bdf.from\n        0 -> generateRange_6d5bdf.to\n        -1 -> slice_6eacf4.end\n        list_8e9b5d -> slice_6eacf4.list\n        slice_6eacf4.rest -> setter_6eacf4.new_value\n        setter_6eacf4.value -> data_0_0\n    }\n\n    \n\n    instance(x: -237, y: 19) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 10, y: -20, name: \"num1\") property(Number) num1\n        in(x: 345, y: 87, name: \"num2\") property(Number) num2\n\n        instance(x: 196, y: 315) sign_1 root.Std.IfExpression {\n            expression: \"num1 >= 0 ? true : false\"\n        }\n        instance(x: -45, y: 287) sign_2 root.Std.IfExpression {\n            expression: \"num2 >= 0 ? false : true\"\n        }\n        instance(x: 369, y: 264) opposite_signs root.Std.And {}\n\n        sign_1.value -> opposite_signs.left\n        sign_2.value -> opposite_signs.right\n\n        num1 -> sign_1.input\n        num2 -> sign_2.input\n\n        opposite_signs.result -> out(x: -57, y: 439, name: \"oppositeSigns\") property(Bool)\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -35, y: 204, name: \"input\") property(Number) input_8f4d5a\n        in(x: -67, y: 97, name: \"execute\") trigger() execute_c1b6e9\n\n        out(x: -35, y: -132, name: \"out\") property(Bool) out_0c68f4\n\n        instance(x: -139, y: -32) modulo_7a8d65 root.Std_k98ojb.Math.Modulo {}\n        input_8f4d5a -> modulo_7a8d65.value\n        11 -> modulo_7a8d65.divisor\n        modulo_7a8d65.result -> out_0c68f4\n        execute_c1b6e9 -> modulo_7a8d65.reset\n    }\n\n    \n\n    instance(x: -235, y: 16) is_divisible_by_11_f295e7 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of 'oldChar' with 'newChar'.\") replace_char {\n        in(x: -230, y: 0, name: \"inputString\") property(String) input_0\n        in(x: -230, y: 150, name: \"oldChar\") property(String) input_1\n        in(x: -230, y: 300, name: \"newChar\") property(String) input_2\n\n        out(x: 776, y: 0, name: \"outputString\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_foo root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_foo.input\n        input_1 -> replace_foo.search\n        input_2 -> replace_foo.replace\n        replace_foo.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_char_root root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -324, y: 105, name: \"input\") property(String) input_ai\n    out(x: 354, y: 106, name: \"output\") property(String) output_ai\n\n    instance(x: 79, y: 105) tolower_2f8c8a root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_2f8c8a.input\n    tolower_2f8c8a.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -150, y: 246, name: \"inputList\") property(List) inputList_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: 189, y: 100) unique_5b3c2d root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 462, y: 170) map_5b3c2e root.Std_k98ojb.Iteration.Map {\n            handler: \"it\"\n        }\n        instance(x: 654, y: 242) reduce_5b3c2f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"*\"\n        }\n\n        inputList_ai -> unique_5b3c2d.items\n        unique_5b3c2d.output_list -> map_5b3c2e.items\n        map_5b3c2e.output_list -> reduce_5b3c2f.item\n        reduce_5b3c2f.result -> product_ai\n\n    }\n\n    instance(x: -10, y: 87) uniqueProduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"Finds dissimilar elements between two lists.\") dissimilar_elements {\n        in(x: -100, y: 50, name: \"list1\") property(List) list1_3d7a6b\n        in(x: -100, y: 120, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 200, y: 50, name: \"output\") property(List) output_3e7a6b\n        \n        instance(x: -50, y: 100) difference_a root.Std_k98ojb.Sets.Difference {}\n        list1_3d7a6b -> difference_a.left\n        list2_c8f404 -> difference_a.right\n\n        instance(x: 150, y: 100) reverse_difference_b root.Std_k98ojb.Sets.Difference {}\n        list2_c8f404 -> reverse_difference_b.left\n        list1_3d7a6b -> reverse_difference_b.right\n        \n        instance(x: 100, y: 150) concat_output root.Std_k98ojb.List.Concat {}\n        difference_a.difference -> concat_output.left\n        reverse_difference_b.difference -> concat_output.right\n\n        concat_output.output_list -> output_3e7a6b\n    }\n\n    \n\n    instance(x: 425, y: -186) dissimilar_elements_9f3d root.main.dissimilar_elements {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a list by the specified number of positions to the right.\") rotate {\n        in(x: -154, y: 203, name: \"execute\") trigger() execute_8f9e7d\n        in(x: -265, y: 144, name: \"list\") property(List) list_eb6c9a\n        in(x: -265, y: 180, name: \"positions\") property(Number) positions_3f8e75\n\n        out(x: 205, y: 147, name: \"output\") property(List) data_0_0\n        out(x: 198, y: 220, name: \"continue\") trigger() continue_f6e4d3\n\n        instance(x: -243, y: -115) count_73c1b7 root.Std_k98ojb.Std.Count {}\n        instance(x: 149, y: 138) slice_0f19a4 root.Std_k98ojb.List.Slice {}\n        instance(x: 162, y: -55) concat_7d9c1e root.Std_k98ojb.List.Concat {}\n        setter(x: -278, y: -136, name: \"setter_c470f6\") setter_c470f6 = positions\n        getter(x: 136, y: -159, name: \"getter_0e4a8c\") getter_0e4a8c = positions\n\n        count_73c1b7.reset -> execute_8f9e7d\n        setter_c470f6.execute -> count_73c1b7.input\n        list_eb6c9a -> slice_0f19a4.list\n        count_73c1b7.count -> slice_0f19a4.end\n        positions_3f8e75 -> getter_0e4a8c.value\n        0 -> slice_0f19a4.start\n        slice_0f19a4.listSlice -> concat_7d9c1e.right\n        list_eb6c9a -> concat_7d9c1e.left\n        concat_7d9c1e.result -> data_0_0\n        count_73c1b7.done -> continue_f6e4d3\n    }\n\n    \n\n    instance(x: -258, y: 23) rotate_c4f394 root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Returns the sum of all numbers in the list\") sum_list {\n        in(x: -145, y: 230, name: \"items\") property(List) items_8a2b0f\n        out(x: 79, y: 268, name: \"output\") property(Number) output_f2d4c4\n\n        instance(x: -114, y: 235) reduce_e2e9c7 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        items_8a2b0f -> reduce_e2e9c7.items\n        0 -> reduce_e2e9c7.accumulator\n        instance(x: -134, y: 265) add_5d0994 root.Std_k98ojb.Math.Add {}\n        reduce_e2e9c7.accumulator -> add_5d0994.first\n        reduce_e2e9c7.item -> add_5d0994.second\n        add_5d0994.result -> reduce_e2e9c7.next_accumulator\n        reduce_e2e9c7.output -> output_f2d4c4\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -160, name: \"input\") property(Number) input_f5c03d\n        in(x: 289, y: -79, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 341, y: 213, name: \"out\") property(Bool) out_f3db9f\n        out(x: 560, y: 203, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: -78, y: 42) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 159, y: -10) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 257, y: -42) modulo_dca2d7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 364, y: -31) lessthan_6a0c5e root.Std_k98ojb.Math.LessThan {}\n        instance(x: 475, y: -44) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        generaterange_038fce.from -> modulo_dca2d7.value\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_dca2d7.divisor\n        input_f5c03d -> modulo_dca2d7.result\n        modulo_dca2d7.result -> lessthan_6a0c5e.left\n        1 -> lessthan_6a0c5e.right\n        lessthan_6a0c5e.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.else -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.done -> continue_8ba06b\n    }\n}\n\ninstance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two integers have opposite signs.\") check_opposite_sign {\n        in(x: 0, y: -152, name: \"integer_a\") property(Number) integer_a_4e89a3\n        in(x: 0, y: 67, name: \"integer_b\") property(Number) integer_b_ebddd6\n\n        out(x: 288, y: 61) property(Bool) output_50c3d2\n\n        instance(x: -9, y: -46) sign_a_d90b7a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -42, y: 190) sign_b_9fa0f7 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        integer_a_4e89a3 -> sign_a_d90b7a.left\n        integer_b_ebddd6 -> sign_a_d90b7a.right\n\n        integer_b_ebddd6 -> sign_b_9fa0f7.left\n        integer_a_4e89a3 -> sign_b_9fa0f7.right\n\n\n        instance(x: 12, y: -25) ifexpression_7c8d76 root.Std_k98ojb.Std.IfExpression {}\n            {\n                sign_a_d90b7a.result -> ifexpression_7c8d76.gen_0\n                sign_b_9fa0f7.result -> ifexpression_7c8d76.gen_1\n                \n                ifexpression_7c8d76.value -> output_50c3d2\n            }\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -237, y: 456, name: \"inputNumber\") property(Number) input_f0be66\n        out(x: -298, y: 249, name: \"isDivisibleByEleven\") property(Bool) output_1fddfe\n\n        instance(x: -176, y: 358) modulo_d7d3ca root.Std_k98ojb.Math.Modulo {}\n        input_f0be66 -> modulo_d7d3ca.value\n        11 -> modulo_d7d3ca.divisor\n        modulo_d7d3ca.result -> output_1fddfe\n    }\n\n    instance(x: -245, y: 89) is_divisible_by_11_a0b6e1 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Replace all occurrences of one character with another\") replace_chars {\n        in(x: 0, y: 175, name: \"inputString\") property(String) input_string\n        in(x: 342, y: 175, name: \"searchChar\") property(String) search_char\n        in(x: 684, y: 175, name: \"replaceChar\") property(String) replace_char\n\n        out(x: 0, y: 300, name: \"resultString\") property(String) result_string\n        \n        instance(x: 294, y: 175) stringReplace root.Std_k98ojb.Strings.Replace {}\n\n        input_string -> stringReplace.input\n        search_char -> stringReplace.search\n        replace_char -> stringReplace.replace\n\n        stringReplace.output -> result_string\n    }\n\n    instance(x: 0, y: -25) replace_chars_function root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -210, y: 34, name: \"input\") property(String) input_ai\n    out(x: 354, y: 78, name: \"output\") property(String) output_ai\n\n    instance(x: 164, y: 77) tolower_2b0c9d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_2b0c9d.input\n    tolower_2b0c9d.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Get unique items from a list\") Unique {\n        in(x: -462, y: 103) property(List) input_ai\n        out(x: -75, y: 246) property(List) output_ai\n        instance(x: -189, y: 103) filter_5a0bfc root.Std_k98ojb.Iteration.Filter {\n            handler: \"not list.Contains(output_ai, it)\"\n        }\n        input_ai -> filter_5a0bfc.items\n        filter_5a0bfc.output_list -> output_ai\n    }\n\n    func(doc:\"Calculate product of a list\") Product {\n        in(x: -436, y: 127) property(List) numbers_ai\n        out(x: 298, y: 127) number result_ai\n        instance(x: -189, y: 127) reduce_04b5a1 root.Std_k98ojb.Iteration.Reduce {\n            initial: \"1\"\n            handler: \"Math.Mul(it, item)\"\n        }\n        numbers_ai -> reduce_04b5a1.item\n        reduce_04b5a1.result -> result_ai\n    }\n\n    func(doc:\"Calculate product of unique items in a list\") UniqueProduct {\n        in(x: -689, y: 73) property(List) inputList_ai\n        out(x: 298, y: 73) number output_ai\n        instance(x: -415, y: 73) unique_0b3cfc root.main.Unique {}\n        instance(x: 61, y: 73) product_0a0dfc root.main.Product {}\n        inputList_ai -> unique_0b3cfc.input_ai\n        unique_0b3cfc.output_ai -> product_0a0dfc.numbers_ai\n        product_0a0dfc.result_ai -> output_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds dissimilar elements in the given two lists\") dissimilar_elements {\n        in(x: -315, y: 22, name: \"list1\") property(List) list1_016b2e\n        in(x: -287, y: 24, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 359, y: -12, name: \"dissimilarElements\") property(List) dissimilarElements_6cdeaf\n\n        instance(x: -117, y: 26) union_ebdaa8 root.Std_k98ojb.Sets.Union {}\n        instance(x: -117, y: 70) intersection_33ad55 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 142, y: 62) difference_c6e6c8 root.Std_k98ojb.Sets.Difference {}\n\n        union_ebdaa8.left -> union_ebdaa8.right\n        list1_016b2e -> intersection_33ad55.left\n        list2_c8f404 -> intersection_33ad55.right\n        list1_016b2e -> difference_c6e6c8.left\n        union_ebdaa8.union -> difference_c6e6c8.right\n\n        intersection_33ad55.intersect -> difference_c6e6c8.left\n        difference_c6e6c8.difference -> dissimilarElements_6cdeaf\n    }\n\n    \n\n    instance(x: 294, y: -170) dissimilar_elements_f4d1a0 root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -205, y: 154, name: \"list\") property(List) list_38b0f5\n        in(x: -205, y: 196, name: \"rotateBy\") property(Number) rotateBy_ea97db\n\n        out(x: 813, y: 147, name: \"rotatedList\") property(List) data_0_0\n        getter(x: -205, y: 236, name: \"getter_89eacf\") getter_89eacf = listLength\n\n        instance(x: -205, y: 74) length_d73d1f root.Std_k98ojb.List.Length {}\n        setter(x: 317, y: 262, name: \"setter_5c3aeb\") setter_5c3aeb = listLength\n        instance(x: -205, y: 121) modulo_dfc4e9 root.Std_k98ojb.Math.Modulo {}\n        getter(x: -205, y: 316, name: \"getter_e7d1c6\") getter_e7d1c6 = rotateBy\n        instance(x: 552, y: 147) slice_f0a98e root.Std_k98ojb.List.Slice {}\n        setter_5c3aeb.value -> length_d73d1f.list\n        list_38b0f5 -> length_d73d1f.list\n        getter_e7d1c6.value -> modulo_dfc4e9.value\n        getter_89eacf.value -> modulo_dfc4e9.divisor\n        0 -> slice_f0a98e.start\n        modulo_dfc4e9.result -> slice_f0a98e.end\n        list_38b0f5 -> slice_f0a98e.list\n        -1 -> slice_f0a98e.end_1\n        slice_f0a98e.restOfList -> data_0_0\n    }\n\n    \n\n    instance(x: 276, y: -43) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "func(doc: \"sums up all elements in an array\") ArraySum {\n        in(x: -312, y: 78, name: \"items\") property(List) items_504e6b\n        out(x: -92, y: -125, name: \"output\") property(Number) output_aeb9f5\n\n        instance(x: -312, y: -99) sum_7c8d3a root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n            expression: \"accumulator + item\"\n        }\n        items_504e6b -> sum_7c8d3a.items\n        sum_7c8d3a.output -> output_aeb9f5\n\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 158, y: -174) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> for_8cb3f6.item\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n            instance(x: 106, y: 17) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            \n            element_5f51f7 -> lessthanorequal_f11fda.left\n            input_f5c03d -> lessthanorequal_f11fda.right\n            \n            lessthanorequal_f11fda.result -> out_d0fd24\n        } -> for_8cb3f6.items\n        \n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n\n        if_07b8c7.predicate <- expression_b720d7.result\n        if_07b8c7.execute <- for_8cb3f6.onItem\n        \n        execute_27b8c3 -> for_8cb3f6.reset\n        \n        if_07b8c7.value -> out_f3db9f\n\n        add_b4554f.first <- for_8cb3f6.index\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        \n        if_07b8c7.else -> continue_8ba06b\n\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8b0e4d\n        in(x: 789, y: 101112, name: \"num2\") property(Number) num2_7a2f5c\n\n        out(x: -36, y: 312, name: \"output\") property(Bool) output_4d6b6e\n\n        instance(x: 390, y: 189) ifexpression_7db5d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num1 < 0 && num2 > 0) || (num1 > 0 && num2 < 0)\"\n        }\n        num1_8b0e4d -> ifexpression_7db5d5.num1\n        num2_7a2f5c -> ifexpression_7db5d5.num2\n        ifexpression_7db5d5.value -> output_4d6b6e\n    }\n\n    \n\n    instance(x: 390, y: -18) check_opposite_signs_7f3f5a root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -240, y: 36, name: \"input\") property(Number) input_f5c03d\n        out(x: -289, y: -75, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: -168, y: 48) modulo_6bddd9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6bddd9.value\n        11 -> modulo_6bddd9.divisor\n        modulo_6bddd9.result -> out_f3db9f\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_67b9d6\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_b2f30a\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 400, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        oldChar_67b9d6 -> replace_306f69.search\n        newChar_b2f30a -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_8b4e9d root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9b7e2d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9b7e2d.input\n    tolower_9b7e2d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -304, y: 215, name: \"numbers\") property(List) inputList_ai\n        out(x: 367, y: 219, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -88, y: 215) removeDuplicates_4d0bdc root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 367, y: 215) reduceProduct_4d0bdc root.Std_k98ojb.Iteration.Reduce {\n            initial: 1\n            operation: \"a * b\"\n        }\n\n        inputList_ai -> removeDuplicates_4d0bdc.items\n        removeDuplicates_4d0bdc.output_list -> reduceProduct_4d0bdc.item\n        reduceProduct_4d0bdc.result -> outputProduct_ai\n\n    }\n    \n    instance(x: -32, y: 157) uniqueproduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9b8a\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_bf3e6c\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7d9b8a\n\n        instance(x: -105, y: 186) differenceList_a1b2c3 root.Std_k98ojb.Sets.Difference {}\n        list1_3d9b8a -> differenceList_a1b2c3.left\n        list2_bf3e6c -> differenceList_a1b2c3.right\n\n        instance(x: -105, y: 126) reverseDifferenceList_d4e5f6 root.Std_k98ojb.Sets.Difference {}\n        list2_bf3e6c -> reverseDifferenceList_d4e5f6.left\n        list1_3d9b8a -> reverseDifferenceList_d4e5f6.right\n\n        instance(x: -105, y: 66) concatLists_g7h8i9 root.Std_k98ojb.List.Concat {}\n        differenceList_a1b2c3.difference -> concatLists_g7h8i9.left\n        reverseDifferenceList_d4e5f6.difference -> concatLists_g7h8i9.right\n\n        concatLists_g7h8i9.list -> output_7d9b8a\n    }\n\n    \n\n    instance(x: 105, y: 246) FindDissimilarInstance root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8e4bdf\n        in(x: -169, y: 274, name: \"rotate_by\") property(Number) rotateBy_0d9fbc\n\n        out(x: 544, y: 232, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -168, y: 171) generateRange_6eacf5 root.Std_k98ojb.List.GenerateRange {\n            from: 0,\n            to: rotateBy_0d9fbc\n        }\n        instance(x: 342, y: 232) slice_6a7c9a root.Std_k98ojb.List.Slice {}\n        instance(x: 512, y: 232) concat_6eacf5 root.Std_k98ojb.List.Concat {}\n        list_8e4bdf -> generateRange_6eacf5.to\n        rotateBy_0d9fbc -> generateRange_6eacf5.from\n        generateRange_6eacf5.list -> slice_6a7c9a.end\n        list_8e4bdf -> slice_6a7c9a.list\n        0 -> slice_6a7c9a.start\n        slice_6a7c9a.result -> concat_6eacf5.right\n        list_8e4bdf -> concat_6eacf5.left\n        concat_6eacf5.result -> data_0_0\n    }\n\n    \n\n    instance(x: -231, y: 11) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 154, y: -203, name: \"num1\") property(Number) num1_7f9a8e\n        in(x: 154, y: -164, name: \"num2\") property(Number) num2_c4b4c5\n\n        out(x: 245, y: 30) property(Bool) output_7d7a2b\n\n        instance(x: 248, y: 97) ifexpression_6e9f14 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num1 < 0 ? num2 > 0 : num2 < 0\"\n        }\n        num1_7f9a8e -> ifexpression_6e9f14.gen_0\n        num2_c4b4c5 -> ifexpression_6e9f14.gen_1\n        ifexpression_6e9f14.value -> output_7d7a2b\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -35, y: 204, name: \"input\") property(Number) input_8f4a7d\n        in(x: -16, y: 98, name: \"execute\") trigger() execute_c4b6e7\n\n        out(x: 143, y: -54, name: \"out\") property(Bool) out_f20c3f\n        instance(x: -319, y: -143) modulo_8a7d95 root.Std_k98ojb.Math.Modulo {}\n        input_8f4a7d -> modulo_8a7d95.value\n        11 -> modulo_8a7d95.divisor\n        modulo_8a7d95.result -> out_f20c3f\n        execute_c4b6e7 -> modulo_8a7d95.reset\n    }\n\n    \n\n    instance(x: -25, y: 155) is_divisible_by_11_d4f5b6 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of 'oldChar' with 'newChar'.\") replace_char {\n        in(x: -230, y: 0, name: \"inputString\") property(String) input_0\n        in(x: -230, y: 150, name: \"oldChar\") property(String) input_1\n        in(x: -230, y: 300, name: \"newChar\") property(String) input_2\n\n        out(x: 776, y: 0, name: \"outputString\") property(String) output_0\n\n        instance(x: 546, y: 150) replace_foo root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_foo.input\n        input_1 -> replace_foo.search\n        input_2 -> replace_foo.replace\n        replace_foo.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_char_root root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    in(x: -531, y: 2, name: \"input\") property(String) input_ai\n    out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n    instance(x: 769, y: 76) tolower_8b5e1a root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_8b5e1a.input\n    tolower_8b5e1a.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -165, y: 204, name: \"input_list\") property(List) inputList_ai\n        out(x: 378, y: 209, name: \"product\") property(Number) outputProduct_ai\n        \n        instance(x: 420, y: 169) unique_5b5b5b root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        \n        instance(x: 372, y: 273) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 1\n            reducer: \"Math.Mul(result, it)\"\n        }\n\n        inputList_ai -> unique_5b5b5b.items\n        unique_5b5b5b.output_list -> product_7b3b7b.item\n        product_7b3b7b.result -> outputProduct_ai\n        \n    }\n    \n    instance(x: -218, y: 104) removeDuplicates root.main.UniqueProduct {\n        inputList_ai: [4, 3, 3, 5, 6, 4]\n    }\n\n}"
            ],
            "18": [
                "func(doc: \"Finds dissimilar elements between two lists.\") FindDissimilar {\n        in(x: -205, y: 136, name: \"list1\") property(List) list1_4d78a9\n        in(x: -165, y: 141, name: \"list2\") property(List) list2_eb9e7f\n\n        out(x: 205, y: 136, name: \"output\") property(List) output_8c4d9a\n\n        instance(x: -104, y: 136) differenceList_8eacf9 root.Std_k98ojb.Sets.Difference {}\n        list1_4d78a9 -> differenceList_8eacf9.left\n        list2_eb9e7f -> differenceList_8eacf9.right\n        differenceList_8eacf9.difference -> output_8c4d9a\n\n        instance(x: 30, y: 136) reverseDifferenceList_caf564 root.Std_k98ojb.Sets.Difference {}\n        list2_eb9e7f -> reverseDifferenceList_caf564.left\n        list1_4d78a9 -> reverseDifferenceList_caf564.right\n        reverseDifferenceList_caf564.difference -> differenceList_8eacf9.right\n\n    }\n\n    \n\n    instance(x: 320, y: -179) FindDissimilar_d6b3f8 root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a list by the specified number of positions to the right.\") rotate {\n        in(x: -145, y: 203, name: \"execute\") trigger() execute_8f6e7d\n        in(x: -99, y: 304, name: \"list\") property(List) list_ea9c6b\n        in(x: -147, y: 352, name: \"positions\") property(Number) positions_680f7b\n\n        out(x: 153, y: 315, name: \"output\") property(List) data_0_0\n        out(x: 95, y: 408, name: \"continue\") trigger() continue_ba2c4d\n\n        instance(x: -76, y: 264) modulo_d3f1e7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -76, y: 356) sub_04634b root.Std_k98ojb.Math.Sub {}\n        instance(x: 225, y: 264) slice_e1c9a9 root.Std_k98ojb.List.Slice {}\n        instance(x: -76, y: 448) length_0f3d7e root.Std_k98ojb.List.Length {}\n        instance(x: 152, y: 448) concat_e3c5a9 root.Std_k98ojb.List.Concat {}\n\n        execute_8f6e7d -> sub_04634b.execute\n        positions_680f7b -> sub_04634b.second\n        list_ea9c6b.length -> length_0f3d7e.list\n        length_0f3d7e.value -> sub_04634b.first\n        sub_04634b.result -> modulo_d3f1e7.divisor\n        positions_680f7b -> modulo_d3f1e7.value\n        list_ea9c6b.length -> slice_e1c9a9.end\n        modulo_d3f1e7.result -> slice_e1c9a9.start\n        0 -> slice_e1c9a9.end\n        list_ea9c6b -> slice_e1c9a9.list\n        slice_e1c9a9.characters -> concat_e3c5a9.right\n        modulo_d3f1e7.result -> sub_04634b.first\n        0 -> sub_04634b.second\n        list_ea9c6b.length -> sub_04634b.first\n        positions_680f7b -> sub_04634b.second\n        sub_04634b.result -> slice_e1c9a9.start\n        list_ea9c6b -> slice_e1c9a9.list\n        slice_e1c9a9.characters -> concat_e3c5a9.left\n        concat_e3c5a9.result -> data_0_0\n        continue_ba2c4d -> length_0f3d7e.execute\n    }\n\n    \n\n    instance(x: -262, y: 18) rotate_d6bddd root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Sums all numbers in an array\") sum_array {\n        in(x: -450, y: 123, name: \"items\") property(List) items_5d0f8a\n        out(x: 709, y: 126, name: \"output\") property(Number) output_4eacf4\n\n        instance(x: -176, y: -126) reduce_a3d5b8 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"+\"\n            initial_value: 0\n        }\n        items_5d0f8a -> reduce_a3d5b8.items\n        reduce_a3d5b8.output_list -> output_4eacf4\n\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -160, name: \"input\") property(Number) input_f5c03d\n        in(x: 289, y: -78, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 349, y: 201, name: \"out\") property(Bool) out_f3db9f\n        out(x: 526, y: 213, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: -74, y: -263) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -56, y: -201) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 47, y: -123) modulo_d5d5a9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 224, y: -105) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 68, y: -37) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 248, y: -153) not_e9f6d0 root.Std_k98ojb.Logic.Not {}\n        generaterange_038fce.from -> modulo_d5d5a9.divisor\n        input_f5c03d -> modulo_d5d5a9.value\n        2 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_d5d5a9.divisor\n        modulo_d5d5a9.result -> and_80a119.left\n        0 -> and_80a119.right\n        and_80a119.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.value -> not_e9f6d0.input\n        not_e9f6d0.output -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -159, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(x: -581, y: 346) has_opposite_sign {\n        in(x: -127, y: 502, name: \"num1\") property(Number) num1_faf6c2\n        in(x: 269, y: 356, name: \"num2\") property(Number) num2_a49ae4\n\n        out(x: -57, y: -330, name: \"output\") property(Bool) output_18909a\n        \n        instance(x: -247, y: 52) mul_f6d3e7 root.Std_k98ojb.Math.Mul {}\n        \n        num1_faf6c2 -> mul_f6d3e7.first\n        num2_a49ae4 -> mul_f6d3e7.second\n\n        instance(x: -30, y: 278) if_5f7df4 root.Std_k98ojb.Std.If {}\n        \n        mul_f6d3e7.result -> if_5f7df4.input\n        true -> if_5f7df4.then.output\n        false -> if_5f7df4.else.output\n        \n        if_5f7df4.value -> output_18909a\n    \n    }"
            ],
            "3": [
                "func(doc: \"Checks if a given number is divisible by 11.\") is_divisible_by_11 {\n    in(x: -63, y: -289) property(Number) input_number\n    \n    out(x: 140, y: 170) property(Bool) output_is_divisible\n\n    instance(x: 55, y: -184) modulo_9fbc3d root.Std_k98ojb.Math.Modulo {}\n    instance(x: 261, y: -359) equal_6a70e7 root.Std_k98ojb.Logic.Equal {}\n\n    input_number -> modulo_9fbc3d.value\n    11 -> modulo_9fbc3d.divisor\n\n    modulo_9fbc3d.result -> equal_6a70e7.left\n    0 -> equal_6a70e7.right\n    \n    equal_6a70e7.result -> output_is_divisible\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Replace all occurrences of a specified character with another one.\") replace_characters {\n        in(x: -102, y: 67, name: \"inputString\") property(String) input_string\n        in(x: 54, y: 98, name: \"oldChar\") property(String) old_char\n        in(x: 54, y: 123, name: \"newChar\") property(String) new_char\n\n        out(x: 403, y: 67, name: \"outputString\") property(String) output_string\n        \n        instance(x: -89, y: 67) replace_instance root.Std_k98ojb.Strings.Replace {}\n        \n        input_string -> replace_instance.input\n        old_char -> replace_instance.search\n        new_char -> replace_instance.replace\n\n        replace_instance.output -> output_string\n    }\n    \n    instance(x: 315, y: -250) replace_characters_695 root.main.replace_characters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    in(x: -274, y: 106) property(String) input_ai\n    out(x: 325, y: 111) property(String) output_ai\n    \n    instance(x: 63, y: 96) tolower_4e8a9d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_ai -> tolower_4e8a9d.input\n    tolower_4e8a9d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Remove duplicates from a list and find their product.\") UniqueProduct {\n        in(x: -164, y: 327, name: \"numbers\") property(List) numbers_ai\n        out(x: 401, y: 398, name: \"product\") property(Number) product_ai\n        instance(x: -50, y: 199) unique_6d1a5 root.Std_k98ojb.Iteration.Reduce {\n            seed: 1\n            handler: \"root.Std_k98ojb.Logic.NotEqual\"\n            context: null\n        }\n        instance(x: -357, y: 429) filtered_numbers_a0f root.Std_k98ojb.Iteration.Map {\n            handler: \"root.Std_k98ojb.List.GetAt { index: it }\"\n            itemIndex: true\n            context: false\n        }\n        instance(x: -357, y: 169) previous_value_02e root.Std_k98ojb.Math.Mul {\n        }\n        numbers_ai -> filtered_numbers_a0f.items\n        unique_6d1a5.input_list -> unique_6d1a5.item\n        filtered_numbers_a0f.result -> unique_6d1a5.accumulatedValue\n        previous_value_02e.first -> product_ai\n        previous_value_02e.second -> unique_6d1a5.accumulatedValue\n    }\n\n    instance(x: -49, y: 37) uniqueProduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds dissimilar elements in the given two lists\") dissimilar_elements {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"dissimilarList\") property(List) dissimilarList_65a3b9\n        \n        instance(x: -100, y: -120) difference_d7c1e1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: -120) reverse_a8f54d root.Std_k98ojb.List.Reversed {}\n        \n        list1_016b2e -> difference_d7c1e1.left\n        list2_c8f404 -> difference_d7c1e1.right\n        difference_d7c1e1.difference -> dissimilarList_65a3b9\n        \n        list2_c8f404 -> reverse_a8f54d.list\n        reverse_a8f54d.reversed -> difference_d7c1e1.left\n\n    }\n\n    \n\n    instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -213, y: 52, name: \"execute\") trigger() execute_0d8a4e\n        in(x: -276, y: 192, name: \"list\") property(List) list_c8b34c\n        in(x: -44, y: 234, name: \"rotateBy\") number(rotateBy_f0f5a5)\n\n        out(x: 159, y: 64, name: \"outputList\") property(List) outputList_7d8dce\n        instance(x: -59, y: 92) modulo_a3eacf root.Std_k98ojb.Math.Modulo {\n            first: rotateBy_f0f5a5\n            second: listLength_c46154\n        }\n        instance(x: -55, y: -278) slice_5c3d15 root.Std_k98ojb.List.Slice {}\n        instance(x: 133, y: -309) concat_b3f5a6 root.Std_k98ojb.List.Concat {}\n        instance(x: -49, y: 273) length_465d5c root.Std_k98ojb.List.Length {\n            list: list_c8b34c\n        }\n        \n        execute_0d8a4e -> modulo_a3eacf.execute\n        \n        list_c8b34c -> slice_5c3d15.list\n        length_465d5c.value -> modulo_a3eacf.second\n        rotateBy_f0f5a5 -> modulo_a3eacf.first\n\n        modulo_a3eacf.result -> slice_5c3d15.start\n        \n        list_c8b34c -> slice_5c3d15.list\n\n        -1 -> slice_5c3d15.end\n        slice_5c3d15.rest -> concat_b3f5a6.right\n\n        list_c8b34c -> slice_0.result\n        \n        0 -> slice_0.start\n        modulo_a3eacf.result -> slice_0.end\n\n        slice_0.result -> concat_b3f5a6.left\n\n        concat_b3f5a6.result -> outputList_7d8dce\n    }\n}"
            ],
            "42": [
                "func(doc: \"sums all elements in an array\") sumArray {\n        in(x: -312, y: 157, name: \"list\") property(List) list_8c40d6\n        out(x: -295, y: 534, name: \"result\") property(Number) result_3e4a9f\n\n        instance(x: -347, y: 186) reduce_a5b045 root.root.Iteration.Reduce {\n            handler: sum\n        }\n        list_8c40d6 -> reduce_a5b045.items\n        0 -> reduce_a5b045.accu\n        reduce_a5b045.output -> result_3e4a9f\n\n        func(doc: \"reducer function\") sum {\n            in(x: -81, y: 76) trigger() execute_c2d0c7\n            in(x: -165, y: 287) trigger() accu_f03b67\n            in(x: -194, y: 384) trigger() value_2a3f5e\n\n            out(x: -34, y: 415) trigger() continue_5c06d0\n            out(x: -159, y: 479) property(Number) sum_4b6084\n\n            Math.Add {\n                first: accu_f03b67\n                second: value_2a3f5e\n                result: sum_4b6084\n            }\n            execute_c2d0c7 -> continue_5c06d0\n        }\n\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime_number {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 602, y: -165) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 874, y: -155) greaterthan_fd3c94 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 2056, y: -356) if_7e8a5f root.Std_k98ojb.Std.If {}\n        instance(x: 1479, y: -207) modulo_a6c4d5 root.Std_k98ojb.Math.Modulo {}\n\n        for_8cb3f6.items -> List.GenerateRange(2, Math.Floor(Math.Sqrt(input_f5c03d)))\n        for_8cb3f6.index -> modulo_a6c4d5.gen_0\n        input_f5c03d -> modulo_a6c4d5.gen_1\n        modulo_a6c4d5.result -> if_7e8a5f.input\n\n        greaterthan_fd3c94.left -> Math.LessThanOrEqual(Math.Add(for_8cb3f6.index, 2), List.Length(List.GenerateRange(2, Math.Floor(Math.Sqrt(input_f5c03d)))))\n        greaterthan_fd3c94.right -> 0\n        if_7e8a5f.else -> for_8cb3f6.next\n        if_7e885f.then -> out_f3db9f(Bool(False))\n        for_8cb3f6.done -> out_f3db9f(Bool(True))\n\n        execute() {\n            input_f5c03d -> modulo_a6c4d5.gen_1\n            if_7e8a5f.then -> out_f3db9f(Bool(False))\n        }\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8b0dce\n        in(x: 789, y: -101, name: \"num2\") property(Number) num2_7f3a2c\n\n        out(x: 321, y: 654, name: \"output\") property(Bool) output_6b4d5e\n\n        instance(x: 987, y: -321) ifexpression_70b44a root.Std_k98ojb.Std.IfExpression {}\n        num1_8b0dce -> ifexpression_70b44a.a\n        num2_7f3a2c -> ifexpression_70b44a.b\n        instance(x: 654, y: -21) mul_9eacf5 root.Std_k98ojb.Math.Mul {}\n        num1_8b0dce -> mul_9eacf5.first\n        num2_7f3a2c -> mul_9eacf5.second\n        mul_9eacf5.result -> ifexpression_70b44a.expression\n        instance(x: 321, y: -65) lessorequal_8d9e4d root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_9eacf5.result -> lessorequal_8d9e4d.left\n        instance(x: 0, y: 321) zero_7f6a4c root.Std_k98ojb.Math.Expression {}\n        zero_7f6a4c.expression: \"0\"\n        zero_7f6a4c.result -> lessorequal_8d9e4d.right\n        lessorequal_8d9e4d.result -> ifexpression_70b44a.gen_1\n        ifexpression_70b44a.result -> output_6b4d5e\n    }\n\n    \n\n    instance(x: 321, y: -65) check_opposite_signs_8f9cbb root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -240, y: 368, name: \"input\") property(Number) input_f5c03d\n        out(x: -279, y: 35) property(Bool) output_5f51f7\n\n        instance(x: -154, y: 311) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> output_5f51f7\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_67b4a7\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_2f30d4\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_5b1e9a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5b1e9a.input\n        oldChar_67b4a7 -> replace_5b1e9a.search\n        newChar_2f30d4 -> replace_5b1e9a.replace\n        replace_5b1e9a.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9f3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9f3b7b.input\n    tolower_9f3b7b.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -304, y: 215, name: \"numbers\") property(List) inputList_ai\n        out(x: 367, y: 219, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -88, y: 215) removeDuplicates_4d0a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 367, y: 215) reduceProduct_4d0b root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * it\"\n        }\n\n        inputList_ai -> removeDuplicates_4d0a.items\n        removeDuplicates_4d0a.output_list -> reduceProduct_4d0b.item\n        reduceProduct_4d0b.result -> outputProduct_ai\n\n    }\n\n    instance(x: -32, y: 127) uniqueProduct root.main.UniqueProduct {\n        numbers: [5, 3, 5, 2, 3, 8]\n    }\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9e8b\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_fadea4\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7f3d9c\n\n        instance(x: -18, y: 246) difference_6b4e2b root.Std_k98ojb.Sets.Difference {}\n        list1_3d9e8b -> difference_6b4e2b.left\n        list2_fadea4 -> difference_6b4e2b.right\n        difference_6b4e2b.difference -> output_7f3d9c\n\n        instance(x: 50, y: 246) reverse_difference_81bdfb root.Std_k98ojb.Sets.Difference {}\n        list2_fadea4 -> reverse_difference_81bdfb.left\n        list1_3d9e8b -> reverse_difference_81bdfb.right\n        reverse_difference_81bdfb.difference -> output_7f3d9c\n\n    }\n\n    \n\n    instance(x: 205, y: -164) find_dissimilar_c9a2a7 root.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8e9b5d\n        in(x: -167, y: 239, name: \"rotate_by\") property(Number) rotateBy_7f3a4c\n\n        out(x: 165, y: 203, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -84, y: 198) generateRange_6d5b5e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 175, y: 238) slice_6c4a7f root.Std_k98ojb.List.Slice {}\n        instance(x: -80, y: 238) add_6d5b5e root.Std_k98ojb.Math.Add {}\n        list_8e9b5d -> generateRange_6d5b5e.to\n        rotateBy_7f3a4c -> add_6d5b5e.second\n        0 -> generateRange_6d5b5e.from\n        add_6d5b5e.result -> slice_6c4a7f.start\n        list_8e9b5d -> slice_6c4a7f.list\n        -1 -> slice_6c4a7f.end\n        slice_6c4a7f.restOfList -> data_0_0\n    }\n\n    \n\n    instance(x: 23, y: 18) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 154, y: -203, name: \"num1\") property(Number) num1_faf6c2\n        in(x: 78, y: 195, name: \"num2\") property(Number) num2_a49ae4\n\n        out(x: 532, y: 135, name: \"output\") property(Bool) output_b5dba9\n\n        instance(x: -60, y: 87) mul_6b1f5e root.Std_k98ojb.Math.Mul {}\n        num1_faf6c2 -> mul_6b1f5e.first\n        num2_a49ae4 -> mul_6b1f5e.second\n        instance(x: 30, y: -72) ifexpression_c0d47a root.Std_k98ojb.Std.IfExpression {}\n        mul_6b1f5e.result -> ifexpression_c0d47a.expression\n        ifexpression_c0d47a.value -> output_b5dba9\n\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -35, y: 204, name: \"input\") property(Number) input\n        in(x: -74, y: 69, name: \"execute\") trigger() execute\n\n        out(x: -38, y: -228, name: \"out\") property(Bool) output\n\n        instance(x: -150, y: -129) modulo_eebddd root.Std_k98ojb.Math.Modulo {}\n        input -> modulo_eebddd.value\n        11 -> modulo_eebddd.divisor\n        modulo_eebddd.result -> output\n        execute -> modulo_eebddd.execute\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -150, y: 0, name: \"searchChar\") property(String) searchChar_0\n        in(x: -70, y: 0, name: \"replaceChar\") property(String) replaceChar_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 325, y: 0) replace_c94e4d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_c94e4d.input\n        searchChar_0 -> replace_c94e4d.search\n        replaceChar_0 -> replace_c94e4d.replace\n        replace_c94e4d.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_f83a6c root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    in(x: -531, y: 2, name: \"input\") property(String) input_ai\n    out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n    instance(x: 769, y: 76) tolower_8f5e1d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_8f5e1d.input\n    tolower_8f5e1d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -165, y: 204, name: \"input_list\") property(List) inputList_ai\n        out(x: 376, y: 298, name: \"product\") property(Number) outputProduct_ai\n        \n        instance(x: 444, y: 178) removeDuplicates_5a0c5a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        \n        instance(x: 362, y: 296) calculateProduct_4f5e4f root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 1\n            handler: \"acc * it\"\n        }\n\n        inputList_ai -> removeDuplicates_5a0c5a.items\n        removeDuplicates_5a0c5a.output_list -> calculateProduct_4f5e4f.item\n        calculateProduct_4f5e4f.result -> outputProduct_ai\n\n    }\n    \n    instance(x: -36, y: 127) uniqueproduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"Finds dissimilar elements between two lists.\") FindDissimilar {\n        in(x: -205, y: 136, name: \"list1\") property(List) list1_8a9b7c\n        in(x: -205, y: 248, name: \"list2\") property(List) list2_b5d1f9\n\n        out(x: 224, y: 368, name: \"output\") property(List) output_2e7cfd\n\n        instance(x: -205, y: 360) difference_5b3cc7 root.Std_k98ojb.Sets.Difference {}\n        list1_8a9b7c -> difference_5b3cc7.left\n        list2_b5d1f9 -> difference_5b3cc7.right\n\n        instance(x: 204, y: 360) reverse_difference_e3e9e2 root.Std_k98ojb.Sets.Difference {}\n        list2_b5d1f9 -> reverse_difference_e3e9e2.left\n        list1_8a9b7c -> reverse_difference_e3e9e2.right\n\n        instance(x: 0, y: 468) concat_febdbb root.Std_k98ojb.List.Concat {}\n        difference_5b3cc7.difference -> concat_febdbb.left\n        reverse_difference_e3e9e2.difference -> concat_febdbb.right\n\n        concat_febdbb.list -> output_2e7cfd\n    }\n\n    \n\n    instance(x: 401, y: -65) FindDissimilar_8d6f7a root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a list by the specified number of positions to the right.\") rotate {\n        in(x: -145, y: 203, name: \"execute\") trigger() execute_8f2e7b\n        in(x: -69, y: 323, name: \"list\") property(List) list_e2c64d\n        in(x: -143, y: 357, name: \"positions\") property(Number) positions_0a281c\n\n        out(x: 159, y: 367, name: \"output\") property(List) data_0_0\n        out(x: 140, y: 453, name: \"continue\") trigger() continue_fbbd7e\n\n        instance(x: -28, y: 397) subtract_d5a6a2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 145, y: 206) slice_53dbb5 root.Std_k98ojb.List.Slice {}\n        instance(x: -16, y: 437) modulo_4e7d9c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 145, y: 297) slice_c7f95c root.Std_k98ojb.List.Slice {}\n\n        execute_8f2e7b -> subtract_d5a6a2.first\n        positions_0a281c -> subtract_d5a6a2.second\n        list_e2c64d -> modulo_4e7d9c.value\n        positions_0a281c -> modulo_4e7d9c.divisor\n        modulo_4e7d9c.result -> slice_c7f95c.start\n        0 -> slice_c7f95c.end\n        list_e2c64d -> slice_c7f95c.list\n        subtract_d5a6a2.result -> slice_53dbb5.start\n        -1 -> slice_53dbb5.end\n        list_e2c64d -> slice_53dbb5.list\n        concat_80a9dc.zipped -> data_0_0\n        continue_fbbd7e <- slice_c7f95c.done\n        continue_fbbd7e <- slice_53dbb5.done\n\n        instance(x: 142, y: -6) zip_80a9dc root.Std_k98ojb.Iteration.Zip {\n            handler: \"Std_k98ojb.List.Add\"\n        }\n        slice_c7f95c.listWithItem -> zip_80a9dc.right\n        slice_53dbb5.listWithItem -> zip_80a9dc.left\n    }\n\n    \n\n    instance(x: -241, y: 26) rotate_6d7e7b root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"sums an array\") add_all {\n        in(x: -150, y: 230, name: \"items\") property(List) items_4d4a8e\n        out(x: 150, y: 160, name: \"output\") property(Number) output_c9bddd\n\n        instance(x: -70, y: 110) reduce_2f3c74 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"+\"\n            identity: 0\n        }\n        items_4d4a8e -> reduce_2f3c74.items\n        reduce_2f3c74.output_list -> output_c9bddd\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -160, name: \"input\") property(Number) input_f5c03d\n        in(x: 289, y: -79, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 341, y: 213, name: \"out\") property(Bool) out_f3db9f\n        out(x: 560, y: 203, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: -78, y: 421) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: -15, y: 241) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -108, y: 274) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: -36, y: 154) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % i == 0)\"\n        }\n        input_f5c03d -> for_8cb3f6.items\n        func() {\n            in(x: -132, y: 44, name: \"element\") property(Number) element_5f51f7\n\n            out(x: -92, y: 148, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: -168, y: 118) expression_3e92d5 root.Std_k98ojb.Math.Expression {\n                expression: \"(i != input)\"\n            }\n            element_5f51f7 -> expression_b720d7.gen_1\n            input_f5c03d -> expression_b720d7.gen_0\n            expression_b720d7.result -> if_07b8c7.predicate\n            if_07b8c7.execute -> out_d0fd24\n        } -> for_8cb3f6.handler\n        input_f5c03d -> lessthanorequal_f11fda.right\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        for_8cb3f6.index -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -14, y: 52) is_prime_b7e9d6 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(x: -581, y: 346) has_opposite_sign {\n        in(x: -127, y: 504, name: \"num1\") property(Number) num1_c6c99a\n        in(x: 439, y: 154, name: \"num2\") property(Number) num2_9e9c80\n\n        out(x: -796, y: 130, name: \"output\") property(Bool) output_cfeacf\n\n        instance(x: 143, y: 489) lessorequal_fba6b5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -62, y: -587) greaterthan_9b0f54 root.Std_k98ojb.Math.GreaterThan {}\n\n        num1_c6c99a -> lessorequal_fba6b5.left\n        num2_9e9c80 -> lessorequal_fba6b5.right\n\n        num2_9e9c80 -> greaterthan_9b0f54.left\n        num1_c6c99a -> greaterthan_9b0f54.right\n        \n        lessorequal_fba6b5.result -> output_cfeacf\n        greaterthan_9b0f54.result -> output_cfeacf\n\n    }"
            ],
            "3": [
                "func(doc: \"Checks if a given number is divisible by 11.\") is_divisible_by_11 {\n    in(x: -63, y: -289) property(Number) input_number\n    \n    out(x: 140, y: 174) property(Bool) output_is_divisible\n\n    instance(x: 54, y: -95) modulo_8bfb2a root.Std_k98ojb.Math.Modulo {}\n    input_number -> modulo_8bfb2a.value\n    11 -> modulo_8bfb2a.divisor\n    modulo_8bfb2a.result -> output_is_divisible\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Replace all occurrences of a specified character with another one.\") replace_characters {\n        in(x: -102, y: 67, name: \"inputString\") property(String) input_string\n        in(x: 54, y: 98, name: \"oldChar\") property(String) old_char\n        in(x: 54, y: 123, name: \"newChar\") property(String) new_char\n\n        out(x: 403, y: 67, name: \"outputString\") property(String) output_string\n        \n        instance(x: -89, y: 67) replace_std root.Std_k98ojb.Strings.Replace {}\n        \n        input_string -> replace_std.input\n        old_char -> replace_std.search\n        new_char -> replace_std.replace\n\n        replace_std.output -> output_string\n    }\n    \n    instance(x: 325, y: -147) main_replace_characters_695 root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    in(x: -274, y: 130) property(String) input_ai\n    out(x: 652, y: 132) property(String) output_ai\n    \n    instance(x: -16, y: 98) tolower_3f6b9d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_ai -> tolower_3f6b9d.input\n    tolower_3f6b9d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"get distinct items from a list\") Distinct {\n        in(x: 435, y: 267) property(List) input_ai\n        out(x: 304, y: -107) property(List) output_ai\n        instance(x: 98, y: 135) remove_duplicates_0b root.Std_k98ojb.Iteration.Filter {\n            handler: \"item.indexOf(it) == item.lastIndexOf(it)\"\n        }\n        input_ai -> remove_duplicates_0b.items\n        remove_duplicates_0b.output_list -> output_ai\n    }\n\n    func(doc:\"multiply the unique values\") MultiplyUnique {\n        in(x: 142, y: 689) property(List) input_list_ai\n        out(x: -375, y: 721) property(Number) result_ai\n        instance(x: 320, y: 872) reduce_9c root.Std_k98ojb.Iteration.Reduce {\n            context: \"1\"\n            handler: \"acc * it\"\n        }\n        input_list_ai -> Distinct {input_ai} list_ai\n        list_ai -> remove_duplicates_9c.root.Std_k98ojb.Iteration.Filter.items\n        reduce_9c.root.Std_k98ojb.Iteration.Reduce.result -> result_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds dissimilar elements in the given two lists\") dissimilar_elements {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"dissimilarList\") property(List) dissimilarList_6a5cde\n\n        instance(x: -121, y: -71) intersection_78d487 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 169, y: -103) difference_bfca8e root.Std_k98ojb.Sets.Difference {}\n\n        list1_016b2e -> intersection_78d487.left\n        list2_c8f404 -> intersection_78d487.right\n\n        intersection_78d487.intersect -> difference_bfca8e.left\n        list1_016b2e -> difference_bfca8e.right\n        \n        instance(x: 345, y: -95) reverseDifference_e540df root.Std_k98ojb.Sets.Difference {}\n        \n        intersection_78d487.intersect -> reverseDifference_e540df.left\n        list2_c8f404 -> reverseDifference_e540df.right\n        \n        instance(x: 399, y: -166) concatList_bc2a95 root.Std_k98ojb.List.Concat {}\n\n        difference_bfca8e.difference -> concatList_bc2a95.left\n        reverseDifference_e540df.difference -> concatList_bc2a95.right\n\n        concatList_bc2a95.list -> dissimilarList_6a5cde\n        \n    }\n    \n    \n\n    instance(x: 425, y: -186) dissimilar_elements_b6b3f7 root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -213, y: 52, name: \"execute\") trigger() execute_0d84f6\n        in(x: -279, y: 164, name: \"list\") property(List) list_cab6e3\n        in(x: -220, y: 180, name: \"rotateBy\") property(Number) rotateBy_3c3ae4\n\n        out(x: 574, y: 94, name: \"outputList\") property(List) data_0_0\n        setter(x: 6, y: -206, name: \"setter_dd8aeb\") setter_dd8aeb = rightSlice\n        getter(x: 616, y: 357, name: \"getter_d97f4b\") getter_d97f4b = leftSlice\n        getter(x: -205, y: 137, name: \"getter_8fd6cc\") getter_8fd6cc = list_cab6e3\n        instance(x: -433, y: 141) slice_d5f937 root.Std_k98ojb.List.Slice {\n            start: 0,\n            end: rotateBy_3c3ae4.value\n        }\n        setter_dd8aeb.continue -> concat_2e65cb.left\n        getter_8fd6cc.value -> slice_d5f937.list\n        execute_0d84f6 -> setter_dd8aeb.execute\n        1 -> slice_d5f937.end\n        rotateBy_3c3ae4.value - >slice_d5f937.start\n        getter_d97f4b.value -> concat_2e65cb.right\n        leftSlice -> data_0_0\n    }\n\n    func(doc: \"Gets a slice of the list from specified index to end\") getRightSlice {\n        in(x: -8, y: 13) property(List) fullList_cab6e3\n        in(x: 159, y: -42) property(Number) startIndex_0bdf7d\n\n        out(x: -62, y: 124) setter(slice_dd8aeb)\n        \n        instance(x: 188, y: -16) slice_d5f937 root.Std_k98ojb.List.Slice {}\n        getter(fullList_cab6e3) -> slice_d5f937.list\n        startIndex_0bdf7d.value -> slice_d5f937.start\n    }\n\n    func(doc: \"Gets a slice of the list from start to specified index\") getLeftSlice {\n        in(x: 142, y: -6) property(List) fullList_cab6e3\n        in(x: 304, y: -40) property(Number) endIndex_7a93c5\n\n        out(x: 302, y: 108) setter(slice_bf0cf1)\n\n        \n        instance(x: 188, y: 168) slice_d5f937 root.Std_k98ojb.List.Slice {}\n        getter(fullList_cab6e3) -> slice_d5f937.list\n        endIndex_7a93c5.value -> slice_d5f937.end\n    }\n\n    instance(x: -242, y: -31) rotate_def9ac root.main.rotate {}\n}"
            ],
            "42": [
                "func(doc: \"Sum all elements in an array\") SumArray {\n        in(x: 0, y: -341, name: \"list\") property(List) list_2a8f6c\n        out(x: 0, y: -159, name: \"sum\") property(Number) sum_7dfe5e\n\n        instance(x: -69, y: -261) reduce_3d8c78 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        list_2a8f6c -> reduce_3d8c78.items\n        setter(x: -485, y: -471, name: \"setter_bdf0fa\") setter_bdf0fa = sum\n        add_cce927.result -> setter_bdf0fa.new_value\n        0 -> reduce_3d8c78.accumulator\n        1 -> reduce_3d8c78.index\n        reduce_3d8c78.next -> add_cce927.execute\n        reduce_3d8c78.done -> setter_bdf0fa.execute\n        setter_bdf0fa.value -> sum_7dfe5e\n\n        instance(x: -186, y: -216) add_cce927 root.Std_k98ojb.Math.Add {}\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime_number {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 603, y: -293) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 754, y: -144) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % index == 0)\"\n        }\n        instance(x: 1496, y: -133) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> for_8cb3f6.items\n        2 -> for_8cb3f6.from\n        input_f5c03d -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_0\n\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.index -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n\n        for_8cb3f6.done -> continue_123456\n\n    }\n}\n\ninstance(x: 10, y: -50) is_prime_number_test root.main.is_prime_number {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if two numbers have opposite signs\") check_opposite_signs {\n        in(x: -123, y: 456, name: \"num1\") property(Number) num1_8a0bdc\n        in(x: 789, y: 321, name: \"num2\") property(Number) num2_bf9d6c\n\n        out(x: -321, y: 456, name: \"output\") property(Bool) output_0b9aeb\n\n        instance(x: 789, y: 123) ifexpression_6eacf5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num1 < 0 && num2 > 0 || num1 > 0 && num2 < 0\"\n        }\n        num1_8a0bdc -> ifexpression_6eacf5.gen_0\n        num2_bf9d6c -> ifexpression_6eacf5.gen_1\n        ifexpression_6eacf5.value -> output_0b9aeb\n    }\n\n    \n\n    instance(x: 321, y: -456) check_opposite_signs_789cde root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "func(doc: \"checks if a given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -240, y: 368, name: \"input\") property(Number) input_f5c03d\n        out(x: -279, y: 35) property(Bool) output_5f51f7\n\n        instance(x: -154, y: 311) modulo_6030c9 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_6030c9.value\n        11 -> modulo_6030c9.divisor\n        modulo_6030c9.result -> output_5f51f7\n    }"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of one character with another.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -158, y: 49, name: \"oldChar\") property(String) oldChar_67b4a7\n        in(x: -158, y: 98, name: \"newChar\") property(String) newChar_2f30d4\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_5b1e9a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5b1e9a.input\n        oldChar_67b4a7 -> replace_5b1e9a.search\n        newChar_2f30d4 -> replace_5b1e9a.replace\n        replace_5b1e9a.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_695b5e root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    in(x: -152, y: 30) property(String) input_ai\n    out(x: 410, y: 30) property(String) output_ai\n\n    instance(x: 188, y: 76) tolower_9f3b7b root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_9f3b7b.input\n    tolower_9f3b7b.output -> output_ai\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers\") UniqueProduct {\n        in(x: -304, y: 215, name: \"numbers\") property(List) inputList_ai\n        out(x: 367, y: 219, name: \"product\") property(Number) outputProduct_ai\n\n        instance(x: -88, y: 215) removeDuplicates_4d0a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        instance(x: 367, y: 215) reduceProduct_4d0b root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * it\"\n        }\n\n        inputList_ai -> removeDuplicates_4d0a.items\n        removeDuplicates_4d0a.output_list -> reduceProduct_4d0b.item\n        reduceProduct_4d0b.result -> outputProduct_ai\n\n    }\n\n    instance(x: -32, y: 127) uniqueProduct root.main.UniqueProduct {\n        numbers: [5, 3, 5, 2, 3, 8]\n    }\n}"
            ],
            "18": [
                "func(doc: \"finds dissimilar elements in the given two lists\") FindDissimilar {\n        in(x: -105, y: 246, name: \"list1\") property(List) list1_3d9e8b\n        in(x: -75, y: 246, name: \"list2\") property(List) list2_fadea4\n\n        out(x: 105, y: 246, name: \"output\") property(List) output_7f3d9c\n\n        instance(x: -186, y: 246) difference_6b4e5b root.Std_k98ojb.Sets.Difference {}\n        list1_3d9e8b -> difference_6b4e5b.left\n        list2_fadea4 -> difference_6b4e5b.right\n        difference_6b4e5b.difference -> output_7f3d9c\n\n        instance(x: -186, y: 206) reverseDifference_b4e5ba root.Std_k98ojb.Sets.Difference {}\n        list2_fadea4 -> reverseDifference_b4e5ba.left\n        list1_3d9e8b -> reverseDifference_b4e5ba.right\n        reverseDifference_b4e5ba.difference -> difference_6b4e5b.right\n\n    }\n\n    \n\n    instance(x: 0, y: -27) findDissimilar_7f3d9c root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 203, name: \"list\") property(List) list_8e9b5d\n        in(x: -167, y: 239, name: \"rotate_by\") property(Number) rotateBy_7f3a4c\n\n        out(x: 165, y: 203, name: \"rotated_list\") property(List) data_0_0\n        instance(x: -84, y: 198) generateRange_6d5b5e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 175, y: 238) slice_6c4a7f root.Std_k98ojb.List.Slice {}\n        instance(x: -80, y: 238) add_6d5b5e root.Std_k98ojb.Math.Add {}\n        list_8e9b5d -> generateRange_6d5b5e.to\n        rotateBy_7f3a4c -> add_6d5b5e.second\n        0 -> generateRange_6d5b5e.from\n        add_6d5b5e.result -> slice_6c4a7f.start\n        list_8e9b5d -> slice_6c4a7f.list\n        -1 -> slice_6c4a7f.end\n        slice_6c4a7f.restOfList -> data_0_0\n    }\n\n    \n\n    instance(x: 23, y: 18) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"items\") property(List) items_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) first_item_61b38d root.Std_k98ojb.List.FirstItem {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_array_96023e.execute_cdac2a\n        sum_array_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_array_96023e.output_732a8a -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        items_6b655b -> first_item_61b38d.list\n        first_item_61b38d.item -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_array_86117a root.main.sum_array {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1088, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        generaterange_038fce.from -> 1\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(doc: \"Check if two numbers have opposite signs.\") check_opposite_sign {\n        in(x: 154, y: -203, name: \"num1\") property(Number) num1_faf6c2\n        in(x: 78, y: 195, name: \"num2\") property(Number) num2_a49ae4\n\n        out(x: 532, y: 135, name: \"output\") property(Bool) output_b5dba9\n\n        instance(x: -60, y: 87) mul_6b1f5e root.Std_k98ojb.Math.Mul {}\n        num1_faf6c2 -> mul_6b1f5e.first\n        num2_a49ae4 -> mul_6b1f5e.second\n        instance(x: 30, y: -72) ifexpression_c2d74a root.Std_k98ojb.Std.IfExpression {}\n        mul_6b1f5e.result -> ifexpression_c2d74a.expression\n        ifexpression_c2d74a.value -> output_b5dba9\n\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11\") is_divisible_by_11 {\n        in(x: -35, y: 204, name: \"input\") property(Number) input\n        in(x: -74, y: 69, name: \"execute\") trigger() execute\n\n        out(x: -38, y: -228, name: \"out\") property(Bool) output\n\n        instance(x: -150, y: -129) modulo_eebddd root.Std_k98ojb.Math.Modulo {}\n        input -> modulo_eebddd.value\n        11 -> modulo_eebddd.divisor\n        modulo_eebddd.result -> output\n        execute -> modulo_eebddd.execute\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -150, y: 0, name: \"searchChar\") property(String) searchChar_0\n        in(x: -70, y: 0, name: \"replaceChar\") property(String) replaceChar_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 325, y: 0) replace_c94e4d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_c94e4d.input\n        searchChar_0 -> replace_c94e4d.search\n        replaceChar_0 -> replace_c94e4d.replace\n        replace_c94e4d.output -> output_0\n    }\n\n    \n\n    instance(x: 175, y: -25) replace_chars_f83a6c root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    in(x: -531, y: 2, name: \"input\") property(String) input_ai\n    out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n    instance(x: 769, y: 76) tolower_8f5e1d root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_8f5e1d.input\n    tolower_8f5e1d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"Calculate the product of unique numbers in a list\") UniqueProduct {\n        in(x: -165, y: 204, name: \"input_list\") property(List) inputList_ai\n        out(x: 376, y: 298, name: \"product\") property(Number) outputProduct_ai\n        \n        instance(x: 444, y: 178) removeDuplicates_5a0c5a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        \n        instance(x: 362, y: 296) calculateProduct_4f5e4f root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 1\n            handler: \"acc * it\"\n        }\n\n        inputList_ai -> removeDuplicates_5a0c5a.items\n        removeDuplicates_5a0c5a.output_list -> calculateProduct_4f5e4f.item\n        calculateProduct_4f5e4f.result -> outputProduct_ai\n\n    }\n    \n    instance(x: -36, y: 127) uniqueproduct_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "func(doc: \"Finds dissimilar elements between two lists.\") FindDissimilar {\n        in(x: -205, y: 136, name: \"list1\") property(List) list1_8a9b7c\n        in(x: -205, y: 248, name: \"list2\") property(List) list2_b5d1f9\n\n        out(x: 224, y: 368, name: \"output\") property(List) output_2e7cfd\n\n        instance(x: -205, y: 360) difference_5b3cc7 root.Std_k98ojb.Sets.Difference {}\n        list1_8a9b7c -> difference_5b3cc7.left\n        list2_b5d1f9 -> difference_5b3cc7.right\n\n        instance(x: 204, y: 360) reverse_difference_e3e9e2 root.Std_k98ojb.Sets.Difference {}\n        list2_b5d1f9 -> reverse_difference_e3e9e2.left\n        list1_8a9b7c -> reverse_difference_e3e9e2.right\n\n        instance(x: 0, y: 468) concat_feb12b root.Std_k98ojb.List.Concat {}\n        difference_5b3cc7.difference -> concat_feb12b.left\n        reverse_difference_e3e9e2.difference -> concat_feb12b.right\n\n        concat_feb12b.list -> output_2e7cfd\n    }\n\n    \n\n    instance(x: 460, y: -58) FindDissimilar_8f72d7 root.main.FindDissimilar {}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a list by the specified number of positions to the right.\") rotate {\n        in(x: -145, y: 203, name: \"execute\") trigger() execute_8f9e7d\n        in(x: -69, y: 323, name: \"list\") property(List) list_ea807b\n        in(x: -143, y: 357, name: \"positions\") property(Number) positions_08c23e\n\n        out(x: 569, y: 343, name: \"output\") property(List) data_0_0\n        out(x: 561, y: 185, name: \"continue\") trigger() continue_bf7a8d\n\n        instance(x: -224, y: 249) sub_f56da3 root.Std_k98ojb.Math.Sub {}\n        instance(x: 300, y: 271) length_52dfdc root.Std_k98ojb.List.Length {}\n        instance(x: 318, y: -144) modulo_6c50d4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 494, y: -176) slice_24e74f root.Std_k98ojb.List.Slice {}\n        instance(x: 494, y: 30) concat_f5c5d4 root.Std_k98ojb.List.Concat {}\n        getter(x: -218, y: 366, name: \"getter_7f5e7a\") getter_7f5e7a = length\n        setter(x: 498, y: -109, name: \"setter_b7f7d5\") setter_b7f7d5 = sliceStart\n        getter(x: 326, y: -210, name: \"getter_7eacf6\") getter_7eacf6 = lengthModulo\n\n        execute_8f9e7d -> sub_f56da3.first\n        positions_08c23e -> sub_f56da3.second\n        list_ea807b -> length_52dfdc.list\n        length_52dfdc.length -> getter_7f5e7a.execute\n        getter_7f5e7a.value -> modulo_6c50d4.value\n        positions_08c23e -> modulo_6c50d4.divisor\n        modulo_6c50d4.result -> getter_7eacf6.execute\n        sub_f56da3.result -> setter_b7f7d5.new_value\n        list_ea807b -> slice_24e74f.list\n        positions_08c23e -> slice_24e74f.start\n        getter_7eacf6.value -> slice_24e74f.end\n        slice_24e74f.slice -> concat_f5c5d4.left\n        list_ea807b -> concat_f5c5d4.right\n        concat_f5c5d4.result -> data_0_0\n    }\n\n    \n\n    instance(x: -163, y: 29) rotate_b1f6ff root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"sums an array\") add_all {\n        in(x: -150, y: 230, name: \"items\") property(List) items_4d4a8e\n        out(x: 150, y: 160, name: \"output\") property(Number) output_c9bddd\n\n        instance(x: -70, y: 110) reduce_2f3c74 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"+\"\n            identity: 0\n        }\n        items_4d4a8e -> reduce_2f3c74.items\n        reduce_2f3c74.output_list -> output_c9bddd\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime {\n        in(x: 354, y: -160, name: \"input\") property(Number) input_f5c03d\n        in(x: 289, y: -79, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 341, y: 213, name: \"out\") property(Bool) out_f3db9f\n        out(x: 560, y: 203, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: -78, y: 421) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: -15, y: 241) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -108, y: 274) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: -36, y: 154) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % i == 0)\"\n        }\n        input_f5c03d -> for_8cb3f6.items\n        func() {\n            in(x: -132, y: 44, name: \"element\") property(Number) element_5f51f7\n\n            out(x: -92, y: 148, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: -168, y: 118) expression_3e9ebd root.Std_k98ojb.Math.Expression {\n                expression: \"(i == input)\"\n            }\n            element_5f51f7 -> expression_b720d7.gen_0\n            input_f5c03d -> expression_b720d7.gen_1\n            element_5f51f7 -> expression_3e9ebd.gen_0\n            input_f5c03d -> expression_3e9ebd.gen_1\n            expression_b720d7.result -> if_07b8c7.predicate\n            expression_3e9ebd.result -> if_07b8c7.elsePredicate\n            if_07b8c7.then -> out_d0fd24\n        } -> for_8cb3f6.handler\n        1 -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n        continue_8ba06b -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "func(x: -581, y: 346) has_opposite_sign {\n        in(x: -127, y: 504, name: \"num1\") property(Number) num1_c6c99a\n        in(x: 439, y: 154, name: \"num2\") property(Number) num2_9e9efb\n    \n        out(x: -81, y: 371, name: \"output\") property(Bool) output_cab0c5\n    \n        instance(x: 461, y: -424) expression_bbfe5d root.Std_k98ojb.Math.Expression {\n            expression: \"num1 * num2 < 0\"\n        }\n    \n        num1_c6c99a -> expression_bbfe5d.num1\n        num2_9e9efb -> expression_bbfe5d.num2\n    \n        expression_bbfe5d.result -> output_cab0c5\n    }"
            ],
            "3": [
                "func(doc: \"Checks if a given number is divisible by 11.\") is_divisible_by_11 {\n    in(x: -63, y: -289) property(Number) input_number\n    \n    out(x: 140, y: 174) property(Bool) output_is_divisible\n\n    instance(x: 54, y: -95) modulo_8bcafd root.Std_k98ojb.Math.Modulo {}\n    input_number -> modulo_8bcafd.value\n    11 -> modulo_8bcafd.divisor\n    modulo_8bcafd.result -> output_is_divisible\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Replace all occurrences of a specified character with another one.\") replace_characters {\n        in(x: -102, y: 67, name: \"inputString\") property(String) input_string\n        in(x: 54, y: 98, name: \"oldChar\") property(String) old_char\n        in(x: 54, y: 123, name: \"newChar\") property(String) new_char\n\n        out(x: 403, y: 67, name: \"outputString\") property(String) output_string\n        \n        instance(x: -89, y: 67) replaceNode root.Std_k98ojb.Strings.Replace {}\n        \n        input_string -> replaceNode.input\n        old_char -> replaceNode.search\n        new_char -> replaceNode.replace\n\n        replaceNode.output -> output_string\n    }\n\n    \n    func() example {\n        in(x: -432, y: 67) property(String) test_string\n        out(x: 59, y: 67) property(String) result_string\n\n        instance(x: -108, y: -66) replace_specialchar_695b5e root.main.replace_characters {}\n        \n        \"Hello World!\" -> test_string\n        \",\" -> replace_specialchar_695b5e.oldChar\n        \".\" -> replace_specialchar_695b5e.newChar\n        test_string -> replace_specialchar_695b5e.inputString\n\n        replace_specialchar_695b5e.outputString -> result_string \n    }\n\n    instance(x: 175, y: -25) example_function root.main.example {}\n    \n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    in(x: -274, y: 130) property(String) input_ai\n    out(x: 652, y: 132) property(String) output_ai\n    \n    instance(x: -16, y: 98) tolower_3f1b9d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_ai -> tolower_3f1b9d.input\n    tolower_3f1b9d.output -> output_ai\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc:\"get distinct items from a list\") Distinct {\n        in(x: 435, y: 267) property(List) input_ai\n        out(x: 304, y: -107) property(List) output_ai\n        instance(x: 98, y: 135) remove_duplicates_0bda3a root.Std_k98ojb.Iteration.Filter {\n            handler: \"it !== previous\"\n            initialState: 0\n        }\n        input_ai -> remove_duplicates_0bda3a.items\n        remove_duplicates_0bda3a.output_list -> output_ai\n    }\n\n    func(doc:\"calculate the product of a list\") MultiplyList {\n        in(x: -287, y: -61) property(List) numbers_ai\n        out(x: 55, y: -92) property(Number) result_ai\n        instance(x: -303, y: 45) iterate_8b7a4c root.Std_k98ojb.Iteration.Reduce {\n            handler: \"result * item\"\n            initialState: 1\n        }\n        numbers_ai -> iterate_8b7a4c.item\n        iterate_8b7a4c.output -> result_ai\n    }\n\n    func(doc:\"get product of distinct numbers in list\") GetDistinctProduct {\n        in(x: -309, y: 206) property(List) inputList_ai\n        out(x: 165, y: -98) property(Number) outputResult_ai\n        instance(x: -479, y: 117) distinct_79f2c4 root.main.Distinct {}\n        instance(x: -338, y: -202) multiplyList_d6eaa5 root.main.MultiplyList {}\n\n        inputList_ai -> distinct_79f2c4.input\n        distinct_79f2c4.output -> multiplyList_d6eaa5.numbers\n        multiplyList_d6eaa5.result -> outputResult_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds dissimilar elements in the given two lists\") dissimilar_elements {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"dissimilarList\") property(List) dissimilarList_6a5cde\n\n        instance(x: -121, y: -71) intersection_78d487 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 169, y: -103) difference_bfca8e root.Std_k98ojb.Sets.Difference {}\n\n        list1_016b2e -> intersection_78d487.left\n        list2_c8f404 -> intersection_78d487.right\n\n        intersection_78d487.intersect -> difference_bfca8e.left\n        list1_016b2e -> difference_bfca8e.right\n        \n        instance(x: 345, y: -95) reverseDifference_e89df4 root.Std_k98ojb.Sets.Difference {}\n        \n        intersection_78d487.intersect -> reverseDifference_e89df4.left\n        list2_c8f404 -> reverseDifference_e89df4.right\n        \n        instance(x: 326, y: -15) concat_dac3c2 root.Std_k98ojb.List.Concat {}\n\n        difference_bfca8e.difference -> concat_dac3c2.first\n        reverseDifference_e89df4.difference -> concat_dac3c2.second\n\n        concat_dac3c2.list -> dissimilarList_6a5cde\n    }\n    \n\n    instance(x: 425, y: -186) dissimilar_elements_cce8d7 root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate {\n        in(x: -213, y: 52, name: \"execute\") trigger() execute_0d80f2\n        in(x: -214, y: 96, name: \"list\") property(List) list_7daa67\n        in(x: -224, y: 136, name: \"rotateBy\") property(Number) rotateBy_df7b25\n\n        out(x: 806, y: 89, name: \"outputList\") property(List) data_0_0\n        instance(x: 64, y: -200) for_1c0edf root.Std_k98ojb.Std.For {}\n        setter(x: -507, y: -319, name: \"setter_dfd4e2\") setter_dfd4e2 = rotateBy\n        getter(x: 60, y: -123, name: \"getter_cbe0bb\") getter_cbe0bb = rotateList\n        instance(x: 557, y: 89) slice_8bdcf9 root.Std_k98ojb.List.Slice {}\n        setter(x: 64, y: -123, name: \"setter_fd4a7d\") setter_fd4a7d = rotateList\n        instance(x: -507, y: -265) modulo_eeaa0f root.Std_k98ojb.Math.Modulo {}\n        getter(x: -507, y: -318, name: \"getter_ddaf7e\") getter_ddaf7e = rotateBy\n        instance(x: 451, y: -266) generateRange_eeeaef root.Std_k98ojb.List.GenerateRange {}\n        setter(x: 810, y: -317, name: \"setter_ebb1d9\") setter_ebb1d9 = rotateList\n        instance(x: -546, y: -23) length_3f4af1 root.Std_k98ojb.List.Length {}\n        getter(x: 407, y: -244, name: \"getter_b3ddc1\") getter_b3ddc1 = rotateBy\n        instance(x: -507, y: -67) getAt_6f1ebe root.Std_k98ojb.List.GetAt {}\n        setter(x: 64, y: -214, name: \"setter_cbe0bb\") setter_cbe0bb = rotateList\n        getter(x: -507, y: -36, name: \"getter_ddaa6f\") getter_ddaa6f = list\n        instance(x: 698, y: -124) concat_99e8bc root.Std_k98ojb.List.Concat {}\n        instance(x: -507, y: -136) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        getter(x: 698, y: -245, name: \"getter_2ce6ad\") getter_2ce6ad = rotateList\n        instance(x: 407, y: -172) map_3c2ebe root.Std_k98ojb.Iteration.Map {}\n        getter(x: 557, y: -122, name: \"getter_fd4a7d\") getter_fd4a7d = rotateList\n        setter(x: 60, y: -32, name: \"setter_4c9f86\") setter_4c9f86 = list\n        instance(x: -507, y: -103) count_df7b25 root.Std_k98ojb.Std.Count {}\n        setter(x: 64, y: -123, name: \"setter_fd4a7d\") setter_fd4a7d = rotateList\n        execute_0d80f2 -> setter_dfd4e2.execute\n        getter_ddaf7e.value -> modulo_eeaa0f.gen_0\n        getter_ddda6f.value -> count_df7b25.list\n        set(-1) -> map_3c2ebe.fn\n        map_3c2ebe.result -> slice_8bdcf9.right\n        set(0) -> modulo_eeaa0f.gen_1\n        getter_cbe0bb.value -> setter_fd4a7d.new_value\n        count_df7b25.onItem -> for_1c0edf.reset\n        length_3f4af1.list -> getAt_6f1ebe.list\n        modulo_eeaa0f.result -> rotateBy_df7b25\n        set(-1) -> generateRange_eeeaef.gen_1\n        set(1) -> generateRange_eeeaef.gen_0\n        getter_fd4a7d.value -> getAt_6f1ebe.index\n        for_1c0edf.onItem -> getter_b3ddc1.execute\n        rotateBy_df7b25 -> setter_dfd4e2.new_value\n        count_df7b25.done -> concat_99e8bc\n        getAt_6f1ebe.result -> setter_fd4a7d.new_value\n        slice_8bdcf9.left -> map_3c2ebe.list\n        getter_cbe0bb.value -> setter_4c9f86.new_value\n        for_1c0edf.item -> setAt_6f1ebe.index\n        empty_ea3a3a.list -> concat_99e8bc.left\n        generateRange_eeeaef.result -> getter_fd4a7d.execute\n        getter_b3ddc1.value -> setter_cbe0bb.new_value\n        map_3c2ebe.fn -> setAt_6f1ebe.item\n        slice_8bdcf9.right -> concat_99e8bc.right\n        for_1c0edf.next -> getter_b3ddc1.execute\n        setter_fd4a7d.continue -> getAt_6f1ebe\n        execute_0d80f2 -> setter_cbe0bb.execute\n        list_7daa67 -> setter_4c9f86.new_value\n    }\n\n    \n\n    func(doc: \"Sets a value at the given index in a list, creating the list if necessary.\") setAt {\n        in(x: -131, y: 25, name: \"execute\") trigger() execute_7b0a4e\n        in(x: -136, y: 79, name: \"value\") property(Any) value_8c0dce\n        in(x: -139, y: 124, name: \"index\") property(Number) index_d4df57\n\n        out(x: 357, y: 116, name: \"continue\") trigger() continue_df7b25\n        setter(x: -80, y: -29, name: \"setter_4c9f86\") setter_4c9f86 = list\n        instance(x: -311, y: 117) getAt_fbc16e root.Std_k98ojb.List.GetAt {}\n        getter(x: -250, y: 122, name: \"getter_cbe0bb\") getter_cbe0bb = list\n        instance(x: -310, y: 78) set_546c8f root.Std_k98ojb.List.Set {}\n        setter(x: -83, y: 54, name: \"setter_fd4a7d\") setter_fd4a7d = list\n        instance(x: -206, y: 117) add_9c8aa0 root.Std_k98ojb.List.Add {}\n        getter(x: -328, y: 121, name: \"getter_ddaf7e\") getter_ddaf7e = index\n        setter(x: -136, y: 125, name: \"setter_4c9f86\") setter_4c9f86 = list\n        instance(x: -310, y: 16) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        getter(x: -252, y: 77, name: \"getter_fd4a7d\") getter_fd4a7d = list\n        instance(x: -101, y: 76) set_d1ba32 root.Std_k98ojb.List.Set {}\n        setter(x: -154, y: 124, name: \"setter_fd4a7d\") setter_fd4a7d = index\n        getter(x"
            ],
            "42": [
                "func(doc: \"Sum all elements in an array\") SumArray {\n        in(x: 0, y: -341, name: \"list\") property(List) list_2a8f6c\n        out(x: 0, y: -159, name: \"sum\") property(Number) sum_7dfe5e\n\n        instance(x: -69, y: -261) reduce_3e1df4 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        list_2a8f6c -> reduce_3e1df4.items\n        sum_7dfe5e <- reduce_3e1df4.output_list_7abbc7\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is a prime or not.\") is_prime_number {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 603, y: -293) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 754, y: -144) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % index == 0)\"\n        }\n        instance(x: 1496, y: -133) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> for_8cb3f6.items\n        2 -> for_8cb3f6.from\n        input_f5c03d -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_0\n\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.index -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n\n        for_8cb3f6.done -> done_out_29d02a\n    }\n\n    func(doc: \"main function to check prime number.\") main_check_prime {\n        in(x: 418, y: -549, name: \"execute\") trigger() execute_27b8c3\n\n        instance(x: -60, y: 17) is_prime_number_bf23bf root.main.is_prime_number {}\n        execute_27b8c3 -> is_prime_number_bf23bf.input\n    }\n\n    instance(x: -149, y: 259) main_check_prime_a3e06c root.main.main_check_prime {}\n\n}"
            ]
        }
    }
]