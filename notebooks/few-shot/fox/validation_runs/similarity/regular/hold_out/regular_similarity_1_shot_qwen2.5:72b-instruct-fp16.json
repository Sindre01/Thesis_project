[
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 163) property(Int) a_7d5a4c\n        in(x: -204, y: 209) property(Int) b_8b6e5d\n\n        out(x: 204, y: 186) property(Bool) output_6f3b7a\n\n        instance(x: 0, y: 186) expression_1c3b1d root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        a_7d5a4c -> expression_1c3b1d.gen_0\n        b_8b6e5d -> expression_1c3b1d.gen_1\n        expression_1c3b1d.result -> output_6f3b7a\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7a5d4c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7a5d4c.value\n        11 -> modulo_7a5d4c.divisor\n\n        instance(x: 20, y: -40) equal_6f5e4a root.Std_k98ojb.Logic.Equal {}\n        modulo_7a5d4c.result -> equal_6f5e4a.left\n        0 -> equal_6f5e4a.right\n\n        instance(x: 20, y: 40) if_31b2c7 root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_31b2c7.execute\n        equal_6f5e4a.result -> if_31b2c7.predicate\n\n        if_31b2c7.value -> out_f3db9f\n        if_31b2c7.then -> continue_8ba06b\n        if_31b2c7.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -204, y: 163, name: \"list\") property(List) list_7c5a1d\n        in(x: -208, y: 291, name: \"rotate_by\") property(Number) rotate_by_7b4e0f\n\n        out(x: 824, y: 163, name: \"rotated_list\") property(List) rotated_list_5c4a4d\n        out(x: 829, y: 291, name: \"continue\") trigger() continue_7b0f5e\n\n        instance(x: -196, y: -31, name: \"execute\") trigger() execute_1b4c0a\n        instance(x: 258, y: 163) slice_start_2d1b1c root.Std_k98ojb.List.Slice {}\n        instance(x: 257, y: 291) slice_end_2d1b1c root.Std_k98ojb.List.Slice {}\n        instance(x: 405, y: 227) concat_lists_3f6a1e root.Std_k98ojb.List.Concat {}\n        instance(x: 125, y: -103) length_list_7c5a1d root.Std_k98ojb.List.Length {}\n        instance(x: 124, y: -229) modulo_rotate_by_length_6f5ebe root.Std_k98ojb.Math.Modulo {}\n        getter(x: 309, y: -227, name: \"getter_2d1b1c\") getter_2d1b1c = rotate_by\n        instance(x: 405, y: -103) sub_length_rotate_6f5ebe root.Std_k98ojb.Math.Sub {}\n        \n        execute_1b4c0a -> length_list_7c5a1d.execute\n        list_7c5a1d -> length_list_7c5a1d.list\n        rotate_by_7b4e0f -> getter_2d1b1c.value\n        getter_2d1b1c.value -> modulo_rotate_by_length_6f5ebe.value\n        length_list_7c5a1d.length -> modulo_rotate_by_length_6f5ebe.divisor\n        list_7c5a1d -> slice_start_2d1b1c.list\n        list_7c5a1d -> slice_end_2d1b1c.list\n        length_list_7c5a1d.length -> sub_length_rotate_6f5ebe.first\n        modulo_rotate_by_length_6f5ebe.result -> sub_length_rotate_6f5ebe.second\n        sub_length_rotate_6f5ebe.result -> slice_start_2d1b1c.start\n        0 -> slice_start_2d1b1c.end\n        length_list_7c5a1d.length -> slice_end_2d1b1c.start\n        modulo_rotate_by_length_6f5ebe.result -> slice_end_2d1b1c.end\n        slice_start_2d1b1c.slice -> concat_lists_3f6a1e.left\n        slice_end_2d1b1c.slice -> concat_lists_3f6a1e.right\n        concat_lists_3f6a1e.result -> rotated_list_5c4a4d\n        execute_1b4c0a -> continue_7b0f5e\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -256, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -389, name: \"execute\") trigger() execute_7b9e1c\n\n        out(x: 1890, y: -256, name: \"out\") property(Bool) out_7f3a4d\n        out(x: 1890, y: -389, name: \"continue\") trigger() continue_7b9e1c\n\n        instance(x: 10, y: -125) lessthanorequal_6b2a1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10, y: -43) equal_2d7b1e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 50) greaterthan_6a2a1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 10, y: 143) generaterange_7d3a4d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 10, y: 256) for_7f3a4d root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 379) modulo_7f3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 526) equal_7f3a4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 679) if_7f3a4d root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: 826) and_7f3a4d root.Std_k98ojb.Logic.And {}\n\n        input_7f3a4d -> lessthanorequal_6b2a1f.left\n        2 -> lessthanorequal_6b2a1f.right\n\n        input_7f3a4d -> equal_2d7b1e.left\n        2 -> equal_2d7b1e.right\n\n        input_7f3a4d -> greaterthan_6a2a1f.left\n        2 -> greaterthan_6a2a1f.right\n\n        2 -> generaterange_7d3a4d.from\n        input_7f3a4d -> generaterange_7d3a4d.to\n\n        generaterange_7d3a4d.list -> for_7f3a4d.items\n\n        input_7f3a4d -> modulo_7f3a4d.left\n        for_7f3a4d.item -> modulo_7f3a4d.right\n\n        0 -> equal_7f3a4d.left\n        modulo_7f3a4d.result -> equal_7f3a4d.right\n\n        equal_7f3a4d.result -> if_7f3a4d.predicate\n        for_7f3a4d.onItem -> if_7f3a4d.execute\n\n        lessthanorequal_6b2a1f.result -> and_7f3a4d.left\n        equal_2d7b1e.result -> and_7f3a4d.right\n\n        greaterthan_6a2a1f.result -> for_7f3a4d.reset\n\n        if_7f3a4d.then -> continue_7b9e1c\n        if_7f3a4d.else -> for_7f3a4d.next\n\n        and_7f3a4d.result -> out_7f3a4d\n        for_7f3a4d.done -> continue_7b9e1c\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -147, y: 203, name: \"first\") property(Int) first_5d6a1f\n        in(x: -148, y: 299, name: \"second\") property(Int) second_7b8c2e\n\n        out(x: 202, y: 203, name: \"output\") property(Bool) output_6a5d1f\n\n        instance(x: -4, y: 251) expression_9f8d7c root.Std_k98ojb.Math.Expression {\n            expression: \"(first * second) < 0\"\n        }\n        first_5d6a1f -> expression_9f8d7c.gen_0\n        second_7b8c2e -> expression_9f8d7c.gen_1\n        expression_9f8d7c.result -> output_6a5d1f\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -36, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 49, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1012, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1164, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 257, y: -113) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        instance(x: 509, y: -14) if_f11fda root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n\n        execute_27b8c3 -> if_f11fda.execute\n        modulo_038fce.result -> if_f11fda.predicate\n\n        if_f11fda.then -> continue_8ba06b\n        if_f11fda.else -> continue_8ba06b\n        if_f11fda.value -> out_f3db9f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_1\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 273, y: 0) replace_5a4b8e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5a4b8e.input\n        search_1 -> replace_5a4b8e.search\n        replace_2 -> replace_5a4b8e.replace\n        replace_5a4b8e.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 186, y: 192) unique_Std_k98ojb root.Std_k98ojb.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n        instance(x: 354, y: 270) reduce_Std_k98ojb root.Std_k98ojb.Iteration.Reduce {\n            items: unique_Std_k98ojb.difference\n            handler: \"a * b\"\n            initial: 1\n        }\n        reduce_Std_k98ojb.result -> output_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -345, y: 10, name: \"list1\") property(List) list1_7a2e6d\n        in(x: -345, y: 80, name: \"list2\") property(List) list2_9b5f7c\n\n        out(x: 445, y: 45, name: \"output\") property(List) output_1a2e6d\n\n        instance(x: -135, y: 45) difference_left_8b2e6d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -135, y: 105) difference_right_9c5f7c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 175, y: 45) concat_differences_2e6d7a root.Std_k98ojb.List.Concat {}\n\n        list1_7a2e6d -> difference_left_8b2e6d.left\n        list2_9b5f7c -> difference_left_8b2e6d.right\n\n        list2_9b5f7c -> difference_right_9c5f7c.left\n        list1_7a2e6d -> difference_right_9c5f7c.right\n\n        difference_left_8b2e6d.difference -> concat_differences_2e6d7a.list1\n        difference_right_9c5f7c.difference -> concat_differences_2e6d7a.list2\n\n        concat_differences_2e6d7a.concatenatedList -> output_1a2e6d\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -162, y: 30, name: \"list\") property(List) list_4a7d5f\n        in(x: -189, y: 118, name: \"rotate_by\") property(Number) rotate_by_3b9c6e\n\n        out(x: 727, y: 102, name: \"rotated_list\") property(List) rotated_list_4a5d0f\n        out(x: 727, y: -28, name: \"continue\") trigger() continue_3b9c6e\n\n        instance(x: 204, y: 109) length_3b9c6e root.Std_k98ojb.List.Length {}\n        instance(x: 457, y: -12) slice_3b9c6e root.Std_k98ojb.List.Slice {}\n        instance(x: 457, y: 109) slice_2_3b9c6e root.Std_k98ojb.List.Slice {}\n        instance(x: 575, y: -12) concat_3b9c6e root.Std_k98ojb.List.Concat {}\n\n        list_4a7d5f -> length_3b9c6e.list\n        rotate_by_3b9c6e -> slice_3b9c6e.start\n        length_3b9c6e.length -> slice_3b9c6e.end\n        Math.Modulo(left: rotate_by_3b9c6e, right: length_3b9c6e.length) -> slice_2_3b9c6e.start\n        0 -> slice_2_3b9c6e.end\n        list_4a7d5f -> slice_3b9c6e.list\n        list_4a7d5f -> slice_2_3b9c6e.list\n        slice_3b9c6e.slice -> concat_3b9c6e.left\n        slice_2_3b9c6e.slice -> concat_3b9c6e.right\n        concat_3b9c6e.result -> rotated_list_4a5d0f\n    }\n\n    \n\n    instance(x: -178, y: 11) rotate_right_def root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_6a7d8c\n        in(x: -436, y: -93, name: \"numbers\") property(List) numbers_7b7e7f\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5f6e2b root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5f6e2b.initial_value\n        numbers_7b7e7f -> reduce_5f6e2b.items\n        execute_6a7d8c -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> reduce_5f6e2b.execute\n        reduce_5f6e2b.result -> getter_38583a.value\n        getter_38583a.value -> output_732a8a\n        reduce_5f6e2b.done -> continue_d9efd7\n\n        instance(x: 400, y: -150) add_88bb8a root.Std_k98ojb.Math.Add {}\n        reduce_5f6e2b.accumulator -> add_88bb8a.first\n        reduce_5f6e2b.item -> add_88bb8a.second\n        add_88bb8a.result -> reduce_5f6e2b.next_accumulator\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7a3d6f\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8b3c4e\n\n        out(x: 1150, y: -20, name: \"out\") property(Bool) out_7a3d6f\n        out(x: 1150, y: 30, name: \"continue\") trigger() continue_8b3c4e\n\n        instance(x: 10, y: -120) generaterange_e9a2fb root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 10, y: -75) for_6f2d3a root.Std_k98ojb.Std.For {}\n        instance(x: 450, y: -100) modulo_4c2e75 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 650, y: -100) equal_3d2fcb root.Std_k98ojb.Logic.Equal {}\n        instance(x: 850, y: -100) if_4a7e8c root.Std_k98ojb.Std.If {}\n\n        input_7a3d6f -> generaterange_e9a2fb.to\n        2 -> generaterange_e9a2fb.from\n        generaterange_e9a2fb.list -> for_6f2d3a.items\n\n        execute_8b3c4e -> for_6f2d3a.reset\n        for_6f2d3a.onItem -> if_4a7e8c.execute\n\n        input_7a3d6f -> modulo_4c2e75.value\n        for_6f2d3a.item -> modulo_4c2e75.divisor\n        modulo_4c2e75.result -> equal_3d2fcb.left\n        0 -> equal_3d2fcb.right\n        equal_3d2fcb.result -> if_4a7e8c.predicate\n\n        if_4a7e8c.then -> for_6f2d3a.next\n        if_4a7e8c.else -> continue_8b3c4e\n        if_4a7e8c.value -> out_7a3d6f\n\n        for_6f2d3a.done -> continue_8b3c4e\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 137, name: \"first\") property(Int) first_5f6d1e\n        in(x: -204, y: 198, name: \"second\") property(Int) second_5f6d1e\n\n        out(x: 204, y: 372, name: \"output\") property(Bool) output_5f6d1e\n\n        instance(x: -204, y: 289) mul_5f6d1e root.Std_k98ojb.Math.Mul {\n            first: first_5f6d1e\n            second: second_5f6d1e\n        }\n\n        instance(x: -204, y: 372) less_than_5f6d1e root.Std_k98ojb.Math.LessThanOrEqual {\n            left: mul_5f6d1e.result\n            right: 0\n        }\n\n        less_than_5f6d1e.result -> output_5f6d1e\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -46, name: \"input\") property(Number) input_7c3f5e\n        in(x: -20, y: -98, name: \"execute\") trigger() execute_3b4d4a\n\n        out(x: 100, y: 10, name: \"result\") property(Bool) result_6a7c7f\n        out(x: 100, y: 50, name: \"continue\") trigger() continue_2e9b3d\n\n        instance(x: -20, y: 48) modulo_f3db9f root.Std_k98ojb.Math.Modulo {}\n        input_7c3f5e -> modulo_f3db9f.value\n        11 -> modulo_f3db9f.divisor\n        instance(x: -20, y: 164) equal_2a4d9f root.Std_k98ojb.Logic.Equal {}\n        modulo_f3db9f.result -> equal_2a4d9f.left\n        0 -> equal_2a4d9f.right\n        instance(x: -20, y: 265) if_7c3f5e root.Std_k98ojb.Std.If {}\n        execute_3b4d4a -> if_7c3f5e.execute\n        equal_2a4d9f.result -> if_7c3f5e.predicate\n        instance(x: -20, y: 366) true_1a2b3c root.Std_k98ojb.Logic.Equal {\n            left: true,\n            right: true\n        }\n        instance(x: -20, y: 467) false_1a2b3c root.Std_k98ojb.Logic.Equal {\n            left: false,\n            right: false\n        }\n        if_7c3f5e.then -> continue_2e9b3d\n        true_1a2b3c.result -> result_6a7c7f\n        if_7c3f5e.else -> continue_2e9b3d\n        false_1a2b3c.result -> result_6a7c7f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_1\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 273, y: 0) replace_8f9a4d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_8f9a4d.input\n        search_1 -> replace_8f9a4d.search\n        replace_2 -> replace_8f9a4d.replace\n        replace_8f9a4d.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n        instance(x: -286, y: 197) unique_7b3b7b root.Std_k98ojb.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n        instance(x: -54, y: 197) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            items: unique_7b3b7b.difference\n            handler: \"a * b\"\n            initial: 1\n        }\n        product_7b3b7b.result -> product_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_bf9d6a\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_8b7c3e\n\n        instance(x: -100, y: 50) difference_left_2c3a1d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_4f6b2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 100) concat_dissimilar_e3d7c8 root.Std_k98ojb.List.Concat {}\n\n        list1_7a2e4c -> difference_left_2c3a1d.left\n        list2_bf9d6a -> difference_left_2c3a1d.right\n\n        list2_bf9d6a -> difference_right_4f6b2a.left\n        list1_7a2e4c -> difference_right_4f6b2a.right\n\n        difference_left_2c3a1d.difference -> concat_dissimilar_e3d7c8.list1\n        difference_right_4f6b2a.difference -> concat_dissimilar_e3d7c8.list2\n\n        concat_dissimilar_e3d7c8.concatenatedList -> output_8b7c3e\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -204, y: 135, name: \"list\") property(List) list_6d7f5e\n        in(x: -208, y: 29, name: \"rotate_by\") property(Number) rotate_by_0b4c0a\n\n        out(x: 854, y: 135, name: \"rotated_list\") property(List) data_0_0\n        out(x: 867, y: -29, name: \"continue\") trigger() continue_c6d0b4\n\n        instance(x: 123, y: -107) length_5f7a4c root.Std_k98ojb.List.Length {}\n        instance(x: 126, y: 29) modulo_5e2514 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 306, y: -107) sub_1d7c3a root.Std_k98ojb.Math.Sub {}\n        instance(x: 303, y: 29) slice_5f4e2d root.Std_k98ojb.List.Slice {}\n        instance(x: 486, y: -107) slice_6c4a2b root.Std_k98ojb.List.Slice {}\n        instance(x: 669, y: 29) concat_e53e0d root.Std_k98ojb.List.Concat {}\n\n        list_6d7f5e -> length_5f7a4c.list\n        rotate_by_0b4c0a -> modulo_5e2514.value\n        length_5f7a4c.length -> modulo_5e2514.divisor\n        length_5f7a4c.length -> sub_1d7c3a.first\n        modulo_5e2514.result -> sub_1d7c3a.second\n        list_6d7f5e -> slice_5f4e2d.list\n        sub_1d7c3a.result -> slice_5f4e2d.start\n        length_5f7a4c.length -> slice_5f4e2d.end\n        list_6d7f5e -> slice_6c4a2b.list\n        0 -> slice_6c4a2b.start\n        sub_1d7c3a.result -> slice_6c4a2b.end\n        slice_6c4a2b.slice -> concat_e53e0d.left\n        slice_5f4e2d.slice -> concat_e53e0d.right\n        concat_e53e0d.result -> data_0_0\n    }\n\n    \n\n    instance(x: -198, y: 29) rotate_right_def67b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f1c\n        in(x: -436, y: -98, name: \"numbers\") property(List) numbers_8d7b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_5a0f3c\n        out(x: 1169, y: -128, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -147) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -183, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -174, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_3d7de6.accumulator_initial_value\n        numbers_8d7b1e -> reduce_3d7de6.items\n        setter_41e4ad.continue -> reduce_3d7de6.execute\n        execute_7a6f1c -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_3d7de6.accumulator_result -> getter_38583a.set_value\n        reduce_3d7de6.done -> continue_5a0f3c\n\n        instance(x: 419, y: -147) add_88bb8a root.Std_k98ojb.Math.Add {}\n        reduce_3d7de6.accumulator -> add_88bb8a.first\n        reduce_3d7de6.item -> add_88bb8a.second\n        add_88bb8a.result -> reduce_3d7de6.new_accumulator_value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7f3d6c\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8a2b4e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_f7f3d6\n        out(x: 10, y: 60, name: \"continue\") trigger() continue_5c8a2b\n\n        instance(x: 10, y: -145) ifExpression_9e2d3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"input <= 1 ? false : true\"\n        }\n        input_7f3d6c -> ifExpression_9e2d3a.input\n        execute_8a2b4e -> ifExpression_9e2d3a.execute\n        instance(x: 10, y: -95) for_6a2b4e root.Std_k98ojb.Std.For {}\n        input_7f3d6c -> for_6a2b4e.items\n        List.GenerateRange(2, input_7f3d6c) -> for_6a2b4e.items\n        instance(x: 10, y: -45) ifExpression_b8a29e root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % item == 0 ? false : true\"\n        }\n        input_7f3d6c -> ifExpression_b8a29e.input\n        for_6a2b4e.item -> ifExpression_b8a29e.item\n        for_6a2b4e.onItem -> ifExpression_b8a29e.execute\n        instance(x: 10, y: 5) and_3d6c7f root.Std_k98ojb.Logic.And {}\n        ifExpression_9e2d3a.value -> and_3d6c7f.left\n        ifExpression_b8a29e.value -> and_3d6c7f.right\n        for_6a2b4e.done -> continue_5c8a2b\n        and_3d6c7f.result -> is_prime_f7f3d6\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 163) property(Int) a_7a5c4d\n        in(x: -204, y: 209) property(Int) b_8b5c4e\n\n        out(x: 204, y: 255) property(Bool) output_1f6c3d\n\n        instance(x: 0, y: 187) expression_3a5b4c root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        a_7a5c4d -> expression_3a5b4c.gen_0\n        b_8b5c4e -> expression_3a5b4c.gen_1\n        expression_3a5b4c.result -> output_1f6c3d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7a5d4c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7a5d4c.value\n        11 -> modulo_7a5d4c.divisor\n\n        instance(x: 20, y: -40) equal_6f5e4a root.Std_k98ojb.Logic.Equal {}\n        modulo_7a5d4c.result -> equal_6f5e4a.left\n        0 -> equal_6f5e4a.right\n\n        instance(x: 20, y: 40) if_31b2c7 root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_31b2c7.execute\n        equal_6f5e4a.result -> if_31b2c7.predicate\n\n        if_31b2c7.value -> out_f3db9f\n        if_31b2c7.then -> continue_8ba06b\n        if_31b2c7.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -204, y: 163, name: \"list\") property(List) list_7c5a2e\n        in(x: -208, y: 291, name: \"rotate_by\") property(Number) rotate_by_2b4d5f\n\n        out(x: 824, y: 163, name: \"rotated_list\") property(List) rotated_list_7c5a2e\n        out(x: 809, y: 291, name: \"continue\") trigger() continue_2b4d5f\n\n        instance(x: 112, y: 369) length_7c5a2e root.Std_k98ojb.List.Length {}\n        instance(x: 108, y: 497) sub_2b4d5f root.Std_k98ojb.Math.Sub {}\n        instance(x: 292, y: 369) mod_2b4d5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 108, y: 163) slice_start_7c5a2e root.Std_k98ojb.List.Slice {}\n        instance(x: 108, y: -41) slice_end_7c5a2e root.Std_k98ojb.List.Slice {}\n        instance(x: 292, y: -41) concat_7c5a2e root.Std_k98ojb.List.Concat {}\n\n        list_7c5a2e -> length_7c5a2e.list\n        rotate_by_2b4d5f -> sub_2b4d5f.first\n        length_7c5a2e.length -> sub_2b4d5f.second\n        sub_2b4d5f.result -> mod_2b4d5f.value\n        length_7c5a2e.length -> mod_2b4d5f.divisor\n        list_7c5a2e -> slice_start_7c5a2e.list\n        mod_2b4d5f.result -> slice_start_7c5a2e.start\n        length_7c5a2e.length -> slice_start_7c5a2e.end\n        list_7c5a2e -> slice_end_7c5a2e.list\n        0 -> slice_end_7c5a2e.start\n        mod_2b4d5f.result -> slice_end_7c5a2e.end\n        slice_start_7c5a2e.slice -> concat_7c5a2e.left\n        slice_end_7c5a2e.slice -> concat_7c5a2e.right\n        concat_7c5a2e.result -> rotated_list_7c5a2e\n    }\n\n    \n\n    instance(x: -196, y: 30) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c7e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_5f3a4d\n        out(x: 10, y: 50, name: \"continue\") trigger() continue_2f9d09\n\n        instance(x: 10, y: -180) for_7f3a4d root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: -140) if_7f3a4d root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -100) modulo_7f3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: -60) equal_7f3a4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: -20) if_5f3a4d root.Std_k98ojb.Std.If {}\n        input_7f3a4d -> for_7f3a4d.items\n        execute_8b6c7e -> for_7f3a4d.reset\n        1 -> for_7f3a4d.start\n        input_7f3a4d -> for_7f3a4d.end\n        for_7f3a4d.item -> modulo_7f3a4d.value\n        input_7f3a4d -> modulo_7f3a4d.divisor\n        modulo_7f3a4d.result -> equal_7f3a4d.left\n        0 -> equal_7f3a4d.right\n        equal_7f3a4d.result -> if_5f3a4d.predicate\n        for_7f3a4d.onItem -> if_5f3a4d.execute\n        if_5f3a4d.then -> continue_2f9d09\n        1 -> equal_7f3a4d.right\n        input_7f3a4d -> if_7f3a4d.predicate\n        for_7f3a4d.onItem -> if_7f3a4d.execute\n        if_7f3a4d.then -> continue_2f9d09\n        if_5f3a4d.else -> for_7f3a4d.next\n        if_7f3a4d.value -> is_prime_5f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -147, y: 203, name: \"first\") property(Int) first_5d6a1f\n        in(x: -148, y: 299, name: \"second\") property(Int) second_7b8c2e\n\n        out(x: 202, y: 203, name: \"output\") property(Bool) output_6a5d1f\n\n        instance(x: -4, y: 251) expression_9f8d7c root.Std_k98ojb.Math.Expression {\n            expression: \"(first * second) < 0\"\n        }\n        first_5d6a1f -> expression_9f8d7c.gen_0\n        second_7b8c2e -> expression_9f8d7c.gen_1\n        expression_9f8d7c.result -> output_6a5d1f\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -36, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 49, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 112, y: -14, name: \"out\") property(Bool) out_f3db9f\n        out(x: 112, y: 65, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 17, y: -139) modulo_4c1dcb root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_4c1dcb.value\n        11 -> modulo_4c1dcb.divisor\n\n        instance(x: 17, y: -26) equal_4c1dcb root.Std_k98ojb.Logic.Equal {}\n        modulo_4c1dcb.result -> equal_4c1dcb.left\n        0 -> equal_4c1dcb.right\n\n        execute_27b8c3 -> modulo_4c1dcb.execute\n        equal_4c1dcb.result -> out_f3db9f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_1\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 273, y: 0) replace_5a4b8e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5a4b8e.input\n        search_1 -> replace_5a4b8e.search\n        replace_2 -> replace_5a4b8e.replace\n        replace_5a4b8e.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 186, y: 192) unique_Std_k98ojb root.Std_k98ojb.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n        instance(x: 354, y: 270) reduce_Std_k98ojb root.Std_k98ojb.Iteration.Reduce {\n            items: unique_Std_k98ojb.difference\n            handler: \"a * b\"\n            initial: 1\n        }\n        reduce_Std_k98ojb.result -> output_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -345, y: 10, name: \"list1\") property(List) list1_7a2e6d\n        in(x: -345, y: 80, name: \"list2\") property(List) list2_9b5f6c\n\n        out(x: 450, y: 45, name: \"output\") property(List) output_1a7e6d\n\n        instance(x: -135, y: 45) difference_left_8a2e6d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -135, y: 105) difference_right_9b5f6c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 180, y: 45) concat_differences_7a2e6d root.Std_k98ojb.List.Concat {}\n\n        list1_7a2e6d -> difference_left_8a2e6d.left\n        list2_9b5f6c -> difference_left_8a2e6d.right\n\n        list2_9b5f6c -> difference_right_9b5f6c.left\n        list1_7a2e6d -> difference_right_9b5f6c.right\n\n        difference_left_8a2e6d.difference -> concat_differences_7a2e6d.list1\n        difference_right_9b5f6c.difference -> concat_differences_7a2e6d.list2\n\n        concat_differences_7a2e6d.concatenatedList -> output_1a7e6d\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -162, y: 30, name: \"list\") property(List) list_4c7a5f\n        in(x: -189, y: 118, name: \"rotate_by\") property(Number) rotate_by_4d0b2e\n\n        out(x: 677, y: 30, name: \"rotated_list\") property(List) rotated_list_5c1a77\n        out(x: 691, y: 118, name: \"continue\") trigger() continue_4d0b2e\n\n        instance(x: 134, y: -10) length_1f034d root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: 175) mod_2a3c6b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 309, y: -10) sub_3f4d7e root.Std_k98ojb.Math.Sub {}\n        instance(x: 460, y: -10) slice_start_2a3c6b root.Std_k98ojb.List.Slice {}\n        instance(x: 459, y: 175) slice_end_2a3c6b root.Std_k98ojb.List.Slice {}\n        instance(x: 572, y: 80) concat_2a3c6b root.Std_k98ojb.List.Concat {}\n\n        list_4c7a5f -> length_1f034d.list\n        rotate_by_4d0b2e -> mod_2a3c6b.value\n        length_1f034d.length -> mod_2a3c6b.divisor\n        length_1f034d.length -> sub_3f4d7e.first\n        mod_2a3c6b.result -> sub_3f4d7e.second\n        list_4c7a5f -> slice_start_2a3c6b.list\n        sub_3f4d7e.result -> slice_start_2a3c6b.start\n        length_1f034d.length -> slice_start_2a3c6b.end\n        list_4c7a5f -> slice_end_2a3c6b.list\n        0 -> slice_end_2a3c6b.start\n        sub_3f4d7e.result -> slice_end_2a3c6b.end\n        slice_start_2a3c6b.slice -> concat_2a3c6b.right\n        slice_end_2a3c6b.slice -> concat_2a3c6b.left\n        concat_2a3c6b.result -> rotated_list_5c1a77\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_6a7d8c\n        in(x: -436, y: -93, name: \"numbers\") property(List) numbers_7b7e5f\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d3b8e root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d3b8e.initial_value\n        execute_6a7d8c -> setter_41e4ad.execute\n        numbers_7b7e5f -> reduce_5d3b8e.items\n        setter_41e4ad.continue -> reduce_5d3b8e.execute\n        reduce_5d3b8e.result -> getter_38583a.value\n        getter_38583a.value -> output_732a8a\n        reduce_5d3b8e.done -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7a3d6f\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8b0e7c\n\n        out(x: 1150, y: -245, name: \"is_prime\") property(Bool) is_prime_f3db9f\n        out(x: 1150, y: -195, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 170, y: -245) greater_than_2 root.Std_k98ojb.Math.GreaterThan {\n            left: input_7a3d6f\n            right: 2\n        }\n        instance(x: 330, y: -245) if_greater_than_2 root.Std_k98ojb.Std.If {\n            predicate: greater_than_2.result\n        }\n        instance(x: 10, y: -70) generate_range root.Std_k98ojb.List.GenerateRange {\n            from: 2\n            to: input_7a3d6f\n        }\n        instance(x: 10, y: 50) for_loop root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 170) modulo_check root.Std_k98ojb.Math.Modulo {\n            value: input_7a3d6f\n            divisor: for_loop.item\n        }\n        instance(x: 10, y: 290) is_zero root.Std_k98ojb.Logic.Equal {\n            left: modulo_check.result\n            right: 0\n        }\n        instance(x: 10, y: 410) if_is_zero root.Std_k98ojb.Std.If {\n            predicate: is_zero.result\n        }\n\n        execute_8b0e7c -> generate_range.trigger\n        generate_range.list -> for_loop.items\n        for_loop.reset -> if_greater_than_2.then\n        for_loop.onItem -> modulo_check.trigger\n        modulo_check.trigger -> is_zero.trigger\n        is_zero.trigger -> if_is_zero.execute\n\n        if_is_zero.else -> for_loop.next\n        if_is_zero.then -> continue_8ba06b\n        if_greater_than_2.value -> is_prime_f3db9f\n        for_loop.done -> if_greater_than_2.else\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 137, name: \"first\") property(Int) first_5f6d1e\n        in(x: -204, y: 198, name: \"second\") property(Int) second_5f6d1e\n\n        out(x: 204, y: 37, name: \"output\") property(Bool) output_5f6d1e\n\n        instance(x: -204, y: 259) mul_8b8aeb root.Std_k98ojb.Math.Mul {}\n        first_5f6d1e -> mul_8b8aeb.first\n        second_5f6d1e -> mul_8b8aeb.second\n\n        instance(x: -204, y: 379) less_than_zero_eb8ab8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_8b8aeb.result -> less_than_zero_eb8ab8.left\n        property(Int) zero { value: 0 } -> less_than_zero_eb8ab8.right\n\n        less_than_zero_eb8ab8.result -> output_5f6d1e\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -46, name: \"input\") property(Number) input_7c3f5e\n        in(x: -20, y: -98, name: \"execute\") trigger() execute_8b2d4a\n\n        out(x: 100, y: 10, name: \"result\") property(Bool) result_6a7c3f\n        out(x: 100, y: 50, name: \"continue\") trigger() continue_d9e82b\n\n        instance(x: -20, y: 40) modulo_b9d2eb root.Std_k98ojb.Math.Modulo {}\n        input_7c3f5e -> modulo_b9d2eb.value\n        11 -> modulo_b9d2eb.divisor\n        execute_8b2d4a -> modulo_b9d2eb.execute\n\n        instance(x: -20, y: 100) equal_d6b7c3 root.Std_k98ojb.Logic.Equal {}\n        modulo_b9d2eb.result -> equal_d6b7c3.left\n        0 -> equal_d6b7c3.right\n        equal_d6b7c3.result -> result_6a7c3f\n\n        execute_8b2d4a -> continue_d9e82b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_1\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 273, y: 0) replace_8f9a4d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_8f9a4d.input\n        search_1 -> replace_8f9a4d.search\n        replace_2 -> replace_8f9a4d.replace\n        replace_8f9a4d.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n        instance(x: -286, y: 197) unique_7b3b7b root.Std_k98ojb.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n        instance(x: -54, y: 197) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            items: unique_7b3b7b.difference\n            handler: \"a * b\"\n            initial: 1\n        }\n        product_7b3b7b.result -> product_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_bf9d6a\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_8b7c3e\n\n        instance(x: -100, y: 50) difference_left_2c3a1d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_4f6b2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 100) concat_dissimilar_e3d7c8 root.Std_k98ojb.List.Concat {}\n\n        list1_7a2e4c -> difference_left_2c3a1d.left\n        list2_bf9d6a -> difference_left_2c3a1d.right\n\n        list2_bf9d6a -> difference_right_4f6b2a.left\n        list1_7a2e4c -> difference_right_4f6b2a.right\n\n        difference_left_2c3a1d.difference -> concat_dissimilar_e3d7c8.list1\n        difference_right_4f6b2a.difference -> concat_dissimilar_e3d7c8.list2\n\n        concat_dissimilar_e3d7c8.concatenatedList -> output_8b7c3e\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -204, y: 135, name: \"list\") property(List) list_6d7f5e\n        in(x: -208, y: 29, name: \"rotate_by\") property(Number) rotate_by_0b4c1a\n\n        out(x: 855, y: 135, name: \"rotated_list\") property(List) rotated_list_6d7f5e\n        out(x: 852, y: 29, name: \"continue\") trigger() continue_d4b0a6\n\n        instance(x: 137, y: -11) length_2c3b50 root.Std_k98ojb.List.Length {}\n        instance(x: 341, y: 13) modulo_8d5f8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 567, y: -11) slice_2c3b50 root.Std_k98ojb.List.Slice {}\n        instance(x: 564, y: 135) slice_8d5f8e root.Std_k98ojb.List.Slice {}\n        instance(x: 767, y: 74) concat_2c3b50 root.Std_k98ojb.List.Concat {}\n\n        list_6d7f5e -> length_2c3b50.list\n        rotate_by_0b4c1a -> modulo_8d5f8e.value\n        length_2c3b50.length -> modulo_8d5f8e.divisor\n        length_2c3b50.length -> slice_2c3b50.start\n        list_6d7f5e -> slice_2c3b50.list\n        modulo_8d5f8e.result -> slice_2c3b50.end\n        0 -> slice_8d5f8e.start\n        length_2c3b50.length -> slice_8d5f8e.end\n        list_6d7f5e -> slice_8d5f8e.list\n        modulo_8d5f8e.result -> slice_8d5f8e.start\n        slice_2c3b50.slice -> concat_2c3b50.left\n        slice_8d5f8e.slice -> concat_2c3b50.right\n        concat_2c3b50.result -> rotated_list_6d7f5e\n    }\n\n    \n\n    instance(x: -194, y: 29) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f1c\n        in(x: -436, y: -98, name: \"numbers\") property(List) numbers_8d7b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_5a0f4c\n        out(x: 1169, y: -369, name: \"output\") property(Number) output_7b8d2b\n\n        instance(x: 80, y: -127) reduce_8e4b2a root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -363, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_8e4b2a.initial_value\n        numbers_8d7b1e -> reduce_8e4b2a.items\n        execute_7a6f1c -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> reduce_8e4b2a.execute\n        reduce_8e4b2a.done -> continue_5a0f4c\n        getter_38583a.value -> output_7b8d2b\n\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7f3d6c\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8a2b4e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_f7f3d6\n        out(x: 10, y: 60, name: \"continue\") trigger() continue_5c8a2b\n\n        instance(x: 10, y: -145) ifExpression_9e2d3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"input <= 1 ? false : true\"\n        }\n        input_7f3d6c -> ifExpression_9e2d3a.input\n        execute_8a2b4e -> ifExpression_9e2d3a.execute\n        instance(x: 10, y: -95) for_6a2b4e root.Std_k98ojb.Std.For {}\n        input_7f3d6c -> for_6a2b4e.items\n        List.GenerateRange(2, input_7f3d6c) -> for_6a2b4e.items\n        instance(x: 10, y: -45) ifExpression_b8a29e root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % item == 0 ? false : true\"\n        }\n        input_7f3d6c -> ifExpression_b8a29e.input\n        for_6a2b4e.item -> ifExpression_b8a29e.item\n        for_6a2b4e.onItem -> ifExpression_b8a29e.execute\n        instance(x: 10, y: 5) and_3d6c7f root.Std_k98ojb.Logic.And {}\n        ifExpression_9e2d3a.value -> and_3d6c7f.left\n        ifExpression_b8a29e.value -> and_3d6c7f.right\n        for_6a2b4e.done -> continue_5c8a2b\n        and_3d6c7f.result -> is_prime_f7f3d6\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 163) property(Int) a_7a5c4d\n        in(x: -204, y: 209) property(Int) b_8b5c4e\n\n        out(x: 204, y: 255) property(Bool) output_1f6c3d\n\n        instance(x: 0, y: 187) expression_3a5b4c root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        a_7a5c4d -> expression_3a5b4c.gen_0\n        b_8b5c4e -> expression_3a5b4c.gen_1\n        expression_3a5b4c.result -> output_1f6c3d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7a5d4c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7a5d4c.value\n        11 -> modulo_7a5d4c.divisor\n\n        instance(x: 20, y: -40) equal_6f5e4a root.Std_k98ojb.Logic.Equal {}\n        modulo_7a5d4c.result -> equal_6f5e4a.left\n        0 -> equal_6f5e4a.right\n\n        instance(x: 20, y: 40) if_31b2c7 root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_31b2c7.execute\n        equal_6f5e4a.result -> if_31b2c7.predicate\n\n        if_31b2c7.value -> out_f3db9f\n        if_31b2c7.then -> continue_8ba06b\n        if_31b2c7.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -204, y: 163, name: \"list\") property(List) list_7c5a2e\n        in(x: -208, y: 291, name: \"rotate_by\") property(Number) rotate_by_2b4d5f\n\n        out(x: 824, y: 163, name: \"rotated_list\") property(List) rotated_list_7c5a2e\n        out(x: 809, y: 291, name: \"continue\") trigger() continue_2b4d5f\n\n        instance(x: 112, y: 369) length_7c5a2e root.Std_k98ojb.List.Length {}\n        instance(x: 108, y: 497) sub_2b4d5f root.Std_k98ojb.Math.Sub {}\n        instance(x: 292, y: 369) mod_2b4d5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 108, y: 163) slice_start_7c5a2e root.Std_k98ojb.List.Slice {}\n        instance(x: 108, y: -41) slice_end_7c5a2e root.Std_k98ojb.List.Slice {}\n        instance(x: 292, y: -41) concat_7c5a2e root.Std_k98ojb.List.Concat {}\n\n        list_7c5a2e -> length_7c5a2e.list\n        rotate_by_2b4d5f -> sub_2b4d5f.first\n        length_7c5a2e.length -> sub_2b4d5f.second\n        sub_2b4d5f.result -> mod_2b4d5f.value\n        length_7c5a2e.length -> mod_2b4d5f.divisor\n        list_7c5a2e -> slice_start_7c5a2e.list\n        mod_2b4d5f.result -> slice_start_7c5a2e.start\n        length_7c5a2e.length -> slice_start_7c5a2e.end\n        list_7c5a2e -> slice_end_7c5a2e.list\n        0 -> slice_end_7c5a2e.start\n        mod_2b4d5f.result -> slice_end_7c5a2e.end\n        slice_start_7c5a2e.slice -> concat_7c5a2e.left\n        slice_end_7c5a2e.slice -> concat_7c5a2e.right\n        concat_7c5a2e.result -> rotated_list_7c5a2e\n    }\n\n    \n\n    instance(x: -196, y: 30) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c7e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_5f3a4d\n        out(x: 10, y: 50, name: \"continue\") trigger() continue_2f9d09\n\n        instance(x: 10, y: -180) for_7f3a4d root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: -140) if_7f3a4d root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -100) modulo_7f3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: -60) equal_7f3a4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: -20) if_5f3a4d root.Std_k98ojb.Std.If {}\n        input_7f3a4d -> for_7f3a4d.items\n        execute_8b6c7e -> for_7f3a4d.reset\n        1 -> for_7f3a4d.start\n        input_7f3a4d -> for_7f3a4d.end\n        for_7f3a4d.item -> modulo_7f3a4d.value\n        input_7f3a4d -> modulo_7f3a4d.divisor\n        modulo_7f3a4d.result -> equal_7f3a4d.left\n        0 -> equal_7f3a4d.right\n        equal_7f3a4d.result -> if_5f3a4d.predicate\n        for_7f3a4d.onItem -> if_5f3a4d.execute\n        if_5f3a4d.then -> continue_2f9d09\n        1 -> equal_7f3a4d.right\n        input_7f3a4d -> if_7f3a4d.predicate\n        for_7f3a4d.onItem -> if_7f3a4d.execute\n        if_7f3a4d.then -> continue_2f9d09\n        if_5f3a4d.else -> for_7f3a4d.next\n        if_7f3a4d.value -> is_prime_5f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -147, y: 203, name: \"first\") property(Int) first_5d6a1f\n        in(x: -148, y: 299, name: \"second\") property(Int) second_7b8c2e\n\n        out(x: 202, y: 203, name: \"output\") property(Bool) output_6a5d1f\n\n        instance(x: -4, y: 251) expression_9f8d7c root.Std_k98ojb.Math.Expression {\n            expression: \"(first * second) < 0\"\n        }\n        first_5d6a1f -> expression_9f8d7c.gen_0\n        second_7b8c2e -> expression_9f8d7c.gen_1\n        expression_9f8d7c.result -> output_6a5d1f\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -36, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 49, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 112, y: -14, name: \"out\") property(Bool) out_f3db9f\n        out(x: 112, y: 65, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 17, y: -139) modulo_4c1dcb root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_4c1dcb.value\n        11 -> modulo_4c1dcb.divisor\n\n        instance(x: 17, y: -26) equal_4c1dcb root.Std_k98ojb.Logic.Equal {}\n        modulo_4c1dcb.result -> equal_4c1dcb.left\n        0 -> equal_4c1dcb.right\n\n        execute_27b8c3 -> modulo_4c1dcb.execute\n        equal_4c1dcb.result -> out_f3db9f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_1\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 273, y: 0) replace_5a4b8e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5a4b8e.input\n        search_1 -> replace_5a4b8e.search\n        replace_2 -> replace_5a4b8e.replace\n        replace_5a4b8e.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 186, y: 192) unique_Std_k98ojb root.Std_k98ojb.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n        instance(x: 354, y: 270) reduce_Std_k98ojb root.Std_k98ojb.Iteration.Reduce {\n            items: unique_Std_k98ojb.difference\n            handler: \"a * b\"\n            initial: 1\n        }\n        reduce_Std_k98ojb.result -> output_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -345, y: 10, name: \"list1\") property(List) list1_7a2e6d\n        in(x: -345, y: 80, name: \"list2\") property(List) list2_9b5f6c\n\n        out(x: 450, y: 45, name: \"output\") property(List) output_1a7e6d\n\n        instance(x: -135, y: 45) difference_left_8a2e6d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -135, y: 105) difference_right_9b5f6c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 180, y: 45) concat_differences_7a2e6d root.Std_k98ojb.List.Concat {}\n\n        list1_7a2e6d -> difference_left_8a2e6d.left\n        list2_9b5f6c -> difference_left_8a2e6d.right\n\n        list2_9b5f6c -> difference_right_9b5f6c.left\n        list1_7a2e6d -> difference_right_9b5f6c.right\n\n        difference_left_8a2e6d.difference -> concat_differences_7a2e6d.list1\n        difference_right_9b5f6c.difference -> concat_differences_7a2e6d.list2\n\n        concat_differences_7a2e6d.concatenatedList -> output_1a7e6d\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -162, y: 30, name: \"list\") property(List) list_4c7a5f\n        in(x: -189, y: 118, name: \"rotate_by\") property(Number) rotate_by_4d0b2e\n\n        out(x: 677, y: 30, name: \"rotated_list\") property(List) rotated_list_5c1a77\n        out(x: 691, y: 118, name: \"continue\") trigger() continue_4d0b2e\n\n        instance(x: 134, y: -10) length_1f034d root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: 175) mod_2a3c6b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 309, y: -10) sub_3f4d7e root.Std_k98ojb.Math.Sub {}\n        instance(x: 460, y: -10) slice_start_2a3c6b root.Std_k98ojb.List.Slice {}\n        instance(x: 459, y: 175) slice_end_2a3c6b root.Std_k98ojb.List.Slice {}\n        instance(x: 572, y: 80) concat_2a3c6b root.Std_k98ojb.List.Concat {}\n\n        list_4c7a5f -> length_1f034d.list\n        rotate_by_4d0b2e -> mod_2a3c6b.value\n        length_1f034d.length -> mod_2a3c6b.divisor\n        length_1f034d.length -> sub_3f4d7e.first\n        mod_2a3c6b.result -> sub_3f4d7e.second\n        list_4c7a5f -> slice_start_2a3c6b.list\n        sub_3f4d7e.result -> slice_start_2a3c6b.start\n        length_1f034d.length -> slice_start_2a3c6b.end\n        list_4c7a5f -> slice_end_2a3c6b.list\n        0 -> slice_end_2a3c6b.start\n        sub_3f4d7e.result -> slice_end_2a3c6b.end\n        slice_start_2a3c6b.slice -> concat_2a3c6b.right\n        slice_end_2a3c6b.slice -> concat_2a3c6b.left\n        concat_2a3c6b.result -> rotated_list_5c1a77\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_6a7d8c\n        in(x: -436, y: -93, name: \"numbers\") property(List) numbers_7b7e5f\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d3b8e root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d3b8e.initial_value\n        execute_6a7d8c -> setter_41e4ad.execute\n        numbers_7b7e5f -> reduce_5d3b8e.items\n        setter_41e4ad.continue -> reduce_5d3b8e.execute\n        reduce_5d3b8e.result -> getter_38583a.value\n        getter_38583a.value -> output_732a8a\n        reduce_5d3b8e.done -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7a3d6f\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8b0e7c\n\n        out(x: 1150, y: -245, name: \"is_prime\") property(Bool) is_prime_f3db9f\n        out(x: 1150, y: -195, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 170, y: -245) greater_than_2 root.Std_k98ojb.Math.GreaterThan {\n            left: input_7a3d6f\n            right: 2\n        }\n        instance(x: 330, y: -245) if_greater_than_2 root.Std_k98ojb.Std.If {\n            predicate: greater_than_2.result\n        }\n        instance(x: 10, y: -70) generate_range root.Std_k98ojb.List.GenerateRange {\n            from: 2\n            to: input_7a3d6f\n        }\n        instance(x: 10, y: 50) for_loop root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 170) modulo_check root.Std_k98ojb.Math.Modulo {\n            value: input_7a3d6f\n            divisor: for_loop.item\n        }\n        instance(x: 10, y: 290) is_zero root.Std_k98ojb.Logic.Equal {\n            left: modulo_check.result\n            right: 0\n        }\n        instance(x: 10, y: 410) if_is_zero root.Std_k98ojb.Std.If {\n            predicate: is_zero.result\n        }\n\n        execute_8b0e7c -> generate_range.trigger\n        generate_range.list -> for_loop.items\n        for_loop.reset -> if_greater_than_2.then\n        for_loop.onItem -> modulo_check.trigger\n        modulo_check.trigger -> is_zero.trigger\n        is_zero.trigger -> if_is_zero.execute\n\n        if_is_zero.else -> for_loop.next\n        if_is_zero.then -> continue_8ba06b\n        if_greater_than_2.value -> is_prime_f3db9f\n        for_loop.done -> if_greater_than_2.else\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 137, name: \"first\") property(Int) first_5f6d1e\n        in(x: -204, y: 198, name: \"second\") property(Int) second_5f6d1e\n\n        out(x: 204, y: 37, name: \"output\") property(Bool) output_5f6d1e\n\n        instance(x: -204, y: 259) mul_8b8aeb root.Std_k98ojb.Math.Mul {}\n        first_5f6d1e -> mul_8b8aeb.first\n        second_5f6d1e -> mul_8b8aeb.second\n\n        instance(x: -204, y: 379) less_than_zero_eb8ab8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_8b8aeb.result -> less_than_zero_eb8ab8.left\n        property(Int) zero { value: 0 } -> less_than_zero_eb8ab8.right\n\n        less_than_zero_eb8ab8.result -> output_5f6d1e\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -46, name: \"input\") property(Number) input_7c3f5e\n        in(x: -20, y: -98, name: \"execute\") trigger() execute_8b2d4a\n\n        out(x: 100, y: 10, name: \"result\") property(Bool) result_6a7c3f\n        out(x: 100, y: 50, name: \"continue\") trigger() continue_d9e82b\n\n        instance(x: -20, y: 40) modulo_b9d2eb root.Std_k98ojb.Math.Modulo {}\n        input_7c3f5e -> modulo_b9d2eb.value\n        11 -> modulo_b9d2eb.divisor\n        execute_8b2d4a -> modulo_b9d2eb.execute\n\n        instance(x: -20, y: 100) equal_d6b7c3 root.Std_k98ojb.Logic.Equal {}\n        modulo_b9d2eb.result -> equal_d6b7c3.left\n        0 -> equal_d6b7c3.right\n        equal_d6b7c3.result -> result_6a7c3f\n\n        execute_8b2d4a -> continue_d9e82b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_1\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 273, y: 0) replace_8f9a4d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_8f9a4d.input\n        search_1 -> replace_8f9a4d.search\n        replace_2 -> replace_8f9a4d.replace\n        replace_8f9a4d.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n        instance(x: -286, y: 197) unique_7b3b7b root.Std_k98ojb.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n        instance(x: -54, y: 197) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            items: unique_7b3b7b.difference\n            handler: \"a * b\"\n            initial: 1\n        }\n        product_7b3b7b.result -> product_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_bf9d6a\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_8b7c3e\n\n        instance(x: -100, y: 50) difference_left_2c3a1d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_4f6b2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 100) concat_dissimilar_e3d7c8 root.Std_k98ojb.List.Concat {}\n\n        list1_7a2e4c -> difference_left_2c3a1d.left\n        list2_bf9d6a -> difference_left_2c3a1d.right\n\n        list2_bf9d6a -> difference_right_4f6b2a.left\n        list1_7a2e4c -> difference_right_4f6b2a.right\n\n        difference_left_2c3a1d.difference -> concat_dissimilar_e3d7c8.list1\n        difference_right_4f6b2a.difference -> concat_dissimilar_e3d7c8.list2\n\n        concat_dissimilar_e3d7c8.concatenatedList -> output_8b7c3e\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -204, y: 135, name: \"list\") property(List) list_6d7f5e\n        in(x: -208, y: 29, name: \"rotate_by\") property(Number) rotate_by_0b4c1a\n\n        out(x: 855, y: 135, name: \"rotated_list\") property(List) rotated_list_6d7f5e\n        out(x: 852, y: 29, name: \"continue\") trigger() continue_d4b0a6\n\n        instance(x: 137, y: -11) length_2c3b50 root.Std_k98ojb.List.Length {}\n        instance(x: 341, y: 13) modulo_8d5f8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 567, y: -11) slice_2c3b50 root.Std_k98ojb.List.Slice {}\n        instance(x: 564, y: 135) slice_8d5f8e root.Std_k98ojb.List.Slice {}\n        instance(x: 767, y: 74) concat_2c3b50 root.Std_k98ojb.List.Concat {}\n\n        list_6d7f5e -> length_2c3b50.list\n        rotate_by_0b4c1a -> modulo_8d5f8e.value\n        length_2c3b50.length -> modulo_8d5f8e.divisor\n        length_2c3b50.length -> slice_2c3b50.start\n        list_6d7f5e -> slice_2c3b50.list\n        modulo_8d5f8e.result -> slice_2c3b50.end\n        0 -> slice_8d5f8e.start\n        length_2c3b50.length -> slice_8d5f8e.end\n        list_6d7f5e -> slice_8d5f8e.list\n        modulo_8d5f8e.result -> slice_8d5f8e.start\n        slice_2c3b50.slice -> concat_2c3b50.left\n        slice_8d5f8e.slice -> concat_2c3b50.right\n        concat_2c3b50.result -> rotated_list_6d7f5e\n    }\n\n    \n\n    instance(x: -194, y: 29) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f1c\n        in(x: -436, y: -98, name: \"numbers\") property(List) numbers_8d7b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_5a0f4c\n        out(x: 1169, y: -369, name: \"output\") property(Number) output_7b8d2b\n\n        instance(x: 80, y: -127) reduce_8e4b2a root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -363, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_8e4b2a.initial_value\n        numbers_8d7b1e -> reduce_8e4b2a.items\n        execute_7a6f1c -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> reduce_8e4b2a.execute\n        reduce_8e4b2a.done -> continue_5a0f4c\n        getter_38583a.value -> output_7b8d2b\n\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7f3d6c\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8a2b4e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_f7f3d6\n        out(x: 10, y: 60, name: \"continue\") trigger() continue_5c8a2b\n\n        instance(x: 10, y: -145) ifExpression_9e2d3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"input <= 1 ? false : true\"\n        }\n        input_7f3d6c -> ifExpression_9e2d3a.input\n        execute_8a2b4e -> ifExpression_9e2d3a.execute\n        instance(x: 10, y: -95) for_6a2b4e root.Std_k98ojb.Std.For {}\n        input_7f3d6c -> for_6a2b4e.items\n        List.GenerateRange(2, input_7f3d6c) -> for_6a2b4e.items\n        instance(x: 10, y: -45) ifExpression_b8a29e root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % item == 0 ? false : true\"\n        }\n        input_7f3d6c -> ifExpression_b8a29e.input\n        for_6a2b4e.item -> ifExpression_b8a29e.item\n        for_6a2b4e.onItem -> ifExpression_b8a29e.execute\n        instance(x: 10, y: 5) and_3d6c7f root.Std_k98ojb.Logic.And {}\n        ifExpression_9e2d3a.value -> and_3d6c7f.left\n        ifExpression_b8a29e.value -> and_3d6c7f.right\n        for_6a2b4e.done -> continue_5c8a2b\n        and_3d6c7f.result -> is_prime_f7f3d6\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 163) property(Int) a_7d5a4c\n        in(x: -204, y: 209) property(Int) b_8b6e5d\n\n        out(x: 203, y: 163) property(Bool) output_2f6b6a\n\n        instance(x: -27, y: 186) expression_4c3319 root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        a_7d5a4c -> expression_4c3319.gen_0\n        b_8b6e5d -> expression_4c3319.gen_1\n        expression_4c3319.result -> output_2f6b6a\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_78d5e7 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4d5a root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4d5a.value\n        11 -> modulo_7c4d5a.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4b root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4d5a.result -> equal_6f3e4b.left\n        0 -> equal_6f3e4b.right\n\n        execute_27b8c3 -> continue_8ba06b\n        equal_6f3e4b.result -> out_f3db9f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -206, y: 154, name: \"list\") property(List) list_7c3d0a\n        in(x: -208, y: 29, name: \"execute\") trigger() execute_1b4f5e\n        in(x: -206, y: 87, name: \"rotation_count\") property(Number) rotation_count_2c3d0a\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: -11) slice_1d6b1a root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 103) slice_7c3d0a root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -203) sub_6e2f1b root.Std_k98ojb.Math.Sub {}\n        instance(x: 557, y: 195) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        getter(x: 409, y: -11, name: \"getter_2c3d0a\") getter_2c3d0a = list_7c3d0a\n        getter(x: 409, y: 103, name: \"getter_6e2f1b\") getter_6e2f1b = list_7c3d0a\n        instance(x: 557, y: -87) length_7c3d0a root.Std_k98ojb.List.Length {}\n        setter(x: 409, y: -203, name: \"setter_6e2f1b\") setter_6e2f1b = rotation_count_2c3d0a\n        getter(x: 557, y: -87, name: \"getter_7c3d0a\") getter_7c3d0a = list_7c3d0a\n\n        execute_1b4f5e -> length_7c3d0a.execute\n        rotation_count_2c3d0a -> setter_6e2f1b.new_value\n        sub_6e2f1b.result -> slice_1d6b1a.start\n        getter_7c3d0a.value -> length_7c3d0a.list\n        list_7c3d0a -> getter_7c3d0a.name\n        setter_6e2f1b.old_value -> sub_6e2f1b.first\n        slice_1d6b1a.result -> concat_9b38cc.left\n        length_7c3d0a.length -> sub_6e2f1b.second\n        getter_2c3d0a.value -> slice_1d6b1a.list\n        list_7c3d0a -> getter_2c3d0a.name\n        concat_9b38cc.result -> data_0_0\n        sub_6e2f1b.result -> slice_7c3d0a.start\n        getter_6e2f1b.value -> slice_7c3d0a.end\n        getter_6e2f1b.value -> slice_1d6b1a.end\n        getter_6e2f1b.old_value -> setter_6e2f1b.old_value\n        -1 -> slice_7c3d0a.end\n        getter_6e2f1b.value -> concat_9b38cc.right\n        list_7c3d0a -> getter_6e2f1b.name\n        length_7c3d0a.execute -> continue_a7f942\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -256, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -389, name: \"execute\") trigger() execute_7b9e1c\n\n        out(x: 1890, y: -256, name: \"out\") property(Bool) out_7f3a4d\n        out(x: 1890, y: -389, name: \"continue\") trigger() continue_7b9e1c\n\n        instance(x: 10, y: -125) lessthanorequal_6b2a1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10, y: -43) equal_2d751e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 40) greaterthan_6a2a1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 10, y: 123) generaterange_7f3a4d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 10, y: 206) for_7f3a4d root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 289) modulo_7f3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 372) equal_7f3a4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 455) if_7f3a4d root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: 538) not_7f3a4d root.Std_k98ojb.Logic.Not {}\n\n        input_7f3a4d -> lessthanorequal_6b2a1f.left\n        2 -> lessthanorequal_6b2a1f.right\n\n        input_7f3a4d -> equal_2d751e.left\n        2 -> equal_2d751e.right\n\n        input_7f3a4d -> greaterthan_6a2a1f.left\n        2 -> greaterthan_6a2a1f.right\n\n        2 -> generaterange_7f3a4d.from\n        input_7f3a4d -> generaterange_7f3a4d.to\n\n        generaterange_7f3a4d.list -> for_7f3a4d.items\n\n        input_7f3a4d -> modulo_7f3a4d.left\n        for_7f3a4d.item -> modulo_7f3a4d.right\n\n        0 -> equal_7f3a4d.left\n        modulo_7f3a4d.result -> equal_7f3a4d.right\n\n        equal_7f3a4d.result -> if_7f3a4d.predicate\n\n        lessthanorequal_6b2a1f.result -> not_7f3a4d.input\n        greaterthan_6a2a1f.result -> not_7f3a4d.input\n\n        equal_2d751e.result -> out_7f3a4d\n        if_7f3a4d.value -> out_7f3a4d\n\n        execute_7b9e1c -> for_7f3a4d.reset\n        for_7f3a4d.onItem -> if_7f3a4d.execute\n        if_7f3a4d.else -> for_7f3a4d.next\n        for_7f3a4d.done -> continue_7b9e1c\n\n        not_7f3a4d.result -> out_7f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 162, y: -40, name: \"a\") property(Int) a_7c5e3f\n        in(x: 162, y: 80, name: \"b\") property(Int) b_9d4b5e\n\n        out(x: 444, y: 120, name: \"output\") property(Bool) output_7a2c3f\n\n        instance(x: 306, y: -8) expression_3b151c root.Std_k98ojb.Math.Expression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        a_7c5e3f -> expression_3b151c.gen_0\n        b_9d4b5e -> expression_3b151c.gen_1\n        expression_3b151c.result -> output_7a2c3f\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -247, y: 53, name: \"input\") property(Number) input_f5c03d\n        in(x: -247, y: 119, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 628, y: 53, name: \"result\") property(Bool) result_3f3a0d\n        out(x: 628, y: 119, name: \"continue\") trigger() continue_4e7b1c\n\n        instance(x: -247, y: 251) modulo_5b1fcb root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_5b1fcb.value\n        11 -> modulo_5b1fcb.divisor\n\n        instance(x: -247, y: 363) equal_8e1a2c root.Std_k98ojb.Logic.Equal {}\n        modulo_5b1fcb.result -> equal_8e1a2c.left\n        0 -> equal_8e1a2c.right\n\n        instance(x: -247, y: 463) if_7d4b9c root.Std_k98ojb.Std.If {}\n        equal_8e1a2c.result -> if_7d4b9c.predicate\n        execute_27b8c3 -> if_7d4b9c.execute\n\n        instance(x: 628, y: -50) true_2f9d09 root.Std_k98ojb.Logic.Equal {}\n        1 -> true_2f9d09.left\n        1 -> true_2f9d09.right\n        true_2f9d09.result -> result_3f3a0d\n\n        if_7d4b9c.then -> continue_4e7b1c\n        if_7d4b9c.else -> continue_4e7b1c\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 60, name: \"search\") property(String) search_1\n        in(x: -230, y: 120, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 285, y: 0) replace_9a3b4c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9a3b4c.input\n        search_1 -> replace_9a3b4c.search\n        replace_2 -> replace_9a3b4c.replace\n        replace_9a3b4c.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -243, y: 105, name: \"input\") property(String) input_ai\n        out(x: 367, y: 98, name: \"output\") property(String) output_ai\n\n        instance(x: 75, y: 97) tolower_2b4dcb root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_2b4dcb.input\n        tolower_2b4dcb.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -421, y: 305) property(List) inputList_ai\n        out(x: 842, y: 379) property(Number) result_ai\n        instance(x: -168, y: 306) unique_Std_k98ojb root.Std_k98ojb.Sets.Intersection {\n            right: [0]\n        }\n        inputList_ai -> unique_Std_k98ojb.left\n        instance(x: 245, y: 371) reduce_Std_k98ojb root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"a * b\"\n            initial: 1\n        }\n        unique_Std_k98ojb.intersect -> reduce_Std_k98ojb.items\n        reduce_Std_k98ojb.result -> result_ai\n    }\n\n    instance(x: -34, y: 127) productUnique_node root.main.ProductUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -341, y: 52, name: \"list1\") property(List) list1_016b2e\n        in(x: -337, y: -49, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -5, name: \"output\") property(List) output_879de6\n\n        instance(x: -121, y: -3) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n        list1_016b2e -> difference_78d487.left\n        list2_c8f404 -> difference_78d487.right\n        difference_78d487.difference -> output_879de6\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -150, y: 246, name: \"list\") property(List) list_7d3a2f\n        in(x: -159, y: 168, name: \"rotate_by\") property(Number) rotate_by_0b5e6c\n\n        out(x: 698, y: 240, name: \"rotated_list\") property(List) rotated_list_7d3a2f\n        out(x: 698, y: 168, name: \"continue\") trigger() continue_e52c0b\n\n        instance(x: 168, y: -14) slice_1e754c root.Std_k98ojb.List.Slice {}\n        instance(x: 365, y: 245) concat_3a4d0f root.Std_k98ojb.List.Concat {}\n        getter(x: 452, y: -12) name: \"getter_7d3a2f\" getter_7d3a2f = list_7d3a2f\n        instance(x: 368, y: -10) slice_9c7b1e root.Std_k98ojb.List.Slice {}\n        instance(x: 165, y: 164) length_0b5e6c root.Std_k98ojb.List.Length {}\n        getter(x: 362, y: -122) name: \"getter_7d3a2f\" getter_7d3a2f = list_7d3a2f\n        instance(x: 165, y: 348) sub_0b5e6c root.Std_k98ojb.Math.Sub {}\n        \n        length_0b5e6c.length -> sub_0b5e6c.first\n        list_7d3a2f -> length_0b5e6c.list\n        rotate_by_0b5e6c -> sub_0b5e6c.second\n        sub_0b5e6c.result -> slice_1e754c.start\n        0 -> slice_1e754c.end\n        list_7d3a2f -> slice_1e754c.list\n        rotate_by_0b5e6c -> slice_9c7b1e.start\n        -1 -> slice_9c7b1e.end\n        getter_7d3a2f.value -> slice_9c7b1e.list\n        slice_9c7b1e.slice -> concat_3a4d0f.left\n        slice_1e754c.slice -> concat_3a4d0f.right\n        concat_3a4d0f.result -> rotated_list_7d3a2f\n    }\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -346, y: -215, name: \"execute\") trigger() execute_7c0d5f\n        in(x: -339, y: -158, name: \"array\") property(List(Number)) array_3a8e5b\n\n        out(x: 462, y: -206, name: \"continue\") trigger() continue_7c0d5f\n        out(x: 469, y: -155, name: \"sum\") property(Number) sum_3a8e5b\n\n        instance(x: -128, y: -161) reduce_6c4b7e root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: 106, y: -224, name: \"setter_23a8f5\") setter_23a8f5 = sum\n        getter(x: 333, y: -161, name: \"getter_7c9d9b\") getter_7c9d9b = sum\n\n        execute_7c0d5f -> reduce_6c4b7e.execute\n        array_3a8e5b -> reduce_6c4b7e.items\n        0 -> reduce_6c4b7e.initial_value\n        reduce_6c4b7e.result -> setter_23a8f5.new_value\n        setter_23a8f5.continue -> continue_7c0d5f\n        getter_7c9d9b.value -> sum_3a8e5b\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -210, name: \"input\") property(Number) input_7f6a2d\n        in(x: 598, y: -210, name: \"execute\") trigger() execute_3e9b8c\n\n        out(x: 1642, y: -120, name: \"out\") property(Bool) out_f7a2d8\n        out(x: 1850, y: -120, name: \"continue\") trigger() continue_3f9b8c\n\n        instance(x: 406, y: -410) generaterange_e6e2da root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 752, y: -280) for_5d7a1c root.Std_k98ojb.Std.For {}\n        instance(x: 1304, y: -315) expression_6f2e8b root.Std_k98ojb.Math.Expression {\n            expression: \"input % i == 0\"\n        }\n        instance(x: 1476, y: -145) if_6d7a1c root.Std_k98ojb.Std.If {}\n        instance(x: 1236, y: -470) lessthanorequal_e6e2da root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        input_7f6a2d -> generaterange_e6e2da.from\n        2 -> generaterange_e6e2da.to\n        generaterange_e6e2da.list -> for_5d7a1c.items\n        for_5d7a1c.item -> expression_6f2e8b.gen_0\n        input_7f6a2d -> expression_6f2e8b.gen_1\n        for_5d7a1c.onItem -> if_6d7a1c.execute\n        expression_6f2e8b.result -> if_6d7a1c.predicate\n        input_7f6a2d -> lessthanorequal_e6e2da.left\n        for_5d7a1c.item -> lessthanorequal_e6e2da.right\n        lessthanorequal_e6e2da.result -> if_6d7a1c.else\n\n        if_6d7a1c.then -> continue_3f9b8c\n        for_5d7a1c.done -> if_6d7a1c.execute\n        if_6d7a1c.value -> out_f7a2d8\n        execute_3e9b8c -> for_5d7a1c.reset\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -25) property(Int) a_7c34a2\n        in(x: 60, y: -10) property(Int) b_c8e9d2\n\n        out(x: 150, y: 150) property(Bool) result_d1f5b4\n\n        instance(x: 100, y: 70) math_mul root.Std_k98ojb.Math.Mul {\n            first: a_7c34a2\n            second: b_c8e9d2\n        }\n\n        instance(x: 100, y: 110) is_numeric root.Std_k98ojb.Strings.IsNumeric {\n            input: math_mul.result\n        }\n\n        instance(x: 100, y: 140) less_than_zero root.Std_k98ojb.Math.LessThanOrEqual {\n            left: math_mul.result\n            right: 0\n        }\n\n        is_numeric.value -> result_d1f5b4\n\n        is_numeric.value -> less_than_zero.left\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -30, name: \"input\") property(Number) input_e4d5e6\n        in(x: -20, y: 90, name: \"execute\") trigger() execute_c8c7a5\n\n        out(x: 1000, y: -30, name: \"out\") property(Bool) out_4f8b6d\n        out(x: 1000, y: 90, name: \"continue\") trigger() continue_e2c7e5\n\n        instance(x: 280, y: -30) modulo_7a564b root.Std_k98ojb.Math.Modulo {}\n        input_e4d5e6 -> modulo_7a564b.value\n        11 -> modulo_7a564b.divisor\n\n        instance(x: 600, y: -30) equal_2f3c39 root.Std_k98ojb.Logic.Equal {}\n        modulo_7a564b.result -> equal_2f3c39.left\n        0 -> equal_2f3c39.right\n\n        instance(x: 720, y: -30) if_e4d14e root.Std_k98ojb.Std.If {}\n        execute_c8c7a5 -> if_e4d14e.execute\n        equal_2f3c39.result -> if_e4d14e.predicate\n\n        instance(x: 840, y: -30) true_6a5a4c root.Std_k98ojb.Logic.Equal {\n            left: true\n            right: true\n        }\n        if_e4d14e.then -> true_6a5a4c.execute\n\n        instance(x: 840, y: 30) false_72f15d root.Std_k98ojb.Logic.Equal {\n            left: false\n            right: false\n        }\n        if_e4d14e.else -> false_72f15d.execute\n\n        true_6a5a4c.result -> out_4f8b6d\n        false_72f15d.result -> out_4f8b6d\n\n        if_e4d14e.then -> continue_e2c7e5\n        if_e4d14e.else -> continue_e2c7e5\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -200, y: 0, name: \"input\") property(String) input_0\n        in(x: -200, y: 50, name: \"search\") property(String) search_0\n        in(x: -200, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 50, y: 0) replace_8a2d4b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_8a2d4b.input\n        search_0 -> replace_8a2d4b.search\n        replace_0 -> replace_8a2d4b.replace\n        replace_8a2d4b.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -20, y: 15, name: \"input\") property(String) input_ai\n        out(x: 346, y: 78, name: \"output\") property(String) output_ai\n\n        instance(x: 190, y: 77) tolower_3d2a3b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_3d2a3b.input\n        tolower_3d2a3b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -531, y: 2, name: \"numbers\") property(List) numbers_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: -300, y: 100) unique_numbers root.Std_k98ojb.Sets.Difference {\n            left: numbers_ai\n            right: []\n        }\n\n        instance(x: -150, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_numbers.difference\n            handler: \"a * b\"\n            initial_value: 1\n        }\n        \n        reduce_product.result -> product_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -340, y: -125, name: \"list1\") property(List) list1_6a7f4d\n        in(x: -339, y: 8, name: \"list2\") property(List) list2_b6e1c5\n\n        out(x: 407, y: -125, name: \"output\") property(List) output_4d2b2a\n\n        instance(x: -119, y: -128) difference_3f6a8e root.Std_k98ojb.Sets.Difference {}\n        list1_6a7f4d -> difference_3f6a8e.left\n        list2_b6e1c5 -> difference_3f6a8e.right\n\n        instance(x: 168, y: -120) difference_2_9b34ad root.Std_k98ojb.Sets.Difference {}\n        list2_b6e1c5 -> difference_2_9b34ad.left\n        list1_6a7f4d -> difference_2_9b34ad.right\n\n        instance(x: 306, y: -128) concat_c6a586 root.Std_k98ojb.List.Concat {}\n        difference_3f6a8e.difference -> concat_c6a586.left\n        difference_2_9b34ad.difference -> concat_c6a586.right\n\n        concat_c6a586.list -> output_4d2b2a\n    }\n\n    \n\n    instance(x: 417, y: -102) dissimilar_elements_1f4ebe root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 230, name: \"list\") property(List) list_8e03b8\n        in(x: -179, y: 362, name: \"rotate_by\") property(Number) rotate_by_d5d0c5\n\n        out(x: 943, y: 191, name: \"rotated_list\") property(List) data_0_0\n        out(x: 874, y: -166, name: \"continue\") trigger() continue_2a4f4e\n\n        instance(x: 556, y: 229) slice_3d9b5a root.Std_k98ojb.List.Slice {}\n        getter(x: 270, y: -173, name: \"getter_0c873a\") getter_0c873a = length\n        instance(x: 649, y: 34) concat_c52e57 root.Std_k98ojb.List.Concat {}\n        setter(x: 219, y: -66, name: \"setter_e4d4f0\") setter_e4d4f0 = length\n        instance(x: 553, y: -174) slice_27a2c8 root.Std_k98ojb.List.Slice {}\n        instance(x: 259, y: 260) length_040b1e root.Std_k98ojb.List.Length {}\n\n        getter(x: 315, y: -150, name: \"getter_7c2d0d\") getter_7c2d0d = adjusted_rotate_by\n        instance(x: 608, y: 456) expression_9a2f67 root.Std_k98ojb.Math.Expression {\n            expression: \"length - rotate_by\"\n        }\n        getter(x: 318, y: 342, name: \"getter_c6c8d6\") getter_c6c8d6 = adjusted_rotate_by\n\n        setter_e4d4f0.continue -> slice_27a2c8.execute\n        list_8e03b8 -> length_040b1e.list\n        expression_9a2f67.result -> setter_e4d4f0.new_value\n        rotate_by_d5d0c5 -> expression_9a2f67.gen_1\n        slice_27a2c8.end -> slice_3d9b5a.start\n        slice_3d9b5a.result -> concat_c52e57.right\n        getter_7c2d0d.value -> slice_27a2c8.start\n        length_040b1e.length -> setter_e4d4f0.new_value\n        list_8e03b8 -> slice_27a2c8.list\n        list_8e03b8 -> slice_3d9b5a.list\n        getter_c6c8d6.value -> slice_3d9b5a.end\n        concat_c52e57.result -> data_0_0\n        setter_e4d4f0.continue -> slice_3d9b5a.execute\n        slice_27a2c8.result -> concat_c52e57.left\n    }\n\n    \n\n    instance(x: -168, y: 19) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7e6f9c\n        in(x: -436, y: -18, name: \"array\") property(List) array_c7d7b8\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: -205, y: -196) reduce_4c4b95 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -205, y: -82) add_0e2f12 root.Std_k98ojb.Math.Add {}\n        0 -> reduce_4c4b95.accumulator\n        array_c7d7b8 -> reduce_4c4b95.items\n        execute_7e6f9c -> reduce_4c4b95.execute\n        reduce_4c4b95.continue_d9efd7 -> continue_d9efd7\n        add_0e2f12.result -> output_732a8a\n        reduce_4c4b95.current_value -> add_0e2f12.second\n        reduce_4c4b95.accumulator -> add_0e2f12.first\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 250, y: -160, name: \"input\") property(Number) input_4f7a3d\n        in(x: 180, y: -280, name: \"execute\") trigger() execute_b2e9c3\n\n        out(x: 1750, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 280, y: -150) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -75) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1221, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1496, y: -150) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1088, y: -256) greaterthan_3a8eac root.Std_k98ojb.Math.GreaterThan {}\n        2 -> generaterange_038fce.from\n        input_4f7a3d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_4f7a3d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        execute_b2e9c3 -> for_8cb3f6.reset\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        input_4f7a3d -> greaterthan_3a8eac.left\n        1 -> greaterthan_3a8eac.right\n        greaterthan_3a8eac.result -> for_8cb3f6.trigger\n        if_07b8c7.then -> continue_8ba06b\n        if_07b8c7.else -> for_8cb3f6.next\n        for_8cb3f6.done -> if_2a4d91.execute\n    }\n    \n    instance(x: 1500, y: -320) not_f3db9f root.Std_k98ojb.Logic.Not {}\n    instance(x: 1700, y: -320) and_80a119 root.Std_k98ojb.Logic.And {}\n\n    if_07b8c7.value -> out_f3db9f\n    for_8cb3f6.done -> continue_8ba06b\n    not_f3db9f.out -> and_80a119.left\n    greaterthan_3a8eac.result -> and_80a119.right\n    and_80a119.out -> out_f3db9f\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 163) property(Int) a_7a5c4d\n        in(x: -204, y: 209) property(Int) b_8b5c4e\n\n        out(x: 204, y: 255) property(Bool) output_1f6c3d\n\n        instance(x: 0, y: 187) expression_3a5b4c root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        a_7a5c4d -> expression_3a5b4c.gen_0\n        b_8b5c4e -> expression_3a5b4c.gen_1\n        expression_3a5b4c.result -> output_1f6c3d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4a5d root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4a5d.value\n        11 -> modulo_7c4a5d.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4a5d.result -> equal_6f3e4c.left\n        0 -> equal_6f3e4c.right\n\n        instance(x: 20, y: 40) if_123abc root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_123abc.execute\n        equal_6f3e4c.result -> if_123abc.predicate\n\n        if_123abc.value -> out_f3db9f\n        if_123abc.then -> continue_8ba06b\n        if_123abc.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -206, y: 154, name: \"list\") property(List) list_7c3d5e\n        in(x: -208, y: 29, name: \"execute\") trigger() execute_1b4a2f\n        in(x: -206, y: 86, name: \"rotation_count\") property(Number) rotation_count_7c3d5e\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 824, y: -19, name: \"continue\") trigger() continue_2b2a7c\n\n        instance(x: 557, y: 131) slice_6e2f5d root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -101) slice_23b75d root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 201) concat_6e2f5d root.Std_k98ojb.List.Concat {}\n        getter(x: 412, y: -101, name: \"getter_3c1a44\") getter_3c1a44 = length\n        instance(x: 417, y: 165) sub_6e2f5d root.Std_k98ojb.Math.Sub {}\n        setter(x: -10, y: 165, name: \"setter_6e2f5d\") setter_6e2f5d = length\n        getter(x: 417, y: 235, name: \"getter_8c9b1a\") getter_8c9b1a = length\n        instance(x: -10, y: 29) length_6e2f5d root.Std_k98ojb.List.Length {}\n        setter(x: -14, y: -103, name: \"setter_23b75d\") setter_23b75d = length\n        getter(x: 412, y: -169, name: \"getter_8c9b1a\") getter_8c9b1a = length\n\n        execute_1b4a2f -> setter_6e2f5d.execute\n        list_7c3d5e -> length_6e2f5d.list\n        rotation_count_7c3d5e -> sub_6e2f5d.second\n        getter_8c9b1a.value -> slice_6e2f5d.start\n        getter_3c1a44.value -> slice_23b75d.end\n        list_7c3d5e -> slice_6e2f5d.list\n        length_6e2f5d.length -> setter_6e2f5d.new_value\n        sub_6e2f5d.result -> slice_6e2f5d.end\n        getter_8c9b1a.value -> slice_23b75d.start\n        list_7c3d5e -> slice_23b75d.list\n        setter_6e2f5d.continue -> sub_6e2f5d.execute\n        slice_6e2f5d.result -> concat_6e2f5d.left\n        slice_23b75d.result -> concat_6e2f5d.right\n        getter_8c9b1a.value -> setter_23b75d.new_value\n        -1 -> slice_23b75d.end\n        0 -> slice_6e2f5d.start\n        setter_23b75d.continue -> slice_23b75d.execute\n        concat_6e2f5d.result -> data_0_0\n    }\n\n    \n\n    instance(x: -198, y: 4) rotate_right_1b4a2f root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c4e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_7f3a4d\n        out(x: 10, y: 50, name: \"continue\") trigger() continue_8b6c4e\n\n        instance(x: 10, y: -210) ifExpression_9fba8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input <= 1 ? false : input == 2 || input % 2 != 0\"\n        }\n        execute_8b6c4e -> ifExpression_9fba8c.execute\n        input_7f3a4d -> ifExpression_9fba8c.input\n\n        instance(x: 10, y: -150) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        execute_8b6c4e -> for_8cb3f6.reset\n        input_7f3a4d -> for_8cb3f6.items\n\n        instance(x: 10, y: -100) ifExpression_b720d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % item == 0\"\n        }\n        for_8cb3f6.onItem -> ifExpression_b720d7.execute\n        input_7f3a4d -> ifExpression_b720d7.input\n        for_8cb3f6.item -> ifExpression_b720d7.item\n\n        instance(x: 10, y: -50) not_80a119 root.Std_k98ojb.Logic.Not {}\n        ifExpression_b720d7.value -> not_80a119.input\n        not_80a119.output -> is_prime_7f3a4d\n\n        instance(x: 10, y: -5) if_07b8c7 root.Std_k98ojb.Std.If {}\n        for_8cb3f6.done -> if_07b8c7.execute\n        not_80a119.output -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_8b6c4e\n\n        instance(x: 10, y: 50) and_80a119 root.Std_k98ojb.Logic.And {}\n        for_8cb3f6.onItem -> and_80a119.execute\n        ifExpression_b720d7.value -> and_80a119.left\n        not_80a119.output -> and_80a119.right\n\n        instance(x: 10, y: 100) if_e19a62 root.Std_k98ojb.Std.If {}\n        and_80a119.output -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_8b6c4e\n\n        instance(x: 10, y: 150) add_b4554f root.Std_k98ojb.Math.Add {}\n        for_8cb3f6.index -> add_b4554f.first\n        2 -> add_b4554f.second\n        add_b4554f.result -> ifExpression_b720d7.item\n\n        instance(x: 10, y: 200) sqrt_9fba8c root.Std_k98ojb.Math.Sqrt {}\n        input_7f3a4d -> sqrt_9fba8c.input\n        sqrt_9fba8c.result -> for_8cb3f6.items\n\n        ifExpression_9fba8c.value -> is_prime_7f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 162, y: -40, name: \"a\") property(Int) a_7c5e3f\n        in(x: 162, y: 80, name: \"b\") property(Int) b_9d4b44\n\n        out(x: 444, y: 120, name: \"output\") property(Bool) output_7a5e3c\n\n        instance(x: 306, y: -8) mul_36f6ab Std_k98ojb.Math.Mul {}\n        a_7c5e3f -> mul_36f6ab.first\n        b_9d4b44 -> mul_36f6ab.second\n\n        instance(x: 306, y: 120) less_than_or_equal_e8a1d4 Std_k98ojb.Math.LessThanOrEqual {}\n        mul_36f6ab.result -> less_than_or_equal_e8a1d4.left\n        -1 -> less_than_or_equal_e8a1d4.right\n\n        less_than_or_equal_e8a1d4.result -> output_7a5e3c\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -247, y: 53, name: \"input\") property(Number) input_f5c03d\n        in(x: -247, y: 119, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 628, y: 53, name: \"result\") property(Bool) result_3a10e5\n        out(x: 628, y: 119, name: \"continue\") trigger() continue_4d7f8b\n\n        instance(x: -247, y: 203) modulo_d4c521 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_d4c521.value\n        11 -> modulo_d4c521.divisor\n\n        instance(x: -247, y: 361) equal_2f5a1e root.Std_k98ojb.Logic.Equal {}\n        modulo_d4c521.result -> equal_2f5a1e.left\n        0 -> equal_2f5a1e.right\n\n        instance(x: -247, y: 536) if_9d2fcb root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_9d2fcb.execute\n        equal_2f5a1e.result -> if_9d2fcb.predicate\n\n        instance(x: -247, y: 698) set_true_0e2c43 root.Std_k98ojb.Property.Set {\n            value: true\n        }\n        if_9d2fcb.then -> set_true_0e2c43.execute\n        set_true_0e2c43.value -> result_3a10e5\n\n        instance(x: -247, y: 860) set_false_eb2e7c root.Std_k98ojb.Property.Set {\n            value: false\n        }\n        if_9d2fcb.else -> set_false_eb2e7c.execute\n        set_false_eb2e7c.value -> result_3a10e5\n\n        if_9d2fcb.then -> continue_4d7f8b\n        if_9d2fcb.else -> continue_4d7f8b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 60, name: \"search\") property(String) search_1\n        in(x: -230, y: 120, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 285, y: 0) replace_9a3b4e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9a3b4e.input\n        search_1 -> replace_9a3b4e.search\n        replace_2 -> replace_9a3b4e.replace\n        replace_9a3b4e.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -243, y: 105, name: \"input\") property(String) input_ai\n        out(x: 367, y: 98, name: \"output\") property(String) output_ai\n\n        instance(x: 75, y: 97) tolower_2b4d7c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_2b4d7c.input\n        tolower_2b4d7c.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -421, y: 305) property(List) inputList_ai\n        out(x: 845, y: 379) property(Number) result_ai\n        instance(x: -168, y: 312) reduce_Std_k98ojb root.Std_k98ojb.Iteration.Reduce {\n            handler: \"it * value\"\n            initialValue: 1\n        }\n        instance(x: 307, y: 345) unique_Std_k98ojb root.Std_k98ojb.Sets.Difference {}\n        inputList_ai -> reduce_Std_k98ojb.items\n        inputList_ai -> unique_Std_k98ojb.left\n        instance(x: 167, y: 345) emptyList_Std_k98ojb root.Std_k98ojb.List.Empty {}\n        emptyList_Std_k98ojb.list -> unique_Std_k98ojb.right\n        unique_Std_k98ojb.difference -> reduce_Std_k98ojb.items\n        reduce_Std_k98ojb.result -> result_ai\n    }\n\n    instance(x: 140, y: 263) productUnique_node root.main.ProductUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -341, y: 52, name: \"list1\") property(List) list1_016b2e\n        in(x: -337, y: -49, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -5, name: \"output\") property(List) output_879de6\n\n        instance(x: -121, y: -3) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n        list1_016b2e -> difference_78d487.left\n        list2_c8f404 -> difference_78d487.right\n        difference_78d487.difference -> output_879de6\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -150, y: 246, name: \"list\") property(List) list_7d3e5f\n        in(x: -159, y: 168, name: \"rotate_by\") property(Number) rotate_by_0a80c6\n\n        out(x: 698, y: 246, name: \"rotated_list\") property(List) rotated_list_7d3e5f\n        out(x: 691, y: 168, name: \"continue\") trigger() continue_d0a1b3\n\n        instance(x: 169, y: -24) length_3421c5 root.Std_k98ojb.List.Length {}\n        instance(x: 174, y: 156) modulo_c2d715 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 170, y: 256) slice_3e52c6 root.Std_k98ojb.List.Slice {}\n        instance(x: 407, y: -31) concat_24f9d6 root.Std_k98ojb.List.Concat {}\n        instance(x: 170, y: 359) slice_ea42c3 root.Std_k98ojb.List.Slice {}\n\n        list_7d3e5f -> length_3421c5.list\n        rotate_by_0a80c6 -> modulo_c2d715.value\n        length_3421c5.length -> modulo_c2d715.divisor\n        length_3421c5.length -> slice_ea42c3.start\n        0 -> slice_3e52c6.start\n        list_7d3e5f -> slice_3e52c6.list\n        list_7d3e5f -> slice_ea42c3.list\n        modulo_c2d715.result -> slice_3e52c6.end\n        slice_3e52c6.slice -> concat_24f9d6.left\n        slice_ea42c3.slice -> concat_24f9d6.right\n        concat_24f9d6.result -> rotated_list_7d3e5f\n    }\n\n    \n\n    instance(x: -108, y: 24) rotate_right_3b342c root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -346, y: -215, name: \"execute\") trigger() execute_7c0d5f\n        in(x: -339, y: -158, name: \"array\") property(List(Number)) array_3a85e6\n\n        out(x: 494, y: -214, name: \"continue\") trigger() continue_7c0d5f\n        out(x: 494, y: -158, name: \"sum\") property(Number) sum_d3a9b9\n\n        instance(x: -166, y: -158) reduce_2c6556 root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: 407, y: -158, name: \"setter_ea83f6\") setter_ea83f6 = sum\n        getter(x: 407, y: -214, name: \"getter_9b20c7\") getter_9b20c7 = continue\n        instance(x: -165, y: -215) expression_75b38a root.Std_k98ojb.Math.Expression {\n            expression: \"accum + value\"\n        }\n        0 -> reduce_2c6556.initial_value\n        execute_7c0d5f -> reduce_2c6556.execute\n        array_3a85e6 -> reduce_2c6556.items\n        expression_75b38a.result -> reduce_2c6556.reducer_result\n        getter_9b20c7.value -> continue_7c0d5f\n        setter_ea83f6.new_value -> sum_d3a9b9\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -210, name: \"input\") property(Number) input_7f6a2d\n        in(x: 598, y: -210, name: \"execute\") trigger() execute_3e9b0c\n\n        out(x: 1642, y: -120, name: \"out\") property(Bool) out_b7a2f7\n        out(x: 1850, y: -120, name: \"continue\") trigger() continue_3d9b8c\n\n        instance(x: 764, y: -185) generaterange_71a1b8 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1026, y: -185) for_3f7e1d root.Std_k98ojb.Std.For {}\n        instance(x: 1294, y: -185) modulo_2c5a5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1462, y: -185) equal_d07c3d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1622, y: -185) if_6f4e1a root.Std_k98ojb.Std.If {}\n        2 -> generaterange_71a1b8.from\n        input_7f6a2d -> generaterange_71a1b8.to\n        generaterange_71a1b8.list -> for_3f7e1d.items\n        execute_3e9b0c -> for_3f7e1d.reset\n        input_7f6a2d -> modulo_2c5a5f.value\n        for_3f7e1d.item -> modulo_2c5a5f.divisor\n        0 -> equal_d07c3d.right\n        modulo_2c5a5f.result -> equal_d07c3d.left\n        equal_d07c3d.result -> if_6f4e1a.predicate\n        for_3f7e1d.onItem -> if_6f4e1a.execute\n        if_6f4e1a.then -> continue_3d9b8c\n        if_6f4e1a.else -> for_3f7e1d.next\n        for_3f7e1d.done -> if_023e5c.execute\n    }\n\n    instance(x: 1622, y: -35) if_023e5c root.Std_k98ojb.Std.If {}\n    input_7f6a2d -> if_023e5c.predicate\n    1 -> if_023e5c.right\n    if_023e5c.value -> out_b7a2f7\n    if_023e5c.then -> continue_3d9b8c\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -25) property(Int) a_7c364f\n        in(x: 10, y: -50) property(Int) b_c8b9e7\n\n        out(x: 10, y: 150) property(Bool) output_ba0f7d\n\n        instance(x: 10, y: 60) mul_42b4c3 root.Std_k98ojb.Math.Mul {}\n        a_7c364f -> mul_42b4c3.first\n        b_c8b9e7 -> mul_42b4c3.second\n\n        instance(x: 10, y: 100) less_than_zero_e3d5a8 root.Std_k98ojb.Math.LessThanOrEqual {\n            left: 0\n        }\n        mul_42b4c3.result -> less_than_zero_e3d5a8.right\n\n        less_than_zero_e3d5a8.result -> output_ba0f7d\n    }\n\n    instance(x: 150, y: -50) check_opposite_signs_c7e9af root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -30, name: \"input\") property(Number) input_e4c5e7\n        in(x: -20, y: 90, name: \"execute\") trigger() execute_c8a6d4\n\n        out(x: 1000, y: -30, name: \"out\") property(Bool) out_1f0bdc\n        out(x: 1000, y: 90, name: \"continue\") trigger() continue_7928dd\n\n        instance(x: 150, y: -60) modulo_f6e4a5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -60) equal_bca7c6 root.Std_k98ojb.Logic.Equal {}\n\n        input_e4c5e7 -> modulo_f6e4a5.value\n        11 -> modulo_f6e4a5.divisor\n        modulo_f6e4a5.result -> equal_bca7c6.left\n        0 -> equal_bca7c6.right\n        execute_c8a6d4 -> modulo_f6e4a5.execute\n        modulo_f6e4a5.execute -> equal_bca7c6.execute\n        equal_bca7c6.result -> out_1f0bdc\n        equal_bca7c6.execute -> continue_7928dd\n    }\n\n    instance(x: 50, y: 200) is_divisible_by_11_f4a3d4 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -200, y: 0, name: \"input\") property(String) input_0\n        in(x: -200, y: 50, name: \"search\") property(String) search_0\n        in(x: -200, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 50, y: 0) replace_8a2d4b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_8a2d4b.input\n        search_0 -> replace_8a2d4b.search\n        replace_0 -> replace_8a2d4b.replace\n        replace_8a2d4b.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -20, y: 15, name: \"input\") property(String) input_ai\n        out(x: 346, y: 78, name: \"output\") property(String) output_ai\n\n        instance(x: 190, y: 77) tolower_3e2a6b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_3e2a6b.input\n        tolower_3e2a6b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -531, y: 2, name: \"numbers\") property(List) numbers_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: -300, y: 100) unique_numbers root.Std_k98ojb.Sets.Difference {\n            left: numbers_ai\n            right: []\n        }\n\n        instance(x: -150, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_numbers.difference\n            handler: \"a * b\"\n            initial_value: 1\n        }\n        \n        reduce_product.result -> product_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -340, y: -125, name: \"list1\") property(List) list1_6a7fbb\n        in(x: -340, y: 35, name: \"list2\") property(List) list2_e9b8c2\n\n        out(x: 450, y: -70, name: \"output\") property(List) output_1d6b2e\n\n        instance(x: -140, y: -80) difference_left_3f2a53 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -140, y: 45) difference_right_e7c541 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 160, y: -10) concat_3d2eac root.Std_k98ojb.List.Concat {}\n\n        list1_6a7fbb -> difference_left_3f2a53.left\n        list2_e9b8c2 -> difference_left_3f2a53.right\n\n        list2_e9b8c2 -> difference_right_e7c541.left\n        list1_6a7fbb -> difference_right_e7c541.right\n\n        difference_left_3f2a53.difference -> concat_3d2eac.listA\n        difference_right_e7c541.difference -> concat_3d2eac.listB\n\n        concat_3d2eac.concatenatedList -> output_1d6b2e\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 230, name: \"list\") property(List) list_8f3f0e\n        in(x: -179, y: 360, name: \"rotate_by\") property(Number) rotate_by_d6b2d7\n\n        out(x: 745, y: 193, name: \"rotated_list\") property(List) rotated_list_8e0c70\n        out(x: 721, y: 364, name: \"continue\") trigger() continue_d751f5\n\n        instance(x: -29, y: 191) length_9d37af root.Std_k98ojb.List.Length {}\n        getter(x: 260, y: 361, name: \"getter_428a7e\") getter_428a7e = rotate_by\n        instance(x: 518, y: 364) mod_7d09f7 root.Std_k98ojb.Math.Modulo {}\n        setter(x: 416, y: 193, name: \"setter_2c58db\") setter_2c58db = rotate_by\n        instance(x: 214, y: 194) sub_0d7a36 root.Std_k98ojb.Math.Sub {}\n        getter(x: 288, y: 197, name: \"getter_1f35c3\") getter_1f35c3 = list_length\n        instance(x: 415, y: -50) slice_67e2a1 root.Std_k98ojb.List.Slice {}\n        instance(x: 225, y: 362) length_1aa1d5 root.Std_k98ojb.List.Length {}\n        instance(x: 514, y: -206) slice_d4f7df root.Std_k98ojb.List.Slice {}\n        getter(x: 538, y: 194, name: \"getter_38b9a3\") getter_38b9a3 = rotate_by\n        instance(x: 216, y: -17) concat_c6e0d8 root.Std_k98ojb.List.Concat {}\n        setter(x: 534, y: -50, name: \"setter_57c2f0\") setter_57c2f0 = slice_start\n        getter(x: 341, y: -206, name: \"getter_e898a0\") getter_e898a0 = list_length\n        instance(x: -277, y: -37) empty_5b2e6d root.Std_k98ojb.List.Empty {}\n        setter(x: 341, y: -17, name: \"setter_77dbf8\") setter_77dbf8 = slice_end\n        getter(x: 220, y: -50, name: \"getter_6a9e1c\") getter_6a9e1c = list_length\n        instance(x: -34, y: -18) if_21b4df root.Std_k98ojb.Std.If {}\n        setter(x: 207, y: -206, name: \"setter_b5d42a\") setter_b5d42a = slice_end\n        getter(x: 399, y: 361, name: \"getter_8e8b8d\") getter_8e8b8d = rotate_by\n\n        list_8f3f0e -> length_9d37af.list\n        -1 -> slice_d4f7df.end\n        sub_0d7a36.result -> setter_2c58db.new_value\n        continue_d751f5 -> if_21b4df.execute\n        getter_e898a0.value -> setter_b5d42a.new_value\n        slice_d4f7df.slice -> concat_c6e0d8.left\n        list_8f3f0e -> length_1aa1d5.list\n        slice_67e2a1.slice -> concat_c6e0d8.right\n        setter_b5d42a.new_value -> slice_d4f7df.start\n        getter_6a9e1c.value -> setter_77dbf8.new_value\n        length_9d37af.length -> sub_0d7a36.gen_0\n        list_8f3f0e -> slice_67e2a1.list\n        0 -> slice_67e2a1.start\n        mod_7d09f7.result -> setter_57c2f0.new_value\n        getter_428a7e.value -> mod_7d09f7.gen_0\n        empty_5b2e6d.list -> if_21b4df.then\n        length_1aa1d5.length -> getter_38b9a3.value\n        rotate_by_d6b2d7 -> getter_428a7e.set_value\n        setter_57c2f0.new_value -> getter_38b9a3.value\n        if_21b4df.else -> concat_c6e0d8.execute\n        list_8f3f0e -> getter_1f35c3.value\n        rotate_by_d6b2d7 -> getter_8e8b8d.set_value\n        sub_0d7a36.gen_1 -> mod_7d09f7.gen_1\n        concat_c6e0d8.result -> rotated_list_8e0c70\n    }\n\n    \n\n    instance(x: -245, y: -35) rotate_list_7b6f9a root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7e6f8c\n        in(x: -436, y: -92, name: \"array\") property(List) array_c7d7b8\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 30, y: -353) reduce_4e1d6f root.Std_k98ojb.Iteration.Reduce {\n            handler: Math_k98ojb.Math.Add\n        }\n        array_c7d7b8 -> reduce_4e1d6f.items\n        0 -> reduce_4e1d6f.accumulator_initial_value\n        execute_7e6f8c -> reduce_4e1d6f.execute\n        reduce_4e1d6f.result -> output_732a8a\n        reduce_4e1d6f.done -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 250, y: -160, name: \"input\") property(Number) input_4f7a3d\n        in(x: 180, y: -280, name: \"execute\") trigger() execute_ba9c8b\n\n        out(x: 1650, y: -10, name: \"out\") property(Bool) out_4f7a3d\n        out(x: 1650, y: 120, name: \"continue\") trigger() continue_ba9c8b\n\n        instance(x: 450, y: -130) generaterange_eaae5f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 650, y: -170) for_2d1be8 root.Std_k98ojb.Std.For {}\n        instance(x: 850, y: -130) modulo_c4e1c1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1050, y: -130) if_6d2a7f root.Std_k98ojb.Std.If {}\n        instance(x: 1250, y: -130) not_4e7a8c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1450, y: -130) and_d6d1f1 root.Std_k98ojb.Logic.And {}\n\n        input_4f7a3d -> generaterange_eaae5f.to\n        2 -> generaterange_eaae5f.from\n\n        generaterange_eaae5f.list -> for_2d1be8.items\n        execute_ba9c8b -> for_2d1be8.reset\n        input_4f7a3d -> modulo_c4e1c1.value\n        for_2d1be8.item -> modulo_c4e1c1.divisor\n\n        modulo_c4e1c1.result -> if_6d2a7f.predicate\n        for_2d1be8.onItem -> if_6d2a7f.execute\n\n        if_6d2a7f.value -> not_4e7a8c.input\n        not_4e7a8c.output -> and_d6d1f1.left\n        for_2d1be8.done -> and_d6d1f1.right\n\n        and_d6d1f1.output -> out_4f7a3d\n\n        if_6d2a7f.then -> continue_ba9c8b\n        if_6d2a7f.else -> for_2d1be8.next\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -204, y: 163) property(Int) a_7a5c4d\n        in(x: -204, y: 209) property(Int) b_8b5c4e\n\n        out(x: 204, y: 255) property(Bool) output_1f6c3d\n\n        instance(x: 0, y: 187) expression_3a5b4c root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        a_7a5c4d -> expression_3a5b4c.gen_0\n        b_8b5c4e -> expression_3a5b4c.gen_1\n        expression_3a5b4c.result -> output_1f6c3d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4a5d root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4a5d.value\n        11 -> modulo_7c4a5d.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4a5d.result -> equal_6f3e4c.left\n        0 -> equal_6f3e4c.right\n\n        instance(x: 20, y: 40) if_123abc root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_123abc.execute\n        equal_6f3e4c.result -> if_123abc.predicate\n\n        if_123abc.value -> out_f3db9f\n        if_123abc.then -> continue_8ba06b\n        if_123abc.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -206, y: 154, name: \"list\") property(List) list_7c3d5e\n        in(x: -208, y: 29, name: \"execute\") trigger() execute_1b4f1a\n        in(x: -206, y: 86, name: \"rotation_count\") property(Number) rotation_count_7c3d5e\n\n        out(x: 826, y: 159, name: \"rotated_list\") property(List) data_0_0\n        out(x: 824, y: 31, name: \"continue\") trigger() continue_1b4f1a\n\n        instance(x: 272, y: -61) length_5d9c0e root.Std_k98ojb.List.Length {}\n        instance(x: 272, y: 131) mod_25341c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 545, y: -61) slice_start_0d6fcb root.Std_k98ojb.List.Slice {}\n        instance(x: 547, y: 131) slice_end_2c2b1a root.Std_k98ojb.List.Slice {}\n        instance(x: 797, y: 86) concat_0f5e6d root.Std_k98ojb.List.Concat {}\n\n        execute_1b4f1a -> length_5d9c0e.execute\n        list_7c3d5e -> length_5d9c0e.list\n        rotation_count_7c3d5e -> mod_25341c.value\n        length_5d9c0e.length -> mod_25341c.divisor\n        execute_1b4f1a -> slice_start_0d6fcb.execute\n        list_7c3d5e -> slice_start_0d6fcb.list\n        mod_25341c.result -> slice_start_0d6fcb.start\n        length_5d9c0e.length -> slice_end_2c2b1a.end\n        execute_1b4f1a -> slice_end_2c2b1a.execute\n        list_7c3d5e -> slice_end_2c2b1a.list\n        0 -> slice_end_2c2b1a.start\n        mod_25341c.result -> slice_end_2c2b1a.end\n        execute_1b4f1a -> concat_0f5e6d.execute\n        slice_start_0d6fcb.slice -> concat_0f5e6d.right\n        slice_end_2c2b1a.slice -> concat_0f5e6d.left\n        concat_0f5e6d.result -> data_0_0\n        continue_1b4f1a -> execute_1b4f1a\n    }\n\n    \n\n    instance(x: -238, y: 31) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c4e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_7f3a4d\n        out(x: 10, y: 50, name: \"continue\") trigger() continue_8b6c4e\n\n        instance(x: 10, y: -210) ifExpression_9fba8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input <= 1 ? false : input == 2 || input % 2 != 0\"\n        }\n        execute_8b6c4e -> ifExpression_9fba8c.execute\n        input_7f3a4d -> ifExpression_9fba8c.input\n\n        instance(x: 10, y: -150) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        execute_8b6c4e -> for_8cb3f6.reset\n        input_7f3a4d -> for_8cb3f6.items\n\n        instance(x: 10, y: -100) ifExpression_b720d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % item == 0\"\n        }\n        for_8cb3f6.onItem -> ifExpression_b720d7.execute\n        input_7f3a4d -> ifExpression_b720d7.input\n        for_8cb3f6.item -> ifExpression_b720d7.item\n\n        instance(x: 10, y: -50) not_80a119 root.Std_k98ojb.Logic.Not {}\n        ifExpression_b720d7.value -> not_80a119.input\n        not_80a119.output -> is_prime_7f3a4d\n\n        instance(x: 10, y: -5) if_07b8c7 root.Std_k98ojb.Std.If {}\n        for_8cb3f6.done -> if_07b8c7.execute\n        not_80a119.output -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_8b6c4e\n\n        instance(x: 10, y: 50) and_80a119 root.Std_k98ojb.Logic.And {}\n        for_8cb3f6.onItem -> and_80a119.execute\n        ifExpression_b720d7.value -> and_80a119.left\n        not_80a119.output -> and_80a119.right\n\n        instance(x: 10, y: 100) if_e19a62 root.Std_k98ojb.Std.If {}\n        and_80a119.output -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_8b6c4e\n\n        instance(x: 10, y: 150) add_b4554f root.Std_k98ojb.Math.Add {}\n        for_8cb3f6.index -> add_b4554f.first\n        2 -> add_b4554f.second\n        add_b4554f.result -> ifExpression_b720d7.item\n\n        instance(x: 10, y: 200) sqrt_9fba8c root.Std_k98ojb.Math.Sqrt {}\n        input_7f3a4d -> sqrt_9fba8c.input\n        sqrt_9fba8c.result -> for_8cb3f6.items\n\n        ifExpression_9fba8c.value -> is_prime_7f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 162, y: -40, name: \"a\") property(Int) a_7c5e3f\n        in(x: 162, y: 80, name: \"b\") property(Int) b_9d4b44\n\n        out(x: 444, y: 120, name: \"output\") property(Bool) output_7a5e3c\n\n        instance(x: 306, y: -8) mul_36f6ab Std_k98ojb.Math.Mul {}\n        a_7c5e3f -> mul_36f6ab.first\n        b_9d4b44 -> mul_36f6ab.second\n\n        instance(x: 306, y: 120) less_than_or_equal_e8a1d4 Std_k98ojb.Math.LessThanOrEqual {}\n        mul_36f6ab.result -> less_than_or_equal_e8a1d4.left\n        -1 -> less_than_or_equal_e8a1d4.right\n\n        less_than_or_equal_e8a1d4.result -> output_7a5e3c\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -247, y: 53, name: \"input\") property(Number) input_f5c03d\n        in(x: -247, y: 119, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 628, y: 53, name: \"result\") property(Bool) result_3a10e5\n        out(x: 628, y: 119, name: \"continue\") trigger() continue_4d7f8b\n\n        instance(x: -247, y: 203) modulo_d4c521 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_d4c521.value\n        11 -> modulo_d4c521.divisor\n\n        instance(x: -247, y: 361) equal_2f5a1e root.Std_k98ojb.Logic.Equal {}\n        modulo_d4c521.result -> equal_2f5a1e.left\n        0 -> equal_2f5a1e.right\n\n        instance(x: -247, y: 536) if_9d2fcb root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_9d2fcb.execute\n        equal_2f5a1e.result -> if_9d2fcb.predicate\n\n        instance(x: -247, y: 698) set_true_0e2c5e root.Std_k98ojb.Property.Set {\n            value: true\n        }\n        if_9d2fcb.then -> set_true_0e2c5e.execute\n        set_true_0e2c5e.value -> result_3a10e5\n\n        instance(x: -247, y: 860) set_false_b2b37c root.Std_k98ojb.Property.Set {\n            value: false\n        }\n        if_9d2fcb.else -> set_false_b2b37c.execute\n        set_false_b2b37c.value -> result_3a10e5\n\n        if_9d2fcb.done -> continue_4d7f8b\n    }\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 60, name: \"search\") property(String) search_1\n        in(x: -230, y: 120, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 285, y: 0) replace_9a3b4e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9a3b4e.input\n        search_1 -> replace_9a3b4e.search\n        replace_2 -> replace_9a3b4e.replace\n        replace_9a3b4e.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -243, y: 105, name: \"input\") property(String) input_ai\n        out(x: 367, y: 98, name: \"output\") property(String) output_ai\n\n        instance(x: 75, y: 97) tolower_2b4d7c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_2b4d7c.input\n        tolower_2b4d7c.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -421, y: 305) property(List) inputList_ai\n        out(x: 845, y: 379) property(Number) result_ai\n        instance(x: -168, y: 312) reduce_Std_k98ojb root.Std_k98ojb.Iteration.Reduce {\n            handler: \"it * value\"\n            initialValue: 1\n        }\n        instance(x: 307, y: 345) unique_Std_k98ojb root.Std_k98ojb.Sets.Difference {}\n        inputList_ai -> reduce_Std_k98ojb.items\n        inputList_ai -> unique_Std_k98ojb.left\n        instance(x: 167, y: 345) emptyList_Std_k98ojb root.Std_k98ojb.List.Empty {}\n        emptyList_Std_k98ojb.list -> unique_Std_k98ojb.right\n        unique_Std_k98ojb.difference -> reduce_Std_k98ojb.items\n        reduce_Std_k98ojb.result -> result_ai\n    }\n\n    instance(x: 140, y: 263) productUnique_node root.main.ProductUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -341, y: 52, name: \"list1\") property(List) list1_016b2e\n        in(x: -337, y: -49, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -5, name: \"output\") property(List) output_879de6\n\n        instance(x: -121, y: -3) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n        list1_016b2e -> difference_78d487.left\n        list2_c8f404 -> difference_78d487.right\n        difference_78d487.difference -> output_879de6\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -150, y: 246, name: \"list\") property(List) list_7d3e5f\n        in(x: -159, y: 168, name: \"rotate_by\") property(Number) rotate_by_0a80c6\n\n        out(x: 698, y: 246, name: \"rotated_list\") property(List) rotated_list_7d3e5f\n        out(x: 691, y: 168, name: \"continue\") trigger() continue_d0a1b3\n\n        instance(x: 169, y: -24) length_3428c4 root.Std_k98ojb.List.Length {}\n        instance(x: 175, y: 168) mod_7e2b6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -24) sub_47c7f8 root.Std_k98ojb.Math.Sub {}\n        instance(x: 300, y: 168) slice_574d0a root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: -24) slice_1b2f5e root.Std_k98ojb.List.Slice {}\n        instance(x: 425, y: 168) concat_7d3e5f root.Std_k98ojb.List.Concat {}\n\n        list_7d3e5f -> length_3428c4.list\n        rotate_by_0a80c6 -> mod_7e2b6e.value\n        length_3428c4.length -> mod_7e2b6e.divisor\n        length_3428c4.length -> sub_47c7f8.first\n        mod_7e2b6e.result -> sub_47c7f8.second\n        list_7d3e5f -> slice_1b2f5e.list\n        sub_47c7f8.result -> slice_1b2f5e.start\n        -1 -> slice_1b2f5e.end\n        list_7d3e5f -> slice_574d0a.list\n        0 -> slice_574d0a.start\n        sub_47c7f8.result -> slice_574d0a.end\n        slice_1b2f5e.slice -> concat_7d3e5f.left\n        slice_574d0a.slice -> concat_7d3e5f.right\n        concat_7d3e5f.list -> rotated_list_7d3e5f\n    }\n\n    \n\n    instance(x: -162, y: 89) rotate_right_eb0cdd root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -346, y: -215, name: \"execute\") trigger() execute_7c0d5f\n        in(x: -339, y: -158, name: \"array\") property(List(Number)) array_3a80e6\n\n        out(x: 494, y: -214, name: \"continue\") trigger() continue_7c0d5f\n        out(x: 494, y: -157, name: \"sum\") property(Number) sum_3a80e6\n\n        instance(x: -139, y: -214) reduce_7c0d5f root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -139, y: -114, name: \"setter_7c0d5f\") setter_7c0d5f = 0\n        instance(x: 216, y: -214) add_7c0d5f root.Std_k98ojb.Math.Add {}\n        getter(x: 356, y: -214, name: \"getter_7c0d5f\") getter_7c0d5f = sum\n\n        array_3a80e6 -> reduce_7c0d5f.items\n        setter_7c0d5f.new_value -> reduce_7c0d5f.initialValue\n        execute_7c0d5f -> setter_7c0d5f.execute\n        setter_7c0d5f.continue -> reduce_7c0d5f.execute\n        add_7c0d5f.result -> getter_7c0d5f.new_value\n        reduce_7c0d5f.output -> continue_7c0d5f\n        reduce_7c0d5f.accumulatedValue -> add_7c0d5f.first\n        reduce_7c0d5f.currentValue -> add_7c0d5f.second\n        getter_7c0d5f.value -> sum_3a80e6\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -210, name: \"input\") property(Number) input_7f6a2d\n        in(x: 598, y: -210, name: \"execute\") trigger() execute_3e9b0c\n\n        out(x: 1642, y: -120, name: \"out\") property(Bool) out_b7a2f7\n        out(x: 1850, y: -120, name: \"continue\") trigger() continue_3d9b8c\n\n        instance(x: 764, y: -185) generaterange_70d7fb root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1026, y: -155) for_3a1b1e root.Std_k98ojb.Std.For {}\n        instance(x: 1294, y: -125) modulo_7f4d9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1460, y: -30) if_55c4e4 root.Std_k98ojb.Std.If {}\n        instance(x: 1618, y: -270) not_2f8d5b root.Std_k98ojb.Logic.Not {}\n        generaterange_70d7fb.list -> for_3a1b1e.items\n        input_7f6a2d -> generaterange_70d7fb.to\n        2 -> generaterange_70d7fb.from\n        for_3a1b1e.item -> modulo_7f4d9a.value\n        input_7f6a2d -> modulo_7f4d9a.divisor\n        modulo_7f4d9a.result -> if_55c4e4.predicate\n        if_55c4e4.else -> for_3a1b1e.next\n        if_55c4e4.then -> not_2f8d5b.input\n        execute_3e9b0c -> for_3a1b1e.reset\n        for_3a1b1e.done -> continue_3d9b8c\n        1 -> if_55c4e4.value\n        not_2f8d5b.output -> out_b7a2f7\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -25) property(Int) a_7c364f\n        in(x: 10, y: -50) property(Int) b_c8b9e7\n\n        out(x: 10, y: 150) property(Bool) output_ba0f7d\n\n        instance(x: 10, y: 60) mul_42b4c3 root.Std_k98ojb.Math.Mul {}\n        a_7c364f -> mul_42b4c3.first\n        b_c8b9e7 -> mul_42b4c3.second\n\n        instance(x: 10, y: 100) less_than_zero_e3d5a8 root.Std_k98ojb.Math.LessThanOrEqual {\n            left: 0\n        }\n        mul_42b4c3.result -> less_than_zero_e3d5a8.right\n\n        less_than_zero_e3d5a8.result -> output_ba0f7d\n    }\n\n    instance(x: 150, y: -50) check_opposite_signs_c7e9af root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -30, name: \"input\") property(Number) input_e4c5e7\n        in(x: -20, y: 90, name: \"execute\") trigger() execute_c8a6d4\n\n        out(x: 1000, y: -30, name: \"out\") property(Bool) out_1f0bdc\n        out(x: 1000, y: 90, name: \"continue\") trigger() continue_7728fb\n\n        instance(x: 150, y: -60) modulo_f6e4a5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -60) equal_bca7c2 root.Std_k98ojb.Logic.Equal {}\n\n        input_e4c5e7 -> modulo_f6e4a5.value\n        11 -> modulo_f6e4a5.divisor\n        modulo_f6e4a5.result -> equal_bca7c2.left\n        0 -> equal_bca7c2.right\n        execute_c8a6d4 -> equal_bca7c2.execute\n        equal_bca7c2.out -> out_1f0bdc\n        equal_bca7c2.continue -> continue_7728fb\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -200, y: 0, name: \"input\") property(String) input_0\n        in(x: -200, y: 50, name: \"search\") property(String) search_0\n        in(x: -200, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 50, y: 0) replace_8a2d4b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_8a2d4b.input\n        search_0 -> replace_8a2d4b.search\n        replace_0 -> replace_8a2d4b.replace\n        replace_8a2d4b.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -20, y: 15, name: \"input\") property(String) input_ai\n        out(x: 346, y: 78, name: \"output\") property(String) output_ai\n\n        instance(x: 190, y: 77) tolower_3e2a6b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_3e2a6b.input\n        tolower_3e2a6b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -531, y: 2, name: \"numbers\") property(List) numbers_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: -300, y: 100) unique_numbers root.Std_k98ojb.Sets.Difference {\n            left: numbers_ai\n            right: []\n        }\n\n        instance(x: 0, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_numbers.difference\n            handler: \"a * b\"\n            initial_value: 1\n        }\n        \n        reduce_product.result -> product_ai\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -340, y: -125, name: \"list1\") property(List) list1_6a7fbb\n        in(x: -340, y: 35, name: \"list2\") property(List) list2_e9b8c2\n\n        out(x: 450, y: -70, name: \"output\") property(List) output_1d6b2e\n\n        instance(x: -140, y: -80) difference_left_3f2a53 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -140, y: 45) difference_right_e7c541 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 160, y: -10) concat_3d2eac root.Std_k98ojb.List.Concat {}\n\n        list1_6a7fbb -> difference_left_3f2a53.left\n        list2_e9b8c2 -> difference_left_3f2a53.right\n\n        list2_e9b8c2 -> difference_right_e7c541.left\n        list1_6a7fbb -> difference_right_e7c541.right\n\n        difference_left_3f2a53.difference -> concat_3d2eac.listA\n        difference_right_e7c541.difference -> concat_3d2eac.listB\n\n        concat_3d2eac.concatenatedList -> output_1d6b2e\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list {\n        in(x: -154, y: 230, name: \"list\") property(List) list_8f3f0e\n        in(x: -179, y: 360, name: \"rotate_by\") property(Number) rotate_by_d6b2d7\n\n        out(x: 745, y: 193, name: \"rotated_list\") property(List) rotated_list_8e0c70\n        out(x: 721, y: 364, name: \"continue\") trigger() continue_d751f5\n\n        instance(x: -29, y: 191) length_9d37af root.Std_k98ojb.List.Length {}\n        getter(x: 260, y: 361, name: \"getter_428a7e\") getter_428a7e = rotate_by\n        instance(x: 518, y: 364) mod_7d09f7 root.Std_k98ojb.Math.Modulo {}\n        setter(x: 416, y: 193, name: \"setter_2c58da\") setter_2c58da = rotate_by\n        instance(x: 214, y: 194) sub_0d7a36 root.Std_k98ojb.Math.Sub {}\n        getter(x: 279, y: 197, name: \"getter_7e75c3\") getter_7e75c3 = list_length\n        instance(x: 415, y: -50) slice_end_e2f6a0 root.Std_k98ojb.List.Slice {}\n        instance(x: 201, y: -50) slice_start_64cfef root.Std_k98ojb.List.Slice {}\n        getter(x: 371, y: 197, name: \"getter_c8e5f6\") getter_c8e5f6 = rotate_by\n        instance(x: 243, y: -10) concat_714a5e root.Std_k98ojb.List.Concat {}\n        \n        list_8f3f0e -> length_9d37af.list\n        getter_428a7e.value -> mod_7d09f7.value\n        rotate_by_d6b2d7 -> setter_2c58da.new_value\n        length_9d37af.length -> sub_0d7a36.second\n        length_9d37af.length -> getter_7e75c3.value\n        mod_7d09f7.result -> sub_0d7a36.first\n        mod_7d09f7.result -> setter_2c58da.new_value\n        list_8f3f0e -> slice_start_64cfef.list\n        getter_c8e5f6.value -> slice_end_e2f6a0.start\n        sub_0d7a36.result -> slice_start_64cfef.start\n        -1 -> slice_end_e2f6a0.end\n        list_8f3f0e -> slice_end_e2f6a0.list\n        slice_start_64cfef.slice -> concat_714a5e.left\n        slice_end_e2f6a0.slice -> concat_714a5e.right\n        concat_714a5e.result -> rotated_list_8e0c70\n    }\n\n    \n\n    instance(x: -39, y: 36) rotate_list_instance root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7e6f8c\n        in(x: -436, y: -92, name: \"array\") property(List) array_c7d7b8\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 30, y: -353) reduce_4e1d6f root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(acc, item) => acc + item\"\n        }\n        array_c7d7b8 -> reduce_4e1d6f.items\n        0 -> reduce_4e1d6f.initial_value\n        execute_7e6f8c -> reduce_4e1d6f.execute\n        reduce_4e1d6f.result -> output_732a8a\n        reduce_4e1d6f.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 250, y: -160, name: \"input\") property(Number) input_4f7a3d\n        in(x: 180, y: -280, name: \"execute\") trigger() execute_ba9c8b\n\n        out(x: 1650, y: -10, name: \"out\") property(Bool) out_4f7a3d\n        out(x: 1650, y: 120, name: \"continue\") trigger() continue_ba9c8b\n\n        instance(x: 450, y: -130) generaterange_eaae5f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 650, y: -170) for_2d1ef3 root.Std_k98ojb.Std.For {}\n        instance(x: 850, y: -210) modulo_c4a3c6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1050, y: -250) if_7d72f1 root.Std_k98ojb.Std.If {}\n        instance(x: 1250, y: -290) not_e6a3c4 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1450, y: -330) if_7d72f2 root.Std_k98ojb.Std.If {}\n        input_4f7a3d -> generaterange_eaae5f.from\n        2 -> generaterange_eaae5f.to\n        Math.Sqrt(input_4f7a3d) -> generaterange_eaae5f.to\n        generaterange_eaae5f.list -> for_2d1ef3.items\n        input_4f7a3d -> modulo_c4a3c6.value\n        for_2d1ef3.item -> modulo_c4a3c6.divisor\n        0 == modulo_c4a3c6.result -> if_7d72f1.predicate\n        if_7d72f1.then -> not_e6a3c4.input\n        not_e6a3c4.output -> if_7d72f2.predicate\n        for_2d1ef3.onItem -> if_7d72f1.execute\n        if_7d72f1.else -> for_2d1ef3.next\n        if_7d72f1.value -> out_4f7a3d\n        for_2d1ef3.done -> continue_ba9c8b\n        if_7d72f2.then -> continue_ba9c8b\n        if_7d72f2.else -> not_e6a3c4.input\n        execute_ba9c8b -> for_2d1ef3.reset\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -205, y: 164) property(Int) a_7a3d6c\n        in(x: -205, y: 209) property(Int) b_8b3e6f\n\n        out(x: 205, y: 164) property(Bool) output_2a3e9d\n\n        instance(x: 0, y: 187) expression_3c9a8b root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        a_7a3d6c -> expression_3c9a8b.gen_0\n        b_8b3e6f -> expression_3c9a8b.gen_1\n        expression_3c9a8b.result -> output_2a3e9d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4d5a root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4d5a.value\n        11 -> modulo_7c4d5a.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4b root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4d5a.result -> equal_6f3e4b.left\n        0 -> equal_6f3e4b.right\n\n        execute_27b8c3 -> continue_8ba06b\n        equal_6f3e4b.result -> out_f3db9f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -206, y: 154, name: \"list\") property(List) list_7c3d0a\n        in(x: -208, y: 292, name: \"rotate_by\") property(Number) rotate_by_2b4e0f\n\n        out(x: 698, y: 154, name: \"rotated_list\") property(List) rotated_list_7c3d0a\n        out(x: 698, y: 292, name: \"continue\") trigger() continue_2b4e0f\n\n        instance(x: -19, y: 154) length_7c3d0a root.Std_k98ojb.List.Length {}\n        instance(x: 162, y: 154) mod_7c3d0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 343, y: 154) slice_start_7c3d0a root.Std_k98ojb.List.Slice {}\n        instance(x: 343, y: 292) slice_end_7c3d0a root.Std_k98ojb.List.Slice {}\n        instance(x: 524, y: 154) concat_7c3d0a root.Std_k98ojb.List.Concat {}\n\n        list_7c3d0a -> length_7c3d0a.list\n        rotate_by_2b4e0f -> mod_7c3d0a.value\n        length_7c3d0a.length -> mod_7c3d0a.divisor\n        mod_7c3d0a.result -> slice_start_7c3d0a.start\n        list_7c3d0a -> slice_start_7c3d0a.list\n        length_7c3d0a.length -> slice_end_7c3d0a.end\n        mod_7c3d0a.result -> slice_end_7c3d0a.start\n        list_7c3d0a -> slice_end_7c3d0a.list\n        slice_start_7c3d0a.slice -> concat_7c3d0a.left\n        slice_end_7c3d0a.slice -> concat_7c3d0a.right\n        concat_7c3d0a.result -> rotated_list_7c3d0a\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -256, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -389, name: \"execute\") trigger() execute_7b9e1c\n\n        out(x: 1890, y: -256, name: \"out\") property(Bool) out_7f3a4d\n        out(x: 1890, y: -389, name: \"continue\") trigger() continue_7b9e1c\n\n        instance(x: 10, y: -125) lessthanorequal_6b2a1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10, y: -43) equal_2d751e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 40) not_6a2fcb root.Std_k98ojb.Logic.Not {}\n        instance(x: 10, y: 123) generateRange_2d751e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 10, y: 206) for_2d751e root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 349) modulo_2d751e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 492) equalZero_2d751e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 635) notEqualZero_2d751e root.Std_k98ojb.Logic.Not {}\n        instance(x: 10, y: 778) if_2d751e root.Std_k98ojb.Std.If {}\n\n        input_7f3a4d -> lessthanorequal_6b2a1f.left\n        2 -> lessthanorequal_6b2a1f.right\n\n        input_7f3a4d -> equal_2d751e.left\n        2 -> equal_2d751e.right\n\n        not_6a2fcb.input -> lessthanorequal_6b2a1f.result\n\n        generateRange_2d751e.from -> 2\n        input_7f3a4d -> generateRange_2d751e.to\n\n        for_2d751e.items -> generateRange_2d751e.list\n\n        modulo_2d751e.first -> input_7f3a4d\n        for_2d751e.item -> modulo_2d751e.second\n\n        equalZero_2d751e.left -> modulo_2d751e.result\n        0 -> equalZero_2d751e.right\n\n        notEqualZero_2d751e.input -> equalZero_2d751e.result\n\n        if_2d751e.predicate -> notEqualZero_2d751e.result\n        if_2d751e.execute -> for_2d751e.onItem\n        if_2d751e.then -> continue_7b9e1c\n\n        execute_7b9e1c -> lessthanorequal_6b2a1f.execute\n        not_6a2fcb.input -> equal_2d751e.result\n        out_7f3a4d -> if_2d751e.value\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 235, y: -146, name: \"a\") property(Int) a_0c7f1d\n        in(x: 498, y: -156, name: \"b\") property(Int) b_6b251d\n\n        out(x: 387, y: 101, name: \"output\") property(Bool) output_2a2c4d\n\n        instance(x: 369, y: -3) mul_e2e71f root.Std_k98ojb.Math.Mul {}\n        a_0c7f1d -> mul_e2e71f.first\n        b_6b251d -> mul_e2e71f.second\n\n        instance(x: 369, y: -84) less_than_zero_c4a44d root.Std_k98ojb.Math.LessThanOrEqual {\n            right: 0\n        }\n        mul_e2e71f.result -> less_than_zero_c4a44d.left\n\n        less_than_zero_c4a44d.result -> output_2a2c4d\n    }\n\n    \n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -25, y: -64, name: \"input\") property(Number) input_f3db9f\n        in(x: -25, y: 80, name: \"execute\") trigger() execute_e7c3b3\n\n        out(x: 1205, y: -210, name: \"out\") property(Bool) out_6e4a79\n        out(x: 1205, y: -80, name: \"continue\") trigger() continue_27b8c3\n\n        instance(x: 162, y: -134) modulo_6d1f85 root.Std_k98ojb.Math.Modulo {}\n        input_f3db9f -> modulo_6d1f85.value\n        11 -> modulo_6d1f85.divisor\n\n        instance(x: 290, y: -147) equal_0a8b9c root.Std_k98ojb.Logic.Equal {}\n        modulo_6d1f85.result -> equal_0a8b9c.left\n        0 -> equal_0a8b9c.right\n\n        instance(x: 423, y: -147) if_e19a62 root.Std_k98ojb.Std.If {}\n        execute_e7c3b3 -> if_e19a62.execute\n        equal_0a8b9c.result -> if_e19a62.predicate\n\n        instance(x: 554, y: -147) expression_3d0eac root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n\n        instance(x: 554, y: -314) expression_e1f6c2 root.Std_k98ojb.Math.Expression {\n            expression: \"false\"\n        }\n\n        if_e19a62.then -> expression_3d0eac.execute\n        if_e19a62.else -> expression_e1f6c2.execute\n\n        instance(x: 754, y: -230) or_8b2b75 root.Std_k98ojb.Logic.Equal {}\n        expression_3d0eac.result -> or_8b2b75.left\n        true -> or_8b2b75.right\n\n        instance(x: 754, y: -314) and_ea6c6f root.Std_k98ojb.Logic.Equal {}\n        expression_e1f6c2.result -> and_ea6c6f.left\n        false -> and_ea6c6f.right\n\n        or_8b2b75.result -> out_6e4a79\n        and_ea6c6f.result -> out_6e4a79\n\n        if_e19a62.then -> continue_27b8c3\n        if_e19a62.else -> continue_27b8c3\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 60, name: \"search\") property(String) search_1\n        in(x: -230, y: 120, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 285, y: 0) replace_9a3b4c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9a3b4c.input\n        search_1 -> replace_9a3b4c.search\n        replace_2 -> replace_9a3b4c.replace\n        replace_9a3b4c.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -267, y: 30, name: \"input\") property(String) input_ai\n        out(x: 415, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 89, y: 77) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -421, y: 50) property(List) inputList_ai\n        out(x: 385, y: 172) property(Number) result_ai\n        instance(x: -261, y: 139) filter_Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        inputList_ai -> filter_Std_k98ojb.list\n        instance(x: -104, y: 140) unique_Std_k98ojb.Sets.Difference {}\n        filter_Std_k98ojb.result -> unique_Std_k98ojb.left\n        inputList_ai -> unique_Std_k98ojb.right\n        instance(x: 72, y: 139) reduce_Std_k98ojb.Iteration.Reduce {\n            handler: \"Math.Mul(first, second)\"\n            initial: 1\n        }\n        unique_Std_k98ojb.difference -> reduce_Std_k98ojb.items\n        reduce_Std_k98ojb.result -> result_ai\n    }\n\n    instance(x: -35, y: 246) productUniqueNode root.main.ProductUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -341, y: 62, name: \"list1\") property(List) list1_016b2e\n        in(x: -335, y: 168, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 479, y: 62, name: \"output\") property(List) output_879de6\n\n        instance(x: -131, y: 115) difference_left_eb9c3e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -131, y: 204) difference_right_3d7f5a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 169, y: 115) concat_differences_4c3d9e root.Std_k98ojb.List.Concat {}\n\n        list1_016b2e -> difference_left_eb9c3e.left\n        list2_c8f404 -> difference_left_eb9c3e.right\n\n        list2_c8f404 -> difference_right_3d7f5a.left\n        list1_016b2e -> difference_right_3d7f5a.right\n\n        difference_left_eb9c3e.difference -> concat_differences_4c3d9e.list1\n        difference_right_3d7f5a.difference -> concat_differences_4c3d9e.list2\n\n        concat_differences_4c3d9e.concatenatedList -> output_879de6\n    }\n\n    instance(x: 400, y: 100) dissimilar_elements_test_33ad55 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -150, y: 42, name: \"list\") property(List) list_7c3f6a\n        in(x: -148, y: 149, name: \"rotation_count\") property(Number) rotation_count_d2e0d0\n\n        out(x: 555, y: 104, name: \"rotated_list\") property(List) data_0_0\n        out(x: 538, y: -69, name: \"continue\") trigger() continue_7c5f2e\n\n        instance(x: 114, y: -68) length_3d09a5 root.Std_k98ojb.List.Length {}\n        instance(x: 115, y: 41) modulo_d2b944 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 279, y: -69) sub_3f0c5e root.Std_k98ojb.Math.Sub {}\n        instance(x: 114, y: 147) slice_b9d5a8 root.Std_k98ojb.List.Slice {}\n        instance(x: 282, y: 41) slice_63c40e root.Std_k98ojb.List.Slice {}\n        instance(x: 438, y: 103) concat_d7b5f6 root.Std_k98ojb.List.Concat {}\n\n        list_7c3f6a -> length_3d09a5.list\n        rotation_count_d2e0d0 -> modulo_d2b944.value\n        length_3d09a5.length -> modulo_d2b944.divisor\n        length_3d09a5.length -> sub_3f0c5e.first\n        modulo_d2b944.result -> sub_3f0c5e.second\n        list_7c3f6a -> slice_b9d5a8.list\n        sub_3f0c5e.result -> slice_b9d5a8.start\n        length_3d09a5.length -> slice_b9d5a8.end\n        list_7c3f6a -> slice_63c40e.list\n        0 -> slice_63c40e.start\n        sub_3f0c5e.result -> slice_63c40e.end\n        slice_b9d5a8.slice -> concat_d7b5f6.left\n        slice_63c40e.slice -> concat_d7b5f6.right\n        concat_d7b5f6.result -> data_0_0\n    }\n\n    \n\n    instance(x: -219, y: 3) rotate_right_def8a2 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -346, y: -215, name: \"execute\") trigger() execute_7c0d5f\n        in(x: -346, y: -95, name: \"array\") property(List(Number)) array_ea8e6b\n\n        out(x: 774, y: -215, name: \"continue\") trigger() continue_25c0d0\n        out(x: 774, y: -95, name: \"sum\") property(Number) sum_b530a8\n\n        instance(x: -164, y: -215) reduce_4e5f9b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 271, y: -215) add_3b7d1b root.Std_k98ojb.Math.Add {}\n\n        array_ea8e6b -> reduce_4e5f9b.items\n        0 -> reduce_4e5f9b.accumulator\n        execute_7c0d5f -> reduce_4e5f9b.execute\n        add_3b7d1b.result -> sum_b530a8\n        reduce_4e5f9b.continue -> continue_25c0d0\n\n        func(doc: \"Adds two numbers.\") add_numbers {\n            in(x: -36, y: 41, name: \"execute\") trigger() execute_750364\n            in(x: -36, y: 129, name: \"a\") property(Number) a_c8f7d4\n            in(x: -36, y: 217, name: \"b\") property(Number) b_2e650a\n\n            out(x: 246, y: 129, name: \"result\") property(Number) result_6c4f8d\n            out(x: 246, y: 41, name: \"continue\") trigger() continue_37e05b\n\n            instance(x: 105, y: 129) add_ea726b root.Std_k98ojb.Math.Add {}\n\n            a_c8f7d4 -> add_ea726b.first\n            b_2e650a -> add_ea726b.second\n            execute_750364 -> add_ea726b.execute\n            add_ea726b.result -> result_6c4f8d\n            add_ea726b.continue -> continue_37e05b\n\n        }\n\n        reduce_4e5f9b.accumulator -> add_3b7d1b.first\n        reduce_4e5f9b.item -> add_3b7d1b.second\n        add_3b7d1b.result -> reduce_4e5f9b.next_accumulator\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 30, y: -250, name: \"input\") property(Number) input_1a7d6e\n        in(x: 30, y: -190, name: \"execute\") trigger() execute_e4f8c4\n\n        out(x: 1750, y: -10, name: \"out\") property(Bool) out_f2b4a7\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_3f3c6b\n\n        instance(x: 350, y: -100) generaterange_4e4d55 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 700, y: -50) for_2a4c6b root.Std_k98ojb.Std.For {}\n        instance(x: 1030, y: -50) mod_f2e0f4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1370, y: -50) if_5d2c6a root.Std_k98ojb.Std.If {}\n        instance(x: 1570, y: -200) and_b4e5f6 root.Std_k98ojb.Logic.And {}\n        instance(x: 1370, y: 150) not_7d7a6c root.Std_k98ojb.Logic.Not {}\n\n        input_1a7d6e -> generaterange_4e4d55.from\n        2 -> generaterange_4e4d55.to\n        generaterange_4e4d55.list -> for_2a4c6b.items\n\n        for_2a4c6b.item -> mod_f2e0f4.value\n        input_1a7d6e -> mod_f2e0f4.divisor\n\n        mod_f2e0f4.result -> if_5d2c6a.predicate\n        0 -> if_5d2c6a.input\n        for_2a4c6b.onItem -> if_5d2c6a.execute\n\n        if_5d2c6a.then -> not_7d7a6c.input\n        not_7d7a6c.output -> and_b4e5f6.left\n        1 -> mod_f2e0f4.value\n        input_1a7d6e -> mod_f2e0f4.divisor\n        mod_f2e0f4.result -> if_5d2c6a.predicate\n        for_2a4c6b.onItem -> if_5d2c6a.execute\n\n        1 == input_1a7d6e -> and_b4e5f6.right\n        and_b4e5f6.output -> out_f2b4a7\n\n        execute_e4f8c4 -> for_2a4c6b.reset\n        if_5d2c6a.else -> for_2a4c6b.next\n        for_2a4c6b.done -> continue_3f3c6b\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 10, y: -15) property(Int) a_7c32a1\n        in(x: 60, y: -15) property(Int) b_b9e4d2\n\n        out(x: 180, y: 10) property(Bool) result_e5f7b8\n\n        instance(x: 100, y: 60) mul_3e9c3a Std_k98ojb.Math.Mul {}\n        a_7c32a1 -> mul_3e9c3a.first\n        b_b9e4d2 -> mul_3e9c3a.second\n\n        instance(x: 100, y: 110) less_than_zero_e5f6b8 Std_k98ojb.Math.LessThanOrEqual {}\n        mul_3e9c3a.result -> less_than_zero_e5f6b8.left\n        0 -> less_than_zero_e5f6b8.right\n\n        less_than_zero_e5f6b8.result -> result_e5f7b8\n    }\n\n    instance(x: 200, y: -15) check_opposite_signs_4c93a7 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1920, y: -54, name: \"is_divisible_by_11\") property(Bool) is_divisible_by_11_8ba06b\n        out(x: 2066, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 573, y: -119) mod_e4c6f1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 953, y: 32) eq_c6b2e0 root.Std_k98ojb.Logic.Equal {}\n\n        input_f5c03d -> mod_e4c6f1.value\n        11 -> mod_e4c6f1.divisor\n        mod_e4c6f1.result -> eq_c6b2e0.left\n        0 -> eq_c6b2e0.right\n        eq_c6b2e0.result -> is_divisible_by_11_8ba06b\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -45, y: 175) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -200, y: 0, name: \"input\") property(String) input_0\n        in(x: -200, y: 50, name: \"search\") property(String) search_0\n        in(x: -200, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 50, y: 0) replace_instance root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_instance.input\n        search_0 -> replace_instance.search\n        replace_0 -> replace_instance.replace\n        replace_instance.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lowercase.\") ToLower {\n        in(x: -300, y: 50) property(String) input_ai\n        out(x: 300, y: 50) property(String) output_ai\n\n        instance(x: 0, y: 50) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") CalculateProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: -341, y: 158) reduce_9d root.Std_k98ojb.Iteration.Reduce {\n            handler: \"if (it == null || acc == null) { return it ?? acc; } if (!acc.includes(it)) { return acc.concat([it]); } return acc;\"\n            context: []\n        }\n        \n        instance(x: 31, y: 158) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            handler: \"if (it == null || acc == null) { return it ?? acc; } return acc * it;\"\n            initial: 1\n        }\n\n        list_ai -> reduce_9d.items\n        reduce_9d.result -> reduce_product.items\n        reduce_product.result -> product_ai\n\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -345, y: -72, name: \"list1\") property(List) list1_0d6fcb\n        in(x: -339, y: 72, name: \"list2\") property(List) list2_f2e48a\n\n        out(x: 450, y: -18, name: \"output\") property(List) output_7c4d9f\n\n        instance(x: -138, y: -67) difference_1b005b root.Std_k98ojb.Sets.Difference {}\n        instance(x: 216, y: -81) difference_b8e5a6 root.Std_k98ojb.Sets.Difference {}\n        list1_0d6fcb -> difference_1b005b.left\n        list2_f2e48a -> difference_1b005b.right\n        list2_f2e48a -> difference_b8e5a6.left\n        list1_0d6fcb -> difference_b8e5a6.right\n        instance(x: 397, y: -70) concat_e2b452 root.Std_k98ojb.List.Concat {}\n        difference_1b005b.difference -> concat_e2b452.left\n        difference_b8e5a6.difference -> concat_e2b452.right\n        concat_e2b452.concatenatedList -> output_7c4d9f\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list {\n        in(x: -145, y: 230, name: \"list\") property(List) list_ea2d3b\n        in(x: -96, y: -81, name: \"execute\") trigger() execute_72c5e8\n        in(x: -144, y: 139, name: \"rotate_by\") property(Number) rotateBy_d0f2a5\n\n        out(x: 851, y: 256, name: \"output_list\") property(List) outputList_7d2d7b\n        out(x: 841, y: -93, name: \"continue\") trigger() continue_e0e9c6\n\n        instance(x: 507, y: 185) sliceStart_1f826a root.Std_k98ojb.List.Slice {}\n        instance(x: 504, y: -35) sliceEnd_d1b10e root.Std_k98ojb.List.Slice {}\n        getter(x: 782, y: -16, name: \"getter_8a1f4d\") getter_8a1f4d = listLength\n        instance(x: 735, y: 150) concat_797e5b root.Std_k98ojb.List.Concat {}\n        setter(x: 269, y: -148, name: \"setter_c55a84\") setter_c55a84 = listLength\n        getter(x: 390, y: 179, name: \"getter_64e7c7\") getter_64e7c7 = listLength\n        instance(x: -102, y: 32) length_f5f9a1 root.Std_k98ojb.List.Length {}\n        instance(x: 258, y: 266) sub_408414 root.Std_k98ojb.Math.Sub {}\n        getter(x: 726, y: -73, name: \"getter_6b3c2a\") getter_6b3c2a = listLength\n        getter(x: 395, y: -120, name: \"getter_f8e40c\") getter_f8e40c = listLength\n\n        execute_72c5e8 -> setter_c55a84.execute\n        list_ea2d3b -> length_f5f9a1.list\n        length_f5f9a1.length -> setter_c55a84.new_value\n        getter_64e7c7.value -> sliceStart_1f826a.start\n        getter_f8e40c.value -> sub_408414.first\n        rotateBy_d0f2a5 -> sub_408414.second\n        sub_408414.result -> sliceEnd_d1b10e.start\n        list_ea2d3b -> sliceStart_1f826a.list\n        -1 -> sliceStart_1f826a.end\n        list_ea2d3b -> sliceEnd_d1b10e.list\n        getter_8a1f4d.value -> sliceEnd_d1b10e.end\n        sliceStart_1f826a.slice -> concat_797e5b.left\n        sliceEnd_d1b10e.slice -> concat_797e5b.right\n        concat_797e5b.result -> outputList_7d2d7b\n        setter_c55a84.continue -> continue_e0e9c6\n    }\n\n    \n\n    instance(x: -359, y: 12) rotate_list_b8f33e root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -436, y: -201, name: \"execute\") trigger() execute_7e52a9\n        in(x: -425, y: -127, name: \"numbers\") property(List<Number>) numbers_d8c3f7\n\n        out(x: 1169, y: -259, name: \"output\") property(Number) output_04e4a3\n        out(x: 1169, y: -380, name: \"continue\") trigger() continue_e40c7d\n\n        instance(x: 162, y: -174) reduce_d262b5 root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: 782, y: -376, name: \"setter_02f12c\") setter_02f12c = output\n        instance(x: 745, y: -251) add_e29d9a root.Std_k98ojb.Math.Add {}\n\n        0 -> reduce_d262b5.context\n        numbers_d8c3f7 -> reduce_d262b5.items\n        reduce_d262b5.result -> setter_02f12c.new_value\n        execute_7e52a9 -> reduce_d262b5.execute\n        add_e29d9a.result -> reduce_d262b5.accumulatedValue\n        setter_02f12c.continue -> continue_e40c7d\n        numbers_d8c3f7 -> add_e29d9a.first\n        reduce_d262b5.currentItem -> add_e29d9a.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 245, y: -160, name: \"input\") property(Number) input_7c1d3a\n        in(x: 394, y: -271, name: \"execute\") trigger() execute_b3f81b\n\n        out(x: 1635, y: -10, name: \"out\") property(Bool) out_f2c5d5\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_7a9a6f\n\n        instance(x: 348, y: -359) for_6d3b95 root.Std_k98ojb.Std.For {}\n        instance(x: 863, y: -210) generateRange_e147c3 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 731, y: 10) lessthanorequal_5f2d0a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1262, y: -249) modulo_f6e1c2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1397, y: -85) equal_0f6a2a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1524, y: 10) if_0c2d66 root.Std_k98ojb.Std.If {}\n        instance(x: 1736, y: -360) not_5c7f5f root.Std_k98ojb.Logic.Not {}\n\n        input_7c1d3a -> generateRange_e147c3.to\n        2 -> generateRange_e147c3.from\n        generateRange_e147c3.list -> for_6d3b95.items\n\n        execute_b3f81b -> for_6d3b95.reset\n        for_6d3b95.onItem -> lessthanorequal_5f2d0a.execute\n        for_6d3b95.item -> lessthanorequal_5f2d0a.left\n\n        input_7c1d3a -> lessthanorequal_5f2d0a.right\n        lessthanorequal_5f2d0a.result -> if_0c2d66.value\n        for_6d3b95.onItem -> if_0c2d66.execute\n\n        input_7c1d3a -> modulo_f6e1c2.left\n        for_6d3b95.item -> modulo_f6e1c2.right\n\n        0 -> equal_0f6a2a.right\n        modulo_f6e1c2.result -> equal_0f6a2a.left\n        equal_0f6a2a.result -> if_0c2d66.predicate\n\n        for_6d3b95.onItem -> if_0c2d66.execute\n        if_0c2d66.then -> continue_7a9a6f\n\n        not_5c7f5f.result -> out_f2c5d5\n        if_0c2d66.else -> for_6d3b95.next\n        for_6d3b95.done -> not_5c7f5f.execute\n\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -205, y: 164) property(Int) a_7a3c4d\n        in(x: -205, y: 209) property(Int) b_8b3e4f\n\n        out(x: 205, y: 164) property(Bool) output_1b3e4d\n\n        instance(x: 0, y: 170) expression_1a3c4d root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        \n        a_7a3c4d -> expression_1a3c4d.gen_a\n        b_8b3e4f -> expression_1a3c4d.gen_b\n        expression_1a3c4d.result -> output_1b3e4d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4a5d root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4a5d.value\n        11 -> modulo_7c4a5d.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4a5d.result -> equal_6f3e4c.left\n        0 -> equal_6f3e4c.right\n\n        instance(x: 20, y: 40) if_123abc root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_123abc.execute\n        equal_6f3e4c.result -> if_123abc.predicate\n\n        if_123abc.value -> out_f3db9f\n        if_123abc.then -> continue_8ba06b\n        if_123abc.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -206, y: 154, name: \"list\") property(List) list_7c3d5e\n        in(x: -208, y: 29, name: \"execute\") trigger() execute_1b4a2f\n        in(x: -206, y: 86, name: \"rotation_count\") property(Number) rotation_count_7c3d5e\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 824, y: -19, name: \"continue\") trigger() continue_2b2a7c\n\n        instance(x: 557, y: 131) slice_6e2f5d root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -101) slice_75535d root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 201) concat_6e2f5d root.Std_k98ojb.List.Concat {}\n        getter(x: 412, y: -101, name: \"getter_3c1a44\") getter_3c1a44 = listLength\n        instance(x: 417, y: 165) length_98f5b7 root.Std_k98ojb.List.Length {}\n        instance(x: 208, y: -101) sub_1d6e3c root.Std_k98ojb.Math.Sub {}\n        getter(x: 412, y: 131, name: \"getter_75a24f\") getter_75a24f = listLength\n        instance(x: -200, y: -16) length_7c3d5e root.Std_k98ojb.List.Length {}\n        setter(x: 6, y: -101, name: \"setter_3c1a44\") setter_3c1a44 = listLength\n        getter(x: 208, y: 165, name: \"getter_75a24f\") getter_75a24f = listLength\n\n        execute_1b4a2f -> setter_3c1a44.execute\n        length_98f5b7.length -> data_0_0\n        slice_6e2f5d.slice -> concat_6e2f5d.left\n        slice_75535d.slice -> concat_6e2f5d.right\n        list_7c3d5e -> length_98f5b7.list\n        rotation_count_7c3d5e -> sub_1d6e3c.second\n        getter_3c1a44.value -> slice_75535d.start\n        getter_75a24f.value -> slice_6e2f5d.start\n        list_7c3d5e -> slice_75535d.list\n        sub_1d6e3c.result -> slice_75535d.end\n        length_98f5b7.length -> getter_75a24f.value\n        rotation_count_7c3d5e -> slice_6e2f5d.end\n        list_7c3d5e -> slice_6e2f5d.list\n        setter_3c1a44.continue -> length_98f5b7.execute\n        getter_3c1a44.value -> sub_1d6e3c.first\n        list_7c3d5e -> length_7c3d5e.list\n        length_7c3d5e.length -> setter_3c1a44.new_value\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c4e\n\n        out(x: 1110, y: -150, name: \"is_prime\") property(Bool) is_prime_7f3a4d\n        out(x: 1110, y: -210, name: \"continue\") trigger() continue_8b6c4e\n\n        instance(x: 190, y: -150) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 370, y: -150) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 550, y: -150) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        instance(x: 730, y: -150) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 910, y: -150) and_80a119 root.Std_k98ojb.Logic.And {}\n\n        input_7f3a4d -> generaterange_038fce.from\n        2 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n\n        execute_8b6c4e -> for_8cb3f6.reset\n\n        input_7f3a4d -> modulo_f11fda.value\n        for_8cb3f6.item -> modulo_f11fda.divisor\n        modulo_f11fda.result -> if_07b8c7.predicate\n\n        1 == input_7f3a4d -> and_80a119.left\n        not(if_07b8c7.value) -> and_80a119.right\n\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> for_8cb3f6.next\n        for_8cb3f6.done -> continue_8b6c4e\n\n        and_80a119.result -> is_prime_7f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 235, y: -146, name: \"a\") property(Int) a_0c73e4\n        in(x: 498, y: -151, name: \"b\") property(Int) b_1b8b2b\n\n        out(x: 523, y: -16, name: \"output\") property(Bool) output_b0c7d5\n\n        instance(x: 394, y: -131) mul_ea422f root.Std_k98ojb.Math.Mul {}\n        a_0c73e4 -> mul_ea422f.first\n        b_1b8b2b -> mul_ea422f.second\n\n        instance(x: 521, y: -67) less_than_zero_b9d552 root.Std_k98ojb.Math.LessThanOrEqual {\n            left: 0\n        }\n        mul_ea422f.result -> less_than_zero_b9d552.right\n\n        less_than_zero_b9d552.value -> output_b0c7d5\n    }\n\n    \n\n    instance(x: 368, y: -148) check_opposite_signs_7b2e67 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -25, y: -64, name: \"input\") property(Number) input_f3db9f\n        in(x: -20, y: -175, name: \"execute\") trigger() execute_8ba06b\n\n        out(x: 205, y: -130, name: \"result\") property(Bool) result_b4554f\n        out(x: 210, y: -200, name: \"continue\") trigger() continue_7d9e8c\n\n        instance(x: 160, y: -100) modulo_3b9d9a root.Std_k98ojb.Math.Modulo {}\n        input_f3db9f -> modulo_3b9d9a.value\n        11 -> modulo_3b9d9a.divisor\n        instance(x: 205, y: -64) equal_7e0a4a root.Std_k98ojb.Logic.Equal {}\n        modulo_3b9d9a.result -> equal_7e0a4a.left\n        0 -> equal_7e0a4a.right\n        equal_7e0a4a.result -> result_b4554f\n        execute_8ba06b -> continue_7d9e8c\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 60, name: \"search\") property(String) search_1\n        in(x: -230, y: 120, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 285, y: 0) replace_9a3b4e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9a3b4e.input\n        search_1 -> replace_9a3b4e.search\n        replace_2 -> replace_9a3b4e.replace\n        replace_9a3b4e.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -267, y: 30, name: \"input\") property(String) input_ai\n        out(x: 415, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 89, y: 77) tolower_1d652c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_1d652c.input\n        tolower_1d652c.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -421, y: 50) property(List) inputList_ai\n        out(x: 385, y: 172) property(Number) result_ai\n        instance(x: -261, y: 139) filter_Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        inputList_ai -> filter_Std_k98ojb.list\n        instance(x: -104, y: 140) unique_Std_k98ojb.Sets.Difference {}\n        filter_Std_k98ojb.result -> unique_Std_k98ojb.left\n        inputList_ai -> unique_Std_k98ojb.right\n        instance(x: 72, y: 139) reduce_Std_k98ojb.Iteration.Reduce {\n            handler: \"Math.Mul(first, second)\"\n            initial: 1\n        }\n        unique_Std_k98ojb.difference -> reduce_Std_k98ojb.items\n        reduce_Std_k98ojb.result -> result_ai\n    }\n\n    instance(x: -35, y: 246) productUniqueNode root.main.ProductUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -341, y: 62, name: \"list1\") property(List) list1_016b2e\n        in(x: -335, y: 168, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 479, y: 62, name: \"output\") property(List) output_879de6\n\n        instance(x: -131, y: 115) difference_left_eb4a8e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -131, y: 20) difference_right_bf5d9c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 167, y: 62) concat_dissimilar_4a2b0e root.Std_k98ojb.List.Concat {}\n\n        list1_016b2e -> difference_left_eb4a8e.left\n        list2_c8f404 -> difference_left_eb4a8e.right\n\n        list2_c8f404 -> difference_right_bf5d9c.left\n        list1_016b2e -> difference_right_bf5d9c.right\n\n        difference_left_eb4a8e.difference -> concat_dissimilar_4a2b0e.listA\n        difference_right_bf5d9c.difference -> concat_dissimilar_4a2b0e.listB\n\n        concat_dissimilar_4a2b0e.concatenatedList -> output_879de6\n    }\n\n    instance(x: 314, y: -20) dissimilar_elements_test_33ad55 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -150, y: 42, name: \"list\") property(List) list_7c36e4\n        in(x: -148, y: 149, name: \"rotation_count\") property(Number) rotation_count_d44a0f\n\n        out(x: 566, y: 212, name: \"rotated_list\") property(List) data_0_0\n        out(x: 573, y: -89, name: \"continue\") trigger() continue_7c594e\n\n        instance(x: 215, y: 65) length_47f6ad root.Std_k98ojb.List.Length {}\n        instance(x: 208, y: 169) modulo_d3082a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -25) slice_1c4e3f root.Std_k98ojb.List.Slice {}\n        instance(x: 372, y: 164) slice_0457c5 root.Std_k98ojb.List.Slice {}\n        instance(x: 527, y: 100) concat_ea7d7b root.Std_k98ojb.List.Concat {}\n\n        list_7c36e4 -> length_47f6ad.list\n        rotation_count_d44a0f -> modulo_d3082a.value\n        length_47f6ad.length -> modulo_d3082a.divisor\n        length_47f6ad.length -> slice_1c4e3f.start\n        list_7c36e4 -> slice_1c4e3f.list\n        length_47f6ad.length -> slice_0457c5.end\n        modulo_d3082a.result -> slice_1c4e3f.end\n        modulo_d3082a.result -> slice_0457c5.start\n        list_7c36e4 -> slice_0457c5.list\n        slice_1c4e3f.slice -> concat_ea7d7b.left\n        slice_0457c5.slice -> concat_ea7d7b.right\n        concat_ea7d7b.result -> data_0_0\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -346, y: -215, name: \"execute\") trigger() execute_7d5c0f\n        in(x: -346, y: -95, name: \"array\") property(List) array_d8c11a\n\n        out(x: 686, y: -221, name: \"continue\") trigger() continue_eb57d5\n        out(x: 686, y: -43, name: \"sum\") property(Number) sum_0f259e\n\n        instance(x: -182, y: -215) for_loop_d9a725 root.Std_k98ojb.Std.For {}\n        instance(x: 169, y: -340) add_value_b1965c root.Std_k98ojb.Math.Add {}\n        setter(x: 169, y: -133, name: \"setter_2a72d6\") setter_2a72d6 = sum\n        getter(x: 410, y: -195, name: \"getter_82e6c7\") getter_82e6c7 = sum\n\n        array_d8c11a -> for_loop_d9a725.items\n        execute_7d5c0f -> for_loop_d9a725.trigger\n        0 -> setter_2a72d6.new_value\n        setter_2a72d6.continue -> for_loop_d9a725.reset\n        for_loop_d9a725.on_item -> add_value_b1965c.second\n        getter_82e6c7.value -> add_value_b1965c.first\n        add_value_b1965c.result -> setter_2a72d6.new_value\n        for_loop_d9a725.done -> continue_eb57d5\n        setter_2a72d6.continue -> getter_82e6c7.execute\n        getter_82e6c7.value -> sum_0f259e\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 30, y: -250, name: \"input\") property(Number) input_1a7d6e\n        in(x: 30, y: -190, name: \"execute\") trigger() execute_e48b2f\n\n        out(x: 1260, y: -250, name: \"is_prime\") property(Bool) is_prime_7a7d6e\n        out(x: 1390, y: -190, name: \"continue\") trigger() continue_e48b2f\n\n        instance(x: 120, y: -100) generaterange_5c2a87 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 360, y: -50) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 540, y: -100) mod_c2a87e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 720, y: -50) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 900, y: -100) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1080, y: -50) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_1a7d6e -> generaterange_5c2a87.from\n        2 -> generaterange_5c2a87.to\n        generaterange_5c2a87.list -> for_8cb3f6.items\n        for_8cb3f6.item -> mod_c2a87e.value\n        input_1a7d6e -> mod_c2a87e.divisor\n        0 -> if_07b8c7.predicate\n        mod_c2a87e.result -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        input_1a7d6e -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> if_e19a62.else\n        execute_e48b2f -> generaterange_5c2a87.reset\n        if_07b8c7.value -> is_prime_7a7d6e\n        if_e19a62.then -> continue_e48b2f\n        for_8cb3f6.next -> if_07b8c7.else\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 10, y: -15) property(Int) a_7c32a1\n        in(x: 60, y: -15) property(Int) b_b2e4d8\n\n        out(x: 190, y: 100) property(Bool) result_e6f0b4\n\n        instance(x: 100, y: 50) mul_78a36c Std_k98ojb.Math.Mul {}\n        a_7c32a1 -> mul_78a36c.first\n        b_b2e4d8 -> mul_78a36c.second\n\n        instance(x: 100, y: 100) less_than_zero_e5b69f Std_k98ojb.Math.LessThanOrEqual {}\n        mul_78a36c.result -> less_than_zero_e5b69f.left\n        0 -> less_than_zero_e5b69f.right\n\n        less_than_zero_e5b69f.output -> result_e6f0b4\n    }\n\n    instance(x: 200, y: -100) check_opposite_signs_instance Std_k98ojb.Function {\n        function: check_opposite_signs\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1920, y: -54, name: \"out\") property(Bool) out_1c7c7b\n        out(x: 1867, y: 120, name: \"continue\") trigger() continue_6ab7e8\n\n        instance(x: 374, y: -52, name: \"mod_11\") root.Std_k98ojb.Math.Modulo {\n            divisor: 11\n        }\n        input_f5c03d -> mod_11.value\n            \n        instance(x: 656, y: -57) root.Std_k98ojb.Logic.Equal {} equal_2b62e4\n        0 -> equal_2b62e4.left\n        mod_11.result -> equal_2b62e4.right\n        \n        instance(x: 1111, y: -57) root.Std_k98ojb.Std.If {} if_divisible_8a3d9f\n        execute_27b8c3 -> if_divisible_8a3d9f.execute\n        equal_2b62e4.result -> if_divisible_8a3d9f.predicate\n        \n        instance(x: 1502, y: -11) root.Std_k98ojb.Logic.Not {} not_c115c9\n        if_divisible_8a3d9f.value -> not_c115c9.input\n\n        out_1c7c7b <- equal_2b62e4.result\n        continue_6ab7e8 <- if_divisible_8a3d9f.else\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -200, y: 0, name: \"input\") property(String) input_0\n        in(x: -200, y: 50, name: \"search\") property(String) search_0\n        in(x: -200, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 50, y: 0) replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace.input\n        search_0 -> replace.search\n        replace_0 -> replace.replace\n        replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lowercase.\") ToLower {\n        in(x: -300, y: 50) property(String) input_ai\n        out(x: 300, y: 50) property(String) output_ai\n\n        instance(x: 0, y: 50) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") CalculateProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: -341, y: 158) setDifferenceInstance root.Std_k98ojb.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n\n        instance(x: -162, y: 270) reduceInstance root.Std_k98ojb.Iteration.Reduce {\n            items: setDifferenceInstance.difference\n            context: 1\n            expression: \"it * acc\"\n        }\n\n        reduceInstance.result -> product_ai\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -345, y: -72, name: \"list1\") property(List) list1_0e6d22\n        in(x: -349, y: 30, name: \"list2\") property(List) list2_eb5c84\n\n        out(x: 433, y: -72, name: \"output\") property(List) output_1e6d8e\n\n        instance(x: -129, y: -66) difference_ab2f04 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 153, y: -71) reversed_83b7b4 root.Std_k98ojb.List.Reversed {}\n        instance(x: 421, y: -67) difference_bdf9a0 root.Std_k98ojb.Sets.Difference {}\n\n        list1_0e6d22 -> difference_ab2f04.left\n        list2_eb5c84 -> difference_ab2f04.right\n\n        list1_0e6d22 -> reversed_83b7b4.list\n        reversed_83b7b4.reversedList -> difference_bdf9a0.left\n        list2_eb5c84 -> difference_bdf9a0.right\n\n        difference_ab2f04.difference, difference_bdf9a0.difference -> output_1e6d8e\n    }\n\n    \n\n    instance(x: 378, y: -72) dissimilar_elements_30a1b5 root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list {\n        in(x: -145, y: 230, name: \"list\") property(List) list_ea48cc\n        in(x: -197, y: -102, name: \"execute\") trigger() execute_2b76a5\n        in(x: -151, y: 32, name: \"steps\") property(Number) steps_e1c3ea\n\n        out(x: 845, y: 30, name: \"result\") property(List) data_0_0\n        out(x: 794, y: -64, name: \"continue\") trigger() continue_dcb1e2\n\n        instance(x: 306, y: 84) count_a5a6f0 root.Std_k98ojb.Std.Count {}\n        getter(x: 312, y: -77, name: \"getter_03c1d0\") getter_03c1d0 = listLength\n        instance(x: 473, y: -95) sub_ff6d4f root.Std_k98ojb.Math.Sub {}\n        setter(x: -2, y: -111, name: \"setter_e5c156\") setter_e5c156 = listLength\n        instance(x: 306, y: 30) for_5d7e4f root.Std_k98ojb.Std.For {}\n        getter(x: 452, y: -104, name: \"getter_c4a065\") getter_c4a065 = listLength\n        instance(x: 532, y: -3) slice_7c71ab root.Std_k98ojb.List.Slice {}\n        instance(x: 527, y: 296) concat_a1cfad root.Std_k98ojb.List.Concat {}\n        getter(x: 452, y: 221, name: \"getter_3a1aa5\") getter_3a1aa5 = listLength\n        instance(x: -7, y: 260) length_f7d9ea root.Std_k98ojb.List.Length {}\n        instance(x: 524, y: 142) slice_d348e3 root.Std_k98ojb.List.Slice {}\n\n        getter_03c1d0.value -> sub_ff6d4f.first\n        setter_e5c156.continue -> for_5d7e4f.reset\n        execute_2b76a5 -> length_f7d9ea.execute\n        execute_2b76a5 -> setter_e5c156.execute\n        getter_c4a065.value -> slice_7c71ab.end\n        for_5d7e4f.item -> concat_a1cfad.right\n        sub_ff6d4f.result -> slice_d348e3.start\n        list_ea48cc -> length_f7d9ea.list\n        length_f7d9ea.length -> setter_e5c156.new_value\n        for_5d7e4f.done -> continue_dcb1e2\n        steps_e1c3ea -> sub_ff6d4f.second\n        list_ea48cc -> slice_7c71ab.list\n        getter_3a1aa5.value -> slice_d348e3.end\n        0 -> slice_d348e3.start\n        slice_7c71ab.slice -> concat_a1cfad.left\n        for_5d7e4f.onItem -> count_a5a6f0.count\n        list_ea48cc -> for_5d7e4f.items\n        steps_e1c3ea -> count_a5a6f0.reset\n        slice_d348e3.slice -> for_5d7e4f.item\n        concat_a1cfad.result -> data_0_0\n    }\n\n    \n\n    instance(x: -234, y: -59) rotate_list_bdcab6 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -436, y: -201, name: \"execute\") trigger() execute_7f5dfc\n        in(x: -416, y: -118, name: \"numbers\") property(List(Number)) numbers_b1b495\n\n        out(x: 1139, y: -202, name: \"continue\") trigger() continue_6d82c7\n        out(x: 1136, y: -116, name: \"result\") property(Number) result_d9ca85\n\n        instance(x: 84, y: -125) add_eb24de root.Std_k98ojb.Math.Add {}\n        setter(x: 709, y: -384, name: \"setter_29eb6e\") setter_29eb6e = sum\n        getter(x: 639, y: -123, name: \"getter_bfe5c0\") getter_bfe5c0 = sum\n        instance(x: 78, y: -406) reduce_c1abbe root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 423, y: -207) add_5f345e root.Std_k98ojb.Math.Add {}\n        setter(x: -136, y: -390, name: \"setter_9a2d69\") setter_9a2d69 = sum\n        0 -> setter_9a2d69.new_value\n        numbers_b1b495 -> reduce_c1abbe.items\n        setter_9a2d69.continue -> execute_7f5dfc\n        add_eb24de.result -> getter_bfe5c0.value\n        0 -> add_eb24de.first\n        numbers_b1b495 -> add_5f345e.first\n        getter_bfe5c0.value -> reduce_c1abbe.accumulator\n        setter_9a2d69.execute -> add_eb24de.execute\n        reduce_c1abbe.handler_result -> add_5f345e.second\n        add_5f345e.result -> setter_29eb6e.new_value\n        getter_bfe5c0.value -> add_5f345e.second\n        setter_29eb6e.continue -> reduce_c1abbe.execute_handler\n        execute_7f5dfc -> setter_9a2d69.execute\n        reduce_c1abbe.done -> continue_6d82c7\n        setter_29eb6e.continue -> continue_6d82c7\n        getter_bfe5c0.value -> result_d9ca85\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 245, y: -160, name: \"input\") property(Number) input_7d9f1c\n        in(x: 181, y: -343, name: \"execute\") trigger() execute_c9d2d7\n\n        out(x: 1715, y: -160, name: \"out\") property(Bool) out_f7e8b0\n        out(x: 1715, y: -234, name: \"continue\") trigger() continue_9ad028\n\n        instance(x: 246, y: -315) if_dbb7c3 root.Std_k98ojb.Std.If {}\n        instance(x: 572, y: -314) generaterange_ebc5f9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 920, y: -306) for_bab4d5 root.Std_k98ojb.Std.For {}\n        instance(x: 746, y: -198) if_437a74 root.Std_k98ojb.Std.If {}\n        instance(x: 1163, y: -209) modulo_f34d50 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1378, y: -214) if_0e1ebc root.Std_k98ojb.Std.If {}\n        input_7d9f1c -> if_dbb7c3.value\n        execute_c9d2d7 -> if_dbb7c3.execute\n        1 -> generaterange_ebc5f9.from\n        input_7d9f1c -> generaterange_ebc5f9.to\n        if_dbb7c3.else -> generaterange_ebc5f9.reset\n        generaterange_ebc5f9.list -> for_bab4d5.items\n        2 -> if_437a74.value\n        for_bab4d5.item -> if_437a74.value\n        for_bab4d5.onItem -> if_437a74.execute\n        input_7d9f1c -> modulo_f34d50.value\n        for_bab4d5.item -> modulo_f34d50.divisor\n        modulo_f34d50.result -> if_0e1ebc.value\n        0 -> if_0e1ebc.value\n        if_437a74.then -> continue_9ad028\n        if_437a74.else -> for_bab4d5.next\n        if_0e1ebc.then -> if_437a74.execute\n        if_0e1ebc.else -> for_bab4d5.next\n        if_dbb7c3.else -> for_bab4d5.reset\n        2 -> if_dbb7c3.value\n        input_7d9f1c -> if_dbb7c3.value\n        true -> if_dbb7c3.then\n        false -> out_f7e8b0\n    }\n\n    \n\n    instance(x: -216, y: 35) is_prime_464ce3 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: -205, y: 164) property(Int) a_7a3c4d\n        in(x: -205, y: 209) property(Int) b_8b3e4f\n\n        out(x: 205, y: 164) property(Bool) output_1b3e4d\n\n        instance(x: 0, y: 170) expression_1a3c4d root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        \n        a_7a3c4d -> expression_1a3c4d.gen_a\n        b_8b3e4f -> expression_1a3c4d.gen_b\n        expression_1a3c4d.result -> output_1b3e4d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4a5d root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4a5d.value\n        11 -> modulo_7c4a5d.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4a5d.result -> equal_6f3e4c.left\n        0 -> equal_6f3e4c.right\n\n        instance(x: 20, y: 40) if_123abc root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_123abc.execute\n        equal_6f3e4c.result -> if_123abc.predicate\n\n        if_123abc.value -> out_f3db9f\n        if_123abc.then -> continue_8ba06b\n        if_123abc.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: 0, y: 0, name: \"input\") property(String) input_0\n        in(x: 0, y: 50, name: \"search\") property(String) search_1\n        in(x: 0, y: 100, name: \"replace\") property(String) replace_2\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> strings_replace.input\n        search_1 -> strings_replace.search\n        replace_2 -> strings_replace.replace\n        strings_replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n        instance(x: 500, y: 150) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_ai -> unique_7b3b7b.left\n        list_ai -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_7b3b7b.items\n        reduce_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -300, y: 50, name: \"list1\") property(List) list1_7a2e4c\n        in(x: -300, y: 150, name: \"list2\") property(List) list2_9b6f8d\n\n        out(x: 400, y: 100, name: \"output\") property(List) output_dissimilar_elements\n\n        instance(x: -100, y: 50) difference_left_7c3a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -100, y: 150) difference_right_2d4f6a root.Std_k98ojb.Sets.Difference {}\n\n        list1_7a2e4c -> difference_left_7c3a1e.left\n        list2_9b6f8d -> difference_left_7c3a1e.right\n\n        list2_9b6f8d -> difference_right_2d4f6a.left\n        list1_7a2e4c -> difference_right_2d4f6a.right\n\n        instance(x: 200, y: 100) concat_dissimilar_elements_3e5b9c root.Std_k98ojb.List.Concat {}\n        difference_left_7c3a1e.difference -> concat_dissimilar_elements_3e5b9c.left\n        difference_right_2d4f6a.difference -> concat_dissimilar_elements_3e5b9c.right\n\n        concat_dissimilar_elements_3e5b9c.concatenatedList -> output_dissimilar_elements\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_right {\n        in(x: -206, y: 154, name: \"list\") property(List) list_7c3d5e\n        in(x: -208, y: 29, name: \"execute\") trigger() execute_1b4f1a\n        in(x: -206, y: 86, name: \"rotation_count\") property(Number) rotation_count_7b3d5e\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 824, y: -19, name: \"continue\") trigger() continue_2c3f7b\n\n        instance(x: 557, y: 168) slice_1a7eac root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: -104) slice_7d6b4b root.Std_k98ojb.List.Slice {}\n        getter(x: 322, y: -104, name: \"getter_2c3f7b\") getter_2c3f7b = length\n        instance(x: 557, y: 69) concat_1a7eac root.Std_k98ojb.List.Concat {}\n        setter(x: 6, y: -40, name: \"setter_2c3f7b\") setter_2c3f7b = length\n        getter(x: 557, y: -169, name: \"getter_7d6b4b\") getter_7d6b4b = length\n        instance(x: 280, y: 168) length_1a7eac root.Std_k98ojb.List.Length {}\n        setter(x: -235, y: -169, name: \"setter_7d6b4b\") setter_7d6b4b = rotation_count\n        getter(x: 280, y: 229, name: \"getter_1a7eac\") getter_1a7eac = length\n        instance(x: -235, y: 168) sub_1a7eac root.Std_k98ojb.Math.Sub {}\n        setter(x: -240, y: 229, name: \"setter_1a7eac\") setter_1a7eac = rotation_count\n        getter(x: -235, y: -64, name: \"getter_2c3f7b\") getter_2c3f7b = length\n\n        execute_1b4f1a -> setter_2c3f7b.execute\n        list_7c3d5e -> length_1a7eac.list\n        rotation_count_7b3d5e -> setter_7d6b4b.new_value\n        getter_2c3f7b.value -> sub_1a7eac.first\n        setter_7d6b4b.value -> sub_1a7eac.second\n        list_7c3d5e -> slice_7d6b4b.list\n        list_7c3d5e -> slice_1a7eac.list\n        getter_2c3f7b.value -> setter_1a7eac.new_value\n        sub_1a7eac.result -> slice_1a7eac.start\n        length_1a7eac.length -> setter_2c3f7b.new_value\n        getter_1a7eac.value -> slice_1a7eac.end\n        getter_7d6b4b.value -> slice_7d6b4b.start\n        -1 -> slice_7d6b4b.end\n        slice_7d6b4b.slice -> concat_1a7eac.left\n        slice_1a7eac.slice -> concat_1a7eac.right\n        setter_2c3f7b.continue -> sub_1a7eac.execute\n        sub_1a7eac.execute -> getter_1a7eac.execute\n        getter_1a7eac.execute -> slice_1a7eac.execute\n        slice_1a7eac.execute -> concat_1a7eac.execute\n        setter_7d6b4b.continue -> slice_7d6b4b.execute\n        slice_7d6b4b.execute -> getter_2c3f7b.execute\n        getter_2c3f7b.execute -> continue_2c3f7b\n        concat_1a7eac.result -> data_0_0\n    }\n\n    \n\n    instance(x: -258, y: 49) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -213, name: \"execute\") trigger() execute_7a6f8d\n        in(x: -436, y: -97, name: \"array\") property(List) array_7c4b1e\n\n        out(x: 1146, y: -269, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -89, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) reduce_5d7eac root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> reduce_5d7eac.initial_value\n        array_7c4b1e -> reduce_5d7eac.items\n        execute_7a6f8d -> reduce_5d7eac.execute\n        setter_41e4ad.continue -> reduce_5d7eac.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n        reduce_5d7eac.result -> getter_38583a.value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c4e\n\n        out(x: 1110, y: -150, name: \"is_prime\") property(Bool) is_prime_7f3a4d\n        out(x: 1110, y: -210, name: \"continue\") trigger() continue_8b6c4e\n\n        instance(x: 190, y: -150) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 370, y: -150) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 550, y: -150) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        instance(x: 730, y: -150) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 910, y: -150) and_80a119 root.Std_k98ojb.Logic.And {}\n\n        input_7f3a4d -> generaterange_038fce.from\n        2 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n\n        execute_8b6c4e -> for_8cb3f6.reset\n\n        input_7f3a4d -> modulo_f11fda.value\n        for_8cb3f6.item -> modulo_f11fda.divisor\n        modulo_f11fda.result -> if_07b8c7.predicate\n\n        1 == input_7f3a4d -> and_80a119.left\n        not(if_07b8c7.value) -> and_80a119.right\n\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> for_8cb3f6.next\n        for_8cb3f6.done -> continue_8b6c4e\n\n        and_80a119.result -> is_prime_7f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 235, y: -146, name: \"a\") property(Int) a_0c70f4\n        in(x: 498, y: -156, name: \"b\") property(Int) b_0c70f4\n\n        out(x: 235, y: 229, name: \"output\") property(Bool) output_2a4d9e\n\n        instance(x: 235, y: -16) expression_8f50c7 root.Std_k98ojb.Math.Expression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        a_0c70f4 -> expression_8f50c7.gen_a\n        b_0c70f4 -> expression_8f50c7.gen_b\n        expression_8f50c7.result -> output_2a4d9e\n    }\n\n    \n\n    instance(x: 316, y: -15) check_opposite_signs_e1d3ec root.main.check_opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -25, y: -64, name: \"input\") property(Number) input_f3db9f\n        in(x: -20, y: -175, name: \"execute\") trigger() execute_8ba06b\n\n        out(x: 205, y: -130, name: \"result\") property(Bool) result_b4554f\n        out(x: 210, y: -200, name: \"continue\") trigger() continue_7d9e8c\n\n        instance(x: 160, y: -100) modulo_3b9d9a root.Std_k98ojb.Math.Modulo {}\n        input_f3db9f -> modulo_3b9d9a.value\n        11 -> modulo_3b9d9a.divisor\n        instance(x: 205, y: -64) equal_7e0a4a root.Std_k98ojb.Logic.Equal {}\n        modulo_3b9d9a.result -> equal_7e0a4a.left\n        0 -> equal_7e0a4a.right\n        equal_7e0a4a.result -> result_b4554f\n        execute_8ba06b -> continue_7d9e8c\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 60, name: \"search\") property(String) search_1\n        in(x: -230, y: 120, name: \"replace\") property(String) replace_2\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 285, y: 0) replace_9a3b4e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9a3b4e.input\n        search_1 -> replace_9a3b4e.search\n        replace_2 -> replace_9a3b4e.replace\n        replace_9a3b4e.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") ToLower {\n        in(x: -267, y: 30, name: \"input\") property(String) input_ai\n        out(x: 415, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 89, y: 77) tolower_1d652c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_1d652c.input\n        tolower_1d652c.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculate the product of the unique numbers in a given list.\") ProductUnique {\n        in(x: -421, y: 50) property(List) inputList_ai\n        out(x: 385, y: 172) property(Number) result_ai\n        instance(x: -261, y: 139) filter_Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        inputList_ai -> filter_Std_k98ojb.list\n        instance(x: -104, y: 140) unique_Std_k98ojb.Sets.Difference {}\n        filter_Std_k98ojb.result -> unique_Std_k98ojb.left\n        inputList_ai -> unique_Std_k98ojb.right\n        instance(x: 72, y: 139) reduce_Std_k98ojb.Iteration.Reduce {\n            handler: \"Math.Mul(first, second)\"\n            initial: 1\n        }\n        unique_Std_k98ojb.difference -> reduce_Std_k98ojb.items\n        reduce_Std_k98ojb.result -> result_ai\n    }\n\n    instance(x: -35, y: 246) productUniqueNode root.main.ProductUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -341, y: 62, name: \"list1\") property(List) list1_016b2e\n        in(x: -335, y: 168, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 479, y: 62, name: \"output\") property(List) output_879de6\n\n        instance(x: -131, y: 115) difference_left_eb4a8e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -131, y: 20) difference_right_bf5d9c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 167, y: 62) concat_dissimilar_4a2b0e root.Std_k98ojb.List.Concat {}\n\n        list1_016b2e -> difference_left_eb4a8e.left\n        list2_c8f404 -> difference_left_eb4a8e.right\n\n        list2_c8f404 -> difference_right_bf5d9c.left\n        list1_016b2e -> difference_right_bf5d9c.right\n\n        difference_left_eb4a8e.difference -> concat_dissimilar_4a2b0e.listA\n        difference_right_bf5d9c.difference -> concat_dissimilar_4a2b0e.listB\n\n        concat_dissimilar_4a2b0e.concatenatedList -> output_879de6\n    }\n\n    instance(x: 314, y: -20) dissimilar_elements_test_e4d55f root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_right {\n        in(x: -150, y: 42, name: \"list\") property(List) list_7c36e4\n        in(x: -148, y: 149, name: \"rotation_count\") property(Number) rotation_count_d42a0f\n\n        out(x: 555, y: 149, name: \"rotated_list\") property(List) data_0_0\n        out(x: 563, y: -78, name: \"continue\") trigger() continue_7c692e\n\n        instance(x: 204, y: -21) length_b1a8a6 root.Std_k98ojb.List.Length {}\n        instance(x: 205, y: 135) mod_d93d4a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 367, y: -20) slice_13d1e2 root.Std_k98ojb.List.Slice {}\n        instance(x: 369, y: 150) slice_b1f67c root.Std_k98ojb.List.Slice {}\n        instance(x: 439, y: -11) concat_75d72e root.Std_k98ojb.List.Concat {}\n\n        list_7c36e4 -> length_b1a8a6.list\n        rotation_count_d42a0f -> mod_d93d4a.value\n        length_b1a8a6.length -> mod_d93d4a.divisor\n        list_7c36e4 -> slice_13d1e2.list\n        list_7c36e4 -> slice_b1f67c.list\n        mod_d93d4a.result -> slice_13d1e2.start\n        0 -> slice_13d1e2.end\n        length_b1a8a6.length -> slice_b1f67c.start\n        mod_d93d4a.result -> slice_b1f67c.end\n        slice_b1f67c.slice -> concat_75d72e.left\n        slice_13d1e2.slice -> concat_75d72e.right\n        concat_75d72e.list -> data_0_0\n    }\n\n    \n\n    instance(x: -198, y: 42) rotate_right_6c38f4 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -346, y: -215, name: \"execute\") trigger() execute_7d5c0f\n        in(x: -346, y: -95, name: \"array\") property(List) array_d8c11a\n\n        out(x: 686, y: -221, name: \"continue\") trigger() continue_eb57d5\n        out(x: 686, y: -43, name: \"sum\") property(Number) sum_0f249e\n\n        instance(x: -182, y: -215) for_loop_d9a725 root.Std_k98ojb.Std.For {}\n        instance(x: 169, y: -311) add_to_sum_bf65d0 root.Std_k98ojb.Math.Add {}\n        setter(x: 402, y: -349, name: \"setter_75c77e\") setter_75c77e = sum\n        getter(x: 185, y: -163, name: \"getter_d8c11a\") getter_d8c11a = array\n        instance(x: 402, y: -191) init_sum_9b50d4 root.Std_k98ojb.Math.Sub {}\n        \n        execute_7d5c0f -> for_loop_d9a725.trigger\n        getter_d8c11a.value -> for_loop_d9a725.items\n        0 -> setter_75c77e.new_value\n        setter_75c77e.continue -> for_loop_d9a725.reset\n        for_loop_d9a725.on_item -> add_to_sum_bf65d0.execute\n        for_loop_d9a725.item -> add_to_sum_bf65d0.first\n        getter_75c77e.value -> add_to_sum_bf65d0.second\n        add_to_sum_bf65d0.result -> setter_75c77e.new_value\n        for_loop_d9a725.done -> continue_eb57d5\n        0 -> init_sum_9b50d4.first\n        1 -> init_sum_9b50d4.second\n        init_sum_9b50d4.result -> setter_75c77e.new_value\n        getter_75c77e.value -> sum_0f249e\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 30, y: -250, name: \"input\") property(Number) input_1a7d6e\n        in(x: 30, y: -190, name: \"execute\") trigger() execute_e48b2f\n\n        out(x: 1260, y: -250, name: \"is_prime\") property(Bool) is_prime_7a7d6e\n        out(x: 1390, y: -190, name: \"continue\") trigger() continue_e48b2f\n\n        instance(x: 120, y: -100) generaterange_5c2a87 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 360, y: -50) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 540, y: -100) mod_c2a87e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 720, y: -50) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 900, y: -100) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1080, y: -50) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_1a7d6e -> generaterange_5c2a87.from\n        2 -> generaterange_5c2a87.to\n        generaterange_5c2a87.list -> for_8cb3f6.items\n        for_8cb3f6.item -> mod_c2a87e.value\n        input_1a7d6e -> mod_c2a87e.divisor\n        0 -> if_07b8c7.predicate\n        mod_c2a87e.result -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        input_1a7d6e -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> if_e19a62.else\n        execute_e48b2f -> generaterange_5c2a87.reset\n        if_07b8c7.value -> is_prime_7a7d6e\n        if_e19a62.then -> continue_e48b2f\n        for_8cb3f6.next -> if_07b8c7.else\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 10, y: -15) property(Int) a_7c32a1\n        in(x: 60, y: -15) property(Int) b_b2e4d8\n\n        out(x: 190, y: 100) property(Bool) result_e6f0b4\n\n        instance(x: 100, y: 50) mul_78a3ca root.Std_k98ojb.Math.Mul {}\n        a_7c32a1 -> mul_78a3ca.first\n        b_b2e4d8 -> mul_78a3ca.second\n\n        instance(x: 100, y: 100) less_than_zero_e59db6 root.Std_k98ojb.Math.LessThanOrEqual {\n            right: 0\n        }\n        mul_78a3ca.result -> less_than_zero_e59db6.left\n\n        less_than_zero_e59db6.output -> result_e6f0b4\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1920, y: -54, name: \"out\") property(Bool) out_1c7c7b\n        out(x: 1867, y: 120, name: \"continue\") trigger() continue_6cb4e8\n\n        instance(x: 374, y: -52, name: \"mod_11\") root.Std_k98ojb.Math.Modulo {\n            divisor: 11\n        }\n        input_f5c03d -> mod_11.value\n            \n        instance(x: 656, y: -57) root.Std_k98ojb.Logic.Equal {} equal_2b62e4\n        0 -> equal_2b62e4.left\n        mod_11.result -> equal_2b62e4.right\n        \n        instance(x: 1111, y: -57) root.Std_k98ojb.Std.If {} if_divisible_8a3d9f\n        execute_27b8c3 -> if_divisible_8a3d9f.execute\n        equal_2b62e4.result -> if_divisible_8a3d9f.predicate\n        \n        instance(x: 1502, y: -11) root.Std_k98ojb.Logic.Not {} not_f21071\n        equal_2b62e4.result -> not_f21071.input\n\n        if_divisible_8a3d9f.then -> continue_6cb4e8\n        if_divisible_8a3d9f.else -> continue_6cb4e8\n        \n        if_divisible_8a3d9f.value -> out_1c7c7b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -200, y: 0, name: \"input\") property(String) input_0\n        in(x: -200, y: 50, name: \"search\") property(String) search_0\n        in(x: -200, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 300, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 50, y: 0) replace root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace.input\n        search_0 -> replace.search\n        replace_0 -> replace.replace\n        replace.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lowercase.\") ToLower {\n        in(x: -300, y: 50) property(String) input_ai\n        out(x: 300, y: 50) property(String) output_ai\n\n        instance(x: 0, y: 50) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"calculate the product of the unique numbers in a given list.\") CalculateProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) product_ai\n\n        instance(x: -341, y: 158) setDifferenceInstance root.Std_k98ojb.Sets.Difference {\n            left: list_ai\n            right: []\n        }\n\n        instance(x: -162, y: 270) reduceInstance root.Std_k98ojb.Iteration.Reduce {\n            items: setDifferenceInstance.difference\n            context: 1\n            expression: \"it * acc\"\n        }\n\n        reduceInstance.result -> product_ai\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -345, y: -72, name: \"list1\") property(List) list1_0e6d22\n        in(x: -349, y: 30, name: \"list2\") property(List) list2_eb5c84\n\n        out(x: 433, y: -72, name: \"output\") property(List) output_1e6d8e\n\n        instance(x: -129, y: -66) difference_ab2f04 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 153, y: -71) reversed_82b7b4 root.Std_k98ojb.List.Reversed {}\n        instance(x: 421, y: -67) difference_bafdf0 root.Std_k98ojb.Sets.Difference {}\n\n        list1_0e6d22 -> difference_ab2f04.left\n        list2_eb5c84 -> difference_ab2f04.right\n\n        list2_eb5c84 -> reversed_82b7b4.list\n\n        reversed_82b7b4.reversed -> difference_bafdf0.left\n        list1_0e6d22 -> difference_bafdf0.right\n\n        difference_ab2f04.difference -> output_1e6d8e.append_left\n        difference_bafdf0.difference -> output_1e6d8e.append_right\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list {\n        in(x: -145, y: 230, name: \"list\") property(List) list_ea48ea\n        in(x: -157, y: 62, name: \"rotate_by\") property(Number) rotate_by_9c0d6e\n\n        out(x: 811, y: 142, name: \"rotated_list\") property(List) list_b3f87a\n        out(x: 859, y: -49, name: \"continue\") trigger() continue_38c6b8\n\n        instance(x: 60, y: -33, name: \"math_expression_13\") math_expression_13 root.Std_k98ojb.Math.Expression {\n            expression: \"(a + b) % c\"\n        }\n        getter(x: 491, y: 253, name: \"getter_a10c76\") getter_a10c76 = list_ea48ea\n        instance(x: -140, y: -91) length_9b8b8d root.Std_k98ojb.List.Length {}\n        instance(x: 423, y: 156) slice_end_c621eb root.Std_k98ojb.List.Slice {}\n        getter(x: 407, y: -64, name: \"getter_4d8ebe\") getter_4d8ebe = list_ea48ea\n        instance(x: 534, y: -23) concat_9ab21b root.Std_k98ojb.List.Concat {}\n        getter(x: 607, y: 169, name: \"getter_e3f9e4\") getter_e3f9e4 = list_ea48ea\n        instance(x: -132, y: 145) length_9b0df2 root.Std_k98ojb.List.Length {}\n        getter(x: 679, y: -27, name: \"getter_45cbcc\") getter_45cbcc = list_ea48ea\n        instance(x: 436, y: -106) slice_start_d3bbae root.Std_k98ojb.List.Slice {}\n        getter(x: 257, y: -170, name: \"getter_3a2cbf\") getter_3a2cbf = rotate_by_9c0d6e\n        getter(x: 418, y: 279, name: \"getter_ba4b8e\") getter_ba4b8e = list_ea48ea\n\n        math_expression_13.result -> slice_end_c621eb.start\n        length_9b0df2.length -> math_expression_13.gen_2\n        rotate_by_9c0d6e -> math_expression_13.gen_1\n        getter_ba4b8e.value -> slice_start_d3bbae.list\n        length_9b0df2.length -> math_expression_13.gen_0\n        list_ea48ea -> length_9b0df2.list\n        slice_end_c621eb.end -> getter_a10c76.value\n        getter_3a2cbf.value -> rotate_by_9c0d6e\n        math_expression_13.result -> slice_start_d3bbae.start\n        list_ea48ea -> length_9b8b8d.list\n        length_9b8b8d.length -> getter_45cbcc.new_value\n        slice_end_c621eb.list -> getter_ba4b8e.value\n        slice_start_d3bbae.end -> getter_e3f9e4.new_value\n        list_ea48ea -> getter_a10c76.new_value\n        slice_start_d3bbae.result -> concat_9ab21b.left\n        slice_end_c621eb.result -> concat_9ab21b.right\n        list_b3f87a <- concat_9ab21b.result\n    }\n\n    \n\n    instance(x: -204, y: -25) rotate_list_ebe7d5 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array\") sum_array {\n        in(x: -436, y: -201, name: \"execute\") trigger() execute_7f5cb7\n        in(x: -416, y: -118, name: \"numbers\") property(List(Number)) numbers_b0b5a6\n\n        out(x: 993, y: -214, name: \"output\") property(Number) output_6ca4fa\n        out(x: 974, y: -414, name: \"continue\") trigger() continue_daa400\n\n        instance(x: 58, y: -319) sum_ffa25f root.Std_k98ojb.Iteration.Reduce {\n            handler: \"sum_handler_6b5eb1\"\n        }\n        instance(x: -269, y: -374) emptyList_f5e40d root.Std_k98ojb.List.Empty {}\n        getter(x: 634, y: -295, name: \"getter_a6caea\") getter_a6caea = sum\n        instance(x: -144, y: -26) reduceHandler_705e9d root.main.sum_handler {\n            in(x: -809, y: -36, name: \"value\") property(Number) value_eb20cb\n            in(x: -811, y: 74, name: \"index\") property(Number) index_0a75e5\n\n            out(x: 993, y: -214, name: \"output\") property(Number) output_ae40a7\n        } sum_handler_6b5eb1\n        getter(x: 993, y: -214, name: \"getter_e4ad9d\") getter_e4ad9d = value\n\n        instance(x: 104, y: 74) sumHandler_bfe8a1 root.main.sum_handler {}\n        numbers_b0b5a6 -> sum_ffa25f.items\n        emptyList_f5e40d.list -> sum_ffa25f.initialValue\n        execute_7f5cb7 -> sum_ffa25f.execute\n        value_eb20cb -> getter_e4ad9d.value\n        0 -> index_0a75e5\n        output_ae40a7 -> getter_a6caea.value\n        getter_e4ad9d.value -> sumHandler_bfe8a1.value_eb20cb\n        0 -> sumHandler_bfe8a1.index_0a75e5\n        continue_daa400 -> sum_ffa25f.continue\n        sum_ffa25f.result -> output_6ca4fa\n    }\n\n    \n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 245, y: -160, name: \"input\") property(Number) input_7d9f1c\n        in(x: 181, y: -343, name: \"execute\") trigger() execute_c9d2d7\n\n        out(x: 1715, y: -160, name: \"out\") property(Bool) out_f7e8b0\n        out(x: 1715, y: -234, name: \"continue\") trigger() continue_9cf118\n\n        instance(x: 246, y: -315) if_expression_a6d4b9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input <= 1 ? false : true\"\n        }\n        instance(x: 375, y: -341) generate_range_7a1ab2 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 602, y: -246) for_loop_e5f42a root.Std_k98ojb.Std.For {}\n        instance(x: 842, y: -363) expression_1ef7da root.Std_k98ojb.Math.Expression {\n            expression: \"input % i == 0\"\n        }\n        instance(x: 1039, y: -255) if_statement_b2e9d4 root.Std_k98ojb.Std.If {}\n        input_7d9f1c -> if_expression_a6d4b9.input\n        execute_c9d2d7 -> if_expression_a6d4b9.execute\n        2 -> generate_range_7a1ab2.from\n        input_7d9f1c -> generate_range_7a1ab2.to\n        for_loop_e5f42a.items -> generate_range_7a1ab2.list\n        if_expression_a6d4b9.result -> if_statement_b2e9d4.predicate\n        if_expression_a6d4b9.value -> if_statement_b2e9d4.value\n        for_loop_e5f42a.onItem -> if_statement_b2e9d4.execute\n        input_7d9f1c -> expression_1ef7da.gen_0\n        for_loop_e5f42a.item -> expression_1ef7da.gen_1\n        expression_1ef7da.result -> if_statement_b2e9d4.else\n        if_statement_b2e9d4.then -> continue_9cf118\n        for_loop_e5f42a.done -> continue_9cf118\n        if_statement_b2e9d4.value -> out_f7e8b0\n        execute_c9d2d7 -> for_loop_e5f42a.reset\n    }\n}"
            ]
        }
    }
]