[
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -285, y: -86, name: \"first\") property(Number) first_3af6ba\n        in(x: -285, y: 0, name: \"second\") property(Number) second_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 146, y: -96) expression_8166b0 root.Std_k98ojb.Math.Expression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        first_3af6ba -> expression_8166b0.a\n        second_3af6ba -> expression_8166b0.b\n        expression_8166b0.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_sign_ac7dfb root.main.opposite_Sign {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Find whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -200, y: -50, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 400, y: -50, name: \"output\") property(Bool) output_4d5e6f\n\n        instance(x: 100, y: -50) modulo_7f8g9h root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -50) equal_0a1b2c root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_7f8g9h.value\n        11 -> modulo_7f8g9h.divisor\n        modulo_7f8g9h.result -> equal_0a1b2c.left\n        0 -> equal_0a1b2c.right\n        equal_0a1b2c.result -> output_4d5e6f\n    }\n\n    \n\n    instance(x: 0, y: 0) is_divisible_by_11_3e4f5g root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 100, name: \"search\") property(String) search_0\n        in(x: -230, y: 200, name: \"replace\") property(String) replace_0\n\n        out(x: 530, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_characters_123456 root.main.replace_characters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -122, y: -81, name: \"list\") property(List) list_63c248\n\n        out(x: 656, y: -68, name: \"product\") property(Number) product_cbb7bd\n\n        instance(x: 94, y: -105) filter_unique root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 300, y: -105) reduce_product root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 200, y: -105) empty_list root.Std_k98ojb.List.Empty {}\n        \n        list_63c248 -> filter_unique.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n            in(x: -121, y: -37, name: \"index\") property(Number) index_8ee839\n\n            out(x: 333, y: -50, name: \"is_unique\") property(Bool) is_unique_7dd980\n\n            instance(x: 92, y: -22) contains_node root.Std_k98ojb.List.Contains {}\n            x_8ee839 -> contains_node.item\n            empty_list.list -> contains_node.list\n            contains_node.contains -> is_unique_7dd980\n        } -> filter_unique.handler\n\n        filter_unique.output_list -> reduce_product.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n\n            instance(x: 92, y: -22) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_node.first\n            x_8ee839 -> mul_node.second\n            mul_node.result -> result_7dd980\n        } -> reduce_product.reducer\n\n        1 -> reduce_product.initial\n        reduce_product.result -> product_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) product_unique_b9ff6b root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -152, name: \"list1\") property(List) list1_1f846b\n        in(x: -173, y: 13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"dissimilarList\") property(List) dissimilarList_0d40f1\n\n        instance(x: 133, y: -131) difference_201051 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 133, y: 0) difference_2b1051 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: -50) concat_3c1051 root.Std_k98ojb.List.Concat {}\n        list1_1f846b -> difference_201051.left\n        list2_c62075 -> difference_201051.right\n        list2_c62075 -> difference_2b1051.left\n        list1_1f846b -> difference_2b1051.right\n        difference_201051.difference -> concat_3c1051.list1\n        difference_2b1051.difference -> concat_3c1051.list2\n        concat_3c1051.list -> dissimilarList_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) dissimilar_elements_cbc0b6 root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: -154, name: \"list\") property(List) list_1f846b\n        in(x: -150, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(List) output_0d40f1\n\n        instance(x: 133, y: -131) length_201051 root.Std_k98ojb.List.Length {}\n        instance(x: 133, y: 50) modulo_201051 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 133, y: 200) sub_201051 root.Std_k98ojb.Math.Sub {}\n        instance(x: 133, y: 350) slice_201051 root.Std_k98ojb.List.Slice {}\n        instance(x: 133, y: 500) slice_2_201051 root.Std_k98ojb.List.Slice {}\n        instance(x: 133, y: 650) concat_201051 root.Std_k98ojb.List.Concat {}\n\n        list_1f846b -> length_201051.list\n        length_201051.length -> modulo_201051.value\n        n_c62075 -> modulo_201051.divisor\n        length_201051.length -> sub_201051.first\n        modulo_201051.result -> sub_201051.second\n        sub_201051.result -> slice_201051.start\n        list_1f846b -> slice_201051.list\n        slice_201051.slice -> concat_201051.left\n        0 -> slice_2_201051.start\n        sub_201051.result -> slice_2_201051.end\n        list_1f846b -> slice_2_201051.list\n        slice_2_201051.slice -> concat_201051.right\n        concat_201051.result -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_list_cbc0b6 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") array_sum {\n        in(x: -243, y: 86, name: \"array\") property(List) array_0c0609\n\n        out(x: 546, y: 63, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 88, y: 54) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        array_0c0609 -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: -272, y: 115) array_sum_6c92e0 root.main.array_sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check if the given integer is a prime number.\") is_prime {\n        in(x: -285, y: -86, name: \"number\") property(Number) number_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) lessthanorequal_1c7e6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 146, y: -96) mod_8166b0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 200, y: 100) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 400, y: 100) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 600, y: 100) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 800, y: 100) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1000, y: 100) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1200, y: 100) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1400, y: 100) greaterthan_80a119 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1600, y: 100) lessthanorequal_80a119 root.Std_k98ojb.Math.LessThanOrEqual {}\n        \n        number_3af6ba -> lessthanorequal_1c7e6.left\n        1 -> lessthanorequal_1c7e6.right\n        lessthanorequal_1c7e6.result -> not_80a119.input\n        not_80a119.result -> if_07b8c7.input\n        if_07b8c7.then -> output_c7097f\n        false -> output_c7097f\n        if_07b8c7.else -> generaterange_038fce.trigger\n        2 -> generaterange_038fce.from\n        number_3af6ba -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> mod_8166b0.value\n        number_3af6ba -> mod_8166b0.divisor\n        mod_8166b0.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> if_e19a62.input\n        if_e19a62.then -> output_c7097f\n        false -> output_c7097f\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> output_c7097f\n        true -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_prime_ac7dfb root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -285, y: -86, name: \"first\") property(Number) first_3af6ba\n        in(x: -285, y: 0, name: \"second\") property(Number) second_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 146, y: -96) expression_8166b0 root.Std_k98ojb.Math.Expression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        first_3af6ba -> expression_8166b0.a\n        second_3af6ba -> expression_8166b0.b\n        expression_8166b0.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_sign_ac7dfb root.main.opposite_Sign {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Find whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -200, y: -50, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 400, y: -50, name: \"output\") property(Bool) output_4d5e6f\n\n        instance(x: 100, y: -50) modulo_7g8h9i root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -50) equal_0j1k2l root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_7g8h9i.value\n        11 -> modulo_7g8h9i.divisor\n        modulo_7g8h9i.result -> equal_0j1k2l.left\n        0 -> equal_0j1k2l.right\n        equal_0j1k2l.result -> output_4d5e6f\n    }\n\n    \n\n    instance(x: 0, y: 0) is_divisible_by_11_mn3opq root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replaces characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 530, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_characters_123abc root.main.replace_characters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") unique_product {\n        in(x: -122, y: -81, name: \"list\") property(List) list_63c248\n\n        out(x: 656, y: -68, name: \"product\") property(Number) product_cbb7bd\n\n        instance(x: 94, y: -105) filter_unique root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 94, y: -205) reduce_product root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 94, y: -305) list_empty root.Std_k98ojb.List.Empty {}\n        \n        list_63c248 -> filter_unique.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n            out(x: 333, y: -50, name: \"is_unique\") property(Bool) is_unique_7dd980\n\n            instance(x: 92, y: -22) contains_node root.Std_k98ojb.List.Contains {}\n            list_empty.list -> contains_node.list\n            x_8ee839 -> contains_node.item\n            contains_node.contains -> is_unique_7dd980\n        } -> filter_unique.handler\n\n        filter_unique.output_list -> reduce_product.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: 333, y: -50, name: \"x\") property(Number) x_7dd980\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n\n            instance(x: 92, y: -22) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_node.first\n            x_7dd980 -> mul_node.second\n            mul_node.result -> result_7dd980\n        } -> reduce_product.reducer\n\n        1 -> reduce_product.initial\n        reduce_product.result -> product_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) unique_product_b9ff6b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -152, name: \"list1\") property(List) list1_1f846b\n        in(x: -173, y: 13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 774, y: -70, name: \"dissimilarList\") property(List) dissimilarList_0d40f1\n\n        instance(x: 133, y: -131) difference_201051 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 133, y: 0) difference_2b1051 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: -70) concat_3f3ee6 root.Std_k98ojb.List.Concat {}\n        list1_1f846b -> difference_201051.left\n        list2_c62075 -> difference_201051.right\n        list2_c62075 -> difference_2b1051.left\n        list1_1f846b -> difference_2b1051.right\n        difference_201051.difference -> concat_3f3ee6.list1\n        difference_2b1051.difference -> concat_3f3ee6.list2\n        concat_3f3ee6.list -> dissimilarList_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) dissimilar_elements_cbc0b6 root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: -154, name: \"list\") property(List) list_1f846b\n        in(x: -150, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(List) output_0d40f1\n\n        instance(x: 133, y: -131) length_201051 root.Std_k98ojb.List.Length {}\n        instance(x: 133, y: -31) modulo_201051 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 133, y: 69) sub_201051 root.Std_k98ojb.Math.Sub {}\n        instance(x: 133, y: 169) slice_201051 root.Std_k98ojb.List.Slice {}\n        instance(x: 133, y: 269) slice_2_201051 root.Std_k98ojb.List.Slice {}\n        instance(x: 133, y: 369) concat_201051 root.Std_k98ojb.List.Concat {}\n        \n        list_1f846b -> length_201051.list\n        length_201051.length -> modulo_201051.value\n        n_c62075 -> modulo_201051.divisor\n        length_201051.length -> sub_201051.first\n        modulo_201051.result -> sub_201051.second\n        sub_201051.result -> slice_201051.start\n        list_1f846b -> slice_201051.list\n        slice_201051.slice -> concat_201051.left\n        0 -> slice_2_201051.start\n        sub_201051.result -> slice_2_201051.end\n        list_1f846b -> slice_2_201051.list\n        slice_2_201051.slice -> concat_201051.right\n        concat_201051.result -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_list_cbc0b6 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") array_sum {\n        in(x: -208, y: 42, name: \"array\") property(List) array_5d2f8a\n\n        out(x: 551, y: 50, name: \"sum\") property(Number) sum_3a1f7b\n\n        instance(x: 206, y: 47) reduce_1a2b3c root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_1a2b3c.initialValue\n        array_5d2f8a -> reduce_1a2b3c.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1c750f1 -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_1a2b3c.reducer\n        reduce_1a2b3c.output -> sum_3a1f7b\n    }\n\n    \n\n    instance(x: -272, y: 115) array_sum_6c92e0 root.main.array_sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check if the given integer is a prime number.\") is_prime {\n        in(x: -285, y: -86, name: \"number\") property(Number) number_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -82, y: 155) lessthanorequal_6e87f2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 201, y: 62) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 360, y: -95) expression_b5dba9 root.Std_k98ojb.Math.Expression {\n            expression: \"number % i == 0\"\n        }\n        instance(x: 251, y: 257) generaterange_82d404 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 532, y: 135) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1121, y: -54) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"i * i <= number\"\n        }\n        2 -> generaterange_82d404.from\n        number_3af6ba -> generaterange_82d404.to\n        generaterange_82d404.list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b5dba9.gen_1\n        number_3af6ba -> expression_b5dba9.gen_0\n        expression_b5dba9.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> if_e19a62.execute\n        if_07b8c7.then -> not_80a119.input\n        not_80a119.result -> output_c7097f\n        if_e19a62.then -> for_8cb3f6.next\n        if_e19a62.else -> not_80a119.input\n        for_8cb3f6.done -> not_80a119.input\n        for_8cb3f6.index -> expression_9fba8c.gen_0\n        for_8cb3f6.item -> expression_9fba8c.gen_1\n        expression_9fba8c.result -> if_e19a62.predicate\n        number_3af6ba -> lessthanorequal_6e87f2.left\n        1 -> lessthanorequal_6e87f2.right\n        lessthanorequal_6e87f2.result -> if_07b8c7.predicate\n    }\n\n    \n\n    instance(x: -84, y: 59) is_prime_ac7dfb root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -285, y: -86, name: \"first\") property(Number) first_3af6ba\n        in(x: -285, y: 0, name: \"second\") property(Number) second_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 146, y: -96) expression_8166b0 root.Std_k98ojb.Math.Expression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        first_3af6ba -> expression_8166b0.a\n        second_3af6ba -> expression_8166b0.b\n        expression_8166b0.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_sign_ac7dfb root.main.opposite_Sign {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Find whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -100, y: -50, name: \"number\") property(Number) number_123abc\n\n        out(x: 400, y: -50, name: \"output\") property(Bool) output_def456\n\n        instance(x: 100, y: -50) modulo_11_check root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -50) equal_zero_check root.Std_k98ojb.Logic.Equal {}\n\n        number_123abc -> modulo_11_check.value\n        11 -> modulo_11_check.divisor\n        modulo_11_check.result -> equal_zero_check.left\n        0 -> equal_zero_check.right\n        equal_zero_check.result -> output_def456\n    }\n\n    \n\n    instance(x: -50, y: 100) is_divisible_by_11_instance root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replaces characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 530, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) replace_1a2b3c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1a2b3c.input\n        search_0 -> replace_1a2b3c.search\n        replace_0 -> replace_1a2b3c.replace\n        replace_1a2b3c.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_characters_instance root.main.replace_characters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -122, y: -81, name: \"list\") property(List) list_63c248\n\n        out(x: 656, y: -68, name: \"product\") property(Number) product_cbb7bd\n\n        instance(x: 94, y: -105) filter_unique root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 300, y: -105) reduce_product root.Std_k98ojb.Iteration.Reduce {}\n        \n        list_63c248 -> filter_unique.items\n        func() {\n            in(x: -121, y: -37, name: \"item\") property(Number) item_8ee839\n            out(x: 333, y: -50, name: \"isUnique\") property(Bool) isUnique_7dd980\n\n            instance(x: 92, y: -22) contains_check root.Std_k98ojb.List.Contains {}\n            list_63c248 -> contains_check.list\n            item_8ee839 -> contains_check.item\n            contains_check.contains -> isUnique_7dd980\n        } -> filter_unique.handler\n\n        filter_unique.output_list -> reduce_product.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: 100, y: -37, name: \"item\") property(Number) item_8ee839\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n\n            instance(x: 92, y: -22) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_node.first\n            item_8ee839 -> mul_node.second\n            mul_node.result -> result_7dd980\n        } -> reduce_product.reducer\n\n        1 -> reduce_product.initial\n        reduce_product.result -> product_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) product_unique_b9ff6b root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -152, name: \"list1\") property(List) list1_1f846b\n        in(x: -173, y: 16, name: \"list2\") property(List) list2_c62075\n\n        out(x: 733, y: -67, name: \"dissimilarList\") property(List) dissimilarList_0d40f1\n\n        instance(x: 161, y: -130) difference_1_201051 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 161, y: 50) difference_2_201052 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 461, y: -40) concat_201053 root.Std_k98ojb.List.Concat {}\n        \n        list1_1f846b -> difference_1_201051.left\n        list2_c62075 -> difference_1_201051.right\n        list2_c62075 -> difference_2_201052.left\n        list1_1f846b -> difference_2_201052.right\n        \n        difference_1_201051.difference -> concat_201053.list1\n        difference_2_201052.difference -> concat_201053.list2\n        \n        concat_201053.list -> dissimilarList_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) dissimilar_elements_cbc0b6 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: -154, name: \"list\") property(List) list_1f846b\n        in(x: -150, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(List) output_0d40f1\n\n        instance(x: 133, y: -131) length_201051 root.Std_k98ojb.List.Length {}\n        instance(x: 133, y: -31) modulo_201051 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 133, y: 69) sub_201051 root.Std_k98ojb.Math.Sub {}\n        instance(x: 133, y: 169) slice_201051 root.Std_k98ojb.List.Slice {}\n        instance(x: 133, y: 269) slice_301051 root.Std_k98ojb.List.Slice {}\n        instance(x: 333, y: 169) concat_201051 root.Std_k98ojb.List.Concat {}\n        \n        list_1f846b -> length_201051.list\n        length_201051.length -> modulo_201051.value\n        n_c62075 -> modulo_201051.divisor\n        length_201051.length -> sub_201051.first\n        modulo_201051.result -> sub_201051.second\n        sub_201051.result -> slice_201051.start\n        list_1f846b -> slice_201051.list\n        list_1f846b -> slice_301051.list\n        slice_201051.slice -> concat_201051.left\n        slice_301051.slice -> concat_201051.right\n        0 -> slice_301051.start\n        sub_201051.result -> slice_301051.end\n        concat_201051.result -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_list_cbc0b6 root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -208, y: 42, name: \"array\") property(List) array_5f2d8a\n\n        out(x: 551, y: 42, name: \"sum\") property(Number) sum_3a8f7b\n\n        instance(x: 206, y: 42) reduce_1a2b3c root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_1a2b3c.initialValue\n        array_5f2d8a -> reduce_1a2b3c.items\n        reduce_1a2b3c.output -> sum_3a8f7b\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1c2d3e\n            in(x: -177, y: 22, name: \"current\") property(Number) current_4f5g6h\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_7i8j9k\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1c2d3e -> add_0f3be6.first\n            current_4f5g6h -> add_0f3be6.second\n            add_0f3be6.result -> sum_7i8j9k\n        } -> reduce_1a2b3c.reducer\n    }\n\n    \n\n    instance(x: -97, y: -68) sum_array_49c6ac root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check if the given integer is a prime number.\") is_prime {\n        in(x: -285, y: -86, name: \"number\") property(Number) number_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -82, y: 155) lessthanorequal_6e87f2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 201, y: 62) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 242) generaterange_82d404 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 532, y: 135) expression_b5dba9 root.Std_k98ojb.Math.Expression {\n            expression: \"number % i == 0\"\n        }\n        instance(x: 251, y: 257) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 866, y: 132) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1088, y: -256) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"number <= 1\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"i * i <= number\"\n        }\n        2 -> generaterange_82d404.from\n        number_3af6ba -> generaterange_82d404.to\n        generaterange_82d404.list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b5dba9.gen_1\n        number_3af6ba -> expression_b5dba9.gen_0\n        expression_b5dba9.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> if_e19a62.execute\n        if_07b8c7.else -> for_8cb3f6.next\n        if_e19a62.else -> not_80a119.input\n        if_e19a62.then -> not_80a119.input\n        not_80a119.output -> output_c7097f\n        expression_b720d7.result -> if_e19a62.predicate\n        number_3af6ba -> expression_b720d7.gen_0\n        for_8cb3f6.done -> not_80a119.input\n        number_3af6ba -> expression_9fba8c.gen_0\n        for_8cb3f6.index -> expression_9fba8c.gen_1\n        expression_9fba8c.result -> lessthanorequal_6e87f2.left\n        number_3af6ba -> lessthanorequal_6e87f2.right\n        lessthanorequal_6e87f2.result -> if_07b8c7.predicate\n    }\n\n    \n\n    instance(x: -84, y: 59) is_prime_ac7dfb root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -384, y: -106, name: \"first\") property(Number) first_4a5f2b\n        in(x: -384, y: 56, name: \"second\") property(Number) second_3b6d4c\n\n        out(x: 452, y: -25, name: \"output\") property(Bool) output_5f7c3d\n\n        instance(x: -105, y: -24) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 187, y: -25) lessthan_3e8f4a root.Std_k98ojb.Math.LessThanOrEqual {}\n        first_4a5f2b -> mul_2f9d09.first\n        second_3b6d4c -> mul_2f9d09.second\n        mul_2f9d09.result -> lessthan_3e8f4a.left\n        0 -> lessthan_3e8f4a.right\n        lessthan_3e8f4a.result -> output_5f7c3d\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_sign_9b7f3e root.main.opposite_Sign {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Find whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -180, y: -70, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 360, y: -70, name: \"output\") property(Bool) output_4d5e6f\n\n        instance(x: 0, y: -70) modulo_7f8g9h root.Std_k98ojb.Math.Modulo {}\n        instance(x: 180, y: -70) equal_0a1b2c root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_7f8g9h.value\n        11 -> modulo_7f8g9h.divisor\n        modulo_7f8g9h.result -> equal_0a1b2c.left\n        0 -> equal_0a1b2c.right\n        equal_0a1b2c.result -> output_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: 0) is_divisible_by_11_3e4f5g root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replaces characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 530, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) replace_1a2b3c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1a2b3c.input\n        search_0 -> replace_1a2b3c.search\n        replace_0 -> replace_1a2b3c.replace\n        replace_1a2b3c.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_characters_4d5e6f root.main.replace_characters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -122, y: -81, name: \"list\") property(List) list_63c248\n\n        out(x: 656, y: -68, name: \"product\") property(Number) product_cbb7bd\n\n        instance(x: 94, y: -105) filter_unique root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 350, y: -105) reduce_product root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 200, y: -105) list_empty root.Std_k98ojb.List.Empty {}\n        \n        list_63c248 -> filter_unique.items\n        func() {\n            in(x: -121, y: -37, name: \"item\") property(Number) item_8ee839\n            out(x: 333, y: -50, name: \"isUnique\") property(Bool) isUnique_7dd980\n\n            instance(x: 92, y: -22) contains_check root.Std_k98ojb.List.Contains {}\n            list_empty.list -> contains_check.list\n            item_8ee839 -> contains_check.item\n            contains_check.result -> isUnique_7dd980\n        } -> filter_unique.handler\n\n        filter_unique.output_list -> reduce_product.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: 200, y: -37, name: \"item\") property(Number) item_8ee839\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n\n            instance(x: 92, y: -22) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_node.first\n            item_8ee839 -> mul_node.second\n            mul_node.result -> result_7dd980\n        } -> reduce_product.reducer\n\n        1 -> reduce_product.initial\n        reduce_product.result -> product_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) product_unique_b9ff6b root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -134, name: \"list1\") property(List) list1_3a2f4b\n        in(x: -173, y: 20, name: \"list2\") property(List) list2_4b3f5c\n\n        out(x: 648, y: -60, name: \"dissimilar\") property(List) dissimilar_5c3f6d\n\n        instance(x: 104, y: -130) difference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 104, y: 20) difference_4d5e6f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 380, y: -60) concat_7e8f9g root.Std_k98ojb.List.Concat {}\n        list1_3a2f4b -> difference_1a2b3c.left\n        list2_4b3f5c -> difference_1a2b3c.right\n        list2_4b3f5c -> difference_4d5e6f.left\n        list1_3a2f4b -> difference_4d5e6f.right\n        difference_1a2b3c.difference -> concat_7e8f9g.first\n        difference_4d5e6f.difference -> concat_7e8f9g.second\n        concat_7e8f9g.list -> dissimilar_5c3f6d\n    }\n\n    \n\n    instance(x: 90, y: -70) dissimilar_elements_9a8b7c root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: -151, name: \"list\") property(List) list_1f3a2b\n        in(x: -140, y: -36, name: \"n\") property(Number) n_3c2b4d\n\n        out(x: 1085, y: -70, name: \"output\") property(List) output_2d4b1f\n\n        instance(x: 180, y: -122) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 413, y: -115) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 645, y: -145) slice_1_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 645, y: -20) slice_2_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 878, y: -70) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_1f3a2b -> length_4b8927.list\n        n_3c2b4d -> modulo_4e8c54.value\n        length_4b8927.length -> modulo_4e8c54.divisor\n        list_1f3a2b -> slice_1_3f3ee6.list\n        list_1f3a2b -> slice_2_76ecda.list\n        modulo_4e8c54.result -> slice_1_3f3ee6.start\n        modulo_4e8c54.result -> slice_2_76ecda.end\n        -1 -> slice_1_3f3ee6.end\n        0 -> slice_2_76ecda.start\n        slice_1_3f3ee6.slice -> concat_0234d2.left\n        slice_2_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_2d4b1f\n    }\n\n    \n\n    instance(x: 10, y: -177) rotate_list_7f3d5a root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") array_sum {\n        in(x: -234, y: 42, name: \"array\") property(List) array_1a2b3c\n\n        out(x: 510, y: 50, name: \"sum\") property(Number) sum_4d5e6f\n\n        instance(x: 130, y: 50) reduce_7f8e9d root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_7f8e9d.initialValue\n        array_1a2b3c -> reduce_7f8e9d.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_123abc\n            in(x: -177, y: 22, name: \"current\") property(Number) current_456def\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_789ghi\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_123abc -> add_0f3be6.first\n            current_456def -> add_0f3be6.second\n            add_0f3be6.result -> sum_789ghi\n        } -> reduce_7f8e9d.reducer\n        reduce_7f8e9d.output -> sum_4d5e6f\n    }\n\n    \n\n    instance(x: -272, y: 115) array_sum_6c92e0 root.main.array_sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check if the given integer is a prime number.\") is_prime {\n        in(x: -375, y: -86, name: \"number\") property(Number) number_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) lessthanorequal_1c7e6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 146, y: -96) mod_8166b0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 200, y: 100) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 400, y: 100) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 600, y: 100) not_07b8c7 root.Std_k98ojb.Logic.Not {}\n        instance(x: 800, y: 100) if_07b8c7_2 root.Std_k98ojb.Std.If {}\n        instance(x: 1000, y: 100) continue_8ba06b root.Std_k98ojb.Std.If {}\n\n        2 -> lessthanorequal_1c7e6.right\n        number_3af6ba -> lessthanorequal_1c7e6.left\n        lessthanorequal_1c7e6.result -> not_07b8c7.input\n        not_07b8c7.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_8ba06b.execute\n        if_07b8c7.else -> for_8cb3f6.reset\n\n        2 -> for_8cb3f6.items\n        number_3af6ba -> for_8cb3f6.items\n        for_8cb3f6.item -> mod_8166b0.value\n        number_3af6ba -> mod_8166b0.divisor\n        mod_8166b0.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> if_07b8c7_2.predicate\n        if_07b8c7_2.then -> continue_8ba06b.execute\n        if_07b8c7_2.else -> for_8cb3f6.next\n\n        for_8cb3f6.done -> output_c7097f\n        continue_8ba06b.value -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_prime_ac7dfb root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -261, y: -123, name: \"first\") property(Number) first_2f9d7a\n        in(x: -263, y: -35, name: \"second\") property(Number) second_8f9a5c\n\n        out(x: 452, y: -78, name: \"output\") property(Bool) output_3b7d9f\n\n        instance(x: 40, y: -78) lessthan_9f8a6b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 258, y: -77) not_1f7b9d root.Std_k98ojb.Logic.Not {}\n        instance(x: 149, y: -78) expression_7d8b9f root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        first_2f9d7a -> expression_7d8b9f.a\n        second_8f9a5c -> expression_7d8b9f.b\n        expression_7d8b9f.result -> lessthan_9f8a6b.left\n        0 -> lessthan_9f8a6b.right\n        lessthan_9f8a6b.result -> not_1f7b9d.input\n        not_1f7b9d.result -> output_3b7d9f\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_sign_ac7dfb root.main.opposite_Sign {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Find whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -78, y: -18, name: \"number\") property(Number) number_1f3d9c\n\n        out(x: 456, y: -22, name: \"output\") property(Bool) output_3b2f7a\n\n        instance(x: 142, y: -19) modulo_4a7b8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 321, y: -21) equal_9c7b4f root.Std_k98ojb.Logic.Equal {}\n        number_1f3d9c -> modulo_4a7b8c.value\n        11 -> modulo_4a7b8c.divisor\n        modulo_4a7b8c.result -> equal_9c7b4f.left\n        0 -> equal_9c7b4f.right\n        equal_9c7b4f.result -> output_3b2f7a\n    }\n\n    \n\n    instance(x: 34, y: 11) is_divisible_by_11_2f9e8d root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replaces characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 530, y: 25, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 25) replace_9f4c8b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9f4c8b.input\n        search_0 -> replace_9f4c8b.search\n        replace_0 -> replace_9f4c8b.replace\n        replace_9f4c8b.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceCharacters_e54b7f root.main.replace_characters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -182, y: -147, name: \"list\") property(List) list_2d9f9c\n\n        out(x: 746, y: -142, name: \"product\") property(Number) product_1c5d3e\n\n        instance(x: 91, y: -146) reduce_1c5b9a root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -47, y: -272) filter_8c3f4e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -366, y: -141) emptylist_1d5f6e root.Std_k98ojb.List.Empty {}\n        instance(x: -47, y: -48) add_7c5b8d root.Std_k98ojb.List.Add {}\n        instance(x: -367, y: -271) notcontains_3d7c8f root.Std_k98ojb.Logic.Not {}\n        instance(x: -186, y: -269) contains_5d7f9e root.Std_k98ojb.List.Contains {}\n        instance(x: -47, y: -172) map_8d7f6c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 91, y: -51) mul_1d7f9c root.Std_k98ojb.Math.Mul {}\n        list_2d9f9c -> filter_8c3f4e.items\n        emptylist_1d5f6e.list -> filter_8c3f4e.handler.context\n        filter_8c3f4e.output_list -> map_8d7f6c.items\n        filter_8c3f4e.handler {\n            in(x: -185, y: -207, name: \"item\") property(Number) item_3d7c8f\n            in(x: -185, y: -147, name: \"context\") property(List) context_5d7f9e\n            out(x: 94, y: -207, name: \"result\") property(Bool) result_8c3f4e\n            out(x: 94, y: -147, name: \"new_context\") property(List) new_context_1d5f6e\n            context_5d7f9e -> contains_5d7f9e.list\n            item_3d7c8f -> contains_5d7f9e.item\n            contains_5d7f9e.result -> notcontains_3d7c8f.input\n            notcontains_3d7c8f.result -> result_8c3f4e\n            context_5d7f9e -> add_7c5b8d.list\n            item_3d7c8f -> add_7c5b8d.item\n            add_7c5b8d.listWithItem -> new_context_1d5f6e\n        }\n        map_8d7f6c.handler {\n            in(x: -186, y: -48, name: \"item\") property(Number) item_1d7f9c\n            out(x: 94, y: -48, name: \"mapped\") property(Number) mapped_7c5b8d\n            item_1d7f9c -> mapped_7c5b8d\n        }\n        map_8d7f6c.output_list -> reduce_1c5b9a.items\n        1 -> reduce_1c5b9a.handler.accumulated\n        reduce_1c5b9a.handler {\n            in(x: -47, y: -51, name: \"accumulated\") property(Number) accumulated_1c5d3e\n            in(x: -47, y: -146, name: \"item\") property(Number) item_1c5b9a\n            out(x: 94, y: -51, name: \"result\") property(Number) result_1d7f9c\n            accumulated_1c5d3e -> mul_1d7f9c.first\n            item_1c5b9a -> mul_1d7f9c.second\n            mul_1d7f9c.result -> result_1d7f9c\n        }\n        reduce_1c5b9a.result -> product_1c5d3e\n    }\n\n    \n\n    instance(x: 123, y: 23) product_unique_3d7c8f root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -158, name: \"list1\") property(List) list1_2d6a3e\n        in(x: -170, y: 20, name: \"list2\") property(List) list2_1c3e5a\n\n        out(x: 648, y: -78, name: \"result\") property(List) result_4b7d2f\n\n        instance(x: 144, y: -164) difference_3e5a2d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 146, y: 19) difference_5f4c2e root.Std_k98ojb.Sets.Difference {}\n        instance(x: 396, y: -71) concat_7d4e3f root.Std_k98ojb.List.Concat {}\n        list1_2d6a3e -> difference_3e5a2d.left\n        list2_1c3e5a -> difference_3e5a2d.right\n        list2_1c3e5a -> difference_5f4c2e.left\n        list1_2d6a3e -> difference_5f4c2e.right\n        difference_3e5a2d.difference -> concat_7d4e3f.list1\n        difference_5f4c2e.difference -> concat_7d4e3f.list2\n        concat_7d4e3f.list -> result_4b7d2f\n    }\n\n    \n\n    instance(x: 100, y: -71) dissimilar_elements_5a7f4c root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: -171, name: \"list\") property(List) list_1f6b2b\n        in(x: -153, y: -50, name: \"n\") property(Number) n_3f2c8d\n\n        out(x: 1083, y: -111, name: \"output\") property(List) output_1e9b3d\n\n        instance(x: 216, y: -126) length_7c7d7e root.Std_k98ojb.List.Length {}\n        instance(x: 463, y: -110) modulo_1f7d3b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 725, y: -123) slice_0f8b3e root.Std_k98ojb.List.Slice {}\n        instance(x: 727, y: 60) slice_2f7c3e root.Std_k98ojb.List.Slice {}\n        instance(x: 930, y: -41) concat_3d7f3b root.Std_k98ojb.List.Concat {}\n        list_1f6b2b -> length_7c7d7e.list\n        n_3f2c8d -> modulo_1f7d3b.value\n        length_7c7d7e.length -> modulo_1f7d3b.divisor\n        list_1f6b2b -> slice_0f8b3e.list\n        modulo_1f7d3b.result -> slice_0f8b3e.start\n        -1 -> slice_0f8b3e.end\n        list_1f6b2b -> slice_2f7c3e.list\n        0 -> slice_2f7c3e.start\n        modulo_1f7d3b.result -> slice_2f7c3e.end\n        slice_0f8b3e.slice -> concat_3d7f3b.left\n        slice_2f7c3e.slice -> concat_3d7f3b.right\n        concat_3d7f3b.result -> output_1e9b3d\n    }\n\n    \n\n    instance(x: 52, y: -66) rotate_list_4f9d3c root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -208, y: 42, name: \"array\") property(List) array_5d2f8a\n\n        out(x: 599, y: 50, name: \"sum\") property(Number) sum_8a3d1b\n\n        instance(x: 206, y: 47) reduce_3e9a12 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3e9a12.initialValue\n        array_5d2f8a -> reduce_3e9a12.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1f2c3d\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_1f2c3d -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3e9a12.reducer\n        reduce_3e9a12.output -> sum_8a3d1b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_array_6c92e0 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") is_prime {\n        in(x: -398, y: -86, name: \"number\") property(Number) number_3e6f9a\n\n        out(x: 857, y: 19, name: \"output\") property(Bool) output_2b4f7d\n\n        instance(x: 42, y: 29) generaterange_3f6a9c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 271, y: -14) filter_8b9f0b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 551, y: 18) isempty_7f6b3d root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 114, y: -234) lessthanorequal_0c7d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 316, y: -222) modulo_1c8f9e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 580, y: -216) equal_6e5b2a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 720, y: -91) if_4b7a9d root.Std_k98ojb.Std.If {}\n        2 -> generaterange_3f6a9c.from\n        number_3e6f9a -> generaterange_3f6a9c.to\n        1 -> generaterange_3f6a9c.to\n        generaterange_3f6a9c.list -> filter_8b9f0b.items\n        filter_8b9f0b.output_list -> isempty_7f6b3d.list\n        isempty_7f6b3d.isEmpty -> output_2b4f7d\n        number_3e6f9a -> lessthanorequal_0c7d8f.left\n        1 -> lessthanorequal_0c7d8f.right\n        lessthanorequal_0c7d8f.result -> if_4b7a9d.predicate\n        if_4b7a9d.then -> output_2b4f7d\n        if_4b7a9d.else -> filter_8b9f0b.handler\n        func() {\n            in(x: -67, y: 26, name: \"item\") property(Number) item_7e6b3d\n\n            out(x: 269, y: 22, name: \"out\") property(Bool) out_9b8f7d\n\n            instance(x: 104, y: 22) equal_6e5b2a root.Std_k98ojb.Logic.Equal {}\n            instance(x: 92, y: 126) modulo_1c8f9e root.Std_k98ojb.Math.Modulo {}\n            number_3e6f9a -> modulo_1c8f9e.value\n            item_7e6b3d -> modulo_1c8f9e.divisor\n            modulo_1c8f9e.result -> equal_6e5b2a.left\n            0 -> equal_6e5b2a.right\n            equal_6e5b2a.result -> out_9b8f7d\n        } -> filter_8b9f0b.handler\n    }\n\n    \n\n    instance(x: -105, y: 126) is_prime_5f9d7b root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -593, y: -123, name: \"first\") property(Number) first_2fef39\n        in(x: -591, y: 91, name: \"second\") property(Number) second_5b8f9a\n\n        out(x: 653, y: -15, name: \"output\") property(Bool) output_6c3e7d\n\n        instance(x: -168, y: -15) expression_b1f2a9 root.Std_k98ojb.Math.Expression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        first_2fef39 -> expression_b1f2a9.a\n        second_5b8f9a -> expression_b1f2a9.b\n        expression_b1f2a9.result -> output_6c3e7d\n    }\n\n    \n\n    instance(x: -263, y: 120) opposite_sign_13e4b5 root.main.opposite_Sign {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Find whether a number is divisible by 11.\") divisible_by_11 {\n        in(x: -100, y: -50, name: \"number\") property(Number) number_0a1b2c\n\n        out(x: 400, y: -50, name: \"output\") property(Bool) output_3d4e5f\n\n        instance(x: 100, y: -50) modulo_5f6g7h root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -50) equal_8i9j0k root.Std_k98ojb.Logic.Equal {}\n\n        number_0a1b2c -> modulo_5f6g7h.value\n        11 -> modulo_5f6g7h.divisor\n        modulo_5f6g7h.result -> equal_8i9j0k.left\n        0 -> equal_8i9j0k.right\n        equal_8i9j0k.result -> output_3d4e5f\n    }\n\n    \n\n    instance(x: 0, y: 0) divisible_by_11_lmn123 root.main.divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replaces characters in a string.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 530, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }\n\n    \n\n    instance(x: 200, y: 50) replace_chars_935476 root.main.replace_chars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -182, y: -147, name: \"list\") property(List) list_2d9f9c\n\n        out(x: 746, y: -142, name: \"product\") property(Number) product_d1c5ec\n\n        instance(x: 126, y: -158) unique_3b1c9a root.Std_k98ojb.List.Concat {}\n        instance(x: 346, y: -160) reduce_8c9b0c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 576, y: -160) mul_4d5f1e root.Std_k98ojb.Math.Mul {}\n        unique_3b1c9a.list -> reduce_8c9b0c.items\n        reduce_8c9b0c.result -> product_d1c5ec\n        func() {\n            in(x: -120, y: 37, name: \"acc\") property(Number) acc_8d4a23\n            in(x: -119, y: 96, name: \"num\") property(Number) num_9f4e5b\n\n            out(x: 226, y: 67, name: \"\") property(Number) _8baf3c\n\n            instance(x: 79, y: 70) mul_9a8d42 root.Std_k98ojb.Math.Mul {}\n            acc_8d4a23 -> mul_9a8d42.first\n            num_9f4e5b -> mul_9a8d42.second\n            mul_9a8d42.result -> _8baf3c\n        } -> reduce_8c9b0c.reducer\n        1 -> reduce_8c9b0c.initial\n        list_2d9f9c -> unique_3b1c9a.left\n        [] -> unique_3b1c9a.right\n    }\n\n    \n\n    instance(x: 101, y: -67) product_unique_496e5e root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -158, name: \"list1\") property(List) list1_2d6a3a\n        in(x: -170, y: 20, name: \"list2\") property(List) list2_1c3e5e\n\n        out(x: 648, y: -78, name: \"result\") property(List) result_4d9d2f\n\n        instance(x: 144, y: -88) diff_3e5a3d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 146, y: 40) diff_63e4f2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 396, y: -28) concat_5d4b4b root.Std_k98ojb.List.Concat {}\n        list1_2d6a3a -> diff_3e5a3d.left\n        list2_1c3e5e -> diff_3e5a3d.right\n        list2_1c3e5e -> diff_63e4f2.left\n        list1_2d6a3a -> diff_63e4f2.right\n        diff_3e5a3d.difference -> concat_5d4b4b.first\n        diff_63e4f2.difference -> concat_5d4b4b.second\n        concat_5d4b4b.list -> result_4d9d2f\n    }\n\n    \n\n    instance(x: -101, y: -38) dissimilar_elements_1ab3e3 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -145, y: -59, name: \"list\") property(List) list_1e6f2b\n        in(x: -157, y: 50, name: \"positions\") property(Number) positions_3f2c8f\n\n        out(x: 965, y: -6, name: \"output\") property(List) output_5e1a8b\n\n        instance(x: 263, y: -128) length_2c4c0c root.Std_k98ojb.List.Length {}\n        instance(x: 519, y: -66) modulo_8b2e9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 719, y: -139) slice_7b6d2c root.Std_k98ojb.List.Slice {}\n        instance(x: 717, y: 63) slice_93e3b1 root.Std_k98ojb.List.Slice {}\n        instance(x: 886, y: -36) concat_0e984b root.Std_k98ojb.List.Concat {}\n        list_1e6f2b -> length_2c4c0c.list\n        positions_3f2c8f -> modulo_8b2e9d.value\n        length_2c4c0c.length -> modulo_8b2e9d.divisor\n        list_1e6f2b -> slice_7b6d2c.list\n        list_1e6f2b -> slice_93e3b1.list\n        modulo_8b2e9d.result -> slice_93e3b1.start\n        0 -> slice_93e3b1.end\n        modulo_8b2e9d.result -> slice_7b6d2c.end\n        -1 -> slice_7b6d2c.start\n        slice_93e3b1.slice -> concat_0e984b.left\n        slice_7b6d2c.slice -> concat_0e984b.right\n        concat_0e984b.result -> output_5e1a8b\n    }\n\n    \n\n    instance(x: 30, y: 16) rotate_right_8e3f6b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -208, y: 42, name: \"list\") property(List) list_d5f2a8\n\n        out(x: 556, y: 20, name: \"sum\") property(Number) sum_3b2f42\n\n        instance(x: 230, y: 38) reduce_5e3f1a root.Std_k98ojb.Iteration.Reduce {}\n        list_d5f2a8 -> reduce_5e3f1a.items\n        0 -> reduce_5e3f1a.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1f2f3b\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3e11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_1f2f3b -> add_8974a2.first\n            current_3e11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_5e3f1a.reducer\n        reduce_5e3f1a.output -> sum_3b2f42\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_array_7c92e0 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check if the given integer is a prime number.\") is_prime {\n        in(x: -398, y: -167, name: \"number\") property(Number) number_d3e6f9\n\n        out(x: 742, y: -140, name: \"output\") property(Bool) output_4c28a7\n\n        instance(x: -62, y: 12) generaterange_0a3f6a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 212, y: -90) if_50b8d9 root.Std_k98ojb.Std.If {}\n        instance(x: 409, y: 108) expression_d3b5f7 root.Std_k98ojb.Math.Expression {\n            expression: \"number % i == 0\"\n        }\n        instance(x: 523, y: -33) not_8b6d5b root.Std_k98ojb.Logic.Not {}\n        instance(x: 316, y: -290) lessthanorequal_9e6b4f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 527, y: 232) if_a2b9e8 root.Std_k98ojb.Std.If {}\n        2 -> generaterange_0a3f6a.from\n        number_d3e6f9 -> generaterange_0a3f6a.to\n        generaterange_0a3f6a.list -> for_5e7a4b.items\n        for_5e7a4b.item -> expression_d3b5f7.gen_1\n        number_d3e6f9 -> expression_d3b5f7.gen_0\n        expression_d3b5f7.result -> not_8b6d5b.input\n        not_8b6d5b.result -> if_a2b9e8.predicate\n        if_a2b9e8.else -> continue_5f2b9e\n        if_a2b9e8.then -> output_4c28a7\n        2 -> lessthanorequal_9e6b4f.left\n        number_d3e6f9 -> lessthanorequal_9e6b4f.right\n        lessthanorequal_9e6b4f.result -> if_50b8d9.predicate\n        if_50b8d9.then -> output_4c28a7\n        if_50b8d9.else -> continue_5f2b9e\n    }\n\n    \n\n    instance(x: 10, y: -177) is_prime_15f9e9 root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -384, y: -118, name: \"first\") property(Number) first_2f9c7b\n        in(x: -386, y: 19, name: \"second\") property(Number) second_3b9f4d\n\n        out(x: 452, y: -49, name: \"output\") property(Bool) output_5d7f3e\n\n        instance(x: -105, y: -50) mul_9f8b3a root.Std_k98ojb.Math.Mul {}\n        instance(x: 182, y: -48) lessthan_4b7c9d root.Std_k98ojb.Math.LessThanOrEqual {}\n        first_2f9c7b -> mul_9f8b3a.first\n        second_3b9f4d -> mul_9f8b3a.second\n        mul_9f8b3a.result -> lessthan_4b7c9d.left\n        0 -> lessthan_4b7c9d.right\n        lessthan_4b7c9d.result -> output_5d7f3e\n    }\n\n    \n\n    instance(x: -192, y: 139) opposite_sign_935476 root.main.opposite_Sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Find whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -180, y: -70, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 360, y: -70, name: \"output\") property(Bool) output_4d5e6f\n\n        instance(x: 0, y: -70) modulo_7f8g9h root.Std_k98ojb.Math.Modulo {}\n        instance(x: 180, y: -70) equal_0a1b2c root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_7f8g9h.value\n        11 -> modulo_7f8g9h.divisor\n        modulo_7f8g9h.result -> equal_0a1b2c.left\n        0 -> equal_0a1b2c.right\n        equal_0a1b2c.result -> output_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: 50) is_divisible_by_11_3e4f5g root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replaces characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 530, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 150, y: 0) replace_1a2b3c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1a2b3c.input\n        search_0 -> replace_1a2b3c.search\n        replace_0 -> replace_1a2b3c.replace\n        replace_1a2b3c.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_characters_4d5e6f root.main.replace_characters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -122, y: -81, name: \"list\") property(List) list_63c248\n\n        out(x: 656, y: -68, name: \"product\") property(Number) product_cbb7bd\n\n        instance(x: 94, y: -105) filter_unique root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 350, y: -105) reduce_product root.Std_k98ojb.Iteration.Reduce {}\n        \n        list_63c248 -> filter_unique.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n            out(x: 333, y: -50, name: \"isUnique\") property(Bool) isUnique_7dd980\n\n            instance(x: 92, y: -22) count_occurrences root.Std_k98ojb.Query.Filter {}\n            instance(x: 310, y: 35) equal_to_one root.Std_k98ojb.Logic.Equal {}\n            \n            list_63c248 -> count_occurrences.list\n            \"it == x\" -> count_occurrences.where\n            count_occurrences.result -> equal_to_one.left\n            1 -> equal_to_one.right\n            equal_to_one.result -> isUnique_7dd980\n        } -> filter_unique.handler\n\n        filter_unique.output_list -> reduce_product.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: 92, y: -22, name: \"x\") property(Number) x_8ee839\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n\n            instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_584bfd.first\n            x_8ee839 -> mul_584bfd.second\n            mul_584bfd.result -> result_7dd980\n        } -> reduce_product.reducer\n\n        1 -> reduce_product.initial\n        reduce_product.result -> product_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) product_unique_b9ff6b root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -152, name: \"list1\") property(List) list1_3a2f4b\n        in(x: -173, y: 13, name: \"list2\") property(List) list2_1b3e5c\n\n        out(x: 648, y: -66, name: \"dissimilar\") property(List) dissimilar_4f2c3d\n\n        instance(x: 104, y: -130) difference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 104, y: 10) difference_4d5e6f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 380, y: -60) concat_7a8b9c root.Std_k98ojb.List.Concat {}\n        list1_3a2f4b -> difference_1a2b3c.left\n        list2_1b3e5c -> difference_1a2b3c.right\n        list2_1b3e5c -> difference_4d5e6f.left\n        list1_3a2f4b -> difference_4d5e6f.right\n        difference_1a2b3c.difference -> concat_7a8b9c.first\n        difference_4d5e6f.difference -> concat_7a8b9c.second\n        concat_7a8b9c.list -> dissimilar_4f2c3d\n    }\n\n    \n\n    instance(x: 90, y: -70) dissimilar_elements_5f6g7h root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: -151, name: \"list\") property(List) list_1f3a2b\n        in(x: -140, y: 10, name: \"n\") property(Number) n_3f2b1c\n\n        out(x: 1083, y: -71, name: \"output\") property(List) output_2f3b1c\n\n        instance(x: 180, y: -122) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 413, y: -115) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 645, y: -145) slice_1_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 645, y: 50) slice_2_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 878, y: -56) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_1f3a2b -> length_4b8927.list\n        n_3f2b1c -> modulo_4e8c54.value\n        length_4b8927.length -> modulo_4e8c54.divisor\n        list_1f3a2b -> slice_1_3f3ee6.list\n        list_1f3a2b -> slice_2_76ecda.list\n        modulo_4e8c54.result -> slice_1_3f3ee6.start\n        modulo_4e8c54.result -> slice_2_76ecda.end\n        -1 -> slice_1_3f3ee6.end\n        0 -> slice_2_76ecda.start\n        slice_1_3f3ee6.slice -> concat_0234d2.left\n        slice_2_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_2f3b1c\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_list_496e5e root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") array_sum {\n        in(x: -234, y: 86, name: \"array\") property(List) array_0c0609\n\n        out(x: 546, y: 63, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        array_0c0609 -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) array_sum_6c92e0 root.main.array_sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check if the given integer is a prime number.\") is_prime {\n        in(x: -375, y: -86, name: \"number\") property(Number) number_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) lessthanorequal_6e87f2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 146, y: -96) mod_8166b0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 200, y: 100) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 400, y: 100) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 600, y: 100) not_equal_07b8c7 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 800, y: 100) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1000, y: 100) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1200, y: 100) not_80a119 root.Std_k98ojb.Logic.Not {}\n\n        2 -> lessthanorequal_6e87f2.left\n        number_3af6ba -> lessthanorequal_6e87f2.right\n        lessthanorequal_6e87f2.result -> if_07b8c7.predicate\n        if_07b8c7.then -> output_c7097f\n        true -> output_c7097f\n\n        2 -> for_8cb3f6.items\n        number_3af6ba -> for_8cb3f6.to\n        for_8cb3f6.item -> mod_8166b0.value\n        number_3af6ba -> mod_8166b0.divisor\n        mod_8166b0.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> not_equal_07b8c7.left\n        true -> not_equal_07b8c7.right\n        not_equal_07b8c7.result -> and_80a119.left\n        for_8cb3f6.index -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_e19a62.then -> output_c7097f\n        false -> output_c7097f\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> not_80a119.input\n        not_80a119.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_prime_ac7dfb root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -261, y: -123, name: \"first\") property(Number) first_2f9d7a\n        in(x: -263, y: 21, name: \"second\") property(Number) second_8f9a5c\n\n        out(x: 452, y: -49, name: \"output\") property(Bool) output_3b7d9f\n\n        instance(x: 40, y: -50) mul_2a9f3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 272, y: -47) lessthan_5b8a6d root.Std_k98ojb.Math.LessThanOrEqual {}\n        first_2f9d7a -> mul_2a9f3c.first\n        second_8f9a5c -> mul_2a9f3c.second\n        mul_2a9f3c.result -> lessthan_5b8a6d.left\n        0 -> lessthan_5b8a6d.right\n        lessthan_5b8a6d.result -> output_3b7d9f\n    }\n\n    \n\n    instance(x: -80, y: 53) opposite_sign_4a7d8e root.main.opposite_Sign {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Find whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -78, y: -49, name: \"number\") property(Number) number_1f3d9b\n\n        out(x: 456, y: -53, name: \"output\") property(Bool) output_3b2f4a\n\n        instance(x: 125, y: -54) modulo_4f7a8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 321, y: -53) equal_9c7b2f root.Std_k98ojb.Logic.Equal {}\n        number_1f3d9b -> modulo_4f7a8b.value\n        11 -> modulo_4f7a8b.divisor\n        modulo_4f7a8b.result -> equal_9c7b2f.left\n        0 -> equal_9c7b2f.right\n        equal_9c7b2f.result -> output_3b2f4a\n    }\n\n    \n\n    instance(x: -34, y: 11) is_divisible_by_11_2f9e8d root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replaces characters in a string.\") replace_characters {\n        in(x: -380, y: 0, name: \"input\") property(String) input_0\n        in(x: -380, y: 50, name: \"search\") property(String) search_0\n        in(x: -380, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 400, y: 25, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_9f4cde root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9f4cde.input\n        search_0 -> replace_9f4cde.search\n        replace_0 -> replace_9f4cde.replace\n        replace_9f4cde.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_characters_1a2b3c root.main.replace_characters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -182, y: -147, name: \"list\") property(List) list_2d9f9c\n\n        out(x: 746, y: -142, name: \"product\") property(Number) product_1c6d8e\n\n        instance(x: 91, y: -146) reduce_1e9b9c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -364, y: -150) filter_unique_9c3b7b root.Std_k98ojb.Query.Filter {\n            where: \"list.count(it) == 1\"\n        }\n        1 -> reduce_1e9b9c.initial\n        list_2d9f9c -> filter_unique_9c3b7b.list\n        filter_unique_9c3b7b.result -> reduce_1e9b9c.items\n        func() {\n            in(x: -113, y: 34, name: \"accum\") property(Number) accum_3f8a1b\n            in(x: -113, y: 84, name: \"value\") property(Number) value_5f9a2c\n\n            out(x: 515, y: 44, name: \"result\") property(Number) result_4b7c9d\n\n            instance(x: 89, y: 29) mul_4a5b6c root.Std_k98ojb.Math.Mul {}\n            accum_3f8a1b -> mul_4a5b6c.first\n            value_5f9a2c -> mul_4a5b6c.second\n            mul_4a5b6c.result -> result_4b7c9d\n        } -> reduce_1e9b9c.reducer\n        reduce_1e9b9c.result -> product_1c6d8e\n    }\n\n    \n\n    instance(x: -55, y: 529) product_unique_4c8e6f root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -158, name: \"list1\") property(List) list1_2d6a3e\n        in(x: -170, y: 20, name: \"list2\") property(List) list2_1c3e5d\n\n        out(x: 648, y: -78, name: \"dissimilar\") property(List) dissimilar_63c9d8\n\n        instance(x: 101, y: -104) difference_1a3d8b root.Std_k98ojb.Sets.Difference {}\n        instance(x: 98, y: 33) difference_2c5e4a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 365, y: -32) concat_4d5f6e root.Std_k98ojb.List.Concat {}\n        list1_2d6a3e -> difference_1a3d8b.left\n        list2_1c3e5d -> difference_1a3d8b.right\n        difference_1a3d8b.difference -> concat_4d5f6e.left\n        list2_1c3e5d -> difference_2c5e4a.left\n        list1_2d6a3e -> difference_2c5e4a.right\n        difference_2c5e4a.difference -> concat_4d5f6e.right\n        concat_4d5f6e.list -> dissimilar_63c9d8\n    }\n\n    \n\n    instance(x: 100, y: -186) dissimilar_elements_5a7f4c root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: -171, name: \"list\") property(List) list_ef3a8b\n        in(x: -145, y: -53, name: \"k\") property(Number) k_9c3a6d\n\n        out(x: 753, y: -102, name: \"output\") property(List) output_0b1e56\n\n        instance(x: 212, y: -154) length_91a2c4 root.Std_k98ojb.List.Length {}\n        instance(x: 439, y: -153) modulo_91b9f1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 209, y: 13) slice_5c2f7b root.Std_k98ojb.List.Slice {}\n        instance(x: 215, y: 96) slice_4f8d9e root.Std_k98ojb.List.Slice {}\n        instance(x: 440, y: 7) concat_8b5c3f root.Std_k98ojb.List.Concat {}\n        list_ef3a8b -> length_91a2c4.list\n        length_91a2c4.length -> modulo_91b9f1.divisor\n        k_9c3a6d -> modulo_91b9f1.value\n        modulo_91b9f1.result -> slice_5c2f7b.start\n        modulo_91b9f1.result -> slice_4f8d9e.end\n        list_ef3a8b -> slice_5c2f7b.list\n        list_ef3a8b -> slice_4f8d9e.list\n        -1 -> slice_5c2f7b.end\n        0 -> slice_4f8d9e.start\n        slice_5c2f7b.slice -> concat_8b5c3f.left\n        slice_4f8d9e.slice -> concat_8b5c3f.right\n        concat_8b5c3f.result -> output_0b1e56\n    }\n\n    \n\n    instance(x: 4, y: -62) rotate_list_6c9d1a root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -208, y: 42, name: \"array\") property(List) array_5d2f8e\n\n        out(x: 599, y: 50, name: \"sum\") property(Number) sum_8a3d1c\n\n        instance(x: 206, y: 47) reduce_3e1a5f root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3e1a5f.initialValue\n        array_5d2f8e -> reduce_3e1a5f.items\n        func() {\n            in(x: -186, y: -87, name: \"accumulated\") property(Number) accumulated_6d1e9f\n            in(x: -185, y: 23, name: \"current\") property(Number) current_9bdeff\n\n            out(x: 1069, y: -79, name: \"sum\") property(Number) sum_9b0f3b\n\n            instance(x: 95, y: -30) add_4e9b9e root.Std_k98ojb.Math.Add {}\n            accumulated_6d1e9f -> add_4e9b9e.first\n            current_9bdeff -> add_4e9b9e.second\n            add_4e9b9e.result -> sum_9b0f3b\n        } -> reduce_3e1a5f.reducer\n        reduce_3e1a5f.output -> sum_8a3d1c\n    }\n\n    \n\n    instance(x: -109, y: 30) sum_array_3d4a9e root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") is_prime {\n        in(x: -375, y: -86, name: \"number\") property(Number) number_3af6ba\n\n        out(x: 766, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -82, y: 155) lessthanorequal_6e87f2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 251, y: 257) generaterange_82d404 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 532, y: 135) ifexpression_b5dba9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"number <= 1 ? false : is_prime\"\n        }\n        instance(x: 200, y: 346) not_equal_123abc root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 350, y: 350) modulo_456def root.Std_k98ojb.Math.Modulo {}\n        instance(x: 500, y: 350) equal_789ghi root.Std_k98ojb.Logic.Equal {}\n        instance(x: 650, y: 350) if_101jkl root.Std_k98ojb.Std.If {}\n\n        number_3af6ba -> lessthanorequal_6e87f2.left\n        1 -> lessthanorequal_6e87f2.right\n        lessthanorequal_6e87f2.result -> ifexpression_b5dba9.gen_0\n        number_3af6ba -> generaterange_82d404.to\n        2 -> generaterange_82d404.from\n        generaterange_82d404.list -> not_equal_123abc.left\n        not_equal_123abc.right -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_456def.value\n        number_3af6ba -> modulo_456def.divisor\n        modulo_456def.result -> equal_789ghi.left\n        0 -> equal_789ghi.right\n        equal_789ghi.result -> if_101jkl.predicate\n        if_101jkl.then -> ifexpression_b5dba9.gen_1\n        false -> ifexpression_b5dba9.gen_1\n        if_101jkl.else -> for_8cb3f6.next\n        ifexpression_b5dba9.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_prime_ac7dfb root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5510,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given two integers have opposite sign or not.\") opposite_Sign {\n        in(x: -593, y: -123, name: \"first\") property(Number) first_2fef39\n        in(x: -586, y: 91, name: \"second\") property(Number) second_5bdb96\n\n        out(x: 469, y: -39, name: \"output\") property(Bool) output_0121d7\n\n        instance(x: 53, y: 24) mul_4628eb root.Std_k98ojb.Math.Mul {}\n        instance(x: 285, y: 16) lessthan_092ff3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_4628eb.result -> lessthan_092ff3.left\n        0 -> lessthan_092ff3.right\n        lessthan_092ff3.result -> output_0121d7\n        first_2fef39 -> mul_4628eb.first\n        second_5bdb96 -> mul_4628eb.second\n    }\n\n    \n\n    instance(x: -232, y: -43) opposite_sign_2c5a9f root.main.opposite_Sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find whether a number is divisible by 11.\") divisible_by_11 {\n        in(x: -100, y: -50, name: \"number\") property(Number) number_0c72ae\n\n        out(x: 350, y: -50, name: \"output\") property(Bool) output_45b6c8\n\n        instance(x: 150, y: -50) modulo_8f4a3f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 250, y: -50) equal_d78e6b root.Std_k98ojb.Logic.Equal {}\n        number_0c72ae -> modulo_8f4a3f.value\n        11 -> modulo_8f4a3f.divisor\n        modulo_8f4a3f.result -> equal_d78e6b.left\n        0 -> equal_d78e6b.right\n        equal_d78e6b.result -> output_45b6c8\n    }\n\n    \n\n    instance(x: -50, y: 100) divisible_by_11_instance root.main.divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replaces characters in a string.\") replace_chars {\n        in(x: -300, y: 0, name: \"input\") property(String) input_0\n        in(x: -300, y: 50, name: \"search\") property(String) search_0\n        in(x: -300, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 500, y: 50, name: \"output\") property(String) output_0\n\n        instance(x: 100, y: 50) replace_4a5f1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4a5f1c.input\n        search_0 -> replace_4a5f1c.search\n        replace_0 -> replace_4a5f1c.replace\n        replace_4a5f1c.output -> output_0\n    }\n\n    \n\n    instance(x: 200, y: 50) replace_chars_instance root.main.replace_chars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Convert the given string to lower case.\") toLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.toLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -182, y: -254, name: \"list\") property(List) list_2ad9f6\n\n        out(x: 746, y: -235, name: \"product\") property(Number) product_3fdd42\n\n        instance(x: 160, y: -292) filter_unique_42b1c9 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -47, y: -37, name: \"elem\") property(Number) elem_7dd1c4\n\n            out(x: 441, y: -52, name: \"is_unique\") property(Bool) is_unique_d1b0ef\n\n            instance(x: 183, y: -31) list_count_2cd3c6 root.Std_k98ojb.Query.Filter {\n                where: \"it == elem\"\n            }\n            instance(x: 324, y: -29) equal_one_2f8e59 root.Std_k98ojb.Logic.Equal {}\n            list_count_2cd3c6.result -> list_count_2cd3c6.list\n            elem_7dd1c4 -> list_count_2cd3c6.list\n            1 -> equal_one_2f8e59.right\n            list_count_2cd3c6.result -> equal_one_2f8e59.left\n            equal_one_2f8e59.result -> is_unique_d1b0ef\n        } -> filter_unique_42b1c9.handler\n\n        list_2ad9f6 -> filter_unique_42b1c9.items\n        instance(x: 484, y: -270) reduce_prod_2f233c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -40, y: -44, name: \"accum\") property(Number) accum_7f4c38\n            in(x: -37, y: -185, name: \"elem\") property(Number) elem_8bb49f\n\n            out(x: 462, y: -42, name: \"result\") property(Number) result_59cd8c\n\n            instance(x: 97, y: -33) mul_4b4b09 root.Std_k98ojb.Math.Mul {}\n            accum_7f4c38 -> mul_4b4b09.first\n            elem_8bb49f -> mul_4b4b09.second\n            mul_4b4b09.result -> result_59cd8c\n        } -> reduce_prod_2f233c.reducer\n        filter_unique_42b1c9.output_list -> reduce_prod_2f233c.items\n        1 -> reduce_prod_2f233c.initial\n        reduce_prod_2f233c.result -> product_3fdd42\n    }\n\n    \n\n    instance(x: 69, y: -65) product_unique_9dc32d root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -167, y: -158, name: \"list1\") property(List) list1_2d39a0\n        in(x: -166, y: 16, name: \"list2\") property(List) list2_233c6f\n\n        out(x: 586, y: -78, name: \"result\") property(List) result_a3b5d2\n\n        instance(x: 208, y: -118) difference_88bc01 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 205, y: -21) difference_4fc065 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 383, y: -72) concat_b4e5f7 root.Std_k98ojb.List.Concat {}\n        list1_2d39a0 -> difference_88bc01.left\n        list2_233c6f -> difference_88bc01.right\n        list2_233c6f -> difference_4fc065.left\n        list1_2d39a0 -> difference_4fc065.right\n        difference_88bc01.difference -> concat_b4e5f7.first\n        difference_4fc065.difference -> concat_b4e5f7.second\n        concat_b4e5f7.list -> result_a3b5d2\n    }\n\n    \n\n    instance(x: -73, y: -77) dissimilar_elements_b4f7e9 root.main.dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -439, y: -59, name: \"list\") property(List) list_ef3a8b\n        in(x: -422, y: 90, name: \"k\") property(Number) k_e08c3c\n\n        out(x: 1034, y: 25, name: \"output\") property(List) output_5870b1\n\n        instance(x: -46, y: -43) length_6850b3 root.Std_k98ojb.List.Length {}\n        instance(x: 395, y: -29) concat_e4f84e root.Std_k98ojb.List.Concat {}\n        instance(x: 205, y: 105, name: \"leftChunk\") slice_83e5f5 root.Std_k98ojb.List.Slice {}\n        instance(x: 205, y: -204, name: \"rightChunk\") slice_3bca68 root.Std_k98ojb.List.Slice {}\n        instance(x: 130, y: 17) sub_16f3b3 root.Std_k98ojb.Math.Sub {}\n        list_ef3a8b -> length_6850b3.list\n        list_ef3a8b -> slice_3bca68.list\n        length_6850b3.length -> sub_16f3b3.first\n        k_e08c3c -> sub_16f3b3.second\n        sub_16f3b3.result -> slice_83e5f5.end\n        sub_16f3b3.result -> slice_3bca68.start\n        list_ef3a8b -> slice_83e5f5.list\n        0 -> slice_83e5f5.start\n        slice_3bca68.slice -> concat_e4f84e.left\n        slice_83e5f5.slice -> concat_e4f84e.right\n        concat_e4f84e.result -> output_5870b1\n        length_6850b3.length -> slice_3bca68.end\n    }\n\n    \n\n    instance(x: -124, y: -152) rotate_right_73ab4e root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -208, y: -42, name: \"list\") property(List) list_d5f2f8\n\n        out(x: 562, y: 20, name: \"sum\") property(Number) sum_3b2f42\n\n        instance(x: 230, y: -38) reduce_5e3e1a root.Std_k98ojb.Iteration.Reduce {}\n        list_d5f2f8 -> reduce_5e3e1a.items\n        0 -> reduce_5e3e1a.initialValue\n        func() {\n            in(x: -182, y: -94, name: \"accumulated\") property(Number) accumulated_01f362\n            in(x: -177, y: 32, name: \"current\") property(Number) current_3d0b1e\n\n            out(x: 1024, y: -73, name: \"sum\") property(Number) sum_7d8f50\n\n            instance(x: 97, y: 2) add_d91b92 root.Std_k98ojb.Math.Add {}\n            accumulated_01f362 -> add_d91b92.first\n            current_3d0b1e -> add_d91b92.second\n            add_d91b92.result -> sum_7d8f50\n        } -> reduce_5e3e1a.reducer\n        reduce_5e3e1a.output -> sum_3b2f42\n    }\n\n    \n\n    instance(x: -97, y: -68) sum_array_f4c3a7 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") is_prime {\n        in(x: -398, y: -167, name: \"number\") property(Number) number_d78e6b\n\n        out(x: 731, y: -125, name: \"output\") property(Bool) output_c64f2b\n\n        instance(x: 50, y: -78) ifexpression_48f6d0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1 ? false : true\"\n        }\n        instance(x: 277, y: 240) count_e08c3c root.Std_k98ojb.Std.Count {}\n        instance(x: 262, y: -76) generaterange_0b995e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 497, y: 100) for_7d8f50 root.Std_k98ojb.Std.For {}\n        instance(x: 511, y: 238) modulo_6b4dd8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 743, y: 237) logicnot_3e62be root.Std_k98ojb.Logic.Not {}\n        instance(x: 761, y: 35) if_02e229 root.Std_k98ojb.Std.If {}\n        instance(x: 988, y: 36) not_0e5b7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1035, y: 242) logicnot_95397b root.Std_k98ojb.Logic.Not {}\n        instance(x: 1255, y: 36) if_06239b root.Std_k98ojb.Std.If {}\n        number_d78e6b -> ifexpression_48f6d0.gen_0\n        ifexpression_48f6d0.result -> output_c64f2b\n        number_d78e6b -> generaterange_0b995e.to\n        2 -> generaterange_0b995e.from\n        generaterange_0b995e.list -> for_7d8f50.items\n        for_7d8f50.item -> modulo_6b4dd8.value\n        number_d78e6b -> modulo_6b4dd8.divisor\n        modulo_6b4dd8.result -> logicnot_3e62be.value\n        logicnot_3e62be.not -> if_02e229.predicate\n        ifexpression_48f6d0.result -> if_02e229.execute\n        if_02e229.then -> not_0e5b7f.value\n        not_0e5b7f.not -> if_06239b.predicate\n        if_02e229.else -> for_7d8f50.reset\n        if_06239b.then -> for_7d8f50.reset\n        if_06239b.else -> for_7d8f50.next\n        for_7d8f50.done -> count_e08c3c.reset\n        for_7d8f50.onItem -> count_e08c3c.count\n        count_e08c3c.count -> logicnot_95397b.value\n        logicnot_95397b.not -> output_c64f2b\n    }\n\n    \n\n    instance(x: -236, y: -227) is_prime_9c5bb3 root.main.is_prime {}\n}"
            ]
        }
    }
]