[
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3323,
        "task_candidates": {
            "5": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -168, name: \"getter_3d9e6c\") getter_3d9e6c = result\n        mul_5bddd9.result -> getter_3d9e6c.value\n        execute_12bf99 -> mul_5bddd9.execute\n        getter_3d9e6c.continue -> continue_685c8f\n        getter_3d9e6c.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -98, y: -70) mul_3eacf5 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -62, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 118, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_3eacf5.result -> getter_9cceb3.value\n        execute_12bf99 -> setter_1cedb2.execute\n        getter_9cceb3.value -> result_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_6f5e6d\n        in(x: -258, y: 179, name: \"b\") property(Number) b_bdbdfc\n        in(x: -262, y: 254, name: \"execute\") trigger() execute_03a7f4\n\n        out(x: 118, y: 103, name: \"result\") property(Number) result_9d9e6b\n        out(x: 118, y: 254, name: \"continue\") trigger() continue_7c9aeb\n\n        instance(x: -105, y: -110) mul_3f3fcb root.Std_k98ojb.Math.Mul {\n            first: a_6f5e6d\n            second: b_bdbdfc\n        }\n        getter(x: 247, y: 103, name: \"getter_9a206d\") getter_9a206d = result\n        mul_3f3fcb.result -> getter_9a206d.value\n        execute_03a7f4 -> mul_3f3fcb.execute\n        getter_9a206d.value -> result_9d9e6b\n        mul_3f3fcb.continue -> continue_7c9aeb\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_58005d root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 181, name: \"result\") property(Number) result_b2508f\n        out(x: 66, y: 279, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -30, y: 145) mul_6bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 22, y: 143, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: -68, y: 269, name: \"setter_1cedb2\") setter_1cedb2 = continue\n        mul_6bddd9.result -> getter_9cceb3.value\n        getter_9cceb3.value -> result_b2508f\n        execute_12bf99 -> mul_6bddd9.execute\n        mul_6bddd9.continue -> setter_1cedb2.execute\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 68, y: 283, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -90, y: 147) mul_6bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 23, y: 147, name: \"getter_9cceb3\") getter_9cceb3 = result\n        mul_6bddd9.result -> getter_9cceb3.value\n        execute_12bf99 -> mul_6bddd9.execute\n        getter_9cceb3.continue -> continue_685c8f\n        getter_9cceb3.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 68, y: 283, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -94, y: 178) mul_7d9e4b root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: 138, name: \"getter_9cceb3\") getter_9cceb3 = result\n        mul_7d9e4b.result -> getter_9cceb3.value\n        execute_12bf99 -> mul_7d9e4b.execute\n        getter_9cceb3.continue -> continue_685c8f\n        getter_9cceb3.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 181, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_3eacf4 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: -106, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 148, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_3eacf4.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_3eacf4.execute\n        setter_1cedb2.value -> getter_9cceb3.value\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 68, y: 283, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -94, y: 178) mul_6bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 23, y: 183, name: \"getter_4d9ebe\") getter_4d9ebe = result\n        mul_6bddd9.result -> getter_4d9ebe.value\n        execute_12bf99 -> mul_6bddd9.execute\n        getter_4d9ebe.value -> result_b2508f\n        getter_4d9ebe.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 181, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -78) mul_3eacf4 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: -110, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 148, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_3eacf4.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_3eacf4.execute\n        setter_1cedb2.value -> getter_9cceb3.value\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -90, y: -70) mul_3eacf4 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: -104, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 118, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_3eacf4.result -> getter_9cceb3.value\n        execute_12bf99 -> setter_1cedb2.execute\n        getter_9cceb3.value -> result_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -104) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 161, y: -55) max_val max_node.max\n\n        instance(x: 307, y: -219) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 161, y: -170) min_val min_node.min\n\n        instance(x: 45, y: -139) diff_node root.Std_k98ojb.Math.Sub {}\n        max_val -> diff_node.first\n        min_val -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -157) min_value_ai property(Number)\n\n        instance(x: 526, y: -103) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -157) min_value_ai property(Number)\n\n        instance(x: 526, y: -103) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -56) max_value_ai property(Number)\n\n        instance(x: 307, y: -250) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -154) min_value_ai property(Number)\n\n        instance(x: 541, y: -137) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 307, y: -250) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}"
            ],
            "20": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f6cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f6cdd.left\n        find_odd_6d05b0.item -> subtract_8f6cdd.right\n        subtract_8f6cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f6cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f6cdd.left\n        find_odd_6d05b0.item -> subtract_8f6cdd.right\n        subtract_8f6cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f6cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f6cdd.left\n        find_odd_6d05b0.item -> subtract_8f6cdd.right\n        subtract_8f6cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}"
            ],
            "21": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -70) add_6e8af5 root.Std_k98ojb.Math.Add {}\n        instance(x: 120, y: -40) div_3a8e90 root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        0 -> add_6e8af5.first\n        forLoop_3a8e90.item -> add_6e8af5.second\n        add_6e8af5.result -> forLoop_3a8e90.next\n\n        add_6e8af5.result -> sum_2ad0d5\n        add_6e8af5.result -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 118, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 618, y: -54) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 128, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 628, y: -55) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.accumulated -> add_8974a2.first\n        forLoop_3a8e90.currentItem -> add_8974a2.second\n        add_8974a2.result -> forLoop_3a8e90.nextValue\n\n        forLoop_3a8e90.accumulated -> sum_2ad0d5\n        forLoop_3a8e90.accumulated -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 188, y: 54) add_7d5c9d root.Std_k98ojb.Math.Add {}\n        instance(x: 288, y: 54) div_6e3a0f root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        0 -> add_7d5c9d.first\n\n        forLoop_3a8e90.item -> add_7d5c9d.second\n        add_7d5c9d.result -> forLoop_3a8e90.next\n\n        forLoop_3a8e90.done -> div_6e3a0f.first\n        sum_2ad0d5 <- forLoop_3a8e90.on_item\n        \n        n_0c0609 -> div_6e3a0f.second\n        add_7d5c9d.result -> average_4e2f6b\n\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 118, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 618, y: -54) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 128, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 648, y: -55) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.accumulated -> add_8974a2.first\n        forLoop_3a8ej0.current -> add_8974a2.second\n        add_8974a2.result -> forLoop_3a8e90.nextValue\n        forLoop_3a8e90.output -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 188, y: 54) add_7d5c4d root.Std_k98ojb.Math.Add {}\n        instance(x: 288, y: 54) div_6e3f0a root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        forLoop_3a8e90.item -> add_7d5c4d.first\n        sum_2ad0d5 -> add_7d5c4d.second\n        add_7d5c4d.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_6e3f0a.first\n        n_0c0609 -> div_6e3f0a.second\n        div_6e3f0a.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 128, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 648, y: -54) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.accumulated -> add_8974a2.first\n        forLoop_3a8ej0.current -> add_8974a2.second\n        add_8974a2.result -> forLoop_3a8e90.nextValue\n        forLoop_3a8e90.output -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 188, y: 54) add_7d5c4d root.Std_k98ojb.Math.Add {}\n        instance(x: 288, y: 54) div_6e3f0a root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        forLoop_3a8e90.item -> add_7d5c4d.first\n        sum_2ad0d5 -> add_7d5c4d.second\n        add_7d5c4d.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_6e3f0a.first\n        n_0c0609 -> div_6e3f0a.second\n        div_6e3f0a.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 118, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 618, y: -54) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b2cdd\n\n        instance(x: -10, y: 50) characters_5f3dcb root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5f3dcb.input\n        instance(x: 10, y: 80) iterationMap_2c856f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -10, y: 100) property(String) char_7b2cdd\n\n            out(x: 30, y: 140) property(Bool) isRepeated_5f3dcb\n\n            instance(x: 50, y: 180) filter_6d05b0 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -20, y: 200) property(String) char_7b2cdd\n                out(x: 30, y: 240) property(Bool) isRepeated_5f3dcb\n\n                instance(x: 100, y: 280) contains_6d05b0 root.Std_k98ojb.Strings.Contains {}\n                char_7b2dd -> contains_6d05b0.contains\n                char_7b2cdd -> contains_6d05b0.input\n                contains_6d05b0.value -> isRepeated_5f3dcb\n            } -> filter_6d05b0.handler\n            instance(x: 180, y: 340) listSlice_2c856f root.Std_k98ojb.List.Slice {}\n            func() {\n                in(x: -20, y: 360) property(List) charsList_7b2cdd\n                out(x: 30, y: 400) property(List) slicedCharsList_5f3dcb\n\n                instance(x: 100, y: 440) listGetAt_6d05b0 root.Std_k98ojb.List.GetAt {}\n                charsList_7b2cdd -> listGetAt_6d05b0.list\n                char_7b2cdd -> listGetAt_6d05b0.index\n                listGetAt_6d05b0.item -> slicedCharsList_5f3dcb\n            } -> listSlice_2c856f.handler\n            instance(x: 180, y: 480) listConcat_7b2cdd root.Std_k98ojb.List.Concat {}\n            func() {\n                in(x: -20, y: 500) property(List) charsList_7b2cdd\n                out(x: 30, y: 540) property(List) concatenatedCharsList_5f3dcb\n\n                instance(x: 100, y: 580) listEmpty_6d05b0 root.Std_k98ojb.List.Empty {}\n                charsList_7b2cdd -> listConcat_7b2cdd.right\n                listEmpty_6d05b0.value -> listConcat_7b2cdd.left\n                listConcat_7b2cdd.result -> concatenatedCharsList_5f3dcb\n            } -> listConcat_7b2cdd.handler\n        } -> iterationMap_2c856f.handler\n        characters_5f3dcb.value -> iterationMap_2c856f.list\n        instance(x: 10, y: 40) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n        inputString_6d4e7a -> firstRepeatedChar_2c856f.inputString\n        repeatedChar_7b2cdd -> firstRepeatedChar_2c856f.repeatedChar\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b9fbc\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) flattenList_2c856f root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) filterRepeatedChar_2c856f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) countOccurrences_1088d5 root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -36, y: 40, name: \"acc\") property(Number) acc_7f6e5a\n                in(x: -12, y: 40, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"result\") property(Number) result_af09a7\n\n                instance(x: 30, y: 29) ifExpression_1088d5 root.Std_k98ojb.Std.IfExpression {}\n                instance(x: -60, y: 29) logicEqual_807ffd root.Std_k98ojb.Logic.Equal {}\n                acc_7f6e5a -> logicEqual_807ffd.left\n                elem_9f6850 -> logicEqual_807ffd.right\n                ifExpression_1088d5.expression -> result_af09a7\n                1 -> ifExpression_1088d5.then\n                acc_7f6e5a -> ifExpression_1088d5.else_\n                logicEqual_807ffd.result -> ifExpression_1088d5.input\n            } -> countOccurrences_1088d5.reducer\n            0 -> countOccurrences_1088d5.initialValue\n            elem_9f6850 -> countOccurrences_1088d5.items\n            countOccurrences_1088d5.result -> result_af09a7\n        } -> filterRepeatedChar_2c856f.handler\n        flattenList_2c856f.list -> filterRepeatedChar_2c856f.items\n        instance(x: 30, y: 15) firstItem_2c856f root.Std_k98ojb.List.FirstItem {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"result\") property(Bool) result_af09a7\n\n            instance(x: 89, y: 29) logicGreaterThan_1088d5 root.Std_k98ojb.Logic.GreaterThan {}\n            elem_9f6850 -> logicGreaterThan_1088d5.left\n            1 -> logicGreaterThan_1088d5.right\n            logicGreaterThan_1088d5.result -> result_af09a7\n        } -> filterRepeatedChar_2c856f.predicate\n        filterRepeatedChar_2c856f.item -> firstItem_2c856f.list\n        firstItem_2c856f.item -> repeatedChar_7b9fbc\n    }\n\n    instance(x: -20, y: 15) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n    inputString_6d4e7a -> firstRepeatedChar_2c856f.inputString\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c9b9f4\n\n        instance(x: -20, y: 100) characters_5c3b4d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5c3b4d.input\n        instance(x: -20, y: 150) iterationMap_6f6ebc root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -20, y: 200) property(String) char_7e3a4d\n\n            out(x: -20, y: 250) property(Object) mapResult_6f6ebc\n\n            instance(x: -20, y: 210) stdIfExpression_8b9b6d root.Std_k98ojb.Std.IfExpression {}\n            in(x: -20, y: 230) property(String) charIndex_7e3a4d\n            out(x: -20, y: 270) property(Object) indexCharPair_5c3b4d\n\n            stdIfExpression_8b9b6d.value -> mapResult_6f6ebc\n            char_7e3a4d -> stdIfExpression_8b9b6d.expression\n            instance(x: -20, y: 240) listContains_5c3b4d root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -20, y: 270) property(String) charIndex_7e3a4d\n                out(x: -20, y: 290) property(Bool) containsResult_5c3b4d\n\n                instance(x: -20, y: 280) listGetAt_5c3b4d root.Std_k98ojb.List.GetAt {}\n                func() {\n                    in(x: -20, y: 310) property(Number) index_7e3a4d\n                    out(x: -20, y: 330) property(String) charIndexPair_5c3b4d\n\n                    instance(x: -20, y: 320) stdIfExpression_8b9b6d root.Std_k98ojb.Std.IfExpression {}\n                    in(x: -20, y: 340) property(String) charIndexPair_5c3b4d\n                    out(x: -20, y: 360) property(Bool) containsResult_5c3b4d\n\n                    stdIfExpression_8b9b6d.value -> listGetAt_5c3b4d.index\n                    charIndexPair_7e3a4d -> stdIfExpression_8b9b6d.expression\n                } -> listContains_5c3b4d.list\n            } -> stdIfExpression_8b9b6d.then\n            instance(x: -20, y: 260) stdIf_8b9b6d root.Std_k98ojb.Std.If {}\n            in(x: -20, y: 370) property(Bool) containsResult_5c3b4d\n            out(x: -20, y: 390) property(String) repeatedChar_c9b9f4\n\n            stdIfExpression_8b9b6d.value -> stdIf_8b9b6d.right\n            charIndexPair_7e3a4d -> stdIfExpression_8b9b6d.expression\n            containsResult_5c3b4d -> stdIf_8b9b6d.condition\n        } -> iterationMap_6f6ebc.mapFn\n        characters_5c3b4d.chars -> iterationMap_6f6ebc.list\n    }\n\n    instance(x: -20, y: 10) firstRepeatedChar_7e3a4d root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b9f4c\n\n        instance(x: -20, y: 15) characters_7b9b9b root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_7b9b9b.input\n        instance(x: 30, y: 15) list_2c856f List.Empty {}\n        instance(x: -20, y: 15) forLoop_6d05b0 root.Std_k98ojb.Iteration.For {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            instance(x: 270, y: 15) containsCheck_6d05b0 root.Std_k98ojb.List.Contains {}\n            list_2c856f -> containsCheck_6d05b0.list\n            char_9f6850 -> containsCheck_6d05b0.item\n            out(x: 310, y: 44, name: \"isRepeated\") property(Bool) isRepeated_af09a7\n            containsCheck_6d05b0.result -> isRepeated_af09a7\n        } -> forLoop_6d05b0.handler\n        characters_7b9b9b.characters -> forLoop_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            instance(x: 270, y: 15) addToList_6d05b0 root.Std_k98ojb.List.Add {}\n            list_2c856f -> addToList_6d05b0.list\n            char_9f6850 -> addToList_6d05b0.item\n            out(x: 310, y: 44, name: \"updatedList\") property(List) updatedList_af09a7\n            addToList_6d05b0.listWithItem -> updatedList_af09a7\n        } -> forLoop_6d05b0.onItem\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"isRepeated\") property(Bool) isRepeated_af09a7\n            instance(x: 270, y: 15) containsCheck_6d05b0 root.Std_k98ojb.List.Contains {}\n            list_2c856f -> containsCheck_6d05b0.list\n            char_9f6850 -> containsCheck_6d05b0.item\n            containsCheck_6d05b0.result -> isRepeated_af09a7\n        } -> forLoop_6d05b0.predicate\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"repeatedChar\") property(String) repeatedChar_af09a7\n            instance(x: 270, y: 15) containsCheck_6d05b0 root.Std_k98ojb.List.Contains {}\n            list_2c856f -> containsCheck_6d05b0.list\n            char_9f6850 -> containsCheck_6d05b0.item\n            out(x: 310, y: 44, name: \"isRepeated\") property(Bool) isRepeated_af09a7\n            containsCheck_6d05b0.result -> isRepeated_af09a7\n        } -> forLoop_6d05b0.onTrue\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"repeatedChar\") property(String) repeatedChar_af09a7\n        } -> forLoop_6d05b0.onFalse\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"updatedList\") property(List) updatedList_af09a7\n            instance(x: 270, y: 15) addToList_6d05b0 root.Std_k98ojb.List.Add {}\n            list_2c856f -> addToList_6d05b0.list\n            char_9f6850 -> addToList_6d05b0.item\n            addToList_6d05b0.listWithItem -> updatedList_af09a7\n        } -> forLoop_6d05b0.onItem\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"isRepeated\") property(Bool) isRepeated_af09a7\n            instance(x: 270, y: 15) containsCheck_6d05b0 root.Std_k98ojb.List.Contains {}\n            list_2c856f -> containsCheck_6d05b0.list\n            char_9f6850 -> containsCheck_6d05b0.item\n            containsCheck_6d05b0.result -> isRepeated_af09a7\n        } -> forLoop_6d05b0.predicate\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"repeatedChar\") property(String) repeatedChar_af09a7\n        } -> forLoop_6d05b0.onTrue\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"repeatedChar\") property(String) repeatedChar_af09a7\n        } -> forLoop_6d05b0.onFalse\n        characters_7b9b9b.characters -> forLoop_6d05b0.items\n        list_2c856f -> forLoop_6d05b0.list\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"updatedList\") property(List) updatedList_af09a7\n        } -> forLoop_6d05b0.onItem\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"isRepeated\") property(Bool) isRepeated_af09a7\n        } -> forLoop_6d05b0.predicate\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"repeatedChar\") property(String) repeatedChar_af09a7\n        } -> forLoop_6d05b0.onTrue\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 310, y: 44, name: \"repeatedChar\") property(String) repeatedChar_af09a7\n        } -> forLoop_6d05b0.onFalse\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b9f4c\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) flattenList_2c856f root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) countOccurrences_6d4e7a root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n            instance(x: 20, y: 15) filterList_2c856f root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 20, y: 15) equalChar_2c856f root.Std_k98ojb.Logic.Equal {}\n                char_9f6850 -> equalChar_2c856f.left\n                char_9f6850 -> equalChar_2c856f.right\n                equalChar_2c856f.result -> bool_af09a7\n            } -> filterList_2c856f.handler\n            instance(x: 30, y: 15) lengthList_2c856f root.Std_k98ojb.List.Length {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n                out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n                instance(x: 20, y: 15) lengthList_2c856f root.Std_k98ojb.List.Length {}\n                char_9f6850 -> lengthList_2c856f.list\n                lengthList_2c856f.length -> count_af09a7\n            } -> filterList_2c856f.items\n            filterList_2c856f.output_list -> countOccurrences_6d4e7a.items\n        } -> countOccurrences_6d4e7a.handler\n        instance(x: 30, y: 15) findFirstRepeatedChar_2c856f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 20, y: 15) greaterThanOne_2c856f root.Std_k98ojb.Logic.GreaterThan {}\n            char_9f6850 -> greaterThanOne_2c856f.left\n            1 -> greaterThanOne_2c856f.right\n            greaterThanOne_2c856f.result -> bool_af09a7\n        } -> findFirstRepeatedChar_2c856f.predicate\n        countOccurrences_6d4e7a.items -> findFirstRepeatedChar_2c856f.items\n        findFirstRepeatedChar_2c856f.item -> repeatedChar_7b9f4c\n    }\n\n    \n\n    instance(x: -20, y: 15) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c4b9f2\n\n        instance(x: -10, y: 100) characters_4c3b6b root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_4c3b6b.input\n        instance(x: 50, y: 200) iterate_eeb9f1 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n            out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n            instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n            func() {\n                in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n                func() {\n                    in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                    out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                    instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n                    func() {\n                        in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                        out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                        instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n                        func() {\n                            in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                            out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                            instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n                            func() {\n                                in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                                out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                                instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n                                func() {\n                                    in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                                    out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                                    instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n                                    func() {\n                                        in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                                        out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                                        instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } -> iterate_eeb9f1.map\n        characters_4c3b6b.chars -> iterate_eeb9f1.items\n\n        instance(x: 200, y: 250) findFirstRepeatedChar_7d4e7a root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n            out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n            instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n            func() {\n                in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n            }\n        } -> findFirstRepeatedChar_7d4e7a.map\n        iterate_eeb9f1.result -> findFirstRepeatedChar_7d4e7a.items\n\n        instance(x: 300, y: 300) filter_repeated_chars_6d4e7a root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n            out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n            instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n            func() {\n                in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n            }\n        } -> filter_repeated_chars_6d4e7a.predicate\n        findFirstRepeatedChar_7d4e7a.result -> filter_repeated_chars_6d4e7a.items\n\n        instance(x: 400, y: 350) first_repeated_char_6d4e7a root.Std_k98ojb.Iteration.First {}\n        func() {\n            in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n            out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n            instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n            func() {\n                in(x: -10, y: 100, name: \"char\") property(String) char_4c3b6b\n\n                out(x: 50, y: 200, name: \"index\") property(Number) index_eeb9f1\n\n                instance(x: 80, y: 150) count_7d4e7a root.Std_k98ojb.Std.Count {}\n            }\n        } -> first_repeated_char_6d4e7a.predicate\n        filter_repeated_chars_6d4e7a.result -> first_repeated_char_6d4e7a.items\n\n        first_repeated_char_6d4e7a.item -> repeatedChar_c4b9f2\n    }\n}\n\ninstance(x: -50, y: 50) mainFunction_6d4e7a root.main.firstRepeatedChar {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b9f5c\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        characters_6d4e7a.characters -> firstRepeatedChar\n\n        instance(x: -20, y: 15) uniqueCharsList_3bc2ae root.Std_k98ojb.List.Empty {}\n        \n        instance(x: -20, y: 15) forLoop_6d05b0 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"outputList\") property(List) outputList_af09a7\n            \n            instance(x: -20, y: 15) ifCondition_1088d5 root.Std_k98ojb.Std.IfExpression {}\n            \n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n                out(x: 515, y: 44, name: \"isContained\") property(Bool) isContained_af09a7\n                \n                instance(x: -20, y: 15) containsCheck_1088d5 root.Std_k98ojb.List.Contains {}\n                \n                func() {\n                    in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n                    out(x: 515, y: 44, name: \"isContained\") property(Bool) isContained_af09a7\n                    \n                    uniqueCharsList_3bc2ae -> containsCheck_1088d5.list\n                    char_9f6850 -> containsCheck_1088d5.item\n                    containsCheck_1088d5.contains -> isContained_af09a7\n                } -> ifCondition_1088d5.then\n\n                func() {\n                    in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n                    \n                    out(x: 515, y: 44, name: \"outputList\") property(List) outputList_af09a7\n                    \n                    instance(x: -20, y: 15) addToList_3bc2ae root.Std_k98ojb.List.Add {}\n                    \n                    func() {\n                        in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n                        \n                        out(x: 515, y: 44, name: \"outputList\") property(List) outputList_af09a7\n                        \n                        uniqueCharsList_3bc2ae -> addToList_3bc2ae.list\n                        char_9f6850 -> addToList_3bc2ae.item\n                        addToList_3bc2ae.output -> outputList_af09a7\n                    } -> ifCondition_1088d5.else\n                }\n            } -> forLoop_6d05b0.map\n\n            characters_6d4e7a.characters -> forLoop_6d05b0.input\n            forLoop_6d05b0.output -> outputList_af09a7\n        }\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"isContained\") property(Bool) isContained_af09a7\n            \n            instance(x: -20, y: 15) containsCheck_1088d5 root.Std_k98ojb.List.Contains {}\n            \n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n                \n                out(x: 515, y: 44, name: \"isContained\") property(Bool) isContained_af09a7\n                \n                uniqueCharsList_3bc2ae -> containsCheck_1088d5.list\n                char_9f6850 -> containsCheck_1088d5.item\n                containsCheck_1088d5.contains -> isContained_af09a7\n            } -> ifCondition_1088d5.then\n\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n                \n                out(x: 515, y: 44, name: \"outputList\") property(List) outputList_af09a7\n                \n                instance(x: -20, y: 15) addToList_3bc2ae root.Std_k98ojb.List.Add {}\n                \n                func() {\n                    in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n                    \n                    out(x: 515, y: 44, name: \"outputList\") property(List) outputList_af09a7\n                    \n                    uniqueCharsList_3bc2ae -> addToList_3bc2ae.list\n                    char_9f6850 -> addToList_3bc2ae.item\n                    addToList_3bc2ae.output -> outputList_af09a7\n                } -> ifCondition_1088d5.else\n            }\n        } -> forLoop_6d05b0.map\n\n        characters_6d4e7a.characters -> forLoop_6d05b0.input\n    }\n\n    instance(x: -20, y: 15) firstRepeatedChar_3bc2ae root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c4b9f2\n\n        instance(x: -10, y: 100) characters_4c9b4d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_4c9b4d.input\n        out(characters_4c9b4d.characters, x: -25, y: 100) property(List) charactersList_3f5f58\n\n        instance(x: -10, y: 160) iterationMap_7e2a2d root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -40, y: 200) property(String) char_3c9f5a\n            out(x: 389, y: 160) property(Bool) isRepeatedChar_7e2a2d\n\n            instance(x: -10, y: 240) contains_4b9b4d root.Std_k98ojb.List.Contains {}\n            char_3c9f5a -> contains_4b9b4d.list\n            out(charactersList_3f5f58, x: -10, y: 240) property(String) currentChar_7e2a2d\n\n            instance(x: -10, y: 280) ifExpression_6c9b4d root.Std_k98ojb.Std.IfExpression {}\n            \"it == currentChar\" -> ifExpression_6c9b4d.expression\n            contains_4b9b4d.result -> ifExpression_6c9b4d.input\n\n            ifExpression_6c9b4d.value -> isRepeatedChar_7e2a2d\n        } -> iterationMap_7e2a2d.handler\n        charactersList_3f5f58 -> iterationMap_7e2a2d.items\n        out(iterationMap_7e2a2d.output_list, x: -10, y: 160) property(List) isRepeatedCharList_7e2a2d\n\n        instance(x: -10, y: 340) findFirstTrue_5c9b4d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -40, y: 360) property(Bool) boolValue_7e2a2d\n            out(x: 389, y: 360) property(String) repeatedCharFound_5c9b4d\n\n            instance(x: -10, y: 400) ifExpression_7e2a2d root.Std_k98ojb.Std.IfExpression {}\n            \"it\" -> ifExpression_7e2a2d.expression\n            boolValue_7e2a2d -> ifExpression_7e2a2d.input\n\n            instance(x: -10, y: 460) getAt_5c9b4d root.Std_k98ojb.List.GetAt {}\n            out(charactersList_3f5f58, x: -10, y: 460) property(List) charactersListGetAt_7e2a2d\n            findFirstTrue_5c9b4d.index -> getAt_5c9b4d.index\n\n            ifExpression_7e2a2d.value -> repeatedCharFound_5c9b4d\n        } -> findFirstTrue_5c9b4d.predicate\n        isRepeatedCharList_7e2a2d -> findFirstTrue_5c9b4d.items\n        findFirstTrue_5c9b4d.item -> repeatedChar_c4b9f2\n    }\n\n    instance(x: -10, y: 60) firstRepeatedChar_3c856f root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b9f5c\n\n        instance(x: -20, y: 15) characters_7b3bdc root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_7b3bdc.input\n        instance(x: 15, y: 15) listEmpty_7f2c0a root.Std_k98ojb.List.Empty {}\n        instance(x: -20, y: 15) forLoop_6d4e7a root.Std_k98ojb.Std_For {}\n        characters_7b3bdc.characters -> forLoop_6d4e7a.items\n        listEmpty_7f2c0a -> forLoop_6d4e7a.trigger\n        instance(x: 15, y: 15) count_89a7ff root.Std_k98ojb.Std_Count {}\n        forLoop_6d4e7a.next -> count_89a7ff.count\n        forLoop_6d4e7a.onItem -> forLoop_6d4e7a.trigger\n        instance(x: 15, y: 15) contains_2c856f root.Std_k98ojb.List.Contains {}\n        count_89a7ff.value -> contains_2c856f.index\n        characters_7b3bdc.characters -> contains_2c856f.list\n        forLoop_6d4e7a.item -> contains_2c856f.item\n        instance(x: 15, y: 15) ifExpression_9f6850 root.Std_k98ojb.Std.IfExpression {}\n        contains_2c856f.isEmpty -> ifExpression_9f6850.expression\n        forLoop_6d4e7a.item -> repeatedChar_6b9f5c\n        ifExpression_9f6850.value -> forLoop_6d4e7a.reset\n    }\n\n}\n\ninstance(x: -20, y: 15) main_firstRepeatedChar root.main.firstRepeatedChar {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b9fbc\n\n        instance(x: -20, y: 15) characters_5c3b4d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5c3b4d.input\n        instance(x: 15, y: 15) flattenList_2f0e4a root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) mapFunction_67e4b2 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: 15, name: \"char\") property(String) char_6d4e7a\n\n            out(x: 389, y: 15, name: \"indexMap\") property(Object) indexMap_2f0e4a\n\n            instance(x: -20, y: 15) index_5c3b4d root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -30, y: 15, name: \"acc\") property(Object) acc_67e4b2\n                in(x: -30, y: 15, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 389, y: 15, name: \"newAcc\") property(Object) newAcc_2f0e4a\n\n                instance(x: -20, y: 15) ifExpression_5c3b4d root.Std_k98ojb.Std.IfExpression {}\n                instance(x: -20, y: 15) containsKey_67e4b2 root.Std_k98ojb.Logic.Contains {}\n                acc_67e4e2 -> containsKey_67e4b2.left\n                char_6d4e7a -> containsKey_67e4b2.right\n\n                ifExpression_5c3b4d.expression = \"containsKey_67e4b2.result ? acc_67e4e2 : { [char_6d4e7a]: index }\"\n                containsKey_67e4b2.result -> ifExpression_5c3b4d.input\n                ifExpression_5c3b4d.value -> newAcc_2f0e4a\n            } -> index_5c3b4d.reducer\n            char_6d4e7a -> index_5c3b4d.item\n            instance(x: -20, y: 15) index_67e4b2 root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -30, y: 15, name: \"acc\") property(Number) acc_6d4e7a\n                in(x: -30, y: 15, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 389, y: 15, name: \"newAcc\") property(Number) newAcc_2f0e4a\n\n                instance(x: -20, y: 15) addOne_5c3b4d root.Std_k98ojb.Math.Pow {}\n                acc_67e4e2 -> addOne_5c3b4d.x\n                addOne_5c3b4d.y = 1\n\n                addOne_5c3b4d.result -> newAcc_2f0e4a\n            } -> index_67e4b2.reducer\n            char_6d4e7a -> index_67e4b2.item\n            index_5c3b4d.result -> indexMap_2f0e4a\n        } -> mapFunction_67e4b2.fn\n        flattenList_2f0e4a -> mapFunction_67e4b2.items\n\n        instance(x: -20, y: 15) findFirstRepeatedChar_5c3b4d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 15, name: \"char\") property(String) char_67e4b2\n\n            out(x: 389, y: 15, name: \"isRepeated\") property(Bool) isRepeated_2f0e4a\n\n            instance(x: -20, y: 15) containsKey_5c3b4d root.Std_k98ojb.Logic.Contains {}\n            indexMap_67e4e2 -> containsKey_5c3b4d.left\n            char_67e4b2 -> containsKey_5c3b4d.right\n\n            containsKey_5c3b4d.result -> isRepeated_2f0e4a\n        } -> findFirstRepeatedChar_5c3b4d.predicate\n        mapFunction_67e4b2.result -> findFirstRepeatedChar_5c3b4d.items\n        findFirstRepeatedChar_5c3b4d.item -> repeatedChar_7b9fbc\n\n        characters_5c3b4d.output -> flattenList_2f0e4a.input\n    }\n\n    instance(x: -20, y: 15) firstRepeatedChar_6d4e7a root.main.firstRepeatedChar {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -124) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from the list.\") remove_smallest {\n            in(x: -360, y: -87, name: \"items\") property(List) items_bi\n            in(x: 59, y: -124, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 459, y: -124, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 307, y: -86) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[1])\n            func(doc: \"predicate function to check if the item is not equal to the smallest number.\") predicate {\n                in(x: 307, y: -45) item property(Number)\n                out(x: 307, y: -45) result property(Boolean)\n\n                instance(x: 307, y: -45) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                item -> (logic_not_equal_node.left)\n                smallestNum_ai -> (logic_not_equal_node.right)\n                logic_not_equal_node.notEqual -> result\n            }\n            predicate {} -> filter_node.handler\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        \n        instance(x: 459, y: -124) remove_smallest_node root.main.remove_smallest {}\n        items_ai -> (remove_smallest_node.items)\n        min_ai -> (remove_smallest_node.smallestNum)\n        out(x: 630, y: -124) listWithoutSmallest_bi = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 592, y: -216) second_min_node root.Std_k98ojb.List.Min {}\n        listWithoutSmallest_bi -> second_min_node.items\n        second_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -153) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from a list.\") remove_smallest {\n            in(x: -276, y: -80, name: \"items\") property(List) items_bi\n            in(x: 49, y: -153, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 159, y: -219, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 307, y: -84) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[1])\n            func(doc: \"predicate function to check if item is not equal to the smallest number.\") predicate {\n                in(x: 307, y: -24) item_cj property(Number)\n                out(x: 159, y: -219, name: \"result\") property(Boolean) result_cj\n\n                instance(x: 307, y: -24) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                item_cj -> (logic_not_equal_node.left)\n                smallestNum_ai -> (logic_not_equal_node.right)\n                logic_not_equal_node.notEqual -> result_cj\n            }\n            instance(x: 307, y: -24) predicate_func root.main.predicate {}\n            filter_node.handler predicate_func\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        instance(x: 459, y: -153) remove_smallest_node root.main.remove_smallest {}\n        min_ai -> (remove_smallest_node.smallestNum)\n        items_ai -> remove_smallest_node.items\n        out(x: 627, y: -153) list_without_min_ai = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 690, y: -216) second_list_min_node root.Std_k98ojb.List.Min {}\n        list_without_min_ai -> second_list_min_node.items\n        second_list_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -216) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 359, y: -159) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -64) filter_min_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_min_node.items\n        min_ai -> filter_min_node.context\n        func(doc: \"filter out the smallest number\") handler {\n            in(x: -251, y: 30) property(Number) it_ai\n            in(x: -46, y: 30) property(Number) context_ai\n            out(x: 97, y: 30) property(Boolean) result_ai\n\n            instance(x: -8, y: 30) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node.left\n            context_ai -> logic_not_equal_node.right\n            logic_not_equal_node.notEqual -> result_ai\n        }\n        filter_min_node.handler -> handler.root\n        out(x: 359, y: -64) property(List) filtered_items_ai\n        filter_min_node.output_list -> filtered_items_ai\n\n        instance(x: 307, y: 128) second_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> second_min_node.items\n        out(x: 359, y: 128) property(Number) secondMin_ai\n        second_min_node.min -> secondMin_ai\n\n        instance(x: 307, y: 226) filter_second_min_node root.Std_k98ojb.Iteration.Filter {}\n        filtered_items_ai -> filter_second_min_node.items\n        secondMin_ai -> filter_second_min_node.context\n        func(doc: \"filter out the second smallest number\") handler_1 {\n            in(x: -251, y: 30) property(Number) it_ai\n            in(x: -46, y: 30) property(Number) context_ai\n            out(x: 97, y: 30) property(Boolean) result_ai\n\n            instance(x: -8, y: 30) logic_not_equal_node_1 root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node_1.left\n            context_ai -> logic_not_equal_node_1.right\n            logic_not_equal_node_1.notEqual -> result_ai\n        }\n        filter_second_min_node.handler -> handler_1.root\n        out(x: 359, y: 226) property(List) filtered_items_1_ai\n        filter_second_min_node.output_list -> filtered_items_1_ai\n\n        instance(x: 307, y: 324) third_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_1_ai -> third_min_node.items\n        secondSmallest_ai <- third_min_node.min\n    }\n\n    \n    instance(x: 307, y: -64) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 456, y: -153) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from the list.\") remove_smallest {\n            in(x: -279, y: -80, name: \"items\") property(List) items_bi\n            in(x: 46, y: -153, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 159, y: -80, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 279, y: -46) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[0])\n            func(doc: \"predicate function to check if the item is not equal to the smallest number.\") predicate {\n                in(x: 159, y: -243) property(Number) it_ai\n                out(x: 159, y: -186) property(Boolean) result_ai\n\n                instance(x: 159, y: -270) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                it_ai -> (not_equal_node.left)\n                smallestNum_ai -> (not_equal_node.right)\n                not_equal_node.notEqual -> result_ai\n            }\n            predicate() -> filter_node.handler\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        \n        instance(x: 456, y: -153) remove_smallest_node root.main.remove_smallest {}\n        items_ai -> (remove_smallest_node.items)\n        min_ai -> (remove_smallest_node.smallestNum)\n        out(x: 279, y: -80) listWithoutSmallest_ai = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 307, y: -46) second_min_node root.Std_k98ojb.List.Min {}\n        listWithoutSmallest_ai -> second_min_node.items\n        second_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -216) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -153) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from a list.\") remove_smallest {\n            in(x: -276, y: -80, name: \"items\") property(List) items_bi\n            in(x: 49, y: -153, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 159, y: -219, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 307, y: -84) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[1])\n            func(doc: \"predicate function to check if item is not equal to the smallest number.\") predicate {\n                in(x: 307, y: -24) item_cj property(Number)\n                out(x: 159, y: -219, name: \"result\") property(Boolean) result_cj\n\n                instance(x: 307, y: -24) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                item_cj -> (logic_not_equal_node.left)\n                smallestNum_ai -> (logic_not_equal_node.right)\n                logic_not_equal_node.notEqual -> result_cj\n            }\n            instance(x: 307, y: -24) predicate_func root.main.predicate {}\n            filter_node.handler predicate_func\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        instance(x: 459, y: -153) remove_smallest_node root.main.remove_smallest {}\n        min_ai -> (remove_smallest_node.smallestNum)\n        items_ai -> remove_smallest_node.items\n        out(x: 627, y: -153) list_without_min_ai = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 690, y: -216) second_list_min_node root.Std_k98ojb.List.Min {}\n        list_without_min_ai -> second_list_min_node.items\n        second_list_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -216) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 359, y: -156) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -42) filter_func root.std_k98ojb.Filter {}\n        func(doc: \"filter function to exclude the smallest number.\") filter_func_handler {\n            in(x: -156, y: -12) property(Number) it_ai\n            out(x: 130, y: -74) property(Boolean) result_ai\n\n            instance(x: 89, y: -12) math_greater_than_node root.Std_k98ojb.Math.GreaterThan {}\n            min_ai -> math_greater_than_node.left\n            it_ai -> math_greater_than_node.right\n            math_greater_than_node.greaterThan -> result_ai\n        }\n        filter_func.handler(filter_func_handler)\n        items_ai -> filter_func.items\n        out(x: 359, y: -42) property(List) filtered_items_ai\n        filter_func.output_list -> filtered_items_ai\n\n        instance(x: 307, y: 186) second_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> second_min_node.items\n        out(x: 359, y: 246) property(Number) second_smallest_ai\n        second_min_node.min -> second_smallest_ai\n\n        secondSmallest_ai <- second_smallest_ai\n    }\n\n    \n    instance(x: 307, y: -186) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 456, y: -156) min_ai = list_min_node.min\n        \n        instance(x: 307, y: 12) removeMinNode root.Std_k98ojb.Iteration.Filter {\n            items(items_ai)\n            handler(it, index, context) {\n                Logic.Not(root.Std_k98ojb.Logic.Equal { left: it, right: min_ai })\n            }\n        }\n\n        out(x: 456, y: -12) filteredItems_ai = removeMinNode.output_list\n        \n        instance(x: 307, y: 252) secondMinNode root.Std_k98ojb.List.Min {}\n        filteredItems_ai -> secondMinNode.items\n        secondMinNode.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 354, y: -156) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -12) filter_min_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_min_node.items\n        min_ai -> filter_min_node.context\n        func(doc: \"filter out the smallest number\") handler {\n            in(x: -456, y: 30) property(Number) it_ai\n            in(x: -279, y: 30) property(Number) context_ai\n            out(x: 18, y: 30) property(Boolean) result_ai\n\n            instance(x: -156, y: 30) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node.left\n            context_ai -> logic_not_equal_node.right\n            logic_not_equal_node.notEqual -> result_ai\n        }\n        filter_min_node.handler -> handler.root\n        filter_min_node.output_list\n\n        instance(x: 307, y: 186) list_min_node_2 root.Std_k98ojb.List.Min {}\n        filter_min_node.output_list -> list_min_node_2.items\n        out(x: 454, y: 186) property(Number) secondSmallest_ai\n        list_min_node_2.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -246) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 456, y: -156) min_ai = list_min_node.min\n        \n        instance(x: 307, y: 12) removeMinNode root.Std_k98ojb.Iteration.Filter {\n            items(items_ai)\n            handler(it, index, context) {\n                Logic.Not(root.Std_k98ojb.Logic.Equal { left: it, right: min_ai })\n            }\n        }\n\n        out(x: 456, y: -12) filteredItems_ai = removeMinNode.output_list\n        \n        instance(x: 307, y: 252) secondMinNode root.Std_k98ojb.List.Min {}\n        filteredItems_ai -> secondMinNode.items\n        secondMinNode.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -159) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: 26) filter_func root.std_k98ojb.Filter {}\n        in(x: 459, y: 26) property(Function) handler_ai\n        min_ai -> filter_func.it\n        out(x: 159, y: -219) property(List) filtered_items_ai\n        items_ai -> filter_func.items\n        filter_func.output_list -> filtered_items_ai\n\n        instance(x: 307, y: 264) list_min_node_2 root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> list_min_node_2.items\n        out(x: 159, y: -219) property(Number) secondSmallest_ai\n        list_min_node_2.min -> secondSmallest_ai\n\n        func(doc: \"filter function to exclude the smallest number\") filter {\n            in(x: 459, y: 26) property(Number) it_ai\n            out(x: 159, y: -219) property(Boolean) result_ai\n\n            instance(x: 307, y: 26) math_not_equal root.Std_k98ojb.Math.NotEqual {}\n            min_ai -> math_not_equal.left\n            it_ai -> math_not_equal.right\n            out(x: 159, y: -219) property(Boolean) result_ai\n            math_not_equal.result -> result_ai\n        }\n    }\n\n    \n    instance(x: 307, y: 264) second_smallest_num_node root.main.second_smallest_num {}\n    instance(x: 307, y: 26) filter_func_instance root.std_k98ojb.Filter {}\n\n    handler_ai -> filter_func_instance.handler\n    items_ai -> filter_func_instance.items\n    filter_func_instance.output_list -> filtered_items_ai\n\n}"
            ],
            "40": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 604, y: 134, name: \"product\") property(Number) product_6f3a4c\n\n        instance(x: -250, y: 250) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            elem_9f6850 -> modulo_even_1088d5.value\n            2 -> modulo_even_1088d5.divisor\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_8b7e9d -> find_first_even_6d05b0.items\n\n        instance(x: -250, y: 340) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            elem_9f6850 -> modulo_odd_1088d5.value\n            2 -> modulo_odd_1088d5.divisor\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_8b7e9d -> find_first_odd_6d05b0.items\n\n        instance(x: -250, y: 430) multiply_1088d5 root.Std_k98ojb.Math.Mul {}\n        find_first_even_6d05b0.item -> multiply_1088d5.value\n        find_first_odd_6d05b0.item -> multiply_1088d5.divisor\n        multiply_1088d5.result -> product_6f3a4c\n    }\n\n    \n\n    instance(x: -250, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 604, y: 126, name: \"product\") property(Number) product_7f5a4c\n\n        instance(x: -10, y: 134) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -12, y: 166, name: \"elem\") property(Number) elem_7f6e5a\n\n            out(x: 134, y: 166, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: -82, y: 154) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: -34, y: 166) notequal_even_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_even_807ffd.right\n            modulo_even_1088d5.result -> notequal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_7f6e5a -> modulo_even_1088d5.value\n            notequal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_8b7e9d -> find_even_6d05b0.items\n        find_even_6d05b0.item -> 1\n\n        instance(x: -24, y: 314) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -36, y: 356, name: \"elem\") property(Number) elem_7f6e5a\n\n            out(x: 314, y: 356, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: -82, y: 344) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: -34, y: 356) equal_odd_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_odd_807ffd.right\n            modulo_odd_1088d5.result -> equal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_7f6e5a -> modulo_odd_1088d5.value\n            equal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_8b7e9d -> find_odd_6d05b0.items\n        find_odd_6d05b0.item -> 2\n\n        instance(x: -14, y: 494) mul_3a2fbc root.Std_k98ojb.Math.Pow {}\n        1 -> mul_3a2fbc.y\n        2 -> mul_3a2fbc.x\n        mul_3a2fbc.result -> product_7f5a4c\n    }\n\n    \n\n    instance(x: -60, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 614, y: 128, name: \"product\") property(Number) product_7f5a7c\n\n        instance(x: -10, y: 134) filter_even_7d6dbb root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -112, y: 144, name: \"elem\") property(Number) elem_5f3e6a\n\n            out(x: 104, y: 174, name: \"bool\") property(Bool) bool_c9d8b6\n\n            instance(x: -12, y: 164) modulo_even_6c9ebd root.Std_k98ojb.Math.Modulo {}\n            instance(x: -30, y: 154) equal_7f5a7c root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_7f5a7c.right\n            modulo_even_6c9ebd.result -> equal_7f5a7c.left\n            elem_5f3e6a -> modulo_even_6c9ebd.value\n            2 -> modulo_even_6c9ebd.divisor\n            equal_7f5a7c.result -> bool_c9d8b6\n        } -> filter_even_7d6dbb.handler\n        list_8b7e9d -> filter_even_7d6dbb.items\n        instance(x: -10, y: 234) first_odd_5f3e6a root.main.first_odd {}\n        func() {\n            in(x: -112, y: 244, name: \"list\") property(List) list_abed4a\n\n            out(x: 593, y: 238, name: \"number\") property(Number) number_3bc2ae\n\n            instance(x: 0, y: 234) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -113, y: 274, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 284, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 264) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n                instance(x: 310, y: 274) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                0 -> notequal_807ffd.right\n                modulo_1088d5.result -> notequal_807ffd.left\n                2 -> modulo_1088d5.divisor\n                elem_9f6850 -> modulo_1088d5.value\n                notequal_807ffd.result -> bool_af09a7\n            } -> find_6d05b0.predicate\n            list_abed4a -> find_6d05b0.items\n            find_6d05b0.item -> number_3bc2ae\n        } -> first_odd_5f3e6a.list\n        filter_even_7d6dbb.result -> first_odd_5f3e6a.list\n        instance(x: -10, y: 349) multiply_8c9ebd root.Std_k98ojb.Math.Pow {}\n        first_odd_5f3e6a.number -> multiply_8c9ebd.x\n        filter_even_7d6dbb.result -> multiply_8c9ebd.y\n        multiply_8c9ebd.result -> product_7f5a7c\n    }\n\n    \n\n    instance(x: -10, y: 429) product_first_even_odd_3bc2ae root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}"
            ],
            "41": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3323,
        "task_candidates": {
            "5": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -168, name: \"getter_3d9e6c\") getter_3d9e6c = result\n        mul_5bddd9.result -> getter_3d9e6c.value\n        execute_12bf99 -> mul_5bddd9.execute\n        getter_3d9e6c.continue -> continue_685c8f\n        getter_3d9e6c.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -98, y: -74) mul_3eacf5 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: -110, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 148, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_3eacf5.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_3eacf5.execute\n        setter_1cedb2.value -> getter_9cceb3.value\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_6f3e6d\n        in(x: -258, y: 179, name: \"b\") property(Number) b_bdfc4c\n        in(x: -260, y: 255, name: \"execute\") trigger() execute_6a7f3e\n\n        out(x: 104, y: 184, name: \"result\") property(Number) result_9d9bdf\n        out(x: 106, y: 255, name: \"continue\") trigger() continue_7c4a7f\n\n        instance(x: -30, y: 184) mul_2eacf4 root.Std_k98ojb.Math.Mul {\n            first: a_6f3e6d\n            second: b_bdfc4c\n        }\n        getter(x: 157, y: 184, name: \"getter_0a7f52\") getter_0a7f52 = result\n        mul_2eacf4.result -> getter_0a7f52.value\n        execute_6a7f3e -> mul_2eacf4.execute\n        getter_0a7f52.continue -> continue_7c4a7f\n    }\n\n    \n\n    instance(x: -189, y: -63) Multiply_0d9bdf root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 184, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -68, name: \"getter_3d9ebe\") getter_3d9ebe = result\n        mul_5bddd9.result -> getter_3d9ebe.value\n        execute_12bf99 -> mul_5bddd9.execute\n        getter_3d9ebe.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 181, name: \"result\") property(Number) result_b2508f\n        out(x: 68, y: 277, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: 240) mul_1eacf4 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 68, y: 208, name: \"getter_3d9c9c\") getter_3d9c9c = result\n        mul_1eacf4.result -> getter_3d9c9c.value\n        execute_12bf99 -> mul_1eacf4.execute\n        getter_3d9c9c.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 181, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -62, name: \"getter_3d6ebe\") getter_3d6ebe = result\n        mul_5bddd9.result -> getter_3d6ebe.value\n        execute_12bf99 -> mul_5bddd9.execute\n        getter_3d6ebe.continue -> continue_685c8f\n        getter_3d6ebe.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 68, y: 283, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -94, y: 178) mul_6bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 23, y: 183, name: \"getter_4d9ebe\") getter_4d9ebe = result\n        mul_6bddd9.result -> getter_4d9ebe.value\n        execute_12bf99 -> mul_6bddd9.execute\n        getter_4d9ebe.value -> result_b2508f\n        getter_4d9ebe.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_6f3e6d\n        in(x: -258, y: 179, name: \"b\") property(Number) b_bdfc4c\n        in(x: -258, y: 250, name: \"execute\") trigger() execute_7a7f3e\n\n        out(x: 64, y: 158, name: \"result\") property(Number) result_9d9bdc\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_0c4a7f\n\n        instance(x: -136, y: -110) mul_8eacf4 root.Std_k98ojb.Math.Mul {\n            first: a_6f3e6d\n            second: b_bdfc4c\n        }\n        getter(x: 25, y: -272, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 108, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_8eacf4.result -> setter_1cedb2.new_value\n        execute_7a7f3e -> mul_8eacf4.execute\n        getter_9cceb3.value -> result_9d9bdc\n        setter_1cedb2.continue -> continue_0c4a7f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5b4dcb root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: -112, name: \"getter_3cceb3\") getter_3cceb3 = result\n        mul_5b4dcb.result -> getter_3cceb3.value\n        execute_12bf99 -> mul_5b4dcb.execute\n        getter_3cceb3.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 184, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5b4dcb root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: -128, name: \"getter_3cceb3\") getter_3cceb3 = result\n        mul_5b4dcb.result -> getter_3cceb3.value\n        execute_12bf99 -> mul_5b4dcb.execute\n        getter_3cceb3.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -104) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 161, y: -55) max_val max_node.max\n\n        instance(x: 307, y: -219) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 161, y: -170) min_val min_node.min\n\n        instance(x: 45, y: -139) diff_node root.Std_k98ojb.Math.Sub {}\n        max_val -> diff_node.first\n        min_val -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -157) min_value_ai property(Number)\n\n        instance(x: 526, y: -103) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -157) min_value_ai property(Number)\n\n        instance(x: 526, y: -103) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -157) min_value_ai property(Number)\n\n        instance(x: 526, y: -103) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 464, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 464, y: -191) min_value_ai property(Number)\n\n        instance(x: 521, y: -130) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -104) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 160, y: -56) max_value_ai from max_node.max\n\n        instance(x: 307, y: -224) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 160, y: -176) min_value_ai from min_node.min\n\n        instance(x: 500, y: -136) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -157) min_value_ai property(Number)\n\n        instance(x: 563, y: -103) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}"
            ],
            "20": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f6cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f6cdd.left\n        find_odd_6d05b0.item -> subtract_8f6cdd.right\n        subtract_8f6cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f6cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f6cdd.left\n        find_odd_6d05b0.item -> subtract_8f6cdd.right\n        subtract_8f6cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f6cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f6cdd.left\n        find_odd_6d05b0.item -> subtract_8f6cdd.right\n        subtract_8f6cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}"
            ],
            "21": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -70) add_6e8af5 root.Std_k98ojb.Math.Add {}\n        instance(x: 120, y: -40) div_3a8e90 root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        0 -> add_6e8af5.first\n        forLoop_3a8e90.item -> add_6e8af5.second\n        add_6e8af5.result -> forLoop_3a8e90.next\n\n        add_6e8af5.result -> sum_2ad0d5\n        add_6e8af5.result -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 600, y: -50) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c09 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        n_0c09 -> div_3f11cd.first\n        sum_2ad0d5 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 128, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 628, y: -54) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 128, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 648, y: -55) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.accumulated -> add_8974a2.first\n        forLoop_3a8ej0.current -> add_8974a2.second\n        add_8974a2.result -> forLoop_3a8e90.nextValue\n        forLoop_3a8e90.output -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 188, y: 54) add_7d5c9d root.Std_k98ojb.Math.Add {}\n        instance(x: 288, y: 54) div_6e3a0f root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        0 -> add_7d5c9d.first\n\n        forLoop_3a8e90.item -> add_7d5c9d.second\n        add_7d5c9d.result -> forLoop_3a8e90.next\n\n        forLoop_3a8e90.done -> div_6e3a0f.first\n        sum_2ad0d5 <- forLoop_3a8e90.on_item\n        \n        n_0c0609 -> div_6e3a0f.second\n        add_7d5c9d.result -> average_4e2f6b\n\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 128, y: -75) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 628, y: -75) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c09 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.item -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        n_0c09 -> div_3f11cd.first\n        sum_2ad0d5 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n        \n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 648, y: -56) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.accumulated -> add_8974a2.first\n        forLoop_3a8ej0.current -> add_8974a2.second\n        add_8974a2.result -> forLoop_3a8e90.nextValue\n        forLoop_3a8e90.output -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 600, y: -50) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c09 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        n_0c09 -> div_3f11cd.first\n        sum_2ad0d5 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 188, y: 54) add_7d9c9d root.Std_k98ojb.Math.Add {}\n        instance(x: 288, y: 54) div_6e3a0f root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        forLoop_3a8e90.item -> add_7d9c9d.first\n        sum_2ad0d5 -> add_7d9c9d.second\n        add_7d9c9d.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_6e3a0f.first\n        n_0c0609 -> div_6e3a0f.second\n        div_6e3a0f.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 188, y: 54) add_7d9c9d root.Std_k98ojb.Math.Add {}\n        instance(x: 288, y: 54) div_6e3a0f root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        forLoop_3a8e90.item -> add_7d9c9d.first\n        sum_2ad0d5 -> add_7d9c9d.second\n        add_7d9c9d.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_6e3a0f.first\n        n_0c0609 -> div_6e3a0f.second\n        div_6e3a0f.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b2cdd\n\n        instance(x: -10, y: 50) characters_5f3dcb root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5f3dcb.input\n        instance(x: 10, y: 80) iterationMap_2c856f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -10, y: 100) property(String) char_7b2cdd\n\n            out(x: 30, y: 140) property(Bool) isRepeated_5f3dcb\n\n            instance(x: 50, y: 180) filter_6d05b0 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -20, y: 200) property(String) char_7b2cdd\n                out(x: 30, y: 240) property(Bool) isRepeated_5f3dcb\n\n                instance(x: 100, y: 280) contains_6d05b0 root.Std_k98ojb.Strings.Contains {}\n                char_7b2dd -> contains_6d05b0.contains\n                char_7b2cdd -> contains_6d05b0.input\n                contains_6d05b0.value -> isRepeated_5f3dcb\n            } -> filter_6d05b0.handler\n            instance(x: 180, y: 340) listSlice_2c856f root.Std_k98ojb.List.Slice {}\n            func() {\n                in(x: -20, y: 360) property(List) charsList_7b2cdd\n                out(x: 30, y: 400) property(List) slicedCharsList_5f3dcb\n\n                instance(x: 100, y: 440) listGetAt_6d05b0 root.Std_k98ojb.List.GetAt {}\n                charsList_7b2cdd -> listGetAt_6d05b0.list\n                char_7b2cdd -> listGetAt_6d05b0.index\n                listGetAt_6d05b0.item -> slicedCharsList_5f3dcb\n            } -> listSlice_2c856f.handler\n            instance(x: 180, y: 480) listConcat_7b2cdd root.Std_k98ojb.List.Concat {}\n            func() {\n                in(x: -20, y: 500) property(List) charsList_7b2cdd\n                out(x: 30, y: 540) property(List) concatenatedCharsList_5f3dcb\n\n                instance(x: 100, y: 580) listEmpty_6d05b0 root.Std_k98ojb.List.Empty {}\n                charsList_7b2cdd -> listConcat_7b2cdd.right\n                listEmpty_6d05b0.value -> listConcat_7b2cdd.left\n                listConcat_7b2cdd.result -> concatenatedCharsList_5f3dcb\n            } -> listConcat_7b2cdd.handler\n        } -> iterationMap_2c856f.handler\n        characters_5f3dcb.value -> iterationMap_2c856f.list\n        instance(x: 10, y: 40) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n        inputString_6d4e7a -> firstRepeatedChar_2c856f.inputString\n        repeatedChar_7b2cdd -> firstRepeatedChar_2c856f.repeatedChar\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c4b9f4\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) list_2c856f List.Empty {}\n        instance(x: -20, y: 15) forLoop_9f6850 root.Std_k98ojb.Iteration.For {}\n        characters_6d4e7a.characters -> forLoop_9f6850.items\n        instance(x: 30, y: 15) count_2c856f root.Std_k98ojb.Std.Count {}\n        instance(x: -20, y: 15) ifExpression_6d4e7a root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 30, y: 15) contains_2c856f root.Std_k98ojb.List.Contains {}\n        count_2c856f.count -> ifExpression_6d4e7a.expression\n        list_2c856f -> contains_2c856f.list\n        forLoop_9f6850.item -> contains_2c856f.item\n        instance(x: 30, y: 15) add_2c856f root.Std_k98ojb.List.Add {}\n        ifExpression_6d4e7a.value -> forLoop_9f6850.trigger\n        contains_2c856f.isEmpty -> ifExpression_6d4e7a.input\n        instance(x: 30, y: 15) firstItem_2c856f root.Std_k98ojb.List.FirstItem {}\n        add_2c856f.listWithItem -> list_2c856f\n        forLoop_9f6850.on_item -> count_2c856f.count\n        instance(x: 30, y: 15) lastItem_2c856f root.Std_k98ojb.List.LastItem {}\n        firstItem_2c856f.item -> repeatedChar_c4b9f4\n        forLoop_9f6850.done -> ifExpression_6d4e7a.input\n        count_2c856f.reset -> forLoop_9f6850.reset\n        characters_6d4e7a.characters -> add_2c856f.item\n    }\n\n    \n\n    instance(x: -13, y: 529) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c0bcbf\n\n        instance(x: -20, y: 15) characters_4c9d9a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_4c9d9a.input\n        instance(x: 30, y: 15) flattenList_2f3e4b root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) iterationMap_67eacf root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_af09a7\n\n            instance(x: 20, y: 15) countOccurrences_3b4e7a root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 20, y: 15) equalChar_3b4e7a root.Std_k98ojb.Logic.Equal {}\n                char_6d4e7a -> equalChar_3b4e7a.left\n                char_9f6850 -> equalChar_3b4e7a.right\n                equalChar_3b4e7a.result -> bool_af09a7\n            } -> countOccurrences_3b4e7a.handler\n            instance(x: 20, y: 15) listContains_6d4e7a root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 20, y: 15) containsChar_3b4e7a root.Std_k98ojb.Strings.Contains {}\n                char_6d4e7a -> containsChar_3b4e7a.input\n                char_9f6850 -> containsChar_3b4e7a.contains\n                containsChar_3b4e7a.value -> bool_af09a7\n            } -> listContains_6d4e7a.item\n            instance(x: 20, y: 15) listLength_3b4e7a root.Std_k98ojb.List.Length {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n                instance(x: 20, y: 15) listCount_3b4e7a root.Std_k98ojb.List.Count {}\n                char_6d4e7a -> listCount_3b4e7a.item\n                countOccurrences_3b4e7a.result -> listCount_3b4e7a.list\n                listCount_3b4e7a.count -> count_af09a7\n            } -> listLength_3b4e7a.list\n            instance(x: 20, y: 15) logicNotEqual_6d4e7a root.Std_k98ojb.Logic.NotEqual {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 20, y: 15) notEqualChar_3b4e7a root.Std_k98ojb.Logic.NotEqual {}\n                char_6d4e7a -> notEqualChar_3b4e7a.left\n                char_9f6850 -> notEqualChar_3b4e7a.right\n                notEqualChar_3b4e7a.result -> bool_af09a7\n            } -> logicNotEqual_6d4e7a.left\n            instance(x: 20, y: 15) listLength_6d4e7a root.Std_k98ojb.List.Length {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n                instance(x: 20, y: 15) listCount_3b4e7a root.Std_k98ojb.List.Count {}\n                char_6d4e7a -> listCount_3b4e7a.item\n                listContains_6d4e7a.result -> listCount_3b4e7a.list\n                listCount_3b4e7a.count -> count_af09a7\n            } -> listLength_6d4e7a.list\n            instance(x: 20, y: 15) logicEqual_6d4e7a root.Std_k98ojb.Logic.Equal {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 20, y: 15) equalChar_3b4e7a root.Std_k98ojb.Logic.Equal {}\n                char_6d4e7a -> equalChar_3b4e7a.left\n                char_9f6850 -> equalChar_3b4e7a.right\n                equalChar_3b4e7a.result -> bool_af09a7\n            } -> logicEqual_6d4e7a.left\n            instance(x: 20, y: 15) listLength_6d4e7a root.Std_k98ojb.List.Length {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n                instance(x: 20, y: 15) listCount_3b4e7a root.Std_k98ojb.List.Count {}\n                char_6d4e7a -> listCount_3b4e7a.item\n                logicNotEqual_6d4e7a.result -> listCount_3b4e7a.list\n                listCount_3b4e7a.count -> count_af09a7\n            } -> listLength_6d4e7a.list\n            instance(x: 20, y: 15) logicNotEqual_6d4e7a root.Std_k98ojb.Logic.NotEqual {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 20, y: 15) notEqualChar_3b4e7a root.Std_k98ojb.Logic.NotEqual {}\n                char_6d4e7a -> notEqualChar_3b4e7a.left\n                char_9f6850 -> notEqualChar_3b4e7a.right\n                notEqualChar_3b4e7a.result -> bool_af09a7\n            } -> logicNotEqual_6d4e7a.left\n            instance(x: 20, y: 15) listLength_6d4e7a root.Std_k98ojb.List.Length {}\n            func()",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b9f5c\n\n        instance(x: -20, y: 100) characters_7d5bdc root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_7d5bdc.input\n\n        instance(x: -20, y: 150) iterationMap_3f5cdd root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -10, y: 60, name: \"char\") property(String) char_7d4e7a\n\n            out(x: 20, y: 60, name: \"index\") property(Number) index_3f5cdd\n\n            instance(x: -10, y: 90) count_8b9f5c root.Std_k98ojb.Std.Count {}\n            func() {\n                in(x: -20, y: 60, name: \"reset\") property(Bool) reset_7d4e7a\n                instance(x: -10, y: 30) countTrigger_3f5cdd root.Std_k98ojb.Std.Count.count {}\n                func() {\n                    in(x: -20, y: 60, name: \"increment\") property(Bool) increment_7d4e7a\n                    instance(x: -10, y: 30) countResetTrigger_3f5cdd root.Std_k98ojb.Std.Count.reset {}\n                    func() {\n                        out(x: 20, y: 60, name: \"count\") property(Number) count_7d4e7a\n                    } -> countTrigger_3f5cdd\n                } -> countResetTrigger_3f5cdd\n            } -> count_8b9f5c\n\n            instance(x: -10, y: 120) filter_6b9f5c root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -20, y: 60, name: \"char\") property(String) char_7d4e7a\n                out(x: 20, y: 60, name: \"bool\") property(Bool) bool_3f5cdd\n\n                instance(x: -10, y: 90) contains_8b9f5c root.Std_k98ojb.Strings.Contains {}\n                func() {\n                    in(x: -20, y: 60, name: \"input\") property(String) input_7d4e7a\n                    instance(x: -10, y: 30) containsContains_3f5cdd root.Std_k98ojb.Strings.Contains.contains {}\n                    func() {\n                        out(x: 20, y: 60, name: \"contains\") property(Bool) contains_7d4e7a\n                    } -> containsContains_3f5cdd\n                } -> contains_8b9f5c\n\n                char_7d4e7a -> contains_8b9f5c.input\n                index_3bc2ae -> contains_8b9f5c.contains\n                contains_8b9f5c.contains -> bool_3f5cdd\n            } -> filter_6b9f5c\n\n            instance(x: -10, y: 150) firstOdd_7d4e7a root.main.first_odd {}\n            func() {\n                in(x: -20, y: 60, name: \"list\") property(List) list_3f5cdd\n                out(x: 20, y: 60, name: \"number\") property(Number) number_7d4e7a\n\n                instance(x: -10, y: 90) find_8b9f5c root.Std_k98ojb.Iteration.Find {}\n                func() {\n                    in(x: -20, y: 60, name: \"elem\") property(Number) elem_3f5cdd\n                    out(x: 20, y: 60, name: \"bool\") property(Bool) bool_7d4e7a\n\n                    instance(x: -10, y: 90) modulo_8b9f5c root.Std_k98ojb.Math.Modulo {}\n                    func() {\n                        in(x: -20, y: 60, name: \"value\") property(Number) value_3f5cdd\n                        instance(x: -10, y: 30) divisor_7d4e7a root.Std_k98ojb.Math.Modulo.divisor {}\n                        func() {\n                            out(x: 20, y: 60, name: \"result\") property(Number) result_3f5cdd\n                        } -> divisor_7d4e7a\n                    } -> modulo_8b9f5c\n\n                    instance(x: -10, y: 120) notequal_8b9f5c root.Std_k98ojb.Logic.NotEqual {}\n                    func() {\n                        in(x: -20, y: 60, name: \"left\") property(Number) left_3f5cdd\n                        instance(x: -10, y: 30) right_7d4e7a root.Std_k98ojb.Logic.NotEqual.right {}\n                        func() {\n                            out(x: 20, y: 60, name: \"result\") property(Bool) result_3f5cdd\n                        } -> right_7d4e7a\n                    } -> notequal_8b9f5c\n\n                    value_3bc2ae -> modulo_8b9f5c.value\n                    2 -> modulo_8b9f5c.divisor\n                    modulo_8b9f5c.result -> notequal_8b9f5c.left\n                    0 -> notequal_8b9f5c.right\n                    notequal_8b9f5c.result -> bool_7d4e7a\n                } -> find_8b9f5c.predicate\n                list_3bc2ae -> find_8b9f5c.items\n                find_8b9f5c.item -> number_7d4e7a\n            } -> firstOdd_7d4e7a\n\n            index_3bc2ae -> countResetTrigger_3f5cdd.reset\n            char_7d4e7a -> filter_6b9f5c.elem\n            filter_6b9f5c.bool -> iterationMap_3f5cdd.predicate\n        } -> iterationMap_3f5cdd\n\n        instance(x: -20, y: 200) firstOdd_8b9f5c root.main.first_odd {}\n        func() {\n            in(x: -20, y: 60, name: \"list\") property(List) list_7d4e7a\n            out(x: 20, y: 60, name: \"number\") property(Number) number_3f5cdd\n\n            instance(x: -10, y: 90) find_8b9f5c root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -20, y: 60, name: \"elem\") property(Number) elem_7d4e7a\n                out(x: 20, y: 60, name: \"bool\") property(Bool) bool_3f5cdd\n\n                instance(x: -10, y: 90) modulo_8b9f5c root.Std_k98ojb.Math.Modulo {}\n                func() {\n                    in(x: -20, y: 60, name: \"value\") property(Number) value_7d4e7a\n                    instance(x: -10, y: 30) divisor_3f5cdd root.Std_k98ojb.Math.Modulo.divisor {}\n                    func() {\n                        out(x: 20, y: 60, name: \"result\") property(Number) result_7d4e7a\n                    } -> divisor_3f5cdd\n                } -> modulo_8b9f5c\n\n                instance(x: -10, y: 120) notequal_8b9f5c root.Std_k98ojb.Logic.NotEqual {}\n                func() {\n                    in(x: -20, y: 60, name: \"left\") property(Number) left_7d4e7a\n                    instance(x: -10, y: 30) right",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b9f4c\n\n        instance(x: -20, y: 100) characters_5d9d6d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5d9d6d.input\n        out(characters_5d9d6d.characters, x: -20, y: 130) property(List) charactersList_5f5c78\n\n        instance(x: -20, y: 240) findFirstRepeatedChar_6b9f4c root.main.findFirstRepeatedChar {}\n        charactersList_5f5c78 -> findFirstRepeatedChar_6b9f4c.chars\n        out(findFirstRepeatedChar_6b9f4c.repeatedChar, x: 389, y: 100) property(String) repeatedChar_6b9f4c\n\n    }\n\n    func(doc: \"Helper function to find the first repeated character in a list of characters.\") findFirstRepeatedChar {\n        in(x: -20, y: 15, name: \"chars\") property(List) chars_7a8d3e\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b9f4c\n\n        instance(x: -20, y: 50) countOccurrences_5f5c78 root.main.countOccurrences {}\n        chars_7a8d3e -> countOccurrences_5f5c78.chars\n        out(countOccurrences_5f5c78.occurrences, x: -20, y: 100) property(Map) occurrencesMap_6b9f4c\n\n        instance(x: -20, y: 150) findFirstRepeatedCharHelper_6b9f4c root.main.findFirstRepeatedCharHelper {}\n        chars_7a8d3e -> findFirstRepeatedCharHelper_6b9f4c.chars\n        occurrencesMap_6b9f4c -> findFirstRepeatedCharHelper_6b9f4c.occurrences\n        out(findFirstRepeatedCharHelper_6b9f4c.repeatedChar, x: 389, y: 100) property(String) repeatedChar_6b9f4c\n\n    }\n\n    func(doc: \"Counts the occurrences of each character in a list.\") countOccurrences {\n        in(x: -20, y: 15, name: \"chars\") property(List) chars_7a8d3e\n\n        out(x: 389, y: 15, name: \"occurrences\") property(Map) occurrencesMap_6b9f4c\n\n        instance(x: -20, y: 50) mapOccurrences_5f5c78 root.Std_k98ojb.Iteration.Map {}\n        chars_7a8d3e -> mapOccurrences_5f5c78.items\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_6b9f4c\n\n            out(x: 515, y: 44, name: \"occurrence\") property(Number) occurrence_6b9f4c\n\n            instance(x: -20, y: 80) getOccurrences_5f5c78 root.main.getOccurrences {}\n            char_6b9f4c -> getOccurrences_5f5c78.char\n            out(getOccurrences_5f5c78.occurrence, x: 389, y: 100) property(Number) occurrence_6b9f4c\n\n        } -> mapOccurrences_5f5c78.mapper\n        out(mapOccurrences_5f5c78.mapped, x: -20, y: 100) property(Map) occurrencesMap_6b9f4c\n\n    }\n\n    func(doc: \"Gets the occurrence of a character in a map.\") getOccurrences {\n        in(x: -20, y: 15, name: \"char\") property(String) char_7a8d3e\n        in(x: -20, y: 60, name: \"occurrences\") property(Map) occurrencesMap_6b9f4c\n\n        out(x: 389, y: 15, name: \"occurrence\") property(Number) occurrence_7a8d3e\n\n        instance(x: -20, y: 50) getOccurrence_5f5c78 root.Std_k98ojb.Map.Get {}\n        occurrencesMap_6b9f4c -> getOccurrence_5f5c78.map\n        char_7a8d3e -> getOccurrence_5f5c78.key\n        out(getOccurrence_5f5c78.value, x: 389, y: 100) property(Number) occurrence_7a8d3e\n\n    }\n\n    func(doc: \"Helper function to find the first repeated character in a list of characters given occurrences.\") findFirstRepeatedCharHelper {\n        in(x: -20, y: 15, name: \"chars\") property(List) chars_7a8d3e\n        in(x: -20, y: 60, name: \"occurrences\") property(Map) occurrencesMap_6b9f4c\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7a8d3e\n\n        instance(x: -20, y: 50) findFirstRepeatedCharHelperInner_5f5c78 root.main.findFirstRepeatedCharHelperInner {}\n        chars_7a8d3e -> findFirstRepeatedCharHelperInner_5f5c78.chars\n        occurrencesMap_6b9f4c -> findFirstRepeatedCharHelperInner_5f5c78.occurrences\n        out(findFirstRepeatedCharHelperInner_5f5c78.repeatedChar, x: 389, y: 100) property(String) repeatedChar_7a8d3e\n\n    }\n\n    func(doc: \"Inner helper function to find the first repeated character in a list of characters given occurrences.\") findFirstRepeatedCharHelperInner {\n        in(x: -20, y: 15, name: \"chars\") property(List) chars_7a8d3e\n        in(x: -20, y: 60, name: \"occurrences\") property(Map) occurrencesMap_6b9f4c\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7a8d3e\n\n        instance(x: -20, y: 50) checkFirstChar_5f5c78 root.main.checkFirstChar {}\n        chars_7a8d3e -> checkFirstChar_5f5c78.chars\n        occurrencesMap_6b9f4c -> checkFirstChar_5f5c78.occurrences\n        out(checkFirstChar_5f5c78.repeatedChar, x: 389, y: 100) property(String) repeatedChar_7a8d3e\n\n    }\n\n    func(doc: \"Checks if the first character is repeated.\") checkFirstChar {\n        in(x: -20, y: 15, name: \"chars\") property(List) chars_7a8d3e\n        in(x: -20, y: 60, name: \"occurrences\") property(Map) occurrencesMap_6b9f4c\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7a8d3e\n\n        instance(x: -20, y: 50) getFirstChar_5f5c78 root.Std_k98ojb.List.Get {}\n        chars_7a8d3e -> getFirstChar_5f5c78.list\n        0 -> getFirstChar_5f5c78.index\n        out(getFirstChar_5f5c78.value, x: -20, y: 100) property(String) firstChar_6b9f4c\n\n        instance(x: -20, y: 150) checkOccurrence_5f5c78 root.main.checkOccurrence {}\n        firstChar_6b9f4c -> checkOccurrence_5f5c78.char\n        occurrencesMap_6b9f4c ->",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c9bdfc\n\n        instance(x: -20, y: 15) characters_6f6eab root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6f6eab.input\n        instance(x: 30, y: 15) listEmpty_5c2ebd root.Std_k98ojb.List.Empty {}\n        instance(x: -20, y: 15) firstItem_5c4e7a root.Std_k98ojb.List.FirstItem {}\n        instance(x: 30, y: 15) notEmpty_6f6eab root.Std_k98ojb.List.NotEmpty {}\n        instance(x: -20, y: 15) contains_5c4e7a root.Std_k98ojb.List.Contains {}\n        instance(x: 30, y: 15) removeAt_5c4e7a root.Std_k98ojb.List.Remove {}\n        instance(x: -20, y: 15) map_6f6eab root.Std_k98ojb.Iteration.Map {}\n\n        characters_6f6eab.characters -> listEmpty_5c2ebd\n        listEmpty_5c2ebd.isEmpty -> notEmpty_6f6eab\n        characters_6f6eab.characters -> contains_5c4e7a.list\n        firstItem_5c4e7a.item -> contains_5c4e7a.item\n        characters_6f6eab.characters -> removeAt_5c4e7a.list\n        firstItem_5c4e7a.item -> removeAt_5c4e7a.index\n        removeAt_5c4e7a.listWithoutItem -> map_6f6eab.items\n\n        func() {\n            in(x: -10, y: 30) property(String) char_9f6850\n            instance(x: -20, y: 15) contains_9f6850 root.Std_k98ojb.List.Contains {}\n            firstItem_5c4e7a.item -> contains_9f6850.item\n            map_6f6eab.item -> contains_9f6850.list\n\n            contains_9f6850.result -> Std.IfExpression {\n                expression: \"it\"\n            }\n        } -> map_6f6eab.handler\n\n        notEmpty_6f6eab.isEmpty -> firstItem_5c4e7a\n        contains_5c4e7a.result -> firstItem_5c4e7a\n        map_6f6eab.output_list -> firstRepeatedChar\n    }\n}\n\ninstance(x: -20, y: 15) main_firstRepeatedChar root.main.firstRepeatedChar {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c0bcbf\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) filter_2c856f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_7eacf4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_6d05b0 root.Std_k98ojb.Strings.Contains {}\n            char_7eacf4 -> contains_6d05b0.input\n            char_7eacf4 -> contains_6d05b0.contains\n            instance(x: 310, y: 35) not_2c856f root.Std_k98ojb.Logic.Not {}\n            contains_6d05b0.value -> not_2c856f.input\n            not_2c856f.output -> bool_af09a7\n        } -> filter_2c856f.handler\n        characters_6d4e7a.characters -> filter_2c856f.items\n        instance(x: 130, y: 15) firstItem_6d4e7a root.Std_k98ojb.List.FirstItem {}\n        filter_2c856f.output_list -> firstItem_6d4e7a.list\n        firstItem_6d4e7a.item -> repeatedChar_c0bcbf\n    }\n\n    \n\n    instance(x: -13, y: 529) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c0bcbf\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) flattenList_2c856f root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) filterRepeatedChar_2c856f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) countChar_1088d5 root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n                out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n                instance(x: 89, y: 29) countCharOccurrences_1088d5 root.Std_k98ojb.List.Filter {}\n                func() {\n                    in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                    instance(x: 89, y: 29) equalChar_1088d5 root.Std_k98ojb.Logic.Equal {}\n                    char_6d4e7a -> equalChar_1088d5.left\n                    char_6d4e7a -> equalChar_1088d5.right\n                    equalChar_1088d5.result -> bool_af09a7\n                } -> countCharOccurrences_1088d5.handler\n                char_6d4e7a -> countCharOccurrences_1088d5.items\n                instance(x: 30, y: 29) lengthCount_2c856f root.Std_k98ojb.List.Length {}\n                countCharOccurrences_1088d5.output_list -> lengthCount_2c856f.list\n                lengthCount_2c856f.length -> count_af09a7\n            } -> countChar_1088d5.handler\n            char_9f6850 -> countChar_1088d5.items\n            instance(x: 30, y: 29) greaterThanOne_2c856f root.Std_k98ojb.Math.GreaterThanOrEqual {}\n            countChar_1088d5.output_list -> greaterThanOne_2c856f.left\n            1 -> greaterThanOne_2c856f.right\n            greaterThanOne_2c856f.result -> bool_af09a7\n        } -> filterRepeatedChar_2c856f.handler\n        flattenList_2c856f.output_list -> filterRepeatedChar_2c856f.items\n        instance(x: 30, y: 15) firstChar_2c856f root.Std_k98ojb.List.First {}\n        filterRepeatedChar_2c856f.output_list -> firstChar_2c856f.list\n        firstChar_2c856f.first -> repeatedChar_c0bcbf\n    }\n\n    instance(x: -20, y: 15) mainFunction_2c856f root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b2cdd\n\n        instance(x: -10, y: 50) characters_4f5b6b root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_4f5b6b.input\n        instance(x: 30, y: 80) map_2c1bfe root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -10, y: 100) property(String) char_7a4e5d\n\n            out(x: 10, y: 130) property(Obj) obj_6c2fdd\n\n            instance(x: 50, y: 150) list_9b8cfd root.Std_k98ojb.List.Empty {}\n            instance(x: 70, y: 170) add_4d3eab root.Std_k98ojb.List.Add {}\n            char_7a4e5d -> add_4d3eab.item\n            list_9b8cfd -> add_4d3eab.list\n            add_4d3eab.listWithItem -> obj_6c2fdd\n        } -> map_2c1bfe.handler\n        characters_4f5b6b.characters -> map_2c1bfe.items\n        instance(x: 10, y: 190) filter_7d8eab root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -10, y: 230) property(Obj) obj_6c2fdd\n\n            out(x: 10, y: 260) property(Bool) bool_5d4eab\n\n            instance(x: 50, y: 290) length_8b7cfd root.Std_k98ojb.List.Length {}\n            obj_6c2fdd -> length_8b7cfd.list\n            instance(x: 70, y: 310) greaterthan_4d3eab root.Std_k98ojb.Math.GreaterThan {}\n            1 -> greaterthan_4d3eab.right\n            length_8b7cfd.result -> greaterthan_4d3eab.left\n            greaterthan_4d3eab.result -> bool_5d4eab\n        } -> filter_7d8eab.handler\n        map_2c1bfe.output_list -> filter_7d8eab.items\n        instance(x: 10, y: 330) firstitem_6d9eab root.Std_k98ojb.List.FirstItem {}\n        filter_7d8eab.output_list -> firstitem_6d9eab.list\n        instance(x: 50, y: 350) getat_2c1bfe root.Std_k98ojb.List.GetAt {}\n        firstitem_6d9eab.item -> getat_2c1bfe.index\n        characters_4f5b6b.characters -> getat_2c1bfe.list\n        getat_2c1bfe.result -> repeatedChar_7b2cdd\n    }\n\n    \n\n    instance(x: -30, y: 50) firstRepeatedChar_9d8eab root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b6c4f\n\n        instance(x: -20, y: 100) characters_5b4b7b root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5b4b7b.input\n        instance(x: -20, y: 150) iterationMap_3f5cbb root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -20, y: 200) property(String) char_6d4e7a\n            out(x: -20, y: 250) property(Bool) isRepeated_6b6c4f\n\n            instance(x: -20, y: 300) contains_891bfb root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -20, y: 350) property(String) char_7d4e7a\n                out(x: -20, y: 400) property(Bool) containsResult_6b6c4f\n\n                instance(x: -20, y: 450) listGetAt_891bfb root.Std_k98ojb.List.GetAt {}\n                func() {\n                    in(x: -20, y: 500) property(Number) index_7d4e7a\n                    out(x: -20, y: 550) property(List) listWithChar_6b6c4f\n\n                    instance(x: -20, y: 600) listAdd_891bfb root.Std_k98ojb.List.Add {}\n                    func() {\n                        in(x: -20, y: 650) property(String) char_7d4e7a\n                        out(x: -20, y: 700) property(List) listWithChar_6b6c4f\n\n                        instance(x: -20, y: 750) emptyList_891bfb root.Std_k98ojb.List.Empty {}\n                        char_7d4e7a -> listAdd_891bfb.item\n                        emptyList_891bfb -> listAdd_891bfb.list\n                        listAdd_891bfb.listWithItem -> listWithChar_6b6c4f\n                    }\n                    index_7d4e7a -> listGetAt_891bfb.index\n                    list_abed4a -> listGetAt_891bfb.list\n                    listGetAt_891bfb.item -> char_7d4e7a\n                }\n                containsResult_6b6c4f -> contains_891bfb.contains\n                listWithChar_6b6c4f -> contains_891bfb.list\n            }\n            isRepeated_6b6c4f -> Std_k98ojb.IfExpression.expression\n            char_6d4e7a -> contains_891bfb.item\n        } -> iterationMap_3f5cbb.mapFunc\n        characters_5b4b7b.chars -> iterationMap_3f5bcb.list\n        instance(x: -20, y: 800) ifExpression_6d4e7a root.Std_k98ojb.IfExpression {}\n        func() {\n            in(x: -20, y: 850) property(Bool) isRepeated_6b6c4f\n            out(x: -20, y: 900) property(String) repeatedChar_6b6c4f\n\n            instance(x: -20, y: 950) char_6d4e7a root.Std_k98ojb.Property {}\n            func() {\n                in(x: -20, y: 1000) property(String) repeatedChar_6b6c4f\n                out(x: -20, y: 1050) property(String) repeatedChar_6b6c4f\n\n                instance(x: -20, y: 1100) emptyString_891bfb root.Std_k98ojb.Property {}\n                func() {\n                    out(x: -20, y: 1150) property(String) repeatedChar_6b6c4f\n\n                    instance(x: -20, y: 1200) emptyString_891bfb root.Std_k98ojb.Property {}\n                }\n            } -> ifExpression_6d4e7a.then\n            char_6d4e7a.value -> repeatedChar_6b6c4f\n        } -> ifExpression_6d4e7a.else_\n        iterationMap_3f5cbb.list -> ifExpression_6d4e7a.condition\n    }\n\n    instance(x: -20, y: 1250) firstRepeatedChar_891bfb root.main.firstRepeatedChar {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -124) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from the list.\") remove_smallest {\n            in(x: -360, y: -87, name: \"items\") property(List) items_bi\n            in(x: 59, y: -124, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 459, y: -124, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 307, y: -86) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[1])\n            func(doc: \"predicate function to check if the item is not equal to the smallest number.\") predicate {\n                in(x: 307, y: -45) item property(Number)\n                out(x: 307, y: -45) result property(Boolean)\n\n                instance(x: 307, y: -45) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                item -> (logic_not_equal_node.left)\n                smallestNum_ai -> (logic_not_equal_node.right)\n                logic_not_equal_node.notEqual -> result\n            }\n            predicate {} -> filter_node.handler\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        \n        instance(x: 459, y: -124) remove_smallest_node root.main.remove_smallest {}\n        items_ai -> (remove_smallest_node.items)\n        min_ai -> (remove_smallest_node.smallestNum)\n        out(x: 630, y: -124) listWithoutSmallest_bi = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 592, y: -216) second_min_node root.Std_k98ojb.List.Min {}\n        listWithoutSmallest_bi -> second_min_node.items\n        second_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 354, y: -159) property(List) minRemovedList_ai\n        \n        instance(x: 354, y: -159) removeFirstInstanceNode root.std.List.Remove {}\n        list_min_node.min -> removeFirstInstanceNode.index\n        items_ai -> removeFirstInstanceNode.list\n        removeFirstInstanceNode.listWithoutItem -> minRemovedList_ai\n\n        instance(x: 260, y: -73) secondMinNode root.Std_k98ojb.List.Min {}\n        minRemovedList_ai -> secondMinNode.items\n        secondMinNode.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node main.second_smallest_num {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 359, y: -159) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -64) filter_min_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_min_node.items\n        min_ai -> filter_min_node.context\n        func(doc: \"filter out the smallest number\") handler {\n            in(x: -251, y: 30) property(Number) it_ai\n            in(x: -46, y: 30) property(Number) context_ai\n            out(x: 97, y: 30) property(Boolean) result_ai\n\n            instance(x: -8, y: 30) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node.left\n            context_ai -> logic_not_equal_node.right\n            logic_not_equal_node.notEqual -> result_ai\n        }\n        filter_min_node.handler -> handler.root\n        out(x: 359, y: -64) property(List) filtered_items_ai\n        filter_min_node.output_list -> filtered_items_ai\n\n        instance(x: 307, y: 128) second_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> second_min_node.items\n        out(x: 359, y: 128) property(Number) secondMin_ai\n        second_min_node.min -> secondMin_ai\n\n        instance(x: 307, y: 226) filter_second_min_node root.Std_k98ojb.Iteration.Filter {}\n        filtered_items_ai -> filter_second_min_node.items\n        secondMin_ai -> filter_second_min_node.context\n        func(doc: \"filter out the second smallest number\") handler_1 {\n            in(x: -251, y: 30) property(Number) it_ai\n            in(x: -46, y: 30) property(Number) context_ai\n            out(x: 97, y: 30) property(Boolean) result_ai\n\n            instance(x: -8, y: 30) logic_not_equal_node_1 root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node_1.left\n            context_ai -> logic_not_equal_node_1.right\n            logic_not_equal_node_1.notEqual -> result_ai\n        }\n        filter_second_min_node.handler -> handler_1.root\n        out(x: 359, y: 226) property(List) filtered_items_1_ai\n        filter_second_min_node.output_list -> filtered_items_1_ai\n\n        instance(x: 307, y: 324) third_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_1_ai -> third_min_node.items\n        secondSmallest_ai <- third_min_node.min\n    }\n\n    \n    instance(x: 307, y: -64) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 359, y: -168) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -124) filter_first_min root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_first_min.items\n        min_ai -> filter_first_min.context\n        func(doc: \"filters out the first minimum value\") handler {\n            in(x: -564, y: 30) property(Number) it_ai\n            in(x: -289, y: 30) property(Number) context_ai\n            out(x: 17, y: 30) property(Boolean) result_ai\n\n            instance(x: -426, y: 30) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node.left\n            context_ai -> logic_not_equal_node.right\n            logic_not_equal_node.notEqual -> result_ai\n        }\n        filter_first_min.handler -> handler.root\n        filter_first_min.output_list -> secondSmallest_ai\n\n        instance(x: 307, y: -82) list_min_node_1 root.Std_k98ojb.List.Min {}\n        secondSmallest_ai -> list_min_node_1.items\n        out(x: 456, y: -82) property(Number) second_smallest_ai\n        list_min_node_1.min -> second_smallest_ai\n        second_smallest_ai -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -246) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -159) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: 26) filter_min_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_min_node.items\n        min_ai -> filter_min_node.context\n        func(doc: \"filter out the smallest number\") handler {\n            in(x: -451, y: 30) property(Number) it_ai\n            in(x: -297, y: 30) property(Number) context_ai\n            out(x: 68, y: 30) property(Boolean) result_ai\n\n            instance(x: -159, y: 30) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node.left\n            context_ai -> logic_not_equal_node.right\n            logic_not_equal_node.notEqual -> result_ai\n        }\n        filter_min_node.handler -> handler.root\n        out(x: 459, y: 106) property(List) filtered_items_ai\n        filter_min_node.output_list -> filtered_items_ai\n\n        instance(x: 307, y: 208) second_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> second_min_node.items\n        out(x: 459, y: 169) property(Number) secondSmallestNumber_ai\n        second_min_node.min -> secondSmallestNumber_ai\n\n        secondSmallestNumber_ai -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: 208) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 359, y: -169) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -124) filter_min_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_min_node.items\n        min_ai -> filter_min_node.context\n        func(doc: \"filter out the smallest number\") handler {\n            in(x: -56, y: 30) property(Number) it_ai\n            in(x: 148, y: 30) property(Number) context_ai\n            out(x: 279, y: 30) property(Boolean) result_ai\n\n            instance(x: 10, y: 30) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> not_equal_node.left\n            context_ai -> not_equal_node.right\n            not_equal_node.notEqual -> result_ai\n        }\n        filter_min_node.handler -> handler.root\n        out(x: 426, y: -103) property(List) filtered_items_ai\n        filter_min_node.output_list -> filtered_items_ai\n\n        instance(x: 307, y: -58) second_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> second_min_node.items\n        out(x: 426, y: -37) property(Number) secondSmallest_ai\n        second_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -58) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 354, y: -156) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -12) filter_min_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_min_node.items\n        min_ai -> filter_min_node.context\n        func(doc: \"filter out the smallest number\") handler {\n            in(x: -456, y: 30) property(Number) it_ai\n            in(x: -279, y: 30) property(Number) context_ai\n            out(x: 18, y: 30) property(Boolean) result_ai\n\n            instance(x: -183, y: 30) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node.left\n            context_ai -> logic_not_equal_node.right\n            logic_not_equal_node.notEqual -> result_ai\n        }\n        filter_min_node.handler -> handler.root\n        filter_min_node.output_list\n\n        instance(x: 307, y: 186) list_min_node_2 root.Std_k98ojb.List.Min {}\n        filter_min_node.output_list -> list_min_node_2.items\n        out(x: 454, y: 186) property(Number) secondSmallest_ai\n        list_min_node_2.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -246) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 354, y: -159) property(List) minRemovedList_ai\n        \n        instance(x: 354, y: -159) removeFirstInstanceNode root.std.List.Remove {}\n        list_min_node.min -> removeFirstInstanceNode.index\n        items_ai -> removeFirstInstanceNode.list\n        removeFirstInstanceNode.listWithoutItem -> minRemovedList_ai\n\n        instance(x: 260, y: -73) secondMinNode root.Std_k98ojb.List.Min {}\n        minRemovedList_ai -> secondMinNode.items\n        secondMinNode.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node main.second_smallest_num {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -124) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from the list.\") remove_smallest {\n            in(x: -360, y: -87, name: \"items\") property(List) items_bi\n            in(x: 59, y: -124, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 459, y: -124, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 307, y: -86) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[1])\n            func(doc: \"predicate function to check if the item is not equal to the smallest number.\") predicate {\n                in(x: 307, y: -45) item property(Number)\n                out(x: 307, y: -45) result property(Boolean)\n\n                instance(x: 307, y: -45) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                item -> (logic_not_equal_node.left)\n                smallestNum_ai -> (logic_not_equal_node.right)\n                logic_not_equal_node.notEqual -> result\n            }\n            predicate {} -> filter_node.handler\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        \n        instance(x: 459, y: -124) remove_smallest_node root.main.remove_smallest {}\n        items_ai -> (remove_smallest_node.items)\n        min_ai -> (remove_smallest_node.smallestNum)\n        out(x: 630, y: -124) listWithoutSmallest_bi = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 592, y: -216) second_min_node root.Std_k98ojb.List.Min {}\n        listWithoutSmallest_bi -> second_min_node.items\n        second_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 456, y: -123) min_ai list_min_node.min\n        \n        instance(x: 307, y: 12) removeMinNode root.Std_k98ojb.Iteration.Filter {\n            handler(it) {\n                Math.GreaterThan(left: it, right: min_ai)\n            }\n        }\n        items_ai -> removeMinNode.items\n        out(x: 456, y: -30) filteredItems_ai removeMinNode.output_list\n        \n        instance(x: 307, y: 192) secondMinNode root.Std_k98ojb.List.Min {}\n        filteredItems_ai -> secondMinNode.items\n        out(x: 456, y: 159) secondSmallest_ai secondMinNode.min\n    }\n\n    \n    instance(x: 307, y: 192) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ],
            "40": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 614, y: 134, name: \"product\") property(Number) product_7f5a4c\n\n        instance(x: -20, y: 180) find_even_7d6d6d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -130, y: 180, name: \"elem\") property(Number) elem_5e4a7c\n\n            out(x: 20, y: 180, name: \"bool\") property(Bool) bool_6b9d5f\n\n            instance(x: -30, y: 150) modulo_even_4b6d6d root.Std_k98ojb.Math.Modulo {}\n            instance(x: -20, y: 120) notequal_even_7d6d6d root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_even_7d6d6d.right\n            modulo_even_4b6d6d.result -> notequal_even_7d6d6d.left\n            2 -> modulo_even_4b6d6d.divisor\n            elem_5e4a7c -> modulo_even_4b6d6d.value\n            notequal_even_7d6d6d.result -> bool_6b9d5f\n        } -> find_even_7d6d6d.predicate\n        list_8b7e9d -> find_even_7d6d6d.items\n\n        instance(x: -20, y: 310) find_odd_7d6d6d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -130, y: 310, name: \"elem\") property(Number) elem_5e4a7c\n\n            out(x: 20, y: 310, name: \"bool\") property(Bool) bool_6b9d5f\n\n            instance(x: -30, y: 280) modulo_odd_4b6d6d root.Std_k98ojb.Math.Modulo {}\n            instance(x: -20, y: 250) notequal_odd_7d6d6d root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_odd_7d6d6d.right\n            modulo_odd_4b6d6d.result -> notequal_odd_7d6d6d.left\n            2 -> modulo_odd_4b6d6d.divisor\n            elem_5e4a7c -> modulo_odd_4b6d6d.value\n            notequal_odd_7d6d6d.result -> bool_6b9d5f\n        } -> find_odd_7d6d6d.predicate\n        list_8b7e9d -> find_odd_7d6d6d.items\n\n        instance(x: -20, y: 430) multiply_7d6d6d root.Std_k98ojb.Math.Mul {}\n        find_even_7d6d6d.item -> multiply_7d6d6d.right\n        find_odd_7d6d6d.item -> multiply_7d6d6d.left\n        multiply_7d6d6d.result -> product_7f5a4c\n    }\n\n    \n\n    instance(x: -10, y: 289) product_first_even_odd_3b7e9d root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 604, y: 134, name: \"product\") property(Number) product_7f5a7c\n\n        instance(x: -250, y: 254) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            elem_9f6850 -> modulo_even_1088d5.value\n            2 -> modulo_even_1088d5.divisor\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_8b7e9d -> find_first_even_6d05b0.items\n\n        instance(x: -250, y: 341) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            elem_9f6850 -> modulo_odd_1088d5.value\n            2 -> modulo_odd_1088d5.divisor\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_8b7e9d -> find_first_odd_6d05b0.items\n\n        instance(x: -250, y: 431) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_first_even_6d05b0.item -> multiply_6d05b0.right\n        find_first_odd_6d05b0.item -> multiply_6d05b0.left\n        multiply_6d05b0.result -> product_7f5a7c\n    }\n\n    \n\n    instance(x: -250, y: 134) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 601, y: 134, name: \"product\") property(Number) product_7f3a7c\n\n        instance(x: -250, y: 284) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            elem_9f6850 -> modulo_even_1088d5.value\n            2 -> modulo_even_1088d5.divisor\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_8b7e9d -> find_first_even_6d05b0.items\n\n        instance(x: -250, y: 434) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            elem_9f6850 -> modulo_odd_1088d5.value\n            2 -> modulo_odd_1088d5.divisor\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_8b7e9d -> find_first_odd_6d05b0.items\n\n        instance(x: -250, y: 634) multiply_1088d5 root.Std_k98ojb.Math.Mul {}\n        find_first_even_6d05b0.item -> multiply_1088d5.value\n        find_first_odd_6d05b0.item -> multiply_1088d5.divisor\n        multiply_1088d5.result -> product_7f3a7c\n    }\n\n    \n\n    instance(x: -250, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 601, y: 134, name: \"product\") property(Number) product_7f3a7c\n\n        instance(x: -250, y: 280) find_first_even_5d6b4b root.main.find_first { predicate() { modulo_not_equal_9e9e44 } }\n        func(doc: \"Predicate to check if a number is not equal to the modulo with 2.\") {\n            in(x: -137, y: 80) property(Number) input_number_6f5d6a\n\n            out(x: 113, y: 80) property(Bool) output_bool_4e9bdf\n\n            instance(x: -12, y: 112) modulo_7c406b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 52, y: 132) not_equal_7d9f5a root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_7d9f5a.right\n            modulo_7c406b.result -> not_equal_7d9f5a.left\n            2 -> modulo_7c406b.divisor\n            input_number_6f5d6a -> modulo_7c406b.value\n            not_equal_7d9f5a.result -> output_bool_4e9bdf\n        } -> find_first_even_5d6b4b.predicate\n        list_8b7e9d -> find_first_even_5d6b4b.items\n\n        instance(x: -250, y: 380) find_first_odd_1f5a7c root.main.find_first { predicate() { modulo_equal_6d9e44 } }\n        func(doc: \"Predicate to check if a number is equal to the modulo with 2.\") {\n            in(x: -137, y: 80) property(Number) input_number_5f5d6a\n\n            out(x: 113, y: 80) property(Bool) output_bool_4e9bdf\n\n            instance(x: -12, y: 112) modulo_7c406b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 52, y: 132) equal_7d9f5a root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_7d9f5a.right\n            modulo_7c406b.result -> equal_7d9f5a.left\n            2 -> modulo_7c406b.divisor\n            input_number_5f5d6a -> modulo_7c406b.value\n            equal_7d9f5a.result -> output_bool_4e9bdf\n        } -> find_first_odd_1f5a7c.predicate\n        list_8b7e9d -> find_first_odd_1f5a7c.items\n\n        instance(x: 30, y: 260) multiply_7f3a7c root.Std_k98ojb.Math.Pow { exponent(1) }\n        find_first_even_5d6b4b.item -> multiply_7f3a7c.value\n        find_first_odd_1f5a7c.item -> multiply_7f3a7c.x\n        multiply_7f3a7c.result -> product_7f3a7c\n    }\n\n    \n\n    instance(x: -250, y: 549) product_first_even_odd_8b7e9d root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 614, y: 126, name: \"product\") property(Number) product_7f5a7c\n\n        instance(x: -10, y: 134) find_even_5eacf4 root.main.first_odd {}\n        instance(x: -10, y: 289) find_odd_5eacf4 root.main.first_odd {}\n\n        func(doc: \"Finds the first odd number in a given list of numbers.\") first_odd {\n            in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n            out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n            instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                0 -> notequal_807ffd.right\n                modulo_1088d5.result -> notequal_807ffd.left\n                2 -> modulo_1088d5.divisor\n                elem_9f6850 -> modulo_1088d5.value\n                notequal_807ffd.result -> bool_af09a7\n            } -> find_6d05b0.predicate\n            list_abed4a -> find_6d05b0.items\n            find_6d05b0.item -> number_3bc2ae\n        }\n\n        func(doc: \"Finds the first even number in a given list of numbers.\") first_even {\n            in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n            out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n            instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n                instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n                0 -> equal_807ffd.right\n                modulo_1088d5.result -> equal_807ffd.left\n                2 -> modulo_1088d5.divisor\n                elem_9f6850 -> modulo_1088d5.value\n                equal_807ffd.result -> bool_af09a7\n            } -> find_6d05b0.predicate\n            list_abed4a -> find_6d05b0.items\n            find_6d05b0.item -> number_3bc2ae\n        }\n\n        list_8b7e9d -> find_even_5eacf4.list\n        list_8b7e9d -> find_odd_5eacf4.list\n\n        instance(x: 10, y: 360) multiply_5eacf4 root.Std_k98ojb.Math.Pow {}\n        find_even_5eacf4.number -> multiply_5eacf4.x\n        find_odd_5eacf4.number -> multiply_5eacf4.y\n\n        multiply_5eacf4.result -> product_7f5a7c\n    }\n\n    \n\n    instance(x: -55, y: 529) first_odd_2c856f root.main.first_odd {}\n    instance(x: -55, y: 570) first_even_2c856f root.main.first_even {}\n    instance(x: -55, y: 614) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 614, y: 134, name: \"product\") property(Number) product_7f3a7c\n\n        instance(x: -250, y: 284) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            elem_9f6850 -> modulo_even_1088d5.value\n            2 -> modulo_even_1088d5.divisor\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_8b7e9d -> find_first_even_6d05b0.items\n\n        instance(x: -250, y: 434) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            elem_9f6850 -> modulo_odd_1088d5.value\n            2 -> modulo_odd_1088d5.divisor\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_8b7e9d -> find_first_odd_6d05b0.items\n\n        instance(x: 34, y: -12) mul_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_first_even_6d05b0.item -> mul_6d05b0.first\n        find_first_odd_6d05b0.item -> mul_6d05b0.second\n        mul_6d05b0.result -> product_7f3a7c\n    }\n\n    \n\n    instance(x: -250, y: 134) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}"
            ],
            "41": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 3323,
        "task_candidates": {
            "5": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5bddd9 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -168, name: \"getter_3d9e6c\") getter_3d9e6c = result\n        mul_5bddd9.result -> getter_3d9e6c.value\n        execute_12bf99 -> mul_5bddd9.execute\n        getter_3d9e6c.continue -> continue_685c8f\n        getter_3d9e6c.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -98, y: -70) mul_3eacf5 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -62, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 118, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_3eacf5.result -> getter_9cceb3.value\n        execute_12bf99 -> setter_1cedb2.execute\n        getter_9cceb3.value -> result_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 181, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5bddd5 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -68, name: \"getter_3d9ebe\") getter_3d9ebe = result\n        mul_5bddd5.result -> getter_3d9ebe.value\n        execute_12bf99 -> mul_5bddd5.execute\n        getter_3d9ebe.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_3eacf4 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: -112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 118, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_3eacf4.result -> getter_9cceb3.value\n        execute_12bf99 -> setter_1cedb2.execute\n        getter_9cceb3.value -> result_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_6f3e6d\n        in(x: -258, y: 179, name: \"b\") property(Number) b_bdb0c9\n        in(x: -262, y: 254, name: \"execute\") trigger() execute_7a7f3e\n\n        out(x: 114, y: 181, name: \"result\") property(Number) result_7d90b9\n        out(x: 562, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -30, y: -110) mul_5eacf5 root.Std_k98ojb.Math.Mul {\n            first: a_6f3e6d\n            second: b_bdb0c9\n        }\n        getter(x: 24, y: -272, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 158, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        execute_7a7f3e -> mul_5eacf5.execute\n        mul_5eacf5.result -> getter_9cceb3.value\n        getter_9cceb3.value -> result_7d90b9\n        getter_9cceb3.continue -> setter_1cedb2.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5bddd5 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -168, name: \"getter_3d6c4e\") getter_3d6c4e = result\n        mul_5bddd5.result -> getter_3d6c4e.value\n        execute_12bf99 -> mul_5bddd5.execute\n        getter_3d6c4e.continue -> continue_685c8f\n        getter_3d6c4e.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 183, name: \"result\") property(Number) result_b2508f\n        out(x: 66, y: 263, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -90, y: 174) mul_6b9e9d root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 23, y: -103, name: \"getter_4cceb3\") getter_4cceb3 = result\n        mul_6b9e9d.result -> getter_4cceb3.value\n        execute_12bf99 -> mul_6b9e9d.execute\n        getter_4cceb3.continue -> continue_685c8f\n        getter_4cceb3.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 74, y: 181, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5b4dcb root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 26, y: -112, name: \"getter_3cceb3\") getter_3cceb3 = result\n        mul_5b4dcb.result -> getter_3cceb3.value\n        execute_12bf99 -> mul_5b4dcb.execute\n        getter_3cceb3.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 163, name: \"b\") property(Number) b_f9110a\n        in(x: -264, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -70) mul_5b4dcb root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 126, y: -268, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 124, y: -56, name: \"setter_1cedb2\") setter_1cedb2 = result\n        mul_5b4dcb.result -> getter_9cceb3.value\n        execute_12bf99 -> mul_5b4dcb.execute\n        getter_9cceb3.value -> result_b2508f\n        mul_5b4dcb.continue -> setter_1cedb2.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -254, y: 103, name: \"a\") property(Number) a_9f7759\n        in(x: -258, y: 165, name: \"b\") property(Number) b_f9110a\n        in(x: -254, y: 223, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 76, y: 185, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -93, y: -75) mul_5bddd5 root.Std_k98ojb.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: 24, y: -63, name: \"getter_9cceb3\") getter_9cceb3 = result\n        mul_5bddd5.result -> getter_9cceb3.value\n        execute_12bf99 -> mul_5bddd5.execute\n        getter_9cceb3.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -104) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 161, y: -55) max_val max_node.max\n\n        instance(x: 307, y: -219) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 161, y: -170) min_val min_node.min\n\n        instance(x: 45, y: -139) diff_node root.Std_k98ojb.Math.Sub {}\n        max_val -> diff_node.first\n        min_val -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -104) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 160, y: -56) max_value_ai from max_node.max\n\n        instance(x: 307, y: -224) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 160, y: -176) min_value_ai from min_node.min\n\n        instance(x: 512, y: -136) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 464, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 464, y: -191) min_value_ai property(Number)\n\n        instance(x: 521, y: -130) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 464, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 464, y: -191) min_value_ai property(Number)\n\n        instance(x: 521, y: -130) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -104) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 160, y: -53) maxValue_ai from max_node.max\n\n        instance(x: 289, y: 107) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 160, y: 164) minValue_ai from min_node.min\n\n        instance(x: -351, y: 20) sub_node root.Std_k98ojb.Math.Sub {}\n        maxValue_ai -> sub_node.first\n        minValue_ai -> sub_node.second\n        out(x: 170, y: 20) diff_ai from sub_node.result\n\n        diff_ai -> difference_ai\n    }\n\n    \n    instance(x: -351, y: 20) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -153) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -153) max_value_ai from max_node.max\n\n        instance(x: 307, y: -253) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -253) min_value_ai from min_node.min\n\n        instance(x: 307, y: -353) diff_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> diff_node.first\n        min_value_ai -> diff_node.second\n        diff_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -104) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 161, y: -56) max_val max_node.max\n\n        instance(x: 307, y: -224) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 161, y: -176) min_val min_node.min\n\n        instance(x: 512, y: -104) sub_node root.Std_k98ojb.Math.Sub {}\n        max_val -> sub_node.first\n        min_val -> sub_node.second\n        difference_ai <- sub_node.result\n    }\n\n    \n    instance(x: 307, y: -104) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_between_max_and_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 307, y: -103) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.items\n        out(x: 469, y: -53) max_value_ai property(Number)\n\n        instance(x: 307, y: -255) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        out(x: 469, y: -157) min_value_ai property(Number)\n\n        instance(x: 521, y: -103) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_between_max_and_min_node root.main.diff_between_max_and_min {}\n\n    \n}"
            ],
            "20": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f6cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f6cdd.left\n        find_odd_6d05b0.item -> subtract_8f6cdd.right\n        subtract_8f6cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 150) diff_6d05b0 root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> diff_6d05b0.left\n        find_odd_6d05b0.item -> diff_6d05b0.right\n\n        diff_6d05b0.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f7cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f7cdd.left\n        find_odd_6d05b0.item -> subtract_8f7cdd.right\n        subtract_8f7cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the difference between the first even and first odd numbers in a given list.\") diff_first_even_odd {\n        in(x: -20, y: 15, name: \"list\") property(List) list_7d6e4a\n\n        out(x: 389, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_7d6e4a -> find_even_6d05b0.items\n\n        instance(x: 120, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_7d6e4a -> find_odd_6d05b0.items\n\n        instance(x: 230, y: 10) subtract_8f6cdd root.Std_k98ojb.Math.Subtract {}\n        find_even_6d05b0.item -> subtract_8f6cdd.left\n        find_odd_6d05b0.item -> subtract_8f6cdd.right\n        subtract_8f6cdd.result -> difference_3bc2ae\n    }\n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}"
            ],
            "21": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -70) add_6e8af5 root.Std_k98ojb.Math.Add {}\n        instance(x: 120, y: -40) div_3a8e90 root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        0 -> add_6e8af5.first\n        forLoop_3a8e90.item -> add_6e8af5.second\n        add_6e8af5.result -> forLoop_3a8e90.next\n\n        add_6e8af5.result -> sum_2ad0d5\n        add_6e8af5.result -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 600, y: -50) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c09 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        n_0c09 -> div_3f11cd.first\n        sum_2ad0d5 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 128, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 628, y: -54) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -70) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 600, y: -50) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c09 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        n_0c09 -> div_3f11cd.first\n        sum_2ad0d5 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 600, y: -50) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c09 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        n_0c09 -> div_3f11cd.first\n        sum_2ad0d5 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 188, y: 54) add_7d5c4d root.Std_k98ojb.Math.Add {}\n        instance(x: 288, y: 54) div_6e3f0a root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        forLoop_3a8e90.item -> add_7d5c4d.first\n        sum_2ad0d5 -> add_7d5c4d.second\n        add_7d5c4d.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_6e3f0a.first\n        n_0c0609 -> div_6e3f0a.second\n        div_6e3f0a.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 118, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 688, y: -54) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e2f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 188, y: 54) add_7d9c9d root.Std_k98ojb.Math.Add {}\n        instance(x: 288, y: 54) div_6e3a0f root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.index\n        forLoop_3a8e90.item -> add_7d9c9d.first\n        sum_2ad0d5 -> add_7d9c9d.second\n        add_7d9c9d.result -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_6e3a0f.first\n        n_0c0609 -> div_6e3a0f.second\n        div_6e3a0f.result -> average_4e2f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 120, y: -70) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 600, y: -50) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c09 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.currentItem -> add_8974a2.first\n        sum_2ad0d5 -> add_8974a2.second\n        add_8974a2.result -> sum_2ad0d5\n\n        n_0c09 -> div_3f11cd.first\n        sum_2ad0d5 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_4e9f6b\n\n        instance(x: 88, y: 54) forLoop_3a8e90 root.Std_k98ojb.Iteration.For {}\n        instance(x: 128, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n        instance(x: 648, y: -55) div_3f11cd root.Std_k98ojb.Math.Div {}\n\n        n_0c0609 -> forLoop_3a8e90.items\n        0 -> forLoop_3a8e90.initialValue\n        forLoop_3a8e90.accumulated -> add_8974a2.first\n        forLoop_3a8ej0.current -> add_8974a2.second\n        add_8974a2.result -> forLoop_3a8e90.nextValue\n        forLoop_3a8e90.output -> sum_2ad0d5\n\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_4e9f6b\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 155) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) output_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: input_ai\n            divisor: 2\n        }\n        instance(x: -104, y: 156) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0 ? true : false\"\n        }\n        modulo_7b3b7b.result -> ifexpression_7b3b7b.modulo\n        ifexpression_7b3b7b.value -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) iseven_node root.main.IsEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b2cdd\n\n        instance(x: -10, y: 50) characters_5f3dcb root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5f3dcb.input\n        instance(x: 10, y: 80) iterationMap_2c856f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -10, y: 100) property(String) char_7b2cdd\n\n            out(x: 30, y: 140) property(Bool) isRepeated_5f3dcb\n\n            instance(x: 50, y: 180) filter_6d05b0 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -20, y: 200) property(String) char_7b2cdd\n                out(x: 30, y: 240) property(Bool) isRepeated_5f3dcb\n\n                instance(x: 100, y: 280) contains_6d05b0 root.Std_k98ojb.Strings.Contains {}\n                char_7b2dd -> contains_6d05b0.contains\n                char_7b2cdd -> contains_6d05b0.input\n                contains_6d05b0.value -> isRepeated_5f3dcb\n            } -> filter_6d05b0.handler\n            instance(x: 180, y: 340) listSlice_2c856f root.Std_k98ojb.List.Slice {}\n            func() {\n                in(x: -20, y: 360) property(List) charsList_7b2cdd\n                out(x: 30, y: 400) property(List) slicedCharsList_5f3dcb\n\n                instance(x: 100, y: 440) listGetAt_6d05b0 root.Std_k98ojb.List.GetAt {}\n                charsList_7b2cdd -> listGetAt_6d05b0.list\n                char_7b2cdd -> listGetAt_6d05b0.index\n                listGetAt_6d05b0.item -> slicedCharsList_5f3dcb\n            } -> listSlice_2c856f.handler\n            instance(x: 180, y: 480) listConcat_7b2cdd root.Std_k98ojb.List.Concat {}\n            func() {\n                in(x: -20, y: 500) property(List) charsList_7b2cdd\n                out(x: 30, y: 540) property(List) concatenatedCharsList_5f3dcb\n\n                instance(x: 100, y: 580) listEmpty_6d05b0 root.Std_k98ojb.List.Empty {}\n                charsList_7b2cdd -> listConcat_7b2cdd.right\n                listEmpty_6d05b0.value -> listConcat_7b2cdd.left\n                listConcat_7b2cdd.result -> concatenatedCharsList_5f3dcb\n            } -> listConcat_7b2cdd.handler\n        } -> iterationMap_2c856f.handler\n        characters_5f3dcb.value -> iterationMap_2c856f.list\n        instance(x: 10, y: 40) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n        inputString_6d4e7a -> firstRepeatedChar_2c856f.inputString\n        repeatedChar_7b2cdd -> firstRepeatedChar_2c856f.repeatedChar\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b9fbc\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) flattenList_2c856f root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) filterRepeatedChar_2c856f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) countOccurrences_1088d5 root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -36, y: 40, name: \"acc\") property(Number) acc_7f6e5a\n                in(x: -12, y: 40, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"result\") property(Number) result_af09a7\n\n                instance(x: 30, y: 29) ifExpression_1088d5 root.Std_k98ojb.Std.IfExpression {}\n                instance(x: -60, y: 29) logicEqual_807ffd root.Std_k98ojb.Logic.Equal {}\n                acc_7f6e5a -> logicEqual_807ffd.left\n                elem_9f6850 -> logicEqual_807ffd.right\n                ifExpression_1088d5.expression -> result_af09a7\n                1 -> ifExpression_1088d5.then\n                acc_7f6e5a -> ifExpression_1088d5.else_\n                logicEqual_807ffd.result -> ifExpression_1088d5.input\n            } -> countOccurrences_1088d5.reducer\n            0 -> countOccurrences_1088d5.initialValue\n            elem_9f6850 -> countOccurrences_1088d5.items\n            countOccurrences_1088d5.result -> result_af09a7\n        } -> filterRepeatedChar_2c856f.handler\n        flattenList_2c856f.list -> filterRepeatedChar_2c856f.items\n        instance(x: 30, y: 15) firstItem_2c856f root.Std_k98ojb.List.FirstItem {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"result\") property(Bool) result_af09a7\n\n            instance(x: 89, y: 29) logicGreaterThan_1088d5 root.Std_k98ojb.Logic.GreaterThan {}\n            elem_9f6850 -> logicGreaterThan_1088d5.left\n            1 -> logicGreaterThan_1088d5.right\n            logicGreaterThan_1088d5.result -> result_af09a7\n        } -> filterRepeatedChar_2c856f.predicate\n        filterRepeatedChar_2c856f.item -> firstItem_2c856f.list\n        firstItem_2c856f.item -> repeatedChar_7b9fbc\n    }\n\n    instance(x: -20, y: 15) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n    inputString_6d4e7a -> firstRepeatedChar_2c856f.inputString\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c9bdfc\n\n        instance(x: -20, y: 15) characters_6f6e4d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6f6e4d.input\n        instance(x: 30, y: 15) flattenList_2c856f root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) filterRepeatedChar_7a2eab root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -34, y: 15, name: \"char\") property(String) char_6f6e4d\n            out(x: 30, y: 15, name: \"outputList\") property(List) outputList_7a2eab\n\n            instance(x: -20, y: 15) containsChar_8b9cdd root.Std_k98ojb.List.Contains {}\n            char_6f6e4d -> containsChar_8b9cdd.item\n            filterRepeatedChar_7a2eab.output_list -> containsChar_8b9cdd.list\n\n            out(x: 30, y: 15, name: \"bool\") property(Bool) bool_8b9cdd\n\n            instance(x: -20, y: 15) notEqual_6f6e4d root.Std_k98ojb.Logic.Not {}\n            containsChar_8b9cdd.isEmpty -> notEqual_6f6e4d.input\n            notEqual_6f6e4d.output -> bool_8b9cdd\n\n            instance(x: -20, y: 15) ifExpression_7a2eab root.Std_k98ojb.Std.IfExpression {}\n            char_6f6e4d -> ifExpression_7a2eab.expression\n            bool_8b9cdd -> ifExpression_7a2eab.input\n\n            instance(x: -20, y: 15) listAdd_6f6e4d root.Std_k98ojb.List.Add {}\n            char_6f6e4d -> listAdd_6f6e4d.item\n            filterRepeatedChar_7a2eab.output_list -> listAdd_6f6e4d.list\n\n            ifExpression_7a2eab.value -> outputList_7a2eab\n            listAdd_6f6e4d.listWithItem -> outputList_7a2eab\n        } -> filterRepeatedChar_7a2eab.handler\n        characters_6f6e4d.characters -> flattenList_2c856f.inputLists\n        flattenList_2c856f.flattenedList -> filterRepeatedChar_7a2eab.items\n\n        instance(x: -20, y: 15) firstItem_6f6e4d root.Std_k98ojb.List.FirstItem {}\n        filterRepeatedChar_7a2eab.output_list -> firstItem_6f6e4d.list\n        firstItem_6f6e4d.item -> repeatedChar_c9bdfc\n    }\n\n    instance(x: -50, y: 15) mainFunction_8b9cdd root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c4b2c4\n\n        instance(x: -10, y: 50) characters_5f5d6d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5f5d6d.input\n        instance(x: 30, y: 120) iterate_eeb9c4 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -10, y: 100) property(String) char_7e5a6d\n\n            out(x: 130, y: 120) property(Bool) isRepeated_4f5c89\n\n            instance(x: 10, y: 150) count_7b6a5d root.Std_k98ojb.Std.Count {}\n            instance(x: 150, y: 130) contains_2e5d6d root.Std_k98ojb.List.Contains {}\n            char_7e5a6d -> contains_2e5d6d.item\n            count_7b6a5d.count -> iterate_eeb9c4.index\n            func() {\n                in(x: -10, y: 130) property(String) item_8f5a6d\n\n                out(x: 130, y: 130) property(Bool) contains_2e5d6d_output\n\n                char_7e5a6d -> contains_2e5d6d.list\n                item_8f5a6d -> contains_2e5d6d.item\n            } -> contains_2e5d6d\n            count_7b6a5d.reset -> iterate_eeb9c4.trigger\n            func() {\n                in(x: -10, y: 180) property(String) item_8f5a6d\n\n                out(x: 130, y: 180) property(Bool) contains_2e5d6d_output\n\n                char_7e5a6d -> contains_2e5d6d.list\n                item_8f5a6d -> contains_2e5d6d.item\n            } -> contains_2e5d6d\n            contains_2e5d6d.result -> isRepeated_4f5c89\n        } -> iterate_eeb9c4.handler\n        characters_5f5d6d.characters -> iterate_eeb9c4.items\n        func() {\n            in(x: -10, y: 230) property(String) item_8f5a6d\n\n            out(x: 130, y: 230) property(String) repeatedChar_c4b2c4_output\n\n            instance(x: 10, y: 250) count_7b6a5d root.Std_k98ojb.Std.Count {}\n            func() {\n                in(x: -10, y: 250) property(String) item_8f5a6d\n\n                out(x: 130, y: 250) property(Bool) isRepeated_4f5c89_output\n\n                instance(x: 10, y: 270) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                func() {\n                    in(x: -10, y: 270) property(String) item_8f5a6d\n\n                    out(x: 130, y: 270) property(Bool) contains_2e5d6d_output\n\n                    instance(x: 10, y: 290) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                    func() {\n                        in(x: -10, y: 290) property(String) item_8f5a6d\n\n                        out(x: 130, y: 290) property(Bool) contains_2e5d6d_output\n\n                        instance(x: 10, y: 310) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                        func() {\n                            in(x: -10, y: 310) property(String) item_8f5a6d\n\n                            out(x: 130, y: 310) property(Bool) contains_2e5d6d_output\n\n                            instance(x: 10, y: 330) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                            func() {\n                                in(x: -10, y: 330) property(String) item_8f5a6d\n\n                                out(x: 130, y: 330) property(Bool) contains_2e5d6d_output\n\n                                instance(x: 10, y: 350) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                func() {\n                                    in(x: -10, y: 350) property(String) item_8f5a6d\n\n                                    out(x: 130, y: 350) property(Bool) contains_2e5d6d_output\n\n                                    instance(x: 10, y: 370) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                    func() {\n                                        in(x: -10, y: 370) property(String) item_8f5a6d\n\n                                        out(x: 130, y: 370) property(Bool) contains_2e5d6d_output\n\n                                        instance(x: 10, y: 390) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                        func() {\n                                            in(x: -10, y: 390) property(String) item_8f5a6d\n\n                                            out(x: 130, y: 390) property(Bool) contains_2e5d6d_output\n\n                                            instance(x: 10, y: 410) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                            func() {\n                                                in(x: -10, y: 410) property(String) item_8f5a6d\n\n                                                out(x: 130, y: 410) property(Bool) contains_2e5d6d_output\n\n                                                instance(x: 10, y: 430) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                                func() {\n                                                    in(x: -10, y: 430) property(String) item_8f5a6d\n\n                                                    out(x: 130, y: 430) property(Bool) contains_2e5d6d_output\n\n                                                    instance(x: 10, y: 450) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                                    func() {\n                                                        in(x: -10, y: 450) property(String) item_8f5a6d\n\n                                                        out(x: 130, y: 450) property(Bool) contains_2e5d6d_output\n\n                                                        instance(x: 10, y: 470) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                                        func() {\n                                                            in(x: -10, y: 470) property(String) item_8f5a6d\n\n                                                            out(x: 130, y: 470) property(Bool) contains_2e5d6d_output\n\n                                                            instance(x: 10, y: 490) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                                            func() {\n                                                                in(x: -10, y: 490) property(String) item_8f5a6d\n\n                                                                out(x: 130, y: 490) property(Bool) contains_2e5d6d_output\n\n                                                                instance(x: 10, y: 510) count_7b6a5d root.Std_k98ojb.Std.Count {}\n                                                                func() {\n                                                                    in(x: -10, y: 510) property(String) item_8f5a6d\n\n                                                                    out(x:",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c4b9f4\n\n        instance(x: -20, y: 100) characters_7c9e4d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_7c9e4d.input\n        instance(x: -20, y: 150) iterationMap_3f5eab root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -20, y: 200) property(String) char_7c9e4d\n            instance(x: -20, y: 250) countOccurrences_3f5eab root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -20, y: 300) property(Number) accCount_7c9e4d\n                in(x: -20, y: 350) property(String) char_7c9e4d1\n                out(x: -20, y: 400) property(Number) countOccurrencesResult_7c9e4d\n\n                Std.IfExpression {\n                    expression: \"char == it\"\n                    then: accCount + 1\n                    else: accCount\n                } -> countOccurrencesResult_7c9e4d\n            } -> countOccurrences_3f5eab.reducer\n            instance(x: -20, y: 450) listContains_3f5eab root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -20, y: 500) property(String) char_7c9e4d2\n                out(x: -20, y: 550) property(Bool) containsResult_7c9e4d\n\n                listContains_3f5eab.list -> containsResult_7c9e4d\n            } -> countOccurrences_3f5eab.context\n            instance(x: -20, y: 600) listAdd_3f5eab root.Std_k98ojb.List.Add {}\n            func() {\n                in(x: -20, y: 650) property(String) char_7c9e4d3\n                out(x: -20, y: 700) property(List) listWithChar_7c9e4d\n\n                listAdd_3f5eab.item -> listWithChar_7c9e4d\n            } -> countOccurrences_3f5eab.context\n            char_7c9e4d1 -> countOccurrences_3f5eab.items\n            instance(x: -20, y: 750) listEmpty_3f5eab root.Std_k98ojb.List.Empty {}\n            func() {\n                out(x: -20, y: 800) property(List) emptyList_7c9e4d\n\n                listEmpty_3f5eab -> emptyList_7c9e4d\n            } -> countOccurrences_3f5eab.context\n            char_7c9e4d1 -> listAdd_3f5eab.item\n            0 -> accCount_7c9e4d\n            listWithChar_7c9e4d -> listContains_3f5eab.list\n        } -> iterationMap_3f5eab.predicate\n        characters_7c9e4d.chars -> iterationMap_3f5eab.items\n        func() {\n            in(x: -20, y: 850) property(Number) countOccurrencesResult_7c9e4d1\n            out(x: -20, y: 900) property(String) repeatedChar_c4b9f4\n\n            Std.IfExpression {\n                expression: \"countOccurrencesResult > 1\"\n                then: char\n                else: \"\"\n            } -> repeatedChar_c4b9f4\n        } -> iterationMap_3f5eab.predicate\n    }\n}\n\ninstance(x: -20, y: 529) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b9f4c\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) flattenList_2c856f root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) countOccurrences_6d4e7a root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n            instance(x: 20, y: 15) filterList_2c856f root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 20, y: 15) equalChar_2c856f root.Std_k98ojb.Logic.Equal {}\n                char_9f6850 -> equalChar_2c856f.left\n                char_9f6850 -> equalChar_2c856f.right\n                equalChar_2c856f.result -> bool_af09a7\n            } -> filterList_2c856f.handler\n            instance(x: 30, y: 15) lengthList_2c856f root.Std_k98ojb.List.Length {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n                out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n                instance(x: 20, y: 15) lengthList_2c856f root.Std_k98ojb.List.Length {}\n                char_9f6850 -> lengthList_2c856f.list\n                lengthList_2c856f.length -> count_af09a7\n            } -> filterList_2c856f.items\n            filterList_2c856f.output_list -> countOccurrences_6d4e7a.items\n        } -> countOccurrences_6d4e7a.handler\n        instance(x: 30, y: 15) findFirstRepeatedChar_2c856f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 20, y: 15) greaterThanOne_2c856f root.Std_k98ojb.Logic.GreaterThan {}\n            char_9f6850 -> greaterThanOne_2c856f.left\n            1 -> greaterThanOne_2c856f.right\n            greaterThanOne_2c856f.result -> bool_af09a7\n        } -> findFirstRepeatedChar_2c856f.predicate\n        countOccurrences_6d4e7a.items -> findFirstRepeatedChar_2c856f.items\n        findFirstRepeatedChar_2c856f.item -> repeatedChar_7b9f4c\n    }\n\n    \n\n    instance(x: -20, y: 15) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_7b9f4c\n\n        instance(x: -20, y: 15) characters_5b9d6d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5b9d6d.input\n        instance(x: 30, y: 15) listEmpty_2c856f root.Std_k98ojb.List.Empty {}\n        instance(x: -20, y: 15) iterationMap_4e7a6d root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: 15, name: \"char\") property(String) char_6d4e7a\n            out(x: 20, y: 15, name: \"index\") property(Number) index_9f6850\n\n            instance(x: 10, y: 15) listContains_3c856f root.Std_k98ojb.List.Contains {}\n            char_6d4e7a -> listContains_3c856f.item\n            iterationMap_4e7a6d.output_list -> listContains_3c856f.list\n\n            instance(x: 10, y: 15) logicNot_2c856f root.Std_k98ojb.Logic.Not {}\n            listContains_3c856f.result -> logicNot_2c856f.input\n            logicNot_2c856f.output -> index_9f6850\n\n        } -> iterationMap_4e7a6d.handler\n        characters_5b9d6d.characters -> iterationMap_4e7a6d.items\n        listEmpty_2c856f.list -> iterationMap_4e7a6d.context\n        instance(x: 30, y: 15) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 15, name: \"char\") property(String) char_6d4e7a\n            out(x: 20, y: 15, name: \"index\") property(Number) index_9f6850\n\n            instance(x: 10, y: 15) listContains_3c856f root.Std_k98ojb.List.Contains {}\n            char_6d4e7a -> listContains_3c856f.item\n            find_6d05b0.items -> listContains_3c856f.list\n\n            instance(x: 10, y: 15) logicNot_2c856f root.Std_k98ojb.Logic.Not {}\n            listContains_3c856f.result -> logicNot_2c856f.input\n            logicNot_2c856f.output -> index_9f6850\n\n        } -> find_6d05b0.predicate\n        iterationMap_4e7a6d.output_list -> find_6d05b0.items\n        instance(x: 30, y: 15) logicNotEqual_2c856f root.Std_k98ojb.Logic.NotEqual {}\n        index_9f6850 -> logicNotEqual_2c856f.right\n        find_6d05b0.item -> logicNotEqual_2c856f.left\n\n        instance(x: 30, y: 15) string_7b9f4c root.Std_k98ojb.Strings.String {}\n        logicNotEqual_2c856f.result -> string_7b9f4c.input\n        find_6d05b0.item -> repeatedChar_7b9f4c\n\n    }\n\n    \n\n    instance(x: -20, y: 15) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b6c4f\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) flattenList_2c856f root.Std_k98ojb.List.Flatten {}\n        instance(x: -20, y: 15) filterRepeatedChar_6b6c4f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -37, y: 15, name: \"char\") property(String) char_6d4e7a\n            out(x: 20, y: 15, name: \"isRepeated\") property(Bool) isRepeated_6b6c4f\n\n            instance(x: -37, y: 15) containsChar_6d4e7a root.Std_k98ojb.List.Contains {}\n            char_6d4e7a -> containsChar_6d4e7a.item\n            flattenList_2c856f.list -> containsChar_6d4e7a.list\n            containsChar_6d4e7a.contains -> isRepeated_6b6c4f\n        } -> filterRepeatedChar_6b6c4f.handler\n        characters_6d4e7a.characters -> flattenList_2c856f.list\n        instance(x: 10, y: 15) firstItem_6d4e7a root.Std_k98ojb.List.FirstItem {}\n        filterRepeatedChar_6b6c4f.output_list -> firstItem_6d4e7a.list\n        firstItem_6d4e7a.item -> repeatedChar_6b6c4f\n    }\n\n    instance(x: -20, y: 15) mainFirstRepeatedChar_6d4e7a root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_c0b9f4\n\n        instance(x: -20, y: 15) characters_6d4e7a root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_6d4e7a.input\n        instance(x: 30, y: 15) list_2c856f List.Empty {}\n        instance(x: -20, y: 15) forLoop_9f6850 root.Std_k98ojb.Iteration.For {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_af09a7\n\n            instance(x: 20, y: 15) count_3bc2ae root.Std_k98ojb.Std.Count {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                out(x: 515, y: 44, name: \"index\") property(Number) index_af09a7\n\n                instance(x: 20, y: 15) contains_3bc2ae root.Std_k98ojb.List.Contains {}\n                func() {\n                    in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                    out(x: 515, y: 44, name: \"index\") property(Number) index_af09a7\n\n                    instance(x: 20, y: 15) list_3bc2ae List.Empty {}\n                    func() {\n                        in(x: -113, y: 34, name: \"char\") property(String) char_6d4e7a\n\n                        out(x: 515, y: 44, name: \"index\") property(Number) index_af09a7\n\n                        instance(x: 20, y: 15) contains_3bc2ae root.Std_k98ojb.List.Contains {}\n                        char_6d4e7a -> contains_3bc2ae.list\n                        list_3bc2ae -> contains_3bc2ae.item\n                        contains_3bc2ae.result -> index_af09a7\n                    } -> count_3bc2ae.reset\n                    1 -> count_3bc2ae.count\n                    char_6d4e7a -> count_3bc2ae.value\n                    count_3bc2ae.trigger -> contains_3bc2ae.list\n                } -> forLoop_9f6850.next\n                index_af09a7 -> contains_3bc2ae.list\n                char_6d4e7a -> contains_3bc2ae.item\n            } -> forLoop_9f6850.onItem\n            characters_6d4e7a.characters -> forLoop_9f6850.items\n        } -> list_2c856f.value\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_af09a7\n\n            instance(x: 20, y: 15) contains_3bc2ae root.Std_k98ojb.List.Contains {}\n            char_9f6850 -> contains_3bc2ae.list\n            list_2c856f -> contains_3bc2ae.item\n            contains_3bc2ae.result -> index_af09a7\n        } -> forLoop_9f6850.onItem\n        characters_6d4e7a.characters -> forLoop_9f6850.items\n    }\n\n    \n\n    instance(x: -20, y: 15) firstRepeatedChar_6d4e7a root.main.firstRepeatedChar {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Finds the first repeated character in a given string.\") firstRepeatedChar {\n        in(x: -20, y: 15, name: \"inputString\") property(String) inputString_6d4e7a\n\n        out(x: 389, y: 15, name: \"repeatedChar\") property(String) repeatedChar_6b9f5c\n\n        instance(x: -20, y: 100) characters_5b4d7d root.Std_k98ojb.Strings.Characters {}\n        inputString_6d4e7a -> characters_5b4d7d.input\n        out(x: 389, y: 100, name: \"characters\") property(List) charactersList_2c856f\n\n        instance(x: -20, y: 150) iterationMap_6d05b0 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"indexMap\") property(Object) indexMap_af09a7\n\n            instance(x: 89, y: 29) listAdd_1088d5 root.Std_k98ojb.List.Add {}\n            char_9f6850 -> listAdd_1088d5.item\n            indexMap_af09a7 -> listAdd_1088d5.list\n            listAdd_1088d5.listWithItem -> indexMap_af09a7\n        } -> iterationMap_6d05b0.handler\n        charactersList_2c856f -> iterationMap_6d05b0.items\n\n        instance(x: -20, y: 200) iterationFilter_1088d5 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) listLength_1088d5 root.Std_k98ojb.List.Length {}\n            char_9f6850 -> listLength_1088d5.list\n            listLength_1088d5.length -> bool_af09a7\n        } -> iterationFilter_1088d5.handler\n        iterationMap_6d05b0.output_list -> iterationFilter_1088d5.items\n\n        instance(x: -20, y: 250) listFirstItem_6d05b0 root.Std_k98ojb.List.FirstItem {}\n        iterationFilter_1088d5.output_list -> listFirstItem_6d05b0.list\n        out(x: 389, y: 250, name: \"firstRepeatedChar\") property(Object) firstRepeatedChar_af09a7\n\n        instance(x: -20, y: 300) stringsGetAt_1088d5 root.Std_k98ojb.List.GetAt {}\n        firstRepeatedChar_af09a7 -> stringsGetAt_1088d5.index\n        iterationMap_6d05b0.output_list -> stringsGetAt_1088d5.list\n        out(x: 389, y: 300, name: \"repeatedChar\") property(String) repeatedChar_2c856f\n\n        charactersList_2c856f -> iterationMap_6d05b0.items\n    }\n\n    \n\n    instance(x: -20, y: 400) firstRepeatedChar_2c856f root.main.firstRepeatedChar {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -124) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from the list.\") remove_smallest {\n            in(x: -360, y: -87, name: \"items\") property(List) items_bi\n            in(x: 59, y: -124, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 459, y: -124, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 307, y: -86) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[1])\n            func(doc: \"predicate function to check if the item is not equal to the smallest number.\") predicate {\n                in(x: 307, y: -45) item property(Number)\n                out(x: 307, y: -45) result property(Boolean)\n\n                instance(x: 307, y: -45) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                item -> (logic_not_equal_node.left)\n                smallestNum_ai -> (logic_not_equal_node.right)\n                logic_not_equal_node.notEqual -> result\n            }\n            predicate {} -> filter_node.handler\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        \n        instance(x: 459, y: -124) remove_smallest_node root.main.remove_smallest {}\n        items_ai -> (remove_smallest_node.items)\n        min_ai -> (remove_smallest_node.smallestNum)\n        out(x: 630, y: -124) listWithoutSmallest_bi = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 592, y: -216) second_min_node root.Std_k98ojb.List.Min {}\n        listWithoutSmallest_bi -> second_min_node.items\n        second_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 354, y: -156) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -12) filter_min_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_min_node.items\n        min_ai -> filter_min_node.context\n        func(doc: \"filter out the smallest number\") handler {\n            in(x: -456, y: 30) property(Number) it_ai\n            in(x: -279, y: 30) property(Number) context_ai\n            out(x: 18, y: 30) property(Boolean) result_ai\n\n            instance(x: -183, y: 30) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> logic_not_equal_node.left\n            context_ai -> logic_not_equal_node.right\n            logic_not_equal_node.notEqual -> result_ai\n        }\n        filter_min_node.handler -> handler.root\n        filter_min_node.output_list\n\n        instance(x: 307, y: 186) list_min_node_2 root.Std_k98ojb.List.Min {}\n        filter_min_node.output_list -> list_min_node_2.items\n        out(x: 454, y: 186) property(Number) secondSmallest_ai\n        list_min_node_2.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -246) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 359, y: -169) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -124) filter_min_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> filter_min_node.items\n        min_ai -> filter_min_node.context\n        func(doc: \"filter out the smallest number\") handler {\n            in(x: -56, y: 30) property(Number) it_ai\n            in(x: 148, y: 30) property(Number) context_ai\n            out(x: 279, y: 30) property(Boolean) result_ai\n\n            instance(x: 10, y: 30) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            it_ai -> not_equal_node.left\n            context_ai -> not_equal_node.right\n            not_equal_node.notEqual -> result_ai\n        }\n        filter_min_node.handler -> handler.root\n        out(x: 426, y: -103) property(List) filtered_items_ai\n        filter_min_node.output_list -> filtered_items_ai\n\n        instance(x: 307, y: -58) second_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> second_min_node.items\n        out(x: 426, y: -37) property(Number) secondSmallest_ai\n        second_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -58) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 354, y: -168) property(List) minRemovedList_ai\n        instance(x: 354, y: -168) filterNode root.std.Iteration.Filter {\n            handler(it) expression \"it != @min\"\n        }\n        list_min_node.min -> filterNode.context\n        items_ai -> filterNode.items\n        filterNode.output_list -> minRemovedList_ai\n        instance(x: 354, y: -68) secondMinNode root.Std_k98ojb.List.Min {}\n        minRemovedList_ai -> secondMinNode.items\n        secondMinNode.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -246) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 354, y: -159) property(List) minRemovedList_ai\n        \n        instance(x: 354, y: -159) removeFirstInstanceNode root.std.List.Remove {}\n        list_min_node.min -> removeFirstInstanceNode.index\n        items_ai -> removeFirstInstanceNode.list\n        removeFirstInstanceNode.listWithoutItem -> minRemovedList_ai\n\n        instance(x: 260, y: -73) secondMinNode root.Std_k98ojb.List.Min {}\n        minRemovedList_ai -> secondMinNode.items\n        secondMinNode.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node main.second_smallest_num {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -124) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from the list.\") remove_smallest {\n            in(x: -360, y: -87, name: \"items\") property(List) items_bi\n            in(x: 59, y: -124, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 459, y: -124, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 307, y: -86) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[1])\n            func(doc: \"predicate function to check if the item is not equal to the smallest number.\") predicate {\n                in(x: 307, y: -45) item property(Number)\n                out(x: 307, y: -45) result property(Boolean)\n\n                instance(x: 307, y: -45) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                item -> (logic_not_equal_node.left)\n                smallestNum_ai -> (logic_not_equal_node.right)\n                logic_not_equal_node.notEqual -> result\n            }\n            predicate {} -> filter_node.handler\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        \n        instance(x: 459, y: -124) remove_smallest_node root.main.remove_smallest {}\n        items_ai -> (remove_smallest_node.items)\n        min_ai -> (remove_smallest_node.smallestNum)\n        out(x: 630, y: -124) listWithoutSmallest_bi = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 592, y: -216) second_min_node root.Std_k98ojb.List.Min {}\n        listWithoutSmallest_bi -> second_min_node.items\n        second_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 459, y: -153) min_ai = list_min_node.min\n        \n        func(doc: \"removes the smallest number from a list.\") remove_smallest {\n            in(x: -276, y: -80, name: \"items\") property(List) items_bi\n            in(x: 49, y: -153, name: \"smallestNum\") property(Number) smallestNum_ai\n            out(x: 159, y: -219, name: \"listWithoutSmallest\") property(List) listWithoutSmallest_ai\n\n            instance(x: 307, y: -84) filter_node root.Std_k98ojb.Iteration.Filter {}\n            items_bi -> filter_node.items\n            smallestNum_ai -> (filter_node.handler.inputs[1])\n            func(doc: \"predicate function to check if item is not equal to the smallest number.\") predicate {\n                in(x: 307, y: -24) item_cj property(Number)\n                out(x: 159, y: -219, name: \"result\") property(Boolean) result_cj\n\n                instance(x: 307, y: -24) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                item_cj -> (logic_not_equal_node.left)\n                smallestNum_ai -> (logic_not_equal_node.right)\n                logic_not_equal_node.notEqual -> result_cj\n            }\n            instance(x: 307, y: -24) predicate_func root.main.predicate {}\n            filter_node.handler predicate_func\n            filter_node.output_list -> listWithoutSmallest_ai\n        }\n\n        instance(x: 459, y: -153) remove_smallest_node root.main.remove_smallest {}\n        min_ai -> (remove_smallest_node.smallestNum)\n        items_ai -> remove_smallest_node.items\n        out(x: 627, y: -153) list_without_min_ai = remove_smallest_node.listWithoutSmallest\n        \n        instance(x: 690, y: -216) second_list_min_node root.Std_k98ojb.List.Min {}\n        list_without_min_ai -> second_list_min_node.items\n        second_list_min_node.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -216) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -216) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 456, y: -123) min_ai list_min_node.min\n        \n        instance(x: 307, y: 12) removeMinNode root.Std_k98ojb.Iteration.Filter {\n            handler(it) {\n                Math.GreaterThan(left: it, right: min_ai)\n            }\n        }\n        items_ai -> removeMinNode.items\n        out(x: 456, y: -30) filteredItems_ai removeMinNode.output_list\n        \n        instance(x: 307, y: 192) secondMinNode root.Std_k98ojb.List.Min {}\n        filteredItems_ai -> secondMinNode.items\n        out(x: 456, y: 159) secondSmallest_ai secondMinNode.min\n    }\n\n    \n    instance(x: 307, y: 192) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 354, y: -165) property(List) minRemovedList_ai\n        instance(x: 354, y: -165) filterNode root.std.Iteration.Filter {\n            handler(it) expression \"it != @min\"\n        }\n        list_min_node.min -> filterNode.context\n        items_ai -> filterNode.items\n        filterNode.output_list -> minRemovedList_ai\n        instance(x: 307, y: -84) secondMinNode root.Std_k98ojb.List.Min {}\n        minRemovedList_ai -> secondMinNode.items\n        secondMinNode.min -> secondSmallest_ai\n    }\n\n    \n    instance(x: 307, y: -246) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) secondSmallest_ai\n\n        instance(x: 307, y: -246) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        out(x: 359, y: -156) property(Number) min_ai\n        list_min_node.min -> min_ai\n\n        instance(x: 307, y: -42) filter_func root.std_k98ojb.Filter {}\n        func(doc: \"filter function to exclude the smallest number.\") filter_func_handler {\n            in(x: -156, y: -156, name: \"it\") property(Number) it_ai\n            instance(x: 307, y: -42) not_equal_node root.std_k98ojb.Logic.NotEqual {}\n            min_ai -> not_equal_node.left\n            it_ai -> not_equal_node.right\n            out(x: 159, y: -219, name: \"result\") property(Bool) result_ai\n            not_equal_node.equal -> result_ai\n        }\n        filter_func.handler(filter_func_handler)\n        items_ai -> filter_func.items\n        out(x: 359, y: -42) property(List) filtered_items_ai\n        filter_func.output_list -> filtered_items_ai\n\n        instance(x: 307, y: 186) second_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> second_min_node.items\n        out(x: 159, y: -219, name: \"secondSmallest\") property(Number) second_smallest_ai\n        second_min_node.min -> second_smallest_ai\n\n        secondSmallest_ai <- second_smallest_ai\n    }\n\n    \n    instance(x: 307, y: -42) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ],
            "40": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 614, y: 134, name: \"product\") property(Number) product_7f3a7c\n\n        instance(x: -250, y: 284) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            elem_9f6850 -> modulo_even_1088d5.value\n            2 -> modulo_even_1088d5.divisor\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_8b7e9d -> find_first_even_6d05b0.items\n\n        instance(x: -250, y: 434) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            elem_9f6850 -> modulo_odd_1088d5.value\n            2 -> modulo_odd_1088d5.divisor\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_8b7e9d -> find_first_odd_6d05b0.items\n\n        instance(x: 34, y: -12) mul_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_first_even_6d05b0.item -> mul_6d05b0.first\n        find_first_odd_6d05b0.item -> mul_6d05b0.second\n        mul_6d05b0.result -> product_7f3a7c\n    }\n\n    \n\n    instance(x: -250, y: 134) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 601, y: 134, name: \"product\") property(Number) product_7f3a7c\n\n        instance(x: -250, y: 250) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            elem_9f6850 -> modulo_even_1088d5.value\n            2 -> modulo_even_1088d5.divisor\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_8b7e9d -> find_first_even_6d05b0.items\n\n        instance(x: -250, y: 350) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            elem_9f6850 -> modulo_odd_1088d5.value\n            2 -> modulo_odd_1088d5.divisor\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_8b7e9d -> find_first_odd_6d05b0.items\n\n        instance(x: -250, y: 450) multiply_1088d5 root.Std_k98ojb.Math.Mul {}\n        find_first_even_6d05b0.item -> multiply_1088d5.value\n        find_first_odd_6d05b0.item -> multiply_1088d5.divisor\n\n        multiply_1088d5.result -> product_7f3a7c\n    }\n\n    \n\n    instance(x: -250, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 611, y: 134, name: \"product\") property(Number) product_7f5a4c\n\n        instance(x: -20, y: 185) find_even_5e4d6d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -130, y: 115, name: \"elem\") property(Number) elem_f7a2c4\n\n            out(x: 110, y: 115, name: \"bool\") property(Bool) bool_6b9e8d\n\n            instance(x: -30, y: 135) modulo_even_7f3b6a root.Std_k98ojb.Math.Modulo {}\n            instance(x: -20, y: 155) notequal_even_4c9dbb root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_even_4c9dbb.right\n            modulo_even_7f3b6a.result -> notequal_even_4c9dbb.left\n            2 -> modulo_even_7f3b6a.divisor\n            elem_f7a2c4 -> modulo_even_7f3b6a.value\n            notequal_even_4c9dbb.result -> bool_6b9e8d\n        } -> find_even_5e4d6d.predicate\n        list_8b7e9d -> find_even_5e4d6d.items\n        find_even_5e4d6d.item -> root.Std_k98ojb.Iteration.Map.handler.inputs[0]\n        instance(x: -20, y: 315) map_even_5f4c7a root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -130, y: 295, name: \"elem\") property(Number) elem_f7a2c4\n\n            out(x: 110, y: 295, name: \"mapped_value\") property(Number) mapped_value_6b9e8d\n\n            instance(x: -30, y: 315) modulo_even_7f3b6a root.Std_k98ojb.Math.Modulo {}\n            instance(x: -20, y: 335) equal_even_4c9dbb root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_4c9dbb.right\n            modulo_even_7f3b6a.result -> equal_even_4c9dbb.left\n            2 -> modulo_even_7f3b6a.divisor\n            elem_f7a2c4 -> modulo_even_7f3b6a.value\n            equal_even_4c9dbb.result -> mapped_value_6b9e8d\n        } -> map_even_5f4c7a.handler\n        list_8b7e9d -> map_even_5f4c7a.items\n        find_even_5e4d6d.item -> root.Std_k98ojb.Iteration.Map.handler.inputs[0]\n        instance(x: -20, y: 415) find_odd_5e4d6d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -130, y: 395, name: \"elem\") property(Number) elem_f7a2c4\n\n            out(x: 110, y: 395, name: \"bool\") property(Bool) bool_6b9e8d\n\n            instance(x: -30, y: 415) modulo_odd_7f3b6a root.Std_k98ojb.Math.Modulo {}\n            instance(x: -20, y: 435) notequal_odd_4c9dbb root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_4c9dbb.right\n            modulo_odd_7f3b6a.result -> notequal_odd_4c9dbb.left\n            2 -> modulo_odd_7f3b6a.divisor\n            elem_f7a2c4 -> modulo_odd_7f3b6a.value\n            notequal_odd_4c9dbb.result -> bool_6b9e8d\n        } -> find_odd_5e4d6d.predicate\n        list_8b7e9d -> find_odd_5e4d6d.items\n        map_even_5f4c7a.mapped -> root.Std_k98ojb.Math.Pow.x\n        2 -> root.Std_k98ojb.Math.Pow.y\n        find_odd_5e4d6d.item -> root.Std_k98ojb.Math.Pow.x\n        1 -> root.Std_k98ojb.Math.Pow.y\n        root.Std_k98ojb.Math.Pow.result -> product_7f5a4c\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 614, y: 134, name: \"product\") property(Number) product_6f3a4c\n\n        instance(x: -250, y: 284) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            elem_9f6850 -> modulo_even_1088d5.value\n            2 -> modulo_even_1088d5.divisor\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_8b7e9d -> find_first_even_6d05b0.items\n\n        instance(x: -250, y: 434) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            elem_9f6850 -> modulo_odd_1088d5.value\n            2 -> modulo_odd_1088d5.divisor\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_8b7e9d -> find_first_odd_6d05b0.items\n\n        instance(x: 34, y: -12) mul_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_first_even_6d05b0.item -> mul_6d05b0.first\n        find_first_odd_6d05b0.item -> mul_6d05b0.second\n        mul_6d05b0.result -> product_6f3a4c\n    }\n\n    \n\n    instance(x: -250, y: 134) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_even_af09a7\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_9f6850 -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_even_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 20, y: 100) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_odd_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_odd_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 20, y: 130) multiply_6d05b0 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> multiply_6d05b0.first\n        find_odd_6d05b0.item -> multiply_6d05b0.second\n        multiply_6d05b0.result -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 611, y: 134, name: \"product\") property(Number) product_7f5a7c\n\n        instance(x: -20, y: 10) find_even_5e4d9d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -65, y: 34, name: \"elem\") property(Number) elem_7a4f4c\n\n            out(x: 291, y: 44, name: \"bool\") property(Bool) bool_8b0e5d\n\n            instance(x: 89, y: 29) modulo_even_63bddd root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_7f4cdd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_7f4cdd.right\n            modulo_even_63bddd.result -> equal_7f4cdd.left\n            elem_7a4f4c -> modulo_even_63bddd.value\n            2 -> modulo_even_63bddd.divisor\n            equal_7f4cdd.result -> bool_8b0e5d\n        } -> find_even_5e4d9d.predicate\n        list_8b7e9d -> find_even_5e4d9d.items\n        find_even_5e4d9d.item -> 1\n\n        instance(x: -20, y: 360) find_odd_5e4d9d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -65, y: 34, name: \"elem\") property(Number) elem_7a4f4c\n\n            out(x: 291, y: 44, name: \"bool\") property(Bool) bool_8b0e5d\n\n            instance(x: 89, y: 29) modulo_odd_63bddd root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_7f4cdd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7f4cdd.right\n            modulo_odd_63bddd.result -> notequal_7f4cdd.left\n            elem_7a4f4c -> modulo_odd_63bddd.value\n            2 -> modulo_odd_63bddd.divisor\n            notequal_7f4cdd.result -> bool_8b0e5d\n        } -> find_odd_5e4d9d.predicate\n        list_8b7e9d -> find_odd_5e4d9d.items\n        find_odd_5e4d9d.item -> 2\n\n        instance(x: -16, y: 300) multiply_5e4d9d root.Std_k98ojb.Math.Mul {}\n        1 -> multiply_5e4d9d.first\n        2 -> multiply_5e4d9d.second\n        multiply_5e4d9d.result -> product_7f5a7c\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_first_even_odd {\n        in(x: -250, y: 134, name: \"list\") property(List) list_8b7e9d\n\n        out(x: 604, y: 126, name: \"product\") property(Number) product_6f5a7c\n\n        instance(x: -11, y: 135) find_even_7d9ebc root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -40, y: 21, name: \"elem\") property(Number) elem_6a4e4f\n\n            out(x: 114, y: 35, name: \"bool\") property(Bool) bool_7d9ebc\n\n            instance(x: 89, y: 29) modulo_even_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_even_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_even_807ffd.right\n            modulo_even_1088d5.result -> equal_even_807ffd.left\n            2 -> modulo_even_1088d5.divisor\n            elem_6a4e4f -> modulo_even_1088d5.value\n            equal_even_807ffd.result -> bool_7d9ebc\n        } -> find_even_7d9ebc.predicate\n        list_8b7e9d -> find_even_7d9ebc.items\n        find_even_7d9ebc.item -> product_first_even_odd\n\n        instance(x: -10, y: 235) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -40, y: 21, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 114, y: 35, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_odd_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_odd_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_odd_807ffd.right\n            modulo_odd_1088d5.result -> notequal_odd_807ffd.left\n            2 -> modulo_odd_1088d5.divisor\n            elem_9f6850 -> modulo_odd_1088d5.value\n            notequal_odd_807ffd.result -> bool_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_8b7e9d -> find_odd_6d05b0.items\n\n        instance(x: 123, y: 40) mul_6f5a7c root.Std_k98ojb.Math.Mul {}\n        product_first_even_odd -> mul_6f5a7c.first\n        find_odd_6d05b0.item -> mul_6f5a7c.second\n        mul_6f5a7c.result -> product_6f5a7c\n    }\n\n    \n\n    instance(x: -55, y: 529) product_first_even_odd_2c856f root.main.product_first_even_odd {}\n}"
            ],
            "41": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Find the last position of an element in a sorted array\") lastPosition {\n        in(x: 0, y: 0, name: \"array\") property(List) inputArray_ai\n        in(x: 156, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"lastPosition\") property(Number) lastPosition_ai\n\n        instance(x: 24, y: -80, name: \"filter\") root.Std_k98ojb.Iteration.Filter {}\n        inputArray_ai -> filter.items\n        element_ai -> filter.handler.firstInput\n        func(doc: \"Check if the current item is equal to the target element.\") isEqual {\n            in(x: 0, y: 0, name: \"item\") property(Number) item_ai\n            out(x: 39, y: 0, name: \"is_equal\") property(Boolean) is_equal_ai\n\n            instance(x: 128, y: -40, name: \"equal\") root.Std_k98ojb.Logic.Equal {}\n            item_ai -> equal.left\n            element_ai -> equal.right\n            equal.equal -> is_equal_ai\n        }\n        isEqual(item_ai) -> filter.handler\n        func(doc: \"Get the last index of a non-empty list.\") getLastIndex {\n            in(x: 0, y: 0, name: \"list\") property(List) list_ai\n            out(x: 39, y: 0, name: \"last_index\") property(Number) last_index_ai\n\n            instance(x: 128, y: -40, name: \"length\") root.Std_k98ojb.List.Length {}\n            list_ai -> length.list\n            func(doc: \"Subtract one from the input number.\") subtractOne {\n                in(x: 0, y: 0, name: \"number\") property(Number) number_ai\n                out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 128, y: -40, name: \"subtraction\") root.Std_k98ojb.Math.Sub {}\n                number_ai -> subtraction.first\n                1 -> subtraction.second\n                subtraction.result -> result_ai\n            }\n            length.length -> subtractOne.number_ai\n            subtractOne.result_ai -> last_index_ai\n        }\n        filter.output_list -> getLastIndex.list_ai\n        getLastIndex.last_index -> lastPosition_ai\n    }\n\n    instance(x: 264, y: -464, name: \"last_position\") root.main.lastPosition {}\n}"
            ]
        }
    }
]