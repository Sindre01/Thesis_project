[
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 2482,
        "task_candidates": {
            "8": [
                "instance(x: 100, y: 100) query_filter_1 root.Query.Filter {}\ninstance(x: 200, y: 100) list_get_at_2 root.List.GetAt {}\ninstance(x: 300, y: 100) math_expression_3 root.Math.Expression {}\ninstance(x: 400, y: 100) logic_equal_4 root.Logic.Equal {}\n\nlist_get_at_2.list -> query_filter_1.items\nmath_expression_3.expression -> \"it > num\"\nquery_filter_1.where -> math_expression_3.result\nlogic_equal_4.left -> list_get_at_2.item\nlogic_equal_4.right -> query_filter_1.items",
                "instance(x: 100, y: 200) query_filter_1 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_2 root.List.GetAt {}\ninstance(x: 200, y: 300) math_expression_3 root.Math.Expression {}\ninstance(x: 250, y: 350) std_if_expression_4 root.Std.IfExpression {}\n\nlist_get_at_2.list -> query_filter_1.items\nmath_expression_3.expression = \"it < num\"\nquery_filter_1.where -> math_expression_3.a\nnum -> math_expression_3.b\nquery_filter_1.result -> list_get_at_2.index\nstd_if_expression_4.expression = \"list_get_at_2.item == null ? true : false\"",
                "instance(x: 100, y: 50) query_filter_5c2f7b root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_f4a3d9 root.List.GetAt {}\ninstance(x: 50, y: 50) math_expression_e8d95e root.Math.Expression {}\ninstance(x: 250, y: 100) std_if_70f9b7 root.Std.If {}\n\nlist_get_at_f4a3d9.index -> math_expression_e8d95e.a\ninput_number -> math_expression_e8d95e.b\nmath_expression_e8d95e.result -> query_filter_5c2f7b.where\narray_input -> query_filter_5c2f7b.items\nquery_filter_5c2f7b.result -> std_if_70f9b7.input\ninput_number -> std_if_70f9b7.value\nstd_if_70f9b7.then -> output",
                "instance(x: 100, y: 200) query_filter_1 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_2 root.List.GetAt {}\ninstance(x: 200, y: 300) math_expression_3 root.Math.Expression {}\ninstance(x: 250, y: 350) std_if_expression_4 root.Std.IfExpression {}\n\nlist_get_at_2.list -> query_filter_1.items\nmath_expression_3.expression -> \"it > num\"\nnum -> math_expression_3.num\nquery_filter_1.where -> math_expression_3.result\nstd_if_expression_4.expression -> \"list.length() == 0 ? true : false\"\nquery_filter_1.items -> std_if_expression_4.list\nstd_if_expression_4.value -> output",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n    expression: \"input > it\"\n}\n\ninstance(x: 200, y: 100) query_filter_e3e6a2 root.Query.Filter {\n}\n\ninstance(x: 300, y: 100) input_number_dfa98b property(Number) input_number {\n}\n\ninstance(x: 400, y: 100) array_8c9d42 property(List) array {\n    [1, 2, 3, 4, 5]\n}\n\ninput_number_dfa98b -> math_expression_1.input\narray_8c9d42 -> query_filter_e3e6a2.items\nmath_expression_1 -> query_filter_e3e6a2.where\n\ninstance(x: 500, y: 100) list_length_64f0ba root.List.Length {\n    query_filter_e3e6a2.result -> list_length_64f0ba.list\n}\n\ninstance(x: 600, y: 100) logic_equal_5c1d9b root.Logic.Equal {\n    list_length_64f0ba.length -> logic_equal_5c1d9b.left\n    array_8c9d42.length -> logic_equal_5c1d9b.right\n}\n\nlogic_equal_5c1d9b.result -> output",
                "instance(x: 100, y: 50) query_filter_6c8d7f root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_ebafe4 root.List.GetAt {}\ninstance(x: 50, y: 50) math_expression_f46a22 root.Math.Expression {}\ninstance(x: 250, y: 100) logic_equal_2d1e6b root.Logic.Equal {}\ninstance(x: 300, y: 200) std_if_expression_9f4c11 root.Std.IfExpression {}\n\nlist_get_at_ebafe4.list -> query_filter_6c8d7f.items\ninput_number -> math_expression_f46a22.a\nlist_get_at_ebafe4.item -> math_expression_f46a22.b\nmath_expression_f46a22.expression = \"a > b\"\nmath_expression_f46a22.result -> logic_equal_2d1e6b.left\ntrue -> logic_equal_2d1e6b.right\nlogic_equal_2d1e6b.result -> query_filter_6c8d7f.where\ninput_number -> std_if_expression_9f4c11.a\nquery_filter_6c8d7f.result.length -> std_if_expression_9f4c11.b\nstd_if_expression_9f4c11.expression = \"a > b\"",
                "instance(x: 100, y: 200) query_filter_1 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_2 root.List.GetAt {}\ninstance(x: 200, y: 300) math_expression_3 root.Math.Expression {}\ninstance(x: 250, y: 350) logic_equal_4 root.Logic.Equal {}\n\n5 -> query_filter_1.where.it\n[1, 2, 3, 4] -> query_filter_1.items\nquery_filter_1.result -> list_get_at_2.list\n0 -> list_get_at_2.index\nlist_get_at_2.item -> math_expression_3.a\n5 -> math_expression_3.b\nmath_expression_3.expression = \"a < b\"\nmath_expression_3.result -> logic_equal_4.left\ntrue -> logic_equal_4.right",
                "instance(x: 100, y: 50) query_filter_1 root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_2 root.List.GetAt {}\ninstance(x: 250, y: 50) math_expression_3 root.Math.Expression {}\ninstance(x: 300, y: 50) logic_equal_4 root.Logic.Equal {}\n\nlist_get_at_2.index -> math_expression_3.a\ninput_number -> math_expression_3.b\nmath_expression_3.expression = \"a < b\"\nquery_filter_1.where -> math_expression_3.result\nquery_filter_1.list -> input_list",
                "instance(x: 100, y: 200) query_filter_5f2e21 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_f4a621 root.List.GetAt {}\ninstance(x: 250, y: 300) math_expression_e8d421 root.Math.Expression {}\ninstance(x: 300, y: 200) iteration_find_67a431 root.Iteration.Find {}\ninstance(x: 50, y: 150) list_length_21e8b2 root.List.Length {}\ninstance(x: 200, y: 100) std_if_expression_f1a5d9 root.Std.IfExpression {}\n\nstd_if_expression_f1a5d9.expression = \"it > input\"\nquery_filter_5f2e21.where = \"it < input\"\n\ninput -> std_if_expression_f1a5d9.input\narray -> query_filter_5f2e21.items\ninput -> query_filter_5f2e21.input",
                "instance(x: 100, y: 100) math_expression_4f2c11 root.Std_k98ojb.Math.Expression {\n    expression: \"input > it\"\n}\n\ninstance(x: 200, y: 100) query_filter_f81a5d root.Query.Filter {\n    where: \"math_expression_4f2c11.value\"\n}\n\ninstance(x: 300, y: 100) list_length_eb0e7c root.List.Length {}\n\ninstance(x: 400, y: 100) logic_equal_b9d8fc root.Logic.Equal {}\n\nquery_filter_f81a5d.list -> list_length_eb0e7c.list\nlist_length_eb0e7c.length -> logic_equal_b9d8fc.left\n0 -> logic_equal_b9d8fc.right"
            ],
            "10": [
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_3b6a5e\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_a8d95c\n\n    instance(x: 100, y: 0) contains_z_351f1e root.Std_k98ojb.List.Contains {}\n    instance(x: 0, y: 50) characters_3a03c5 root.Std_k98ojb.Strings.Characters {}\n\n    characters_3a03c5.input -> input_3b6a5e\n    characters_3a03c5.characters -> contains_z_351f1e.list\n    \"z\" -> contains_z_351f1e.item\n    contains_z_351f1e.is_contained -> match_a8d95c\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 1080, y: 45) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 79) characters_e4ab8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 295, y: 125) to_list_245354 root.Std_k98ojb.Strings.Characters {}\n\n        \"z\" -> contains_z_e4ab8f.item\n        word_71a657 -> to_list_245354.input\n        to_list_245354.characters -> contains_z_e4ab8f.list\n        execute_97d5d5 -> if_204695.execute\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        true -> if_204695.then_value\n        false -> if_204695.else_value\n        if_204695.value -> match_f2523c\n        if_204695.then -> continue_1914e0\n    }\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_1b5e2a\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_a6f321\n\n    instance(x: 100, y: 0) if_expression_45a621 Std.IfExpression {}\n    if_expression_45a621.expression = \"input.contains('z')\"\n    input_1b5e2a -> if_expression_45a621.input\n    if_expression_45a621.value -> match_a6f321\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 79) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 295, y: 125) characters_e245354 root.Std_k98ojb.Strings.Characters {}\n\n        characters_e245354.characters -> contains_z_e4ab8f.list\n        \"z\" -> contains_z_e4ab8f.item\n        word_71a657 -> characters_e245354.input\n        execute_97d5d5 -> if_204695.execute\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n        if_204695.else -> continue_1914e0\n        false -> match_f2523c\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 1080, y: 45) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 79) characters_e4ab8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 295, y: 125) to_list_245354 root.Std_k98ojb.Strings.Characters {}\n\n        \"z\" -> contains_z_e4ab8f.item\n        word_71a657 -> to_list_245354.input\n        to_list_245354.characters -> contains_z_e4ab8f.list\n        execute_97d5d5 -> if_204695.execute\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        true -> if_204695.then_value\n        false -> if_204695.else_value\n        if_204695.value -> match_f2523c\n        if_204695.then -> continue_1914e0\n    }\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_4c531d\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_ba431e\n\n    instance(x: 100, y: 0) if_expression_9f3b2a Std.IfExpression {}\n    if_expression_9f3b2a.expression = \"input.contains('z')\"\n    input_4c531d -> if_expression_9f3b2a.input\n    if_expression_9f3b2a.value -> match_ba431e\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 79) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 295, y: 125) characters_e245354 root.Std_k98ojb.Strings.Characters {}\n        characters_e245354.characters -> contains_z_e4ab8f.list\n        \"z\" -> contains_z_e4ab8f.item\n        word_71a657 -> characters_e245354.input\n        execute_97d5d5 -> if_204695.execute\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n        if_204695.else -> continue_1914e0\n        false -> match_f2523c\n    }\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_8a54e1\n    out(x: 200, y: 0, name: \"match\") property(Boolean) match_ae73c5\n\n    instance(x: 100, y: 0) if_expression_e4f6b2 Std.IfExpression {}\n    if_expression_e4f6b2.expression = \"input.contains('z')\"\n    input_8a54e1 -> if_expression_e4f6b2.input\n    if_expression_e4f6b2.value -> match_ae73c5\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 79) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 295, y: 125) characters_e245354 root.Std_k98ojb.Strings.Characters {}\n        characters_e245354.characters -> contains_z_e4ab8f.list\n        \"z\" -> contains_z_e4ab8f.item\n        word_71a657 -> characters_e245354.input\n        execute_97d5d5 -> if_204695.execute\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n        if_204695.else -> continue_1914e0\n        false -> match_f2523c\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 1080, y: 45) contains_z_10d4db root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 79) characters_e4ab8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 295, y: 125) for_245354 root.Std_k98ojb.Std.For {}\n\n        characters_e4ab8f.input -> word_71a657\n        characters_e4ab8f.characters -> contains_z_10d4db.list\n        \"z\" -> contains_z_10d4db.item\n        execute_97d5d5 -> if_204695.execute\n        contains_z_10d4db.is_contained -> if_204695.predicate\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n    }\n}"
            ],
            "14": [
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) convert_to_string_2 root.Std.Strings.ToString {}\n    instance(x: 300, y: 100) characters_3 root.Std.Strings.Characters {}\n    instance(x: 400, y: 100) map_4 root.Std.Iteration.Map {\n        handler: func() {\n            in(x: -200, y: -50, name: \"char\") property(String) char\n            out(x: 200, y: -50, name: \"number\") property(Number) number\n            instance(x: 0, y: 0) to_number_5 root.Std.Strings.ToNumber {}\n            char -> to_number_5.input\n            to_number_5.output -> number\n        }\n    }\n    instance(x: 500, y: 100) sum_6 root.Std.Math.Sum {}\n    convert_to_string_2.output -> characters_3.input\n    characters_3.characters -> map_4.items\n    map_4.output_list -> sum_6.items",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 150) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 100) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 100) math_expression_5 root.Std.Math.Expression {\n        expression: \"a + b\"\n    }\n    list_for_each_3.item -> math_expression_1.a\n    math_expression_1.result -> math_add_4.first\n    list_for_each_3.index -> math_add_4.second\n    math_add_4.result -> math_expression_5.b\n    strings_characters_2.input: \"12345\"\n    math_expression_5.a: 0",
                "instance(x: 240, y: 69) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 140, y: 169) convert_to_string_2 root.Std.Strings.ConvertToString {}\n    instance(x: 340, y: 169) characters_3 root.Std.Strings.Characters {}\n    instance(x: 540, y: 169) map_4 root.Std.Iteration.Map {\n        handler: func() {\n            in(x: -272, y: -48, name: \"current\") property(String) current_86a8fb\n            out(x: 405, y: -52, name: \"output\") property(Number) output_8ba733\n            instance(x: 24, y: -54) convert_to_number_9cb360 root.Std.Strings.ConvertToNumber {}\n            current_86a8fb -> convert_to_number_9cb360.input\n            convert_to_number_9cb360.output -> output_8ba733\n        }\n    }\n    instance(x: 740, y: 169) sum_5 root.Std.Math.Sum {}\n    math_expression_1.result -> convert_to_string_2.input\n    convert_to_string_2.output -> characters_3.input\n    characters_3.characters -> map_4.items\n    map_4.output_list -> sum_5.items",
                "instance(x: 100, y: 100) Math.Expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) Strings.Characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 100) List.Length_3 root.List.Length {}\n    instance(x: 400, y: 100) Math.Add_4 root.Math.Add {}\n    instance(x: 500, y: 100) Std.For_5 root.Std.For {\n        items: Strings.Characters_2.characters\n    }\n    instance(x: 600, y: 150) Math.Expression_6 root.Std.Math.Expression {\n        expression: \"parseInt(a)\"\n    }\n    Math.Expression_1.result -> Math.Add_4.first\n    Std.For_5.item -> Math.Expression_6.a\n    Math.Expression_6.result -> Math.Add_4.second\n    Math.Add_4.result -> Math.Expression_1.a",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 200) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 250) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 300) math_multiply_by_ten_5 root.Math.Mul {\n        second: 10\n    }\n    list_for_each_3.item -> math_expression_1.a\n    math_expression_1.result -> math_add_4.first\n    math_multiply_by_ten_5.result -> math_add_4.second\n    math_add_4.result -> list_for_each_3.accumulator\n    instance(x: 600, y: 350) input_number_6 root.Std.Property {\n        type: \"Number\"\n    }\n    input_number_6.value -> strings_characters_2.input\n    instance(x: 700, y: 400) output_sum_7 root.Std.Property {\n        type: \"Number\"\n    }\n    list_for_each_3.accumulator -> output_sum_7.value",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 200) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 250) math_expression_4 root.Std.Math.Expression {\n        expression: \"a ? a : 0\"\n    }\n    instance(x: 500, y: 300) math_add_5 root.Math.Add {}\n    instance(x: 600, y: 350) list_get_at_6 root.List.GetAt {}\n    strings_characters_2.input: math_expression_1.result\n    math_expression_1.a: \"12345\"\n    list_for_each_3.trigger: true\n    list_for_each_3.items: strings_characters_2.characters\n    math_expression_4.a: list_get_at_6.item\n    list_get_at_6.list: strings_characters_2.characters\n    list_get_at_6.index: list_for_each_3.index\n    math_add_5.first: math_expression_4.result\n    math_add_5.second: 0",
                "instance(x: 100, y: 100) Math.Expression_2 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) Strings.Characters_1 root.Strings.Characters {}\n    instance(x: 300, y: 150) List.Length_3 root.List.Length {}\n    instance(x: 400, y: 100) Math.Add_4 root.Math.Add {}\n    instance(x: 500, y: 100) Std.For_5 root.Std.For {\n        items: Strings.Characters_1.characters\n    }\n    link(Math.Expression_2.result, Strings.Characters_1.input)\n    link(Strings.Characters_1.characters, List.Length_3.list)\n    link(List.Length_3.length, Math.Add_4.first)\n    link(Std.For_5.item, Math.Add_4.second)",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 200) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 250) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 300) variable_init_5 root.Variable.Init {\n        value: 0\n    }\n    variable_init_5.value -> math_add_4.first\n    list_for_each_3.item -> math_expression_1.a\n    math_expression_1.result -> math_add_4.second\n    math_add_4.result -> variable_init_5.value\n    instance(x: 600, y: 350) input_number_6 root.Variable.Input {\n        name: \"number\"\n    }\n    input_number_6.value -> strings_characters_2.input\n    list_for_each_3.done -> variable_init_5.trigger\n    instance(x: 700, y: 400) output_sum_7 root.Variable.Output {\n        name: \"sum\"\n    }\n    variable_init_5.value -> output_sum_7.value",
                "instance(x: 100, y: 100) Math.Expression_8e7a2d root.Std.Math.Expression {\n        expression: \"sum\"\n    }\n    instance(x: 200, y: 150) Strings.Characters_f46c71 root.Strings.Characters {}\n    instance(x: 300, y: 150) List.Map_31f1da root.List.Map {\n        handler: func() {\n            in(x: -100, y: -50, name: \"x\") property(Number) x_e8a03b\n            out(x: 100, y: -50, name: \"y\") property(Number) y_2c0e4d\n            instance(x: 0, y: 0) Math.Expression_70f1c3 root.Std.Math.Expression {\n                expression: \"parseInt(x)\"\n            }\n            x_e8a03b -> Math.Expression_70f1c3.x\n            Math.Expression_70f1c3.result -> y_2c0e4d\n        }\n    }\n    instance(x: 400, y: 150) List.Reduce_4c2f61 root.List.Reduce {\n        handler: func() {\n            in(x: -100, y: -50, name: \"acc\") property(Number) acc_9b0e6a\n            in(x: -100, y: 50, name: \"x\") property(Number) x_e8c03d\n            out(x: 100, y: 0, name: \"result\") property(Number) result_2c1e4f\n            instance(x: 0, y: 0) Math.Add_dfafe3 root.Std.Math.Add {}\n            acc_9b0e6a -> Math.Add_dfafe3.first\n            x_e8c03d -> Math.Add_dfafe3.second\n            Math.Add_dfafe3.result -> result_2c1e4f\n        }\n    }\n    Strings.Characters_f46c71.characters -> List.Map_31f1da.items\n    List.Map_31f1da.output_list -> List.Reduce_4c2f61.items\n    instance(x: 500, y: 100) input_b8a03b root.Std.Property(String) {\n        value: \"12345\"\n    }\n    input_b8a03b -> Strings.Characters_f46c71.input\n    List.Reduce_4c2f61.result -> Math.Expression_8e7a2d.sum",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 150) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 100) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 100) math_multiply_by_10_5 root.Math.Mul {\n        second: 10\n    }\n    list_for_each_3.item -> math_expression_1.a\n    math_expression_1.result -> math_add_4.first\n    list_for_each_3.index -> math_multiply_by_10_5.first\n    math_multiply_by_10_5.result -> math_add_4.second\n    instance(x: 600, y: 100) input_number_6 root.Std.Property.Number {\n        name: \"number\"\n    }\n    input_number_6 -> strings_characters_2.input\n    list_for_each_3.done -> math_add_4.trigger\n    math_add_4.result -> output_sum"
            ],
            "15": [
                "instance(x: 194, y: 120) sort_a49ae4 root.Std_k98ojb.List.Sort {}\n    instance(x: 405, y: 135) expression_b5dba9 root.Std_k98ojb.Math.Expression {\n        expression: \"list1 == list2\"\n    }\n    instance(x: 251, y: 257) input_list_82d404 root.Std_k98ojb.List.GetAt {}\n    sort_a49ae4.sorted_list -> expression_b5dba9.gen_0\n    input_list_82d404.list -> expression_b5dba9.gen_1\n    input_list_82d404.list -> sort_a49ae4.list\n    expression_b5dba9.result -> output",
                "instance(x: 155, y: 120) sort_5c4a1d root.Std_k98ojb.List.Sort {}\ninstance(x: 305, y: 135) expression_b5dba9 root.Std_k98ojb.Logic.Equal {\n    left: list_faf6c2\n    right: sort_5c4a1d.sorted_list\n}\nexpression_b5dba9.result -> output_a2b59d\nlist_faf6c2 -> sort_5c4a1d.list",
                "instance(x: 164, y: 135) sort_2f5a1c Std.List.Sort {}\n    instance(x: 340, y: 141) expression_b8e4a3 Std.Math.Expression {\n        expression: \"list1 == list2\"\n    }\n    instance(x: 56, y: 250) input_list_eb96d7 property(List) input_list\n    instance(x: 164, y: 250) sorted_list_5c9f61 property(List) sorted_list\n    input_list_eb96d7 -> sort_2f5a1c.list\n    input_list_eb96d7 -> expression_b8e4a3.gen_0\n    sort_2f5a1c.sorted_list -> expression_b8e4a3.gen_1\n    expression_b8e4a3.result -> property(Bool) is_sorted",
                "instance(x: 164, y: 135) sort_5f4c1a root.Std_k98ojb.List.Sort {}\ninstance(x: 302, y: 136) equal_8d6e54 root.Std_k98ojb.Logic.Equal {}\ninstance(x: 34, y: 132) input_list_faf6c2 property(List) input_list\ninput_list_faf6c2 -> sort_5f4c1a.list\nsort_5f4c1a.sorted_list -> equal_8d6e54.right\ninput_list_faf6c2 -> equal_8d6e54.left\ninstance(x: 533, y: 136) output_9f4da0 property(Bool) output\nequal_8d6e54.result -> output_9f4da0",
                "instance(x: 155, y: 120) sort_5c4a3b root.Std_k98ojb.List.Sort {}\ninstance(x: 302, y: 130) equals_f4e91d root.Std_k98ojb.Logic.Equal {}\ninstance(x: 56, y: 116) input_list_eb7431 property(List) input_list\ninput_list_eb7431 -> sort_5c4a3b.list\nsort_5c4a3b.sorted_list -> equals_f4e91d.right\ninput_list_eb7431 -> equals_f4e91d.left\ninstance(x: 449, y: 140) output_9f4e2a property(Bool) output\nequals_f4e91d.equal -> output_9f4e2a",
                "instance(x: 155, y: 120) sort_8c45e2 root.Std_k98ojb.List.Sort {}\n    instance(x: 311, y: 135) expression_b5dba9 root.Std_k98ojb.Math.Expression {\n        expression: \"list1 == list2\"\n    }\n    instance(x: 0, y: 50) input_list_e4f6c2 property(List) input_list\n    input_list -> sort_8c45e2.list\n    input_list -> expression_b5dba9.gen_0\n    sort_8c45e2.sorted_list -> expression_b5dba9.gen_1\n    expression_b5dba9.result -> output_f4a59d property(Bool) output",
                "instance(x: 164, y: 135) sort_a49ae4 root.Std_k98ojb.List.Sort {}\ninstance(x: 305, y: 135) expression_b5dba9 root.Std_k98ojb.Math.Expression {\n    expression: \"list1 == list2\"\n}\ninstance(x: 164, y: 269) input_list_faf6c2 property(List) input_list\ninput_list_faf6c2 -> sort_a49ae4.list\nsort_a49ae4.sorted_list -> expression_b5dba9.gen_0\ninput_list_faf6c2 -> expression_b5dba9.gen_1\ninstance(x: 503, y: 135) output_Boolean property(Bool) output_Boolean\nexpression_b5dba9.result -> output_Boolean",
                "instance(x: 155, y: 120) sort_f3a2d1 root.Std_k98ojb.List.Sort {}\n    instance(x: 326, y: 121) equal_8e4c11 root.Std_k98ojb.Logic.Equal {}\n    instance(x: 93, y: 54) input_list_e48f21 property(List) input_list\n    instance(x: 461, y: 190) output_b9d551 property(Bool) output\n\n    input_list_e48f21 -> sort_f3a2d1.list\n    input_list_e48f21 -> equal_8e4c11.left\n    sort_f3a2d1.sorted_list -> equal_8e4c11.right\n    equal_8e4c11.result -> output_b9d551",
                "instance(x: 140, y: 100) sort_ba94e2 root.Std_k98ojb.List.Sort {}\ninstance(x: 305, y: 105) expression_3c62f1 root.Std_k98ojb.Math.Expression {\n    expression: \"list1 == list2\"\n}\ninstance(x: 35, y: 155) input_list_ecc44a property(List) input_list {}\nexpression_3c62f1.result -> output_9d8e43\ninput_list_ecc44a -> sort_ba94e2.list\nsort_ba94e2.sorted_list -> expression_3c62f1.gen_0\ninput_list_ecc44a -> expression_3c62f1.gen_1\ninstance(x: 505, y: 110) output_9d8e43 property(Bool) output {}",
                "instance(x: 120, y: 100) sort_9f3a2c root.Std_k98ojb.List.Sort {}\ninstance(x: 250, y: 150) equal_f456d1 root.Std_k98ojb.Logic.Equal {}\ninstance(x: 50, y: 100) input_list_e4a832 property(List) list\ninput_list_e4a832 -> sort_9f3a2c.list\nsort_9f3a2c.sorted_list -> equal_f456d1.left\ninput_list_e4a832 -> equal_f456d1.right\ninstance(x: 400, y: 150) output_58c221 property(Bool) is_sorted\nequal_f456d1.result -> output_58c221"
            ],
            "25": [
                "instance(x: 100, y: 100) for_7f4c16 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_f459d2 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_eb1e3a root.List.Length {}\n    instance(x: 500, y: 200) list_length_4e0c16 root.List.Length {}\n\n    for_7f4c16.items -> list_length_eb1e3a.list\n    for_7f4c16.items -> list_length_4e0c16.list\n\n    in(x: -100, y: 100, name: \"list1\") property(List) list1_c8f404\n    in(x: -100, y: 200, name: \"list2\") property(List) list2_016b2e\n\n    list1_c8f404 -> for_7f4c16.items\n    list2_016b2e -> for_7f4c16.items\n\n    instance(x: 200, y: 100) list_getat_40a93d root.List.GetAt {}\n    instance(x: 200, y: 200) list_getat_d5cc3a root.List.GetAt {}\n\n    for_7f4c16.index -> list_getat_40a93d.index\n    for_7f4c16.index -> list_getat_d5cc3a.index\n\n    list1_c8f404 -> list_getat_40a93d.list\n    list2_016b2e -> list_getat_d5cc3a.list\n\n    list_getat_40a93d.item -> math_modulo_f459d2.value\n    list_getat_d5cc3a.item -> math_modulo_f459d2.divisor\n\n    out(x: 600, y: 100, name: \"output\") property(List) output_879de6\n\n    for_7f4c16.onItem -> math_modulo_f459d2\n    math_modulo_f459d2.result -> output_879de6",
                "instance(x: 100, y: 100) for_9f2c21 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_ba9e5d root.Math.Modulo {}\n    instance(x: 500, y: 100) list_get_at_left_4e1c16 root.List.GetAt {}\n    instance(x: 500, y: 200) list_get_at_right_72a315 root.List.GetAt {}\n\n    for_9f2c21.items -> list_get_at_left_4e1c16.list\n    for_9f2c21.items -> list_get_at_right_72a315.list\n    list_get_at_left_4e1c16.item -> math_modulo_ba9e5d.value\n    list_get_at_right_72a315.item -> math_modulo_ba9e5d.divisor\n\n    for_9f2c21.index -> list_get_at_left_4e1c16.index\n    for_9f2c21.index -> list_get_at_right_72a315.index\n\n    in(x: 0, y: 100) left_list_f8a43b property(List)\n    in(x: 0, y: 200) right_list_5d10e1 property(List)\n\n    left_list_f8a43b -> for_9f2c21.items\n    right_list_5d10e1 -> for_9f2c21.items\n\n    out(x: 700, y: 100) result_7c0f24 property(List)\n\n    for_9f2c21.on_item -> math_modulo_ba9e5d.trigger\n    math_modulo_ba9e5d.result -> result_7c0f24",
                "instance(x: 100, y: 100) for_6b4e16 root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_ecc51a root.Math.Modulo {}\n\nfor_6b4e16.items -> list1_f0e5c3\nlist2_b9d8f7 -> for_6b4e16.items\nfor_6b4e16.trigger -> trigger_d2d94f\nmath_modulo_ecc51a.divisor -> for_6b4e16.item\nmath_modulo_ecc51a.value -> for_6b4e16.item\nfor_6b4e16.index -> index_f7clea\n\nin(x: 50, y: 150, name: \"list1\") property(List) list1_f0e5c3\nin(x: 50, y: 250, name: \"list2\") property(List) list2_b9d8f7\nout(x: 500, y: 100, name: \"result\") property(List) result_39ed71\n\nfor_6b4e16.done -> done_3c0a5a\ndone_3c0a5a -> result_39ed71\nmath_modulo_ecc51a.result -> for_6b4e16.onItem",
                "instance(x: 100, y: 100) for_9f2c81 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_ba9e5d root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_8c2213 root.List.Length {}\n    instance(x: 500, y: 200) list_length_51a301 root.List.Length {}\n\n    for_9f2c81.items -> list_length_8c2213.list\n    for_9f2c81.items -> list_length_51a301.list\n    list_length_8c2213.length -> for_9f2c81.count\n    list_length_51a301.length -> for_9f2c81.count\n\n    instance(x: 200, y: 100) list_get_at_afe201 root.List.GetAt {}\n    instance(x: 200, y: 200) list_get_at_5ecee6 root.List.GetAt {}\n\n    for_9f2c81.index -> list_get_at_afe201.index\n    for_9f2c81.index -> list_get_at_5ecee6.index\n    for_9f2c81.items -> list_get_at_afe201.list\n    for_9f2c81.items -> list_get_at_5ecee6.list\n\n    list_get_at_afe201.item -> math_modulo_ba9e5d.value\n    list_get_at_5ecee6.item -> math_modulo_ba9e5d.divisor\n\n    in(x: 0, y: 100) property(List) input_list1_d7f3c4\n    in(x: 0, y: 200) property(List) input_list2_f41c95\n    input_list1_d7f3c4 -> for_9f2c81.items\n    input_list2_f41c95 -> for_9f2c81.items\n\n    out(x: 600, y: 100) property(List) output_list_c69d85\n    math_modulo_ba9e5d.result -> output_list_c69d85",
                "instance(x: 100, y: 100) for_9f3c21 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_ba9e64 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_1d10b5 root.List.Length {}\n    instance(x: 500, y: 200) list_length_5c8f35 root.List.Length {}\n\n    for_9f3c21.items -> list_length_1d10b5.list\n    for_9f3c21.items -> list_length_5c8f35.list\n\n    in(x: -100, y: 100, name: \"list1\") property(List) list1_2e6a22\n    in(x: -100, y: 200, name: \"list2\") property(List) list2_39d0b7\n\n    list1_2e6a22 -> for_9f3c21.items\n    list2_39d0b7 -> for_9f3c21.items\n\n    instance(x: 200, y: 100) list_get_at_68c2a4 root.List.GetAt {}\n    instance(x: 200, y: 200) list_get_at_d5aafe root.List.GetAt {}\n\n    for_9f3c21.index -> list_get_at_68c2a4.index\n    for_9f3c21.index -> list_get_at_d5aafe.index\n\n    list1_2e6a22 -> list_get_at_68c2a4.list\n    list2_39d0b7 -> list_get_at_d5aafe.list\n\n    list_get_at_68c2a4.item -> math_modulo_ba9e64.value\n    list_get_at_d5aafe.item -> math_modulo_ba9e64.divisor\n\n    out(x: 600, y: 100, name: \"output\") property(List) output_f46d95\n    for_9f3c21.onItem -> math_modulo_ba9e64.trigger\n    math_modulo_ba9e64.result -> output_f46d95",
                "instance(x: 100, y: 100) for_7f4d5c root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_d8a351 root.Math.Modulo {}\nfor_7f4d5c.items -> list_length_ea65b9 input\ninstance(x: 200, y: 50) list_get_at_1_f76543 root.List.GetAt {}\ninstance(x: 200, y: 150) list_get_at_2_f76543 root.List.GetAt {}\nlist_get_at_1_f76543.list -> for_7f4d5c.items\nlist_get_at_2_f76543.list -> for_7f4d5c.items\nfor_7f4d5c.index -> list_get_at_1_f76543.index\nfor_7f4d5c.index -> list_get_at_2_f76543.index\nlist_get_at_1_f76543.item -> math_modulo_d8a351.value\nlist_get_at_2_f76543.item -> math_modulo_d8a351.divisor\ninstance(x: 400, y: 100) list_ea65b9 root.List {}\nmath_modulo_d8a351.result -> list_ea65b9.items\nfor_7f4d5c.done -> for_done_7f4d5c trigger\ninstance(x: 500, y: 100) for_done_7f4d5c root.Std.Trigger {}",
                "instance(x: 100, y: 100) for_9f3c21 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_afe321 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_e54f32 root.List.Length {}\n    instance(x: 500, y: 200) list_length_f5e432 root.List.Length {}\n\n    for_9f3c21.items -> list_length_e54f32.list\n    for_9f3c21.items -> list_length_f5e432.list\n\n    list_length_e54f32.length -> for_9f3c21.count\n    list_length_f5e432.length -> for_9f3c21.count\n\n    in(x: 50, y: 100) property(List) list1_d53s2a\n    in(x: 50, y: 200) property(List) list2_d43s4a\n    out(x: 700, y: 100) property(List) output_65r32e\n\n    for_9f3c21.trigger -> for_9f3c21.reset\n    list1_d53s2a -> for_9f3c21.input_list\n    list2_d43s4a -> for_9f3c21.input_list2\n\n    instance(x: 200, y: 150) get_at_a_e321 root.List.GetAt {}\n    instance(x: 200, y: 250) get_at_b_f432 root.List.GetAt {}\n\n    for_9f3c21.index -> get_at_a_e321.index\n    for_9f3c21.index -> get_at_b_f432.index\n\n    list1_d53s2a -> get_at_a_e321.list\n    list2_d43s4a -> get_at_b_f432.list\n\n    get_at_a_e321.item -> math_modulo_afe321.value\n    get_at_b_f432.item -> math_modulo_afe321.divisor\n\n    for_9f3c21.on_item -> math_modulo_afe321.trigger\n    math_modulo_afe321.result -> output_65r32e",
                "instance(x: 100, y: 100) for_82e5c2 root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_6a4d9b root.Math.Modulo {}\n\nfor_82e5c2.items -> list_length_8f3b24\nlist1_b4a332 -> for_82e5c2.items\nlist2_35c11d -> for_82e5c2.items\n\ninstance(x: 100, y: 200) list_get_at_9a3f12 root.List.GetAt {}\ninstance(x: 300, y: 200) list_get_at_f4c831 root.List.GetAt {}\n\nfor_82e5c2.index -> list_get_at_9a3f12.index\nlist1_b4a332 -> list_get_at_9a3f12.list\nfor_82e5c2.index -> list_get_at_f4c831.index\nlist2_35c11d -> list_get_at_f4c831.list\n\nlist_get_at_9a3f12.item -> math_modulo_6a4d9b.value\nlist_get_at_f4c831.item -> math_modulo_6a4d9b.divisor\n\ninstance(x: 500, y: 100) list_create_e8e2ab root.List.Create {}\nmath_modulo_6a4d9b.result -> list_create_e8e2ab.items\nfor_82e5c2.done -> list_create_e8e2ab.trigger\n\nin(x: -100, y: 100, name: \"list1\") property(List) list1_b4a332\nin(x: -100, y: 200, name: \"list2\") property(List) list2_35c11d\nout(x: 600, y: 100, name: \"output\") property(List) output_f5e8b7\n\nlist_create_e8e2ab.list -> output_f5e8b7",
                "instance(x: 100, y: 100) for_9f3c65 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_ba91e5 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_7c1d8b root.List.Length {}\n    instance(x: 500, y: 200) list_length_7c1d8c root.List.Length {}\n\n    for_9f3c65.items -> list_length_7c1d8b.list\n    for_9f3c65.items -> list_length_7c1d8c.list\n\n    list_length_7c1d8b.length -> for_9f3c65.count\n    list_length_7c1d8c.length -> for_9f3c65.count\n\n    instance(x: 200, y: 100) list_get_at_dividend_e4a5e6 root.List.GetAt {}\n    instance(x: 200, y: 200) list_get_at_divisor_f50b95 root.List.GetAt {}\n\n    for_9f3c65.index -> list_get_at_dividend_e4a5e6.index\n    for_9f3c65.index -> list_get_at_divisor_f50b95.index\n\n    in(x: 0, y: 0) property(List) dividend_list \n    in(x: 0, y: 100) property(List) divisor_list \n\n    dividend_list -> list_get_at_dividend_e4a5e6.list\n    divisor_list -> list_get_at_divisor_f50b95.list\n\n    list_get_at_dividend_e4a5e6.item -> math_modulo_ba91e5.value\n    list_get_at_divisor_f50b95.item -> math_modulo_ba91e5.divisor\n\n    out(x: 600, y: 100) property(List) result_list \n    for_9f3c65.onItem -> result_list \n\n    math_modulo_ba91e5.result -> result_list",
                "instance(x: 105, y: 131) for_9f3c26 root.Std.For {}\n    instance(x: 23, y: 138) list1_e4a409 property(List) \n    instance(x: 24, y: 233) list2_5d94e6 property(List)\n    instance(x: 306, y: 141) modulo_b46c84 root.Math.Modulo {}\n    instance(x: 194, y: 140) get_at_list1_4f9b3a root.List.GetAt {}\n    instance(x: 195, y: 243) get_at_list2_e52d95 root.List.GetAt {}\n    list1_e4a409 -> for_9f3c26.items\n    list2_5d94e6 -> for_9f3c26.items\n    for_9f3c26.index -> get_at_list1_4f9b3a.index\n    for_9f3c26.index -> get_at_list2_e52d95.index\n    list1_e4a409 -> get_at_list1_4f9b3a.list\n    list2_5d94e6 -> get_at_list2_e52d95.list\n    get_at_list1_4f9b3a.item -> modulo_b46c84.value\n    get_at_list2_e52d95.item -> modulo_b46c84.divisor"
            ],
            "26": [
                "instance(x: 0, y: 0) to_uppercase_8a6d9b root.Std_k98ojb.Std.IfExpression {\n    to_uppercase_8a6d9b.expression = \"input.toUpperCase()\"\n    in(x: -100, y: 0, name: \"execute\") trigger() execute_e5c4e3\n    in(x: -200, y: 0, name: \"input\") property(String) input_71a657\n    out(x: 200, y: 0, name: \"result\") property(String) result_f2523c\n    execute_e5c4e3 -> to_uppercase_8a6d9b.execute\n    input_71a657 -> to_uppercase_8a6d9b.input\n    to_uppercase_8a6d9b.value -> result_f2523c\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpper {}\n        to_uppercase_073b72.input -> string_71a657\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "instance(x: 0, y: 0) to_uppercase_5c2a88 root.Std_k98ojb.Std.IfExpression {\n    to_uppercase_5c2a88.expression = \"input.toUpperCase()\"\n    in(x: -100, y: 0, name: \"execute\") trigger() execute_f35a43\n    in(x: -200, y: 0, name: \"input\") property(String) input_71a657\n    out(x: 300, y: 0, name: \"result\") property(String) result_e4ab8f\n    execute_f35a43 -> to_uppercase_5c2a88.execute\n    input_71a657 -> to_uppercase_5c2a88.input\n    to_uppercase_5c2a88.value -> result_e4ab8f\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpperCase {}\n        to_uppercase_073b72.input -> string_71a657\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpper {}\n        to_uppercase_073b72.input -> string_71a657\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "instance(x: 0, y: 0) to_uppercase_2e3b95 root.Std_k98ojb.Std.IfExpression {\n    \"input.toUpperCase()\" -> to_uppercase_2e3b95.expression\n}\nin(x: -216, y: 83, name: \"string\") property(String) string_71a657\nstring_71a657 -> to_uppercase_2e3b95.input\nout(x: 1545, y: 186, name: \"result\") property(String) result_f2523c\nto_uppercase_2e3b95.value -> result_f2523c",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpperCase {}\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        string_71a657 -> to_uppercase_073b72.input\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "instance(x: 0, y: 0) to_uppercase_6a9e95 root.Std_k98ojb.Std.IfExpression {\n    in(x: -20, y: -110, name: \"input\") property(String) input_ecc4d5\n    out(x: 154, y: 186, name: \"result\") property(String) result_afe3c1\n    to_uppercase_6a9e95.expression = \"input.toUpperCase()\"\n    input_ecc4d5 -> to_uppercase_6a9e95.input\n    to_uppercase_6a9e95.value -> result_afe3c1\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpperCase {}\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        string_71a657 -> to_uppercase_073b72.input\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpper {}\n        to_uppercase_073b72.input -> string_71a657\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}"
            ],
            "30": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -139, y: 226, name: \"position\") property(Number) position_e4e5b3\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) slice_9b38cc root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < position\"\n        }\n        instance(x: 300, y: 168) reverse_e875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) concat_14921d root.Std_k98ojb.List.Concat {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        ifexpression_5c4634.then -> reverse_e875ddb.execute\n        ifexpression_5c4634.else -> for_9ab286.next\n        list_0c1a77 -> slice_9b38cc.list\n        position_e4e5b3 -> slice_9b38cc.end\n        slice_9b38cc.result -> reverse_e875ddb.list\n        reverse_e875ddb.result -> concat_14921d.left\n        list_0c1a77 -> for_9ab286.items\n        position_e4e5b3 -> for_9ab286.count\n        for_9ab286.done -> continue_a7f942\n        concat_14921d.result -> data_0_0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -145, y: 160, name: \"position\") property(Number) position_e4e5b6\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: -99) slice_5c4634 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) reverse_875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_5c4634.list\n        position_e4e5b6 -> slice_5c4634.end\n        slice_5c4634.result -> reverse_875ddb.list\n        reverse_875ddb.result -> concat_9b38cc.left\n        list_0c1a77 -> slice_14921d.list\n        position_e4e5b6 -> slice_14921d.start\n        -1 -> slice_14921d.end\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -145, y: 220, name: \"position\") property(Number) position_5e2b3d\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n    instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {}\n    instance(x: 400, y: 168) reverse_6a4f3e root.Std_k98ojb.List.Reverse {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_875ddb.list\n    position_5e2b3d -> slice_875ddb.end\n    slice_875ddb.result -> reverse_6a4f3e.list\n    reverse_6a4f3e.result -> concat_9b38cc.left\n    array_0c1a77 -> for_9ab286.items\n    position_5e2b3d -> for_9ab286.count\n    for_9ab286.done -> continue_a7f942\n    List.Length(array_0c1a77) -> slice_875ddb.start\n    position_5e2b3d -> slice_875ddb.start\n    concat_9b38cc.result -> data_0_0\n    List.Slice(array_0c1a77, position_5e2b3d + 1, -1) -> concat_9b38cc.right\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n        in(x: -145, y: 160, name: \"position\") property(Number) position_0c1a78\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: -99) slice_5c4634 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) reverse_875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        array_0c1a77 -> slice_5c4634.list\n        position_0c1a78 -> slice_5c4634.end\n        slice_5c4634.result -> reverse_875ddb.list\n        reverse_875ddb.result -> concat_9b38cc.left\n        array_0c1a77 -> slice_14921d.list\n        position_0c1a78 -> slice_14921d.start\n        -1 -> slice_14921d.end\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -145, y: 240, name: \"position\") property(Number) position_eb8e5d\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: -99) slice_5c4634 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) reverse_e875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_5c4634.list\n        position_eb8e5d -> slice_5c4634.end\n        slice_5c4634.result -> reverse_e875ddb.list\n        reverse_e875ddb.result -> concat_9b38cc.left\n        list_0c1a77 -> slice_14921d.list\n        position_eb8e5d -> slice_14921d.start\n        -1 -> slice_14921d.end\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -145, y: 210, name: \"position\") property(Number) position_e4b5e3\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) slice_9b38cc root.Std_k98ojb.List.Slice {}\n    instance(x: 554, y: -99) reverse_e5c4634 root.Std_k98ojb.List.Reverse {}\n    instance(x: 300, y: 168) concat_875ddb root.Std_k98ojb.List.Concat {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_9b38cc.list\n    position_e4b5e3 -> slice_9b38cc.end\n    slice_9b38cc.result -> reverse_e5c4634.list\n    reverse_e5c4634.result -> concat_875ddb.left\n    array_0c1a77 -> slice_9b38cc.list\n    position_e4b5e3 -> slice_9b38cc.start\n    -1 -> slice_9b38cc.end\n    slice_9b38cc.result -> concat_875ddb.right\n    concat_875ddb.result -> data_0_0\n    for_9ab286.done -> continue_a7f942\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n        in(x: -155, y: 220, name: \"position\") property(Number) position_e4e3d5\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {}\n        instance(x: 400, y: 168) reverse_f5a4e6 root.Std_k98ojb.List.Reverse {}\n        instance(x: 500, y: 168) slice_2f9467 root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        array_0c1a77 -> slice_875ddb.list\n        position_e4e3d5 -> slice_875ddb.end\n        slice_875ddb.result -> reverse_f5a4e6.list\n        reverse_f5a4e6.result -> concat_9b38cc.left\n        array_0c1a77 -> slice_2f9467.list\n        position_e4e3d5 -> slice_2f9467.start\n        slice_2f9467.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -145, y: 200, name: \"position\") property(Number) position_e4a5d8\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) slice_3c72e5 root.Std_k98ojb.List.Slice {}\n    instance(x: 554, y: -99) reverse_f4a85d root.Std_k98ojb.List.Reverse {}\n    instance(x: 300, y: 168) concat_ebcc9f root.Std_k98ojb.List.Concat {}\n\n    execute_1ddb9f -> slice_3c72e5.execute\n    array_0c1a77 -> slice_3c72e5.list\n    position_e4a5d8 -> slice_3c72e5.end\n    slice_3c72e5.result -> reverse_f4a85d.list\n    reverse_f4a85d.result -> concat_ebcc9f.left\n    array_0c1a77 -> slice_3c72e5.list\n    position_e4a5d8 -> slice_3c72e5.end\n    -1 -> slice_3c72e5.start\n    slice_3c72e5.result -> concat_ebcc9f.right\n    concat_ebcc9f.result -> data_0_0\n    reverse_f4a85d.done -> continue_a7f942\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n        in(x: -142, y: 220, name: \"position\") property(Number) position_eb8e3d\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {\n            start: 0,\n            end: position_eb8e3d\n        }\n        instance(x: 554, y: -99) reverse_f5a4c9 root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {\n            start: position_eb8e3d,\n            end: -1\n        }\n        execute_1ddb9f -> slice_875ddb.execute\n        array_0c1a77 -> slice_875ddb.list\n        position_eb8e3d -> slice_875ddb.end\n        slice_875ddb.result -> reverse_f5a4c9.list\n        reverse_f5a4c9.result -> concat_9b38cc.left\n        array_0c1a77 -> slice_14921d.list\n        position_eb8e3d -> slice_14921d.start\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        reverse_f5a4c9.done -> continue_a7f942\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -148, y: 220, name: \"position\") property(Number) position_e4a5b6\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {}\n        instance(x: -200, y: 39) reverse_ea3a3a root.Std_k98ojb.List.Reverse {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_875ddb.list\n        position_e4a5b6 -> slice_875ddb.end\n        slice_875ddb.result -> reverse_ea3a3a.list\n        reverse_ea3a3a.result -> concat_9b38cc.left\n        list_0c1a77 -> for_9ab286.items\n        position_e4a5b6 -> for_9ab286.length\n        for_9ab286.done -> continue_a7f942\n        List.Length(for_9ab286.items) - position_e4a5b6 -> slice_875ddb.start\n        concat_9b38cc.result -> data_0_0\n        List.Slice(list_0c1a77, position_e4a5b6 + 1, -1) -> concat_9b38cc.right\n    }\n}"
            ],
            "32": [
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equal_9ff257 root.Std_k98ojb.Logic.Equal {}\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "instance(x: 100, y: 100) for_8eae56 root.Std_k98ojb.Std.For {}\ninstance(x: 300, y: 200) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n    expression: \"a == b\"\n}\ninstance(x: 500, y: 100) listgetat_d92c11 root.Std_k98ojb.List.GetAt {}\nin(x: 0, y: 0, name: \"array\") property(List) array_1e159f\nin(x: 50, y: 50, name: \"target\") property(Number) target_44a047\nout(x: 800, y: 100, name: \"index\") property(Number) index_fd7945\nout(x: 900, y: 200, name: \"found\") trigger() found_c95bcb\narray_1e159f -> for_8eae56.items\nfor_8eae56.item -> listgetat_d92c11.list\nfor_8eae56.index -> listgetat_d92c11.index\ntarget_44a047 -> ifexpression_a2fa90.gen_0\nlistgetat_d92c11.itemAtIndex -> ifexpression_a2fa90.gen_1\nifexpression_a2fa90.execute -> for_8eae56.trigger\nfor_8eae56.on_item -> ifexpression_a2fa90.execute\nifexpression_a2fa90.then -> found_c95bcb\nfor_8eae56.index -> index_fd7945\nifexpression_a2fa90.else -> for_8eae56.next",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"list\") property(List) list_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equality_9ff257 root.Std_k98ojb.Logic.Equal {}\n        list_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        target_e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.execute -> equality_9ff257.left\n        target_e19fb -> equality_9ff257.right\n        equality_9ff257.result -> ifexpression_a2fa90.value\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "instance(x: 100, y: 100) for_3c8f51 root.Std_k98ojb.Std.For {}\ninstance(x: 300, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n    expression: \"a == b\"\n}\ninstance(x: 500, y: 100) listgetat_8eae56 root.Std_k98ojb.List.GetAt {}\nin(x: 0, y: 0, name: \"array\") property(List) array_b5d10a\nin(x: 0, y: 50, name: \"target\") property(Number) target_1e19fb\nout(x: 800, y: 100, name: \"index\") property(Number) index_fd7945\nout(x: 900, y: 100, name: \"found\") trigger() found_c95bcb\narray_b5d10a -> for_3c8f51.items\nfor_3c8f51.on_item -> ifexpression_a2fa90.execute\nfor_3c8f51.item -> ifexpression_a2fa90.gen_0\ntarget_1e19fb -> ifexpression_a2fa90.gen_1\nifexpression_a2fa90.then -> found_c95bcb\nfor_3c8f51.index -> index_fd7945\nifexpression_a2fa90.else -> for_3c8f51.next",
                "instance(x: 100, y: 100) for_6c1e95 root.Std_k98ojb.Std.For {}\ninstance(x: 300, y: 200) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n    expression: \"a == b\"\n}\ninstance(x: 500, y: 100) listgetat_f4e9d5 root.Std_k98ojb.List.GetAt {}\nin(x: 0, y: 0, name: \"array\") property(List) array_79f6c8\nin(x: 50, y: 50, name: \"target\") property(Number) target_eae442\nout(x: 800, y: 100, name: \"index\") property(Number) index_2d9e5a\nout(x: 900, y: 200, name: \"found\") trigger() found_d8f321\narray_79f6c8 -> for_6c1e95.items\ntarget_eae442 -> ifexpression_a2fa90.gen_0\nfor_6c1e95.item -> ifexpression_a2fa90.gen_1\nifexpression_a2fa90.execute -> listgetat_f4e9d5.execute\nfor_6c1e95.index -> listgetat_f4e9d5.index\narray_79f6c8 -> listgetat_f4e9d5.list\nlistgetat_f4e9d5.itemAtIndex -> ifexpression_a2fa90.gen_1\nifexpression_a2fa90.then -> found_d8f321\nfor_6c1e95.index -> index_2d9e5a",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equals_9ff257 root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_index\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_index\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n        for_8eae56.done -> continue_c95bcb\n    }\n}",
                "instance(x: 100, y: 100) for_35a2b7 root.Std_k98ojb.Std.For {}\ninstance(x: 300, y: 200) ifexpression_9e5c51 root.Std_k98ojb.Std.IfExpression {\n    expression: \"a == b\"\n}\ninstance(x: 500, y: 100) listgetat_ebafe3 root.Std_k98ojb.List.GetAt {}\nfor_35a2b7.items -> listgetat_ebafe3.list\nlistgetat_ebafe3.index -> for_35a2b7.index\nifexpression_9e5c51.gen_0 -> listgetat_ebafe3.itemAtIndex\nfor_35a2b7.trigger -> for_35a2b7.execute\nifexpression_9e5c51.then -> for_35a2b7.done\nfor_35a2b7.on_item -> ifexpression_9e5c51.execute",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equals_9ff257 root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_index\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_index\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n        for_8eae56.done -> continue_c95bcb\n    }\n}",
                "instance(x: 100, y: 100) for_7a86b3 root.Std_k98ojb.Std.For {}\ninstance(x: 300, y: 100) listgetat_f4e1c5 root.Std_k98ojb.List.GetAt {}\ninstance(x: 500, y: 100) ifexpression_34f19d root.Std_k98ojb.Std.IfExpression {\n    expression: \"a == b\"\n}\ninstance(x: 200, y: 300) listlength_ebafe4 root.Std_k98ojb.List.Length {}\n\nfor_7a86b3.items -> listgetat_f4e1c5.list\nlistlength_ebafe4.list -> for_7a86b3.length\nfor_7a86b3.index -> listgetat_f4e1c5.index\nifexpression_34f19d.gen_0 -> listgetat_f4e1c5.itemAtIndex\nfor_7a86b3.trigger -> for_7a86b3.execute\nlistgetat_f4e1c5.itemAtIndex -> ifexpression_34f19d.a\nifexpression_34f19d.b -> 10\nifexpression_34f19d.then -> for_7a86b3.done\nfor_7a86b3.index -> ifexpression_34f19d.gen_1",
                "instance(x: 153, y: 101) iteration_find_5f3b7a root.Std_k98ojb.Iteration.Find {}\ninstance(x: 406, y: 270) list_getat_8eae56 root.Std_k98ojb.List.GetAt {}\ninstance(x: 215, y: 130) std_ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n    expression: \"a == b\"\n}\ninstance(x: 196, y: 256) math_sub_9ff257 root.Std_k98ojb.Math.Sub {}\ninstance(x: -37, y: -48) std_if_b5a3e4 root.Std_k98ojb.Std.If {}\nin(x: 50, y: 50, name: \"array\") property(List) array_f4c1d9\nin(x: 100, y: 100, name: \"target\") property(Number) target_19f2ce\nin(x: 150, y: 150, name: \"execute\") trigger() execute_c5b8a3\nout(x: 300, y: 200, name: \"index\") property(Number) index_9e1c51\nout(x: 350, y: 250, name: \"found\") trigger() found_f0f2d7\narray_f4c1d9 -> iteration_find_5f3b7a.items\ntarget_19f2ce -> iteration_find_5f3b7a.predicate.gen_0\nexecute_c5b8a3 -> iteration_find_5f3b7a.execute\niteration_find_5f3b7a.item -> index_9e1c51\niteration_find_5f3b7a.done -> found_f0f2d7"
            ],
            "39": [
                "instance(x: 140, y: 100) for_9f3b2a root.Std_k98ojb.Std.For {\n    instance(x: 305, y: 55) ifexpression_f14e7c root.Std_k98ojb.Std.IfExpression {\n        expression: \"index % 2 == 1 ? item % 2 == 1 : true\"\n    }\n    instance(x: 140, y: 220) listgetat_4a69d5 root.Std_k98ojb.List.GetAt {}\n    for_9f3b2a.on_item -> ifexpression_f14e7c.input\n    for_9f3b2a.item -> listgetat_4a69d5.item\n    for_9f3b2a.index -> ifexpression_f14e7c.index\n    instance(x: 140, y: 50) listlength_d459a6 root.Std_k98ojb.List.Length {}\n    listlength_d459a6.length -> for_9f3b2a.count\n}\ninstance(x: 500, y: 100) if_8d5c22 root.Std_k98ojb.Std.If {\n    if_8d5c22.input -> ifexpression_f14e7c.value\n}\nfor_9f3b2a.done -> if_8d5c22.then\ninstance(x: 140, y: -50) inputlist_e48a85 property(List) input_list\n\ninputlist_e48a85 -> listgetat_4a69d5.list\ninputlist_e48a85 -> listlength_d459a6.list",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) List_GetAt_4 root.List.GetAt {\n    list: list\n    index: index\n}\ninstance(x: 200, y: 200) Math_Modulo_5 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\nconnection(from: Std_For_1.on_item, to: List_GetAt_4)\nconnection(from: List_GetAt_4.item, to: Math_Modulo_5.value)\nconnection(from: Math_Modulo_5.result, to: Logic_Modulo_2.value)\nconnection(from: Logic_Modulo_2.result, to: Std_If_3.input)\nconnection(from: Std_For_1.index, to: Math_Modulo_5.value)",
                "instance(x: 106, y: 135) for_9f3c81 root.Std_k98ojb.Std.For {\n    instance(x: 270, y: 67) ifexpression_d5e2a6 root.Std_k98ojb.Std.IfExpression {\n        expression: \"it % 2 != 0 ? it : null\"\n    }\n    instance(x: 432, y: 135) listgetat_8c4f61 root.Std_k98ojb.List.GetAt {}\n    instance(x: 270, y: 206) logic_notequal_f1a5e3 root.Std_k98ojb.Logic.NotEqual {\n        right: 0\n    }\n    for_9f3c81.on_item -> ifexpression_d5e2a6.it\n    listgetat_8c4f61.item -> ifexpression_d5e2a6.input\n    for_9f3c81.index -> logic_notequal_f1a5e3.left\n    for_9f3c81.items -> listgetat_8c4f61.list\n    ifexpression_d5e2a6.value -> logic_notequal_f1a5e3.right\n}",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) Logic_NotEqual_4 root.Logic.NotEqual {\n    left: index\n    right: 0\n}\ninstance(x: 900, y: 100) Math_Modulo_5 root.Math.Modulo {\n    value: index\n    divisor: 2\n}\nStd_For_1.on_item -> Logic_Modulo_2.value\nLogic_Modulo_2.result -> Std_If_3.input\nStd_For_1.index -> Logic_NotEqual_4.left\nMath_Modulo_5.divisor -> Logic_NotEqual_4.right\nLogic_NotEqual_4.result -> Std_If_3.input\nStd_If_3.then -> Math_Modulo_5.value\nMath_Modulo_5.result -> Std_If_3.input",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) List_GetAt_4 root.List.GetAt {\n    list: list\n    index: index\n}\ninstance(x: 200, y: 200) Math_Modulo_5 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\nconnection(from: Std_For_1.on_item, to: List_GetAt_4)\nconnection(from: List_GetAt_4.item, to: Math_Modulo_5.value)\nconnection(from: Math_Modulo_5.result, to: Logic_Modulo_2.value)\nconnection(from: Logic_Modulo_2.result, to: Std_If_3.input)\nconnection(from: Std_For_1.index, to: Math_Modulo_5.value)",
                "instance(x: 164, y: 135) for_9f3a2e root.Std_k98ojb.Std.For {\n    items: list\n}\ninstance(x: 421, y: 110) ifexpression_4c2d21 root.Std_k98ojb.Std.IfExpression {\n    expression: \"index % 2 == 1 && item % 2 != 1 ? false : true\"\n}\nfor_9f3a2e.on_item -> ifexpression_4c2d21.input\nfor_9f3a2e.index -> ifexpression_4c2d21.index\nfor_9f3a2e.item -> ifexpression_4c2d21.item\ninstance(x: 164, y: 293) if_b8e6a5 root.Std_k98ojb.Std.If {\n    input: ifexpression_4c2d21.value\n}\nifexpression_4c2d21.value -> if_b8e6a5.input\nif_b8e6a5.then -> output\ninstance(x: 421, y: 293) output property(Bool) output",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) Logic_NotEqual_4 root.Logic.NotEqual {\n    left: index\n    right: 0\n}\ninstance(x: 900, y: 100) Math_Modulo_5 root.Math.Modulo {\n    value: index\n    divisor: 2\n}\nStd_For_1.on_item -> Logic_Modulo_2.value\nLogic_Modulo_2.result -> Std_If_3.input\nStd_For_1.index -> Logic_NotEqual_4.left\nMath_Modulo_5.divisor -> Logic_NotEqual_4.right\nLogic_NotEqual_4.equal -> Std_If_3.then\nStd_If_3.else -> Math_Modulo_5.value\nMath_Modulo_5.result -> Std_If_3.input",
                "instance(x: 164, y: 120) for_9f3b7a root.Std_k98ojb.Std.For {\n    instance(x: 246, y: 55) ifexpression_f4e2c1 root.Std_k98ojb.Std.IfExpression {\n        expression: \"index % 2 == 1 ? item % 2 == 1 : true\"\n    }\n    instance(x: 164, y: 219) listgetat_68a59d root.Std_k98ojb.List.GetAt {}\n    for_9f3b7a.on_item -> ifexpression_f4e2c1.input\n    for_9f3b7a.index -> ifexpression_f4e2c1.index\n    listgetat_68a59d.item -> ifexpression_f4e2c1.item\n}\ninstance(x: 419, y: 120) listlength_e49f62 root.Std_k98ojb.List.Length {}\nfor_9f3b7a.items -> listgetat_68a59d.list\nlistlength_e49f62.length -> for_9f3b7a.count",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) Logic_NotEqual_4 root.Logic.NotEqual {\n    left: index\n    right: 0\n}\ninstance(x: 900, y: 100) Math_Modulo_5 root.Math.Modulo {\n    value: index\n    divisor: 2\n}\nStd_For_1.on_item -> Logic_Modulo_2.value\nLogic_Modulo_2.result -> Std_If_3.input\nStd_For_1.index -> Logic_NotEqual_4.left\nMath_Modulo_5.divisor -> Logic_NotEqual_4.right\nLogic_NotEqual_4.equal -> Std_If_3.then\nStd_If_3.else -> Math_Modulo_5.value\nMath_Modulo_5.result -> Std_If_3.value",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) List_GetAt_4 root.List.GetAt {\n    list: list\n    index: index\n}\ninstance(x: 900, y: 100) Logic_NotEqual_5 root.Logic.NotEqual {\n    left: result\n    right: 0\n}\nList_GetAt_4.item -> Logic_Modulo_2.value\nStd_For_1.item -> List_GetAt_4.index\nLogic_Modulo_2.result -> Std_If_3.input\nStd_For_1.index -> Std_If_3.value\nStd_If_3.then -> Logic_NotEqual_5.left"
            ],
            "43": [
                "instance(x: 100, y: 100) iteration_find_95c2b1 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 246, y: 143) lambda_41a409 root.Std_k98ojb.Std.Lambda {\n    code: \"it % 2 != 0\"\n}\niteration_find_95c2b1.predicate -> lambda_41a409\nlambda_41a409.result -> iteration_find_95c2b1.result",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 250, y: 150) predicate_2 root.Std_k98ojb.Math.Expression {\n    expression: \"it % 2 != 0\"\n}\niteration_find_1.predicate -> predicate_2",
                "instance(x: 100, y: 100) find_first_odd_95c2e1 root.Std_k98ojb.Iteration.Find {\n        items: list\n        predicate: \"it % 2 != 0\"\n    }\n\n    out(x: 300, y: 100, name: \"first odd\") property(Number) first_odd\n\n    find_first_odd_95c2e1.item -> first_odd",
                "instance(x: 100, y: 100) find_first_odd_95c2b1 root.Std_k98ojb.Iteration.Find {\n    predicate: \"it % 2 != 0\"\n}\ninstance(x: 50, y: 150) list_542a51 root.Std_k98ojb.List {}\nlist_542a51 -> find_first_odd_95c2b1.items",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n    predicate: \"it % 2 != 0\"\n}\ninstance(x: 300, y: 100) list_2 root.Std_k98ojb.List.Length {}\nin(x: 50, y: 150, name: \"list\") property(List) list\nout(x: 400, y: 150, name: \"first odd number\") property(Number) first_odd_number\nlist -> iteration_find_1.items\niteration_find_1.item -> first_odd_number",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n        predicate: \"it % 2 != 0\"\n    }\n    instance(x: 200, y: 100) list_length_2 root.Std_k98ojb.List.Length {}\n    instance(x: 300, y: 100) list_get_at_3 root.Std_k98ojb.List.GetAt {\n        index: 0\n    }\n\n    iteration_find_1.items -> list_length_2.list\n    iteration_find_1.items -> list_get_at_3.list",
                "instance(x: 100, y: 100) find_first_odd_95c11b root.Std_k98ojb.Iteration.Find {\n    predicate: \"it % 2 != 0\"\n}\ninstance(x: 50, y: 150) list_542a51 root.Std_k98ojb.List {}\nlist_542a51 -> find_first_odd_95c11b.items\nfind_first_odd_95c11b.item -> null",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n        predicate: \"it % 2 != 0\"\n    }\n    instance(x: 300, y: 100) list_2 root.Std_k98ojb.List.Length {}\n    connection(iteration_find_1.items, list_2.list)\n    out(x: 500, y: 100) first_odd_number root.Std_k98ojb.List.GetAt {\n        index: 0\n        list: iteration_find_1.item\n    }",
                "instance(x: 100, y: 100) find_first_odd_95c42 root.Std_k98ojb.Iteration.Find {\n    items: list\n    predicate: \"it % 2 != 0\"\n}\nout(x: 300, y: 100, name: \"first odd\") property(Number) first_odd_c7a531\nfind_first_odd_95c42.item -> first_odd_c7a531",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 250, y: 150) predicate_2 root.Std_k98ojb.Logic.NotEqual {\n    left: it % 2\n    right: 0\n}\niteration_find_1.predicate: predicate_2"
            ],
            "44": [
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    \n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) range_6e8af5 Std.For {}\n    instance(x: 300, y: 0) square_3a8e90 Math.Mul {}\n    instance(x: 400, y: 0) add_8974a2 Math.Add {}\n    n -> range_6e8af5.items\n    0 -> range_6e8af5.index\n    range_6e8af5.item -> square_3a8e90.first\n    range_6e8af5.item -> square_3a8e90.second\n    sum -> add_8974a2.first\n    square_3a8e90.result -> add_8974a2.second\n    add_8974a2.result -> sum\n    func() {\n        in(x: 0, y: 100, name: \"item\") property(Number) item\n        instance(x: 100, y: 150) mul_0f3be6 Math.Mul {}\n        instance(x: 200, y: 150) sub_e38c7d Math.Sub {}\n        2 -> mul_0f3be6.first\n        item -> mul_0f3be6.second\n        mul_0f3be6.result -> sub_e38c7d.first\n        1 -> sub_e38c7d.second\n        sub_e38c7d.result -> square_3a8e90.first\n    } -> range_6e8af5.onItem\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    \n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) for_3a8e90 root.Std_k98ojb.Std.For {}\n    instance(x: 300, y: 50) math_expression_e38c7d root.Std_k98ojb.Math.Expression {\n        expression: \"i*i\"\n    }\n    instance(x: 500, y: 0) math_add_8974a2 root.Std_k98ojb.Math.Add {}\n    n -> for_3a8e90.items\n    1 -> for_3a8e90.start\n    for_3a8e90.item -> math_expression_e38c7d.gen_0\n    for_3a8e90.index -> math_add_8974a2.first\n    math_expression_e38c7d.result -> math_add_8974a2.second\n    math_add_8974a2.result -> sum\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) add_1_4e7d9c root.Std_k98ojb.Math.Add {}\n            2 -> mul_0f3be6.first\n            current_3f11cd -> mul_0f3be6.second\n            mul_0f3be6.result -> add_1_4e7d9c.first\n            1 -> add_1_4e7d9c.second\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"j*j\"\n            }\n            add_1_4e7d9c.result -> expression_8eee0e.gen_0\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) for_6e8af5 root.Std_k98ojb.Std.For {}\n    instance(x: 300, y: 50) math_expression_3a8e90 root.Std_k98ojb.Math.Expression {\n        expression: \"(2*i-1)*(2*i-1)\"\n    }\n    instance(x: 500, y: 0) math_add_8974a2 root.Std_k98ojb.Math.Add {}\n    n -> for_6e8af5.items\n    for_6e8af5.on_item -> math_expression_3a8e90.gen_0\n    math_expression_3a8e90.result -> math_add_8974a2.second\n    0 -> math_add_8974a2.first\n    math_add_8974a2.result -> sum\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    \n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) for_8e3a5c root.Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_expression_f9f2d4 root.Std_k98ojb.Math.Expression {\n        expression: \"(2*i - 1)*(2*i - 1)\"\n    }\n    instance(x: 400, y: 0) add_e5a96e root.Std_k98ojb.Math.Add {}\n    n -> for_8e3a5c.items\n    for_8e3a5c.on_item -> math_expression_f9f2d4.gen_0\n    math_expression_f9f2d4.result -> add_e5a96e.second\n    0 -> add_e5a96e.first\n    add_e5a96e.result -> sum\n}",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {}\n    instance(x: 300, y: 100) Math_Mul_2 root.Math.Mul {}\n    instance(x: 500, y: 100) Math_Add_3 root.Math.Add {}\n    instance(x: 200, y: 150) Math_Mul_4 root.Math.Mul {}\n    1 -> Std_For_1.trigger\n    n -> Std_For_1.items\n    Std_For_1.index -> Math_Mul_4.first\n    2 -> Math_Mul_4.second\n    Math_Mul_4.result -> Math_Mul_2.first\n    Math_Mul_2.first -> Math_Mul_2.second\n    Math_Mul_2.result -> Math_Add_3.first\n    Std_For_1.item -> Math_Add_3.second\n    Math_Add_3.result -> sum\n\n    instance(x: 100, y: 250) n_5 root.Std.Property { \n        type: \"Number\"\n    }\n    instance(x: 300, y: 250) sum_6 root.Std.Property { \n        type: \"Number\"\n    }",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) range_0 root.Std_k98ojb.List.GenerateRange {\n        from: 1,\n        to: n * 2 - 1,\n        step: 2\n    }\n    instance(x: 300, y: 0) map_1 root.Std_k98ojb.Iteration.Map {\n        items: range_0.list\n    }\n    func() {\n        in(x: -100, y: 50, name: \"x\") property(Number) x\n        out(x: 100, y: 50, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) mul_0 root.Std_k98ojb.Math.Mul {\n            first: x,\n            second: x\n        }\n        mul_0.result -> result\n    } -> map_1.mapper\n    instance(x: 500, y: 0) reduce_2 root.Std_k98ojb.Iteration.Reduce {\n        items: map_1.output,\n        initialValue: 0\n    }\n    func() {\n        in(x: -100, y: 50, name: \"accumulated\") property(Number) accumulated\n        in(x: -100, y: 150, name: \"current\") property(Number) current\n        out(x: 100, y: 100, name: \"sum\") property(Number) sum\n\n        instance(x: 0, y: 0) add_0 root.Std_k98ojb.Math.Add {\n            first: accumulated,\n            second: current\n        }\n        add_0.result -> sum\n    } -> reduce_2.reducer\n    reduce_2.output -> sum\n}",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {}\n    instance(x: 300, y: 100) Math_Mul_2 root.Math.Mul {}\n    instance(x: 500, y: 100) Math_Add_3 root.Math.Add {}\n    instance(x: 200, y: 150) Math_Mul_4 root.Math.Mul {}\n    1 -> Std_For_1.trigger\n    n -> Std_For_1.items\n    Std_For_1.index -> Math_Mul_4.first\n    2 -> Math_Mul_4.second\n    Math_Mul_4.result -> Math_Mul_2.first\n    Math_Mul_2.first -> Math_Mul_2.second\n    Math_Mul_2.result -> Math_Add_3.first\n    Std_For_1.item -> Math_Add_3.second\n    Math_Add_3.result -> sum\n\n    instance(x: 100, y: 250) n_5 root.Std.Property { \n        type: \"Number\"\n    }\n    instance(x: 300, y: 250) sum_6 root.Std.Property { \n        type: \"Number\"\n    }",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) range_0 root.Std_k98ojb.List.GenerateRange {\n        from: 1,\n        to: n * 2 - 1,\n        step: 2\n    }\n    instance(x: 300, y: 0) map_1 root.Std_k98ojb.Iteration.Map {\n        items: range_0.list\n    }\n    func() {\n        in(x: -100, y: 50, name: \"x\") property(Number) x\n        out(x: 100, y: 50, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) expression_0 root.Std_k98ojb.Math.Expression {\n            expression: \"x * x\"\n        }\n        expression_0.result -> result\n    } -> map_1.mapper\n    instance(x: 500, y: 0) reduce_2 root.Std_k98ojb.Iteration.Reduce {\n        items: map_1.output,\n        initialValue: 0\n    }\n    func() {\n        in(x: -100, y: 50, name: \"accumulated\") property(Number) accumulated\n        in(x: -100, y: 150, name: \"current\") property(Number) current\n        out(x: 100, y: 100, name: \"sum\") property(Number) sum\n\n        instance(x: 0, y: 0) add_0 root.Std_k98ojb.Math.Add {\n            first: accumulated,\n            second: current\n        }\n        add_0.result -> sum\n    } -> reduce_2.reducer\n    reduce_2.output -> sum\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    \n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) for_9f1e95 root.Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_expression_d4598a root.Std_k98ojb.Math.Expression {\n        expression: \"(2*i - 1)*(2*i - 1)\"\n    }\n    instance(x: 400, y: 0) add_f4567c root.Std_k98ojb.Math.Add {}\n    n -> for_9f1e95.items\n    for_9f1e95.on_item -> math_expression_d4598a.gen_0\n    math_expression_d4598a.result -> add_f4567c.second\n    0 -> add_f4567c.first\n    add_f4567c.result -> sum\n}"
            ],
            "47": [
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node_2.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node_2.first\n    math_mul_node.first -> math_mul_node_2.second\n    math_mul_node.trigger -> math_mul_node.trigger\n    math_mul_node_2.result -> List.Append",
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node_2.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node_2.first\n    math_mul_node.first -> math_mul_node_2.second\n    math_mul_node.trigger -> math_mul_node.trigger\n    math_mul_node_2.result -> List.Append",
                "List.Map(\n  input: List,\n  func: Math.Mul(\n    Math.Mul(\n      item: it,\n      item: it\n    ),\n    item: it\n  )\n)",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 100, y: 0) for_loop Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_mul Math_k98ojb.Math.Mul {}\n    instance(x: 500, y: 0) math_mul_2 Math_k98ojb.Math.Mul {}\n    instance(x: 200, y: 100) list_get_at Std_k98ojb.List.GetAt {}\n    for_loop.items -> list_get_at.list\n    for_loop.index -> list_get_at.index\n    list_get_at.item -> math_mul.first\n    list_get_at.item -> math_mul_2.first\n    math_mul.second -> math_mul_2.result\n    math_mul_2.second -> math_mul.result",
                "instance(x: 78, y: 120) std_for_node Std.For {}\n    instance(x: 263, y: 135) math_mul_node Math.Mul {}\n    instance(x: 426, y: 146) list_get_at_node List.GetAt {}\n    instance(x: 78, y: 51) list_length_node List.Length {}\n\n    list_length_node.list -> std_for_node.items\n    std_for_node.trigger -> std_for_node.trigger\n    std_for_node.item -> list_get_at_node.item\n    list_get_at_node.index -> std_for_node.index\n    list_get_at_node.list -> list_length_node.list\n    list_get_at_node.item -> math_mul_node.first\n    list_get_at_node.item -> math_mul_node.second\n    math_mul_node.result -> math_mul_node.result",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 200, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 400, y: 0) math_expression_node Math_k98ojb.Math.Expression {}\n\n    for_node.items -> List([1, 2, 3, 4, 5])\n    for_node.trigger -> Trigger()\n    math_expression_node.expression -> \"item * item * item\"\n    for_node.item -> math_expression_node.item",
                "instance(x: 0, y: 0) std Math_k93nbd\n    instance(x: 100, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_expression Math_k93nbd.Math.Expression {}\n\n    for_node.items -> List([1, 2, 3, 4, 5])\n    for_node.trigger -> Trigger()\n    math_expression.expression -> \"item * item * item\"\n    for_node.item -> math_expression.item",
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node_2.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node_2.first\n    math_mul_node.first -> math_mul_node_2.second\n    math_mul_node.trigger -> math_mul_node.trigger\n    math_mul_node_2.result -> List.Append",
                "instance(x: 0, y: 0) std Math_k4i6jz\n    instance(x: 200, y: 0) for For_p5e1n8\n    For_p5e1n8.items -> List_k7a9f2\n    instance(x: 400, y: 0) math_expression Math_j8a3g4\n\n    For_p5e1n8.on_item -> Math_j8a3g4.trigger\n    For_p5e1n8.item -> Math_j8a3g4.a\n    Math_j8a3g4.expression = \"a * a * a\"\n    instance(x: 600, y: 0) list List_k7a9f2\n\n    Math_j8a3g4.result -> List_k7a9f2.item\n    For_p5e1n8.done -> List_k7a9f2.done",
                "instance(x: 131, y: 115) std_for_node Std.For {}\n    instance(x: 426, y: -112) math_mul_node Math.Mul {}\n    instance(x: 613, y: -112) math_mul_node_1 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node.first\n    std_for_node.item -> math_mul_node.second\n    math_mul_node.result -> math_mul_node_1.first\n    std_for_node.item -> math_mul_node_1.second\n    math_mul_node_1.result -> List.Append"
            ],
            "40": [
                "func(diff_even_odd) product_even_odd {\n    in(list) property(List) list\n    out(product) property(Number) product\n\n    instance(filter_even) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance(first_even) root.Std_k98ojb.List.FirstItem {}\n    instance(filter_odd) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance(first_odd) root.Std_k98ojb.List.FirstItem {}\n    instance(mul) root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> product\n}",
                "func(diff_even_odd) product_even_odd {\n    in(list) property(List) list\n    out(product) property(Number) product\n\n    instance(filter_even) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance(first_even) root.Std_k98ojb.List.FirstItem {}\n    instance(filter_odd) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance(first_odd) root.Std_k98ojb.List.FirstItem {}\n    instance(mul) root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> product\n}",
                "instance(x: 100, y: 100) query_filter_even_1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_3 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_4 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_5 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_1.result -> list_firstitem_even_3.list\nquery_filter_odd_2.result -> list_firstitem_odd_4.list\nlist_firstitem_even_3.item -> math_mul_5.first\nlist_firstitem_odd_4.item -> math_mul_5.second",
                "func diff_even_odd {\n    in list property(List) list\n    out difference property(Number) difference\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance firstitem_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance firstitem_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> firstitem_even.list\n    list -> filter_odd.list\n    filter_odd.result -> firstitem_odd.list\n    firstitem_even.item -> mul.first\n    firstitem_odd.item -> mul.second\n    mul.result -> difference\n}",
                "func(diff_even_odd) product_even_odd {\n    in(list) property(List) list\n    out(product) property(Number) product\n\n    instance(filter_even) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance(first_even) root.Std_k98ojb.List.FirstItem {}\n    instance(filter_odd) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance(first_odd) root.Std_k98ojb.List.FirstItem {}\n    instance(mul) root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> product\n}",
                "instance(x: 100, y: 100) query_filter_even_5c461d root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_5c461e root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_870503 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_3078c6 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 200, y: 300) math_mul_852f2e root.Std_k98ojb.Math.Mul {}\nquery_filter_even_5c461d.result -> list_firstitem_even_870503.list\nquery_filter_odd_5c461e.result -> list_firstitem_odd_3078c6.list\nlist_firstitem_even_870503.item -> math_mul_852f2e.first\nlist_firstitem_odd_3078c6.item -> math_mul_852f2e.second",
                "func diff_even_odd {\n    in list property(List) list\n    out difference property(Number) difference\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance first_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance first_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> difference\n}",
                "instance(x: 100, y: 100) query_filter_even_5c82f2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_f46a1d root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_870503 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_3078c6 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 200, y: 300) math_mul_852f2e root.Std_k98ojb.Math.Mul {}\nquery_filter_even_5c82f2.list -> input_list\nquery_filter_odd_f46a1d.list -> input_list\nquery_filter_even_5c82f2.result -> list_firstitem_even_870503.list\nquery_filter_odd_f46a1d.result -> list_firstitem_odd_3078c6.list\nlist_firstitem_even_870503.item -> math_mul_852f2e.first\nlist_firstitem_odd_3078c6.item -> math_mul_852f2e.second\nmath_mul_852f2e.result -> output_product",
                "func diff_even_odd {\n    in list property(List) list\n    out difference property(Number) difference\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance first_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance first_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> difference\n}",
                "func(diff_even_odd) product_even_odd {\n    in(list) property(List) list\n    out(product) property(Number) product\n\n    instance(filter_even) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance(first_even) root.Std_k98ojb.List.FirstItem {}\n    instance(filter_odd) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance(first_odd) root.Std_k98ojb.List.FirstItem {}\n    instance(mul) root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> product\n}"
            ],
            "41": [
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) math_expression_node calculate_index {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> calculate_index.index\n    get_length.length -> calculate_index.length\n    calculate_index.result -> check_equal.left\n    for_loop.item -> check_equal.right\n\n    check_equal.true -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> for_loop.index\n\n    for_loop.done -> result.done\n    check_equal.false -> for_loop.next\n    for_loop.on_item -> check_equal.trigger\n\n    instance(x: 600, y: 0) std_if_node return_last_position {}\n    check_equal.true -> return_last_position.input\n    for_loop.index -> return_last_position.then\n    -1 -> return_last_position.else\n    return_last_position.value -> result.result",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node list_length {}\n    instance(x: 200, y: 0) logic_equal_node equal_check {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length.list\n    list_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> equal_check.left\n    target_value -> equal_check.right\n    equal_check.result -> for_loop.condition\n    for_loop.done -> done_trigger\n    for_loop.index -> result_output\n\n    target_value -> value_input\n    list_input -> for_loop.items",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node list_length {}\n    instance(x: 240, y: 0) logic_equal_node equal_check {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length_node.list\n    list_length_node.length -> for_loop.count\n    for_loop.index -> equal_check.left\n    for_loop.count -> equal_check.right\n    equal_check.result -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> for_loop.on_item\n\n    instance(x: 600, y: 0) iteration_find_node find_last_position {}\n    for_loop.done -> find_last_position.trigger\n    for_loop.items -> find_last_position.items\n    equal_check.result -> find_last_position.predicate",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node get_length {}\n    instance(x: 200, y: 0) logic_equal_node check_equal {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> get_length.list\n    get_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position\n\n    target_value -> last_position\n    get_element.list -> last_position_list",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node list_length {}\n    instance(x: 200, y: 0) logic_equal_node equal_check {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length.list\n    list_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> equal_check.left\n    target_value -> equal_check.right\n    equal_check.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node list_length {}\n    instance(x: 240, y: 0) logic_equal_node equal_check {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length_node.list\n    list_length_node.length -> for_loop.count\n    for_loop.index -> equal_check.left\n    for_loop.count -> equal_check.right\n    equal_check.result -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> for_loop.on_item\n\n    instance(x: 600, y: 0) logic_not_equal_node not_equal_check {}\n    instance(x: 720, y: 0) std_if_node if_statement {}\n\n    equal_check.result -> not_equal_check.left\n    false -> not_equal_check.right\n    not_equal_check.result -> if_statement.input\n    for_loop.index -> if_statement.then\n    decrement_index.result -> if_statement.else",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node get_length {}\n    instance(x: 200, y: 0) logic_equal_node check_equal {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> get_length.list\n    get_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> get_length.list\n    get_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> result\n\n    target_value = input value to search\n    input array -> for_loop.items\n    result = last position of element",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node get_length {}\n    instance(x: 200, y: 0) logic_equal_node check_equal {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> get_length.list\n    get_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node list_length {}\n    instance(x: 200, y: 0) logic_equal_node equal_check {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length.list\n    list_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> equal_check.left\n    target_value -> equal_check.right\n    equal_check.result -> for_loop.condition\n    for_loop.done -> done_trigger\n    for_loop.index -> result_output\n\n    target_value -> value_input\n    list_to_search -> list_input"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 2482,
        "task_candidates": {
            "8": [
                "instance(x: 100, y: 100) query_filter_1 root.Query.Filter {}\ninstance(x: 200, y: 100) list_get_at_2 root.List.GetAt {}\ninstance(x: 300, y: 100) math_expression_3 root.Math.Expression {}\ninstance(x: 400, y: 100) logic_equal_4 root.Logic.Equal {}\n\nlist_get_at_2.list -> query_filter_1.items\nmath_expression_3.expression -> \"it > num\"\nquery_filter_1.where -> math_expression_3.result\nlogic_equal_4.left -> list_get_at_2.item\nlogic_equal_4.right -> query_filter_1.items",
                "instance(x: 100, y: 50) query_filter_1 root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_2 root.List.GetAt {}\ninstance(x: 250, y: 100) math_expression_3 root.Math.Expression {}\ninstance(x: 300, y: 50) logic_equal_4 root.Logic.Equal {}\n\nlist_get_at_2.list -> query_filter_1.items\nmath_expression_3.expression = \"it < num\"\nquery_filter_1.where -> math_expression_3.num\ninput_num -> list_get_at_2.index",
                "instance(x: 100, y: 50) query_filter_6a8d7b root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_f4e3c2 root.List.GetAt {}\ninstance(x: 50, y: 50) math_expression_e8d5f1 root.Math.Expression {}\ninstance(x: 250, y: 100) std_if_34a6b9 root.Std.If {}\n\nlist_get_at_f4e3c2.index -> math_expression_e8d5f1.a\ninput_number_c7f2a9 -> math_expression_e8d5f1.b\nmath_expression_e8d5f1.expression = \"a > b\"\narray_9d8f1c -> query_filter_6a8d7b.items\nmath_expression_e8d5f1.result -> query_filter_6a8d7b.where\ninput_number_c7f2a9 -> std_if_34a6b9.input\nquery_filter_6a8d7b.result -> std_if_34a6b9.then",
                "instance(x: 100, y: 100) query_filter_4c9f17 root.Query.Filter {}\ninstance(x: 200, y: 100) list_get_at_f3a5d1 root.List.GetAt {}\ninstance(x: 50, y: 150) math_expression_e8d95b root.Math.Expression {}\ninstance(x: 250, y: 100) iteration_find_68c12e root.Iteration.Find {}\ninstance(x: 300, y: 100) logic_equal_f9a2f7 root.Logic.Equal {}\n\nlist_get_at_f3a5d1.index -> math_expression_e8d95b.a\ninput_number_d4a8a6 -> math_expression_e8d95b.b\nmath_expression_e8d95b.expression = \"a > b\"\nquery_filter_4c9f17.where = \"it > input_number\"\niteration_find_68c12e.predicate = \"logic_equal_f9a2f7.result\"\ninput_array_8a5b45 -> query_filter_4c9f17.items\ninput_array_8a5b45 -> list_get_at_f3a5d1.list\ninput_number_d4a8a6 -> logic_equal_f9a2f7.left\nlist_get_at_f3a5d1.result -> logic_equal_f9a2f7.right",
                "instance(x: 100, y: 200) query_filter_1 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_2 root.List.GetAt {}\ninstance(x: 200, y: 300) math_expression_3 root.Math.Expression {}\ninstance(x: 250, y: 350) std_if_4 root.Std.If {}\n\nlist_get_at_2.list -> query_filter_1.items\nmath_expression_3.expression -> \"it < x\"\nx -> math_expression_3.x\nquery_filter_1.where -> math_expression_3.result\nstd_if_4.input -> query_filter_1.result\nList.Length(query_filter_1.result) == List.Length(list_get_at_2.list) -> std_if_4.then",
                "instance(x: 100, y: 50) query_filter_6b2e8d root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_f4a5c3 root.List.GetAt {}\ninstance(x: 50, y: 50) math_expression_e8d45a root.Math.Expression {}\ninstance(x: 250, y: 100) std_if_3c1619 root.Std.If {}\n\nlist_get_at_f4a5c3.index -> math_expression_e8d45a.a\ninput_number_c68f19 -> math_expression_e8d45a.b\nmath_expression_e8d45a.expression = \"a > b\"\narray_1 -> query_filter_6b2e8d.items\nmath_expression_e8d45a.result -> query_filter_6b2e8d.where\ninput_number_c68f19 -> std_if_3c1619.input\nquery_filter_6b2e8d.result -> std_if_3c1619.then\narray_1 -> list_get_at_f4a5c3.list\n\ninstance(x: 150, y: 50) input_number_c68f19 property(Number) {}\ninstance(x: 300, y: 50) array_1 property([Number]) {}\n\nstd_if_3c1619.input -> std_if_3c1619.condition",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n    expression: \"input > it\"\n}\n\ninstance(x: 200, y: 100) query_filter_f9a6d5 root.Query.Filter {\n}\n\ninstance(x: 300, y: 100) list_get_length_e4e2c7 root.List.Length {\n}\n\nmath_expression_1.result -> query_filter_f9a6d5.where\ninput_number -> math_expression_1.input\narray_elements -> query_filter_f9a6d5.items\n\ninstance(x: 400, y: 100) logic_equal_c51b8a root.Logic.Equal {\n}\n\nquery_filter_f9a6d5.result -> logic_equal_c51b8a.left\narray_elements -> logic_equal_c51b8a.right\n\nlogic_equal_c51b8a.result -> output_result",
                "instance(x: 100, y: 50) query_filter_1 root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_2 root.List.GetAt {}\ninstance(x: 250, y: 100) math_expression_3 root.Math.Expression {}\ninstance(x: 300, y: 50) logic_equal_4 root.Logic.Equal {}\n\nlist_get_at_2.index -> math_expression_3.a\ninput_number -> math_expression_3.b\nmath_expression_3.expression = \"a < b\"\nquery_filter_1.where -> math_expression_3.result\nquery_filter_1.list -> input_list",
                "instance(x: 100, y: 200) query_filter_6b4c18 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_ebafe3 root.List.GetAt {}\ninstance(x: 250, y: 300) math_expression_f46a95 root.Math.Expression {}\ninstance(x: 50, y: 100) std_if_8d94b7 root.Std.If {}\n\nlist_get_at_ebafe3.index -> math_expression_f46a95.a\ninput_number -> math_expression_f46a95.b\nmath_expression_f46a95.expression = \"a > b\"\nquery_filter_6b4c18.where = \"it > input_number\"\narray_to_check -> query_filter_6b4c18.items\ninput_number -> std_if_8d94b7.input\nList.Length(query_filter_6b4c18.result) == List.Length(array_to_check) -> std_if_8d94b7.then\nstd_if_8d94b7.else -> output",
                "instance(x: 100, y: 200) query_filter_6a2e7d root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_ebafe3 root.List.GetAt {}\ninstance(x: 200, y: 300) math_expression_f46c1b root.Math.Expression {}\ninstance(x: 250, y: 350) iteration_find_91c8e5 root.Iteration.Find {}\n\nlist_get_at_ebafe3.index -> math_expression_f46c1b.a\ninput_number -> math_expression_f46c1b.b\nmath_expression_f46c1b.expression = \"a > b\"\nquery_filter_6a2e7d.where = \"it > input_number\"\niteration_find_91c8e5.predicate = \"math_expression_f46c1b.result\""
            ],
            "10": [
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_3b6a5e\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_a8d95c\n\n    instance(x: 100, y: 0) contains_z_351f1e root.Std_k98ojb.List.Contains {}\n    instance(x: 0, y: 50) characters_3a03c5 root.Std_k98ojb.Strings.Characters {}\n\n    characters_3a03c5.input -> input_3b6a5e\n    characters_3a03c5.characters -> contains_z_351f1e.list\n    \"z\" -> contains_z_351f1e.item\n    contains_z_351f1e.is_contained -> match_a8d95c\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_5c11a3\n    out(x: 200, y: 0, name: \"match\") property(Boolean) match_a4312e\n\n    instance(x: 100, y: 0) if_expression_9f4b22 Std.IfExpression {}\n    if_expression_9f4b22.expression = \"input.contains('z')\"\n    input_5c11a3 -> if_expression_9f4b22.input\n    if_expression_9f4b22.value -> match_a4312e\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_4c1e2a\n    out(x: 200, y: 0, name: \"match\") property(Boolean) match_a9f321\n\n    instance(x: 100, y: 0) if_expression_71a657 Std.IfExpression {}\n    if_expression_71a657.expression = \"input.contains('z')\"\n    input_4c1e2a -> if_expression_71a657.input\n    if_expression_71a657.value -> match_a9f321\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_1a2b3c\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_4d5e6f\n\n    instance(x: 100, y: 0) if_expression_7g8h9 root.Std_k98ojb.Std.IfExpression {\n        expression: \"input.includes('z')\"\n    }\n\n    input_1a2b3c -> if_expression_7g8h9.input\n    if_expression_7g8h9.value -> match_4d5e6f\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 79) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 295, y: 125) characters_e245354 root.Std_k98ojb.Strings.Characters {}\n\n        characters_e245354.input -> word_71a657\n        characters_e245354.characters -> contains_z_e4ab8f.list\n        \"z\" -> contains_z_e4ab8f.item\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        execute_97d5d5 -> if_204695.execute\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n        if_204695.else -> continue_1914e0\n        false -> match_f2523c\n    }\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_4b6a2e\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_9d8f1c\n\n    instance(x: 100, y: 0) if_expression_5c445a Std.IfExpression {}\n    if_expression_5c445a.expression = \"input.contains('z')\"\n    input_4b6a2e -> if_expression_5c445a.input\n    if_expression_5c445a.value -> match_9d8f1c\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_6c21a2\n    out(x: 200, y: 0, name: \"match\") property(Boolean) match_a5e1d4\n\n    instance(x: 100, y: 0) if_expression_9f3e22 Std.IfExpression {}\n    if_expression_9f3e22.expression = \"input.includes('z')\"\n    input_6c21a2 -> if_expression_9f3e22.input\n    if_expression_9f3e22.value -> match_a5e1d4\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_5c11a3\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_a4312e\n\n    instance(x: 100, y: 0) if_expression_9d8f21 Std.IfExpression {}\n    if_expression_9d8f21.expression = \"input.contains('z')\"\n    input_5c11a3 -> if_expression_9d8f21.input\n    if_expression_9d8f21.value -> match_a4312e\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 79) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 295, y: 125) characters_f245354 root.Std_k98ojb.Strings.Characters {}\n        characters_f245354.characters -> contains_z_e4ab8f.list\n        \"z\" -> contains_z_e4ab8f.item\n        word_71a657 -> characters_f245354.input\n        execute_97d5d5 -> if_204695.execute\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n        if_204695.else -> continue_1914e0\n        false -> match_f2523c\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 79) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 295, y: 125) characters_f245354 root.Std_k98ojb.Strings.Characters {}\n        characters_f245354.characters -> contains_z_e4ab8f.list\n        \"z\" -> contains_z_e4ab8f.item\n        word_71a657 -> characters_f245354.input\n        execute_97d5d5 -> if_204695.execute\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n        if_204695.else -> continue_1914e0\n        false -> match_f2523c\n    }\n}"
            ],
            "14": [
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) convert_to_string_2 root.Std.Strings.ToString {}\n    instance(x: 300, y: 100) characters_3 root.Std.Strings.Characters {}\n    instance(x: 400, y: 100) map_4 root.Std.Iteration.Map {\n        handler: func() {\n            in(x: -200, y: -50, name: \"char\") property(String) char\n            out(x: 200, y: -50, name: \"number\") property(Number) number\n            instance(x: 0, y: 0) to_number_5 root.Std.Strings.ToNumber {}\n            char -> to_number_5.input\n            to_number_5.output -> number\n        }\n    }\n    instance(x: 500, y: 100) sum_6 root.Std.Math.Sum {}\n    convert_to_string_2.output -> characters_3.input\n    characters_3.characters -> map_4.items\n    map_4.output_list -> sum_6.items",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 150) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 100) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 100) number_to_string_5 root.Std.ToString {}\n    number_to_string_5.input -> strings_characters_2.input\n    list_for_each_3.trigger -> math_add_4.trigger\n    math_expression_1.result -> math_add_4.first\n    instance(x: 250, y: 200) get_at_6 root.List.GetAt {\n        index: list_for_each_3.index,\n        list: strings_characters_2.characters\n    }\n    get_at_6.item -> math_expression_1.a\n    math_add_4.second: 0\n    instance(x: 600, y: 100) result_7 root.Std.Property {\n        type: \"Number\"\n    }\n    math_add_4.result -> result_7.input",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 150) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 100) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 100) number_to_string_5 root.Std.ToString {}\n    instance(x: 600, y: 150) to_number_6 root.Std.ToNumber {}\n\n    number_to_string_5.input -> strings_characters_2.input\n    list_for_each_3.trigger -> math_add_4.trigger\n    to_number_6.output -> math_add_4.first\n    math_expression_1.result -> math_add_4.second\n    math_add_4.result -> math_expression_1.a\n\n    func() sum_of_digits {\n        in(x: 0, y: 0) input property(Number) number\n        out(x: 200, y: 0) result property(Number) sum\n\n        number_to_string_5.input <- number\n        list_for_each_3.items <- strings_characters_2.characters\n        to_number_6.input <- list_for_each_3.item\n        math_expression_1.a <- math_add_4.result\n        sum <- math_expression_1.result\n    }",
                "instance(x: 100, y: 100) Math.Expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 100) Strings.Characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 100) List.Length_3 root.List.Length {}\n    instance(x: 400, y: 100) Math.Add_4 root.Math.Add {\n        first: 0\n    }\n    instance(x: 500, y: 100) Std.For_5 root.Std.For {\n        items: Strings.Characters_2.characters\n    }\n    Math.Expression_1.result -> Strings.Characters_2.input\n    Std.For_5.trigger -> Math.Add_4.trigger\n    List.Length_3.length -> Std.For_5.length\n    Strings.Characters_2.characters -> List.Length_3.list\n    instance(x: 600, y: 100) Logic.Equal_6 root.Logic.Equal {\n        left: \"0\"\n    }\n    instance(x: 700, y: 100) Math.Expression_7 root.Math.Add {\n        first: Math.Add_4.result\n    }\n    Std.For_5.on_item -> Logic.Equal_6.input\n    Logic.Equal_6.equal -> Math.Expression_7.trigger\n    Strings.Characters_2.characters -> Logic.Equal_6.right",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 150) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 100) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 100) number_to_string_5 root.Std.ToString {}\n    number_to_string_5.input -> strings_characters_2.input\n    list_for_each_3.trigger -> list_for_each_3.trigger\n    math_expression_1.result -> math_add_4.first\n    list_for_each_3.item -> math_expression_1.a\n    math_add_4.second: 0\n    math_add_4.result -> math_expression_1.a",
                "instance(x: 100, y: 100) Math.Sum_5b8a25 root.Std.Math.Sum {}\n    instance(x: 200, y: 150) Strings.Characters_f47c14 root.Std.Strings.Characters {}\n    instance(x: 300, y: 150) Query.Filter_71f2e7 root.Std.Query.Filter {}\n    instance(x: 400, y: 100) Math.Expression_ea54b3 root.Std.Math.Expression {}\n\n    Strings.Characters_f47c14.characters -> Query.Filter_71f2e7.items\n    Query.Filter_71f2e7.output_list -> Math.Sum_5b8a25.items\n\n    func() {\n        in(x: -272, y: -48, name: \"current\") property(String) current_86a8fb\n        out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n        instance(x: 24, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std.Logic.Equal {}\n        current_86a8fb -> isnumeric_9cb360.left\n        \"0123456789\" -> isnumeric_9cb360.right\n        isnumeric_9cb360.result -> output_8ba733\n    } -> Query.Filter_71f2e7.where\n\n    Math.Sum_5b8a25.sum -> Math.Expression_ea54b3.a\n    Math.Expression_ea54b3.expression = \"a\"",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 200) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 250) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 300) variable_init_5 root.Variable.Init {\n        value: 0\n    }\n    variable_init_5.value -> math_add_4.first\n    list_for_each_3.item -> math_add_4.second\n    math_expression_1.result -> strings_characters_2.input\n    list_for_each_3.trigger -> math_add_4.trigger\n    math_add_4.result -> variable_init_5.value",
                "instance(x: 240, y: 69) std_ifexpression_1 root.Std.IfExpression {}\n    instance(x: 340, y: 169) math_add_2 root.Math.Add {}\n    instance(x: 440, y: 269) list_getat_3 root.List.GetAt {}\n    instance(x: 540, y: 369) strings_characters_4 root.Strings.Characters {}\n    instance(x: 640, y: 469) std_if_5 root.Std.If {}\n    instance(x: 740, y: 569) math_sub_6 root.Math.Sub {}\n    instance(x: 840, y: 669) list_length_7 root.List.Length {}\n\n    strings_characters_4.input -> list_getat_3.list\n    list_length_7.length -> std_ifexpression_1.value\n    math_add_2.result -> std_ifexpression_1.then\n    list_getat_3.item -> math_add_2.first\n    math_sub_6.result -> math_add_2.second\n    list_length_7.list -> math_sub_6.first\n    10 -> math_sub_6.second\n    std_if_5.value -> strings_characters_4.input\n    std_ifexpression_1.expression = \"value > 0 ? value : 0\"\n    std_if_5.then -> strings_characters_4.input",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) convert_to_string_2 root.Std.Strings.ToString {}\n    instance(x: 300, y: 100) characters_3 root.Std.Strings.Characters {}\n    instance(x: 400, y: 100) map_4 root.Std.Iteration.Map {\n        handler: func() {\n            in(x: -200, y: -50, name: \"char\") property(String) char\n            out(x: 200, y: -50, name: \"number\") property(Number) number\n            instance(x: 0, y: 0) to_number_1 root.Std.Strings.ToNumber {}\n            char -> to_number_1.input\n            to_number_1.output -> number\n        }\n    }\n    instance(x: 500, y: 100) sum_5 root.Std.Math.Sum {}\n    math_expression_1.result -> convert_to_string_2.input\n    convert_to_string_2.output -> characters_3.input\n    characters_3.characters -> map_4.items\n    map_4.output_list -> sum_5.items",
                "instance(x: 100, y: 100) Math.Expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 100) Strings.Characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 100) List.Length_3 root.List.Length {}\n    instance(x: 400, y: 100) Math.Add_4 root.Math.Add {\n        first: 0\n    }\n    instance(x: 500, y: 100) Std.For_5 root.Std.For {\n        items: Strings.Characters_2.characters\n    }\n    instance(x: 600, y: 100) Logic.Equal_6 root.Logic.Equal {}\n    instance(x: 700, y: 100) Math.Mul_7 root.Math.Mul {\n        first: 10\n    }\n\n    Math.Expression_1.result -> Strings.Characters_2.input\n    Std.For_5.item -> Math.Add_4.second\n    Math.Add_4.result -> Math.Add_4.first\n    Std.For_5.done -> Math.Add_4.trigger"
            ],
            "15": [
                "instance(x: 194, y: 120) sort_a49ae4 root.Std_k98ojb.List.Sort {}\n    instance(x: 405, y: 135) expression_b5dba9 root.Std_k98ojb.Math.Expression {\n        expression: \"list1 == list2\"\n    }\n    instance(x: 251, y: 257) input_list_82d404 root.Std_k98ojb.List.GetAt {}\n    sort_a49ae4.sorted_list -> expression_b5dba9.gen_0\n    input_list_82d404.list -> expression_b5dba9.gen_1\n    input_list_82d404.list -> sort_a49ae4.list\n    expression_b5dba9.result -> output",
                "instance(x: 156, y: 134) sort_5f2c11 root.Std_k98ojb.List.Sort {}\n    instance(x: 305, y: 135) expression_b9a351 root.Std_k98ojb.Logic.Equal {\n        left: list_faf6c2\n        right: sorted_list_a49ae4\n    }\n    instance(x: -14, y: 129) list_faf6c2 root.Std_k98ojb.List {}\n    instance(x: 156, y: 200) sorted_list_a49ae4 root.Std_k98ojb.List {}\n    sort_5f2c11.sorted_list -> sorted_list_a49ae4\n    list_faf6c2 -> sort_5f2c11.list\n    expression_b9a351.equal -> output_a2b59d",
                "instance(x: 155, y: 120) sort_4c2f6d root.Std_k98ojb.List.Sort {}\n    instance(x: 305, y: 135) equals_8a52e1 root.Std_k98ojb.Logic.Equal {}\n    instance(x: 20, y: 100) input_list_ebf42c property(List) input_list\n    instance(x: 155, y: 50) output_9d8f61 property(Bool) output\n\n    input_list -> sort_4c2f6d.list\n    input_list -> equals_8a52e1.left\n    sort_4c2f6d.sorted_list -> equals_8a52e1.right\n    equals_8a52e1.result -> output",
                "instance(x: 164, y: 135) sort_3c91a7 root.Std_k98ojb.List.Sort {}\n    instance(x: 351, y: 142) equals_d5e2d9 root.Std_k98ojb.Logic.Equal {}\n    in(x: 32, y: 83, name: \"list\") property(List) list_faf6c2\n    out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n    list_faf6c2 -> sort_3c91a7.list\n    list_faf6c2 -> equals_d5e2d9.left\n    sort_3c91a7.sorted_list -> equals_d5e2d9.right\n    equals_d5e2d9.result -> output_a2b59d",
                "instance(x: 164, y: 135) sort_8c45a4 root.Std_k98ojb.List.Sort {}\ninstance(x: 346, y: 142) equal_d5e32d root.Std_k98ojb.Logic.Equal {}\ninstance(x: 103, y: 246) input_list_f2a6c9 property(List) input_list\ninput_list_f2a6c9 -> sort_8c45a4.list\nsort_8c45a4.sorted_list -> equal_d5e32d.right\ninput_list_f2a6c9 -> equal_d5e32d.left\ninstance(x: 523, y: 163) output_79f42b property(Bool) output\nequal_d5e32d.equal -> output_79f42b",
                "instance(x: 100, y: 100) sort_f9a2e4 root.Std_k98ojb.List.Sort {}\n    instance(x: 300, y: 100) equals_5c9f11 root.Std_k98ojb.Logic.Equal {}\n    instance(x: 100, y: 200) input_list_ecc52d property(List) input_list\n    instance(x: 300, y: 200) output_ba9251 property(Bool) output\n\n    input_list_ecc52d -> sort_f9a2e4.list\n    input_list_ecc52d -> equals_5c9f11.left\n    sort_f9a2e4.sorted_list -> equals_5c9f11.right\n    equals_5c9f11.result -> output_ba9251",
                "instance(x: 194, y: 135) sort_8c6a88 root.Std_k98ojb.List.Sort {}\n    instance(x: 419, y: 141) equal_e4f2d9 root.Std_k98ojb.Logic.Equal {}\n    in(x: 42, y: 82, name: \"list\") property(List) list_faf6c2\n    out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n    list_faf6c2 -> sort_8c6a88.list\n    list_faf6c2 -> equal_e4f2d9.left\n    sort_8c6a88.sorted_list -> equal_e4f2d9.right\n    equal_e4f2d9.result -> output_a2b59d",
                "instance(x: 156, y: 134) sort_3c81a2 root.Std_k98ojb.List.Sort {}\n    instance(x: 305, y: 135) expression_b5dba9 root.Std_k98ojb.Logic.Equal {\n        left: list_faf6c2\n        right: sorted_list_a49ae4\n    }\n    instance(x: -100, y: 129) list_faf6c2 property(List) {}\n    sort_3c81a2.sorted_list -> expression_b5dba9.right\n    list_faf6c2 -> sort_3c81a2.list\n    expression_b5dba9.result -> output_a2b59d\n\n    instance(x: 203, y: -192) check_sorted_24d4b5 root.main.check_sorted {}\n    out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d",
                "instance(x: 100, y: 100) sort_3c531f root.Std_k98ojb.List.Sort {}\ninstance(x: 300, y: 100) equal_f46a2d root.Std_k98ojb.Logic.Equal {}\ninstance(x: 0, y: 0) input_list_a8e56c property(List) input_list\ninput_list_a8e56c -> sort_3c531f.list\nsort_3c531f.sorted_list -> equal_f46a2d.right\ninput_list_a8e56c -> equal_f46a2d.left\ninstance(x: 500, y: 100) output_9b5f1a property(Bool) output\nequal_f46a2d.equal -> output_9b5f1a",
                "instance(x: 164, y: 120) sort_6c4a3d root.Std_k98ojb.List.Sort {}\ninstance(x: 349, y: 135) expression_8e4f23 root.Std_k98ojb.Math.Expression {\n    expression: \"list1 == list2\"\n}\ninstance(x: 104, y: 241) equals_d5c9a3 root.Std_k98ojb.Logic.Equal {}\nequals_d5c9a3.left -> sort_6c4a3d.list\nexpression_8e4f23.gen_0 -> equals_d5c9a3.right\nsort_6c4a3d.sorted_list -> expression_8e4f23.gen_1\ninstance(x: 503, y: 135) output_49b2c1 property(Bool) {}\nexpression_8e4f23.result -> output_49b2c1"
            ],
            "25": [
                "instance(x: 100, y: 100) for_7f4c16 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_f459d2 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_eb1e3a root.List.Length {}\n    instance(x: 500, y: 200) list_length_4e0c16 root.List.Length {}\n\n    for_7f4c16.items -> list_length_eb1e3a.list\n    for_7f4c16.items -> list_length_4e0c16.list\n\n    in(x: -100, y: 100, name: \"list1\") property(List) list1_c8f404\n    in(x: -100, y: 200, name: \"list2\") property(List) list2_016b2e\n\n    list1_c8f404 -> for_7f4c16.items\n    list2_016b2e -> for_7f4c16.items\n\n    instance(x: 200, y: 100) list_getat_40a93d root.List.GetAt {}\n    instance(x: 200, y: 200) list_getat_d5cc3a root.List.GetAt {}\n\n    for_7f4c16.index -> list_getat_40a93d.index\n    for_7f4c16.index -> list_getat_d5cc3a.index\n\n    list1_c8f404 -> list_getat_40a93d.list\n    list2_016b2e -> list_getat_d5cc3a.list\n\n    list_getat_40a93d.item -> math_modulo_f459d2.value\n    list_getat_d5cc3a.item -> math_modulo_f459d2.divisor\n\n    out(x: 600, y: 100, name: \"output\") property(List) output_879de6\n\n    for_7f4c16.onItem -> math_modulo_f459d2\n    math_modulo_f459d2.result -> output_879de6",
                "instance(x: 100, y: 100) for_6a4f9d root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_ebafe5 root.Math.Modulo {}\nfor_6a4f9d.trigger -> for_6a4f9d.trigger\nin(x: -200, y: 50, name: \"list1\") property(List) list1_f46c2e\nin(x: -200, y: 150, name: \"list2\") property(List) list2_5b7f3d\nout(x: 500, y: 100, name: \"output\") property(List) output_e8a55c\ninstance(x: 0, y: 0) list_get_at_1_b9e30e root.List.GetAt {}\ninstance(x: 0, y: -50) list_get_at_2_4d3f51 root.List.GetAt {}\nlist1_f46c2e -> list_get_at_1_b9e30e.list\nlist2_5b7f3d -> list_get_at_2_4d3f51.list\nfor_6a4f9d.index -> list_get_at_1_b9e30e.index\nfor_6a4f9d.index -> list_get_at_2_4d3f51.index\nlist_get_at_1_b9e30e.item -> math_modulo_ebafe5.value\nlist_get_at_2_4d3f51.item -> math_modulo_ebafe5.divisor\nmath_modulo_ebafe5.result -> for_6a4f9d.output\nfor_6a4f9d.items -> list1_f46c2e\nfor_6a4f9d.done -> output_e8a55c",
                "instance(x: 100, y: 100) for_9f3c16 root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_d8a321 root.Math.Modulo {}\n\nfor_9f3c16.items -> list1_f2a5d7\nfor_9f3c16.trigger -> trigger_e4e2b6\nlist2_35a417 -> for_9f3c16.items2\n\ninstance(x: 100, y: 200) list_getat_23a421 root.List.GetAt {}\ninstance(x: 300, y: 200) list_getat_54d8f2 root.List.GetAt {}\n\nlist1_f2a5d7 -> list_getat_23a421.list\nfor_9f3c16.index -> list_getat_23a421.index\nlist2_35a417 -> list_getat_54d8f2.list\nfor_9f3c16.index -> list_getat_54d8f2.index\n\nlist_getat_23a421.item -> math_modulo_d8a321.value\nlist_getat_54d8f2.item -> math_modulo_d8a321.divisor\n\ninstance(x: 500, y: 100) list_create_4c6b34 root.List.Create {}\nmath_modulo_d8a321.result -> list_create_4c6b34.items\n\nfor_9f3c16.onItem -> math_modulo_d8a321.trigger\nfor_9f3c16.done -> done_2e7d95\n\ninstance(x: 100, y: 50) list_length_7f2c11 root.List.Length {}\nlist1_f2a5d7 -> list_length_7f2c11.list\nlist_length_7f2c11.length -> for_9f3c16.count",
                "instance(x: 100, y: 100) for_5a4f1e root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_f4a321 root.Math.Modulo {}\nfor_5a4f1e.items -> list_length_e53c11 input\ninstance(x: 200, y: 100) list_get_at_2b6d22 root.List.GetAt {}\ninstance(x: 200, y: 200) list_get_at_7d8f43 root.List.GetAt {}\nfor_5a4f1e.index -> list_get_at_2b6d22.index\nfor_5a4f1e.index -> list_get_at_7d8f43.index\ninstance(x: 0, y: 100) list_1_9c64a3 property(List) \ninstance(x: 0, y: 200) list_2_a8f321 property(List) \nlist_1_9c64a3 -> list_get_at_2b6d22.list\nlist_2_a8f321 -> list_get_at_7d8f43.list\nlist_get_at_2b6d22.item -> math_modulo_f4a321.value\nlist_get_at_7d8f43.item -> math_modulo_f4a321.divisor\nmath_modulo_f4a321.result -> for_5a4f1e.on_item",
                "instance(x: 100, y: 100) for_9f2e21 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_afe321 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_e4a5d1 root.List.Length {}\n    instance(x: 500, y: 200) list_length_e4a5d2 root.List.Length {}\n\n    for_9f2e21.trigger -> for_9f2e21.trigger\n    list_length_e4a5d1.list -> for_9f2e21.items\n    list_length_e4a5d2.list -> for_9f2e21.items\n\n    in(x: 50, y: 100) property(List) list1_f43a11\n    in(x: 50, y: 200) property(List) list2_f43a12\n\n    list1_f43a11 -> list_length_e4a5d1.list\n    list2_f43a11 -> list_length_e4a5d2.list\n\n    for_9f2e21.onItem -> math_modulo_afe321.value\n    for_9f2e21.index -> list_get_at_1_c8bba6.index\n    for_9f2e21.index -> list_get_at_2_d8bba7.index\n    list1_f43a11 -> list_get_at_1_c8bba6.list\n    list2_f43a11 -> list_get_at_2_d8bba7.list\n\n    instance(x: 200, y: 150) list_get_at_1_c8bba6 root.List.GetAt {}\n    instance(x: 400, y: 150) list_get_at_2_d8bba7 root.List.GetAt {}\n\n    list_get_at_1_c8bba6.item -> math_modulo_afe321.divisor\n    list_get_at_2_d8bba7.item -> math_modulo_afe321.value\n\n    out(x: 600, y: 100) property(List) output_f43a13\n    for_9f2e21.done -> output_f43a13",
                "instance(x: 100, y: 100) list1_016b2e property(List) \ninstance(x: 200, y: 100) list2_c8f404 property(List) \ninstance(x: 300, y: 100) length_78d487 root.Std_k98ojb.List.Length {}\ninstance(x: 400, y: 100) for_loop_d5cc4 root.Std_k98ojb.Std.For {}\ninstance(x: 500, y: 100) get_at_1_f8a2e3 root.Std_k98ojb.List.GetAt {}\ninstance(x: 600, y: 100) get_at_2_5c2f41 root.Std_k98ojb.List.GetAt {}\ninstance(x: 700, y: 100) modulo_cd5cc4 root.Std_k98ojb.Math.Modulo {}\nlist1_016b2e -> length_78d487.list\nlength_78d487.length -> for_loop_d5cc4.count\nfor_loop_d5cc4.index -> get_at_1_f8a2e3.index\nfor_loop_d5cc4.index -> get_at_2_5c2f41.index\nlist1_016b2e -> get_at_1_f8a2e3.list\nlist2_c8f404 -> get_at_2_5c2f41.list\nget_at_1_f8a2e3.item -> modulo_cd5cc4.value\nget_at_2_5c2f41.item -> modulo_cd5cc4.divisor",
                "instance(x: 100, y: 100) for_7a86c5 root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_8e65d2 root.Math.Modulo {}\nfor_7a86c5.trigger -> for_7a86c5.trigger\nin(x: -200, y: 50, name: \"list1\") property(List) list1_c53f41\nin(x: -200, y: 150, name: \"list2\") property(List) list2_f4b2e9\nout(x: 500, y: 100, name: \"output\") property(List) output_47a921\ninstance(x: 0, y: 50) list_get_at_1_8d65f5 root.List.GetAt {}\ninstance(x: 0, y: 150) list_get_at_2_f7e9b6 root.List.GetAt {}\nlist1_c53f41 -> list_get_at_1_8d65f5.list\nlist2_f4b2e9 -> list_get_at_2_f7e9b6.list\nfor_7a86c5.index -> list_get_at_1_8d65f5.index\nfor_7a86c5.index -> list_get_at_2_f7e9b6.index\nlist_get_at_1_8d65f5.item -> math_modulo_8e65d2.value\nlist_get_at_2_f7e9b6.item -> math_modulo_8e65d2.divisor\nmath_modulo_8e65d2.result -> for_7a86c5.output\nfor_7a86c5.items -> output_47a921\ninstance(x: -100, y: 0) list_length_f3f6e9 root.List.Length {}\nlist1_c53f41 -> list_length_f3f6e9.list\nfor_7a86c5.length -> list_length_f3f6e9.result",
                "instance(x: 100, y: 100) for_9f3c21 root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_f4a211 root.Math.Modulo {}\nfor_9f3c21.items -> list1_e52b93\nfor_9f3c21.items -> list2_19a5d7\nlist1_e52b93 -> for_9f3c21.items\nlist2_19a5d7 -> for_9f3c21.items\nfor_9f3c21.on_item -> math_modulo_f4a211.trigger\nfor_9f3c21.item -> math_modulo_f4a211.value\nfor_9f3c21.item -> math_modulo_f4a211.divisor\nmath_modulo_f4a211.result -> result_e8d941\n\nin(x: -200, y: 100, name: \"list1\") property(List) list1_e52b93\nin(x: -200, y: 200, name: \"list2\") property(List) list2_19a5d7\nout(x: 500, y: 100, name: \"result\") property(List) result_e8d941",
                "instance(x: 100, y: 100) for_3c91d7 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_ba94e5 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_4b6a25 root.List.Length {}\n    instance(x: 500, y: 200) list_length_4b6a26 root.List.Length {}\n\n    for_3c91d7.items -> list_length_4b6a25.list\n    for_3c91d7.items -> list_length_4b6a26.list\n\n    list_length_4b6a25.length -> for_3c91d7.count\n    list_length_4b6a26.length -> for_3c91d7.count\n\n    in(x: 0, y: 0) property(List) list1\n    in(x: 0, y: 50) property(List) list2\n    out(x: 600, y: 100) property(List) output\n\n    list1 -> for_3c91d7.list1\n    list2 -> for_3c91d7.list2\n    for_3c91d7.item1 -> math_modulo_ba94e5.value\n    for_3c91d7.item2 -> math_modulo_ba94e5.divisor\n    math_modulo_ba94e5.result -> for_3c91d7.output\n    for_3c91d7.done -> output",
                "instance(x: 100, y: 100) for_8f4a21 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_e48e1c root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_2b6d92 root.List.Length {}\n    instance(x: 500, y: 200) list_length_f4a21 root.List.Length {}\n\n    for_8f4a21.items -> list_length_2b6d92.list\n    for_8f4a21.items -> list_length_f4a21.list\n\n    list_length_2b6d92.length -> for_8f4a21.count\n    list_length_f4a21.length -> for_8f4a21.count\n\n    for_8f4a21.on_item -> math_modulo_e48e1c.trigger\n\n    instance(x: 200, y: 100) list_get_at_a_6d0b21 root.List.GetAt {}\n    instance(x: 200, y: 200) list_get_at_b_f5a32 root.List.GetAt {}\n\n    for_8f4a21.index -> list_get_at_a_6d0b21.index\n    for_8f4a21.index -> list_get_at_b_f5a32.index\n\n    in(x: 0, y: 100) property(List) list_a_d8f45\n    in(x: 0, y: 200) property(List) list_b_e2a94\n\n    list_a_d8f45 -> list_get_at_a_6d0b21.list\n    list_b_e2a94 -> list_get_at_b_f5a32.list\n\n    list_get_at_a_6d0b21.item -> math_modulo_e48e1c.value\n    list_get_at_b_f5a32.item -> math_modulo_e48e1c.divisor\n\n    out(x: 600, y: 100) property(List) output_c8f43\n    for_8f4a21.done -> output_c8f43.trigger"
            ],
            "26": [
                "instance(x: 0, y: 0) to_uppercase_8a6d9b root.Std_k98ojb.Std.IfExpression {\n    to_uppercase_8a6d9b.expression = \"input.toUpperCase()\"\n    in(x: -100, y: 0, name: \"execute\") trigger() execute_e5c4e3\n    in(x: -200, y: 0, name: \"input\") property(String) input_71a657\n    out(x: 200, y: 0, name: \"result\") property(String) result_f2523c\n    execute_e5c4e3 -> to_uppercase_8a6d9b.execute\n    input_71a657 -> to_uppercase_8a6d9b.input\n    to_uppercase_8a6d9b.value -> result_f2523c\n}",
                "instance(x: 0, y: 0) to_uppercase_3c11b2 root.Std_k98ojb.Std.IfExpression {\n    \"input.toUpperCase()\" -> to_uppercase_3c11b2.expression\n}\nin(x: -100, y: 50, name: \"string\") property(String) string_f35a43\nin(x: -150, y: 0, name: \"execute\") trigger() execute_97d5d5\nout(x: 200, y: 0, name: \"result\") property(String) result_e4ab8f\nstring_f35a43 -> to_uppercase_3c11b2.input\nexecute_97d5d5 -> to_uppercase_3c11b2.execute\nto_uppercase_3c11b2.value -> result_e4ab8f",
                "instance(x: 0, y: 0) to_uppercase_2f4e21 root.Std_k98ojb.Std.IfExpression {\n    expression: \"input.toUpperCase()\"\n}\nin(x: -120, y: 0, name: \"input\") property(String) input_71a657\ninput_71a657 -> to_uppercase_2f4e21.input\nout(x: 240, y: 0, name: \"result\") property(String) result_f2523c\nto_uppercase_2f4e21.value -> result_f2523c",
                "instance(x: 0, y: 0) to_uppercase_5c9e95 root.Std_k98ojb.Std.IfExpression {\n    expression = \"input.toUpperCase()\"\n}\nin(x: -100, y: 0, name: \"execute\") trigger() execute_97d5d5\nin(x: -200, y: 0, name: \"string\") property(String) string_71a657\nout(x: 300, y: 0, name: \"result\") property(String) result_e8392b\nexecute_97d5d5 -> to_uppercase_5c9e95.execute\nstring_71a657 -> to_uppercase_5c9e95.input\nto_uppercase_5c9e95.value -> result_e8392b",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpperCase {}\n        to_uppercase_073b72.input -> string_71a657\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "instance(x: 0, y: 0) to_uppercase_4e2c11 root.Std_k98ojb.Std.IfExpression {\n    to_uppercase_4e2c11.expression = \"input.toUpperCase()\"\n    in(x: -100, y: 0, name: \"execute\") trigger() execute_e8a411\n    in(x: -200, y: 0, name: \"input\") property(String) input_71a657\n    out(x: 300, y: 0, name: \"result\") property(String) result_f2523c\n    execute_e8a411 -> to_uppercase_4e2c11.execute\n    input_71a657 -> to_uppercase_4e2c11.input\n    to_uppercase_4e2c11.value -> result_f2523c\n}",
                "instance(x: 0, y: 0) to_uppercase_8e1c11 root.Std_k98ojb.Std.IfExpression {\n    to_uppercase_8e1c11.expression = \"input.toUpperCase()\"\n    in(x: -100, y: 0, name: \"execute\") trigger() execute_e5f2d9\n    in(x: -200, y: 0, name: \"input\") property(String) input_71a657\n    out(x: 300, y: 0, name: \"result\") property(String) result_f2523c\n    execute_e5f2d9 -> to_uppercase_8e1c11.execute\n    input_71a657 -> to_uppercase_8e1c11.input\n    to_uppercase_8e1c11.value -> result_f2523c\n\n}",
                "instance(x: 0, y: 0) to_uppercase_3c11b2 root.Std_k98ojb.Std.IfExpression {\n    to_uppercase_3c11b2.expression = \"input.toUpperCase()\"\n    in(x: -100, y: 0, name: \"execute\") trigger() execute_97d5d5\n    in(x: -200, y: 0, name: \"input\") property(String) input_e71a657\n    out(x: 300, y: 0, name: \"result\") property(String) result_f2523c\n    execute_97d5d5 -> to_uppercase_3c11b2.execute\n    input_e71a657 -> to_uppercase_3c11b2.input\n    to_uppercase_3c11b2.value -> result_f2523c\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpperCase {}\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        string_71a657 -> to_uppercase_073b72.input\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpperCase {}\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        string_71a657 -> to_uppercase_073b72.input\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}"
            ],
            "30": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -139, y: 226, name: \"position\") property(Number) position_e4e5b3\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) slice_9b38cc root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < position\"\n        }\n        instance(x: 300, y: 168) reverse_e875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) concat_14921d root.Std_k98ojb.List.Concat {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        ifexpression_5c4634.then -> reverse_e875ddb.execute\n        ifexpression_5c4634.else -> for_9ab286.next\n        list_0c1a77 -> slice_9b38cc.list\n        position_e4e5b3 -> slice_9b38cc.end\n        slice_9b38cc.result -> reverse_e875ddb.list\n        reverse_e875ddb.result -> concat_14921d.left\n        list_0c1a77 -> for_9ab286.items\n        position_e4e5b3 -> for_9ab286.count\n        for_9ab286.done -> continue_a7f942\n        concat_14921d.result -> data_0_0\n    }\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -145, y: 220, name: \"position\") property(Number) position_e4a5b6\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) slice_e5c1a3 root.Std_k98ojb.List.Slice {}\n    instance(x: 554, y: -99) reverse_d8f2e4 root.Std_k98ojb.List.Reverse {}\n    instance(x: 300, y: 168) concat_875ddb root.Std_k98ojb.List.Concat {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_e5c1a3.list\n    position_e4a5b6 -> slice_e5c1a3.end\n    slice_e5c1a3.result -> reverse_d8f2e4.list\n    reverse_d8f2e4.result -> concat_875ddb.left\n    array_0c1a77 -> for_9ab286.items\n    position_e4a5b6 -> for_9ab286.count\n    for_9ab286.done -> continue_a7f942\n    List.GetAt(array_0c1a77, position_e4a5b6) -> concat_875ddb.right\n    concat_875ddb.result -> data_0_0\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -147, y: 160, name: \"position\") property(Number) position_e4e2d8\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) slice_2d8a5c root.Std_k98ojb.List.Slice {}\n    instance(x: 554, y: -99) reverse_f7e1f3 root.Std_k98ojb.List.Reverse {}\n    instance(x: 300, y: 168) concat_ebafe4 root.Std_k98ojb.List.Concat {}\n\n    execute_1ddb9f -> slice_2d8a5c.execute\n    array_0c1a77 -> slice_2d8a5c.list\n    position_e4e2d8 -> slice_2d8a5c.end\n    slice_2d8a5c.result -> reverse_f7e1f3.list\n    reverse_f7e1f3.result -> concat_ebafe4.left\n    array_0c1a77 -> slice_2d8a5c.list\n    position_e4e2d8 -> slice_2d8a5c.start\n    slice_2d8a5c.result -> concat_ebafe4.right\n    concat_ebafe4.result -> data_0_0\n    reverse_f7e1f3.done -> continue_a7f942\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -174, y: 210, name: \"position\") property(Number) position_e4a5b6\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: -99) slice_5c4634 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) reverse_875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_5c4634.list\n        position_e4a5b6 -> slice_5c4634.start\n        0 -> slice_5c4634.end\n        slice_5c4634.result -> reverse_875ddb.list\n        reverse_875ddb.result -> concat_9b38cc.left\n        list_0c1a77 -> slice_14921d.list\n        position_e4a5b6 -> slice_14921d.start\n        -1 -> slice_14921d.end\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -145, y: 220, name: \"position\") property(Number) position_eb1d95\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) slice_e2c0f3 root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -99) reverse_5c4634 root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_e2c0f3.list\n        position_eb1d95 -> slice_e2c0f3.end\n        slice_e2c0f3.result -> reverse_5c4634.list\n        reverse_5c4634.result -> concat_9b38cc.left\n        list_0c1a77 -> slice_14921d.list\n        position_eb1d95 -> slice_14921d.start\n        -1 -> slice_14921d.end\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -146, y: 220, name: \"position\") property(Number) position_e4e2d6\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n    instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {}\n    instance(x: 400, y: 168) reverse_d6a5f7 root.Std_k98ojb.List.Reverse {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_875ddb.list\n    position_e4e2d6 -> slice_875ddb.end\n    slice_875ddb.result -> reverse_d6a5f7.list\n    reverse_d6a5f7.result -> concat_9b38cc.left\n    List.Length(array_0c1a77) -> slice_875ddb.start\n    position_e4e2d6 -> slice_875ddb.start\n    List.Slice(array_0c1a77, position_e4e2d6 + 1, -1) -> concat_9b38cc.right\n    concat_9b38cc.result -> data_0_0\n    for_9ab286.done -> continue_a7f942\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -145, y: 210, name: \"position\") property(Number) position_e4a5d6\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) slice_9b38cc root.Std_k98ojb.List.Slice {}\n    instance(x: 554, y: -99) reverse_5c4634 root.Std_k98ojb.List.Reverse {}\n    instance(x: 300, y: 168) concat_875ddb root.Std_k98ojb.List.Concat {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_9b38cc.list\n    position_e4a5d6 -> slice_9b38cc.end\n    slice_9b38cc.result -> reverse_5c4634.list\n    reverse_5c4634.result -> concat_875ddb.left\n    array_0c1a77 -> slice_9b38cc.list\n    position_e4a5d6 -> slice_9b38cc.start\n    -1 -> slice_9b38cc.end\n    slice_9b38cc.result -> concat_875ddb.right\n    concat_875ddb.result -> data_0_0\n    for_9ab286.done -> continue_a7f942\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -145, y: 220, name: \"position\") property(Number) position_e4e5b\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n    instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {}\n    instance(x: 400, y: 168) reverse_f7e2a4 root.Std_k98ojb.List.Reverse {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_875ddb.list\n    position_e4e5b -> slice_875ddb.end\n    slice_875ddb.result -> reverse_f7e2a4.list\n    reverse_f7e2a4.result -> concat_9b38cc.left\n    array_0c1a77 -> for_9ab286.items\n    position_e4e5b -> for_9ab286.length\n    List.Length(array_0c1a77) -> slice_875ddb.start\n    position_e4e5b + 1 -> slice_875ddb.end\n    List.Slice(array_0c1a77, position_e4e5b + 1, -1) -> concat_9b38cc.right\n    concat_9b38cc.result -> data_0_0\n    for_9ab286.done -> continue_a7f942\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -146, y: 216, name: \"position\") property(Number) position_eb4d5e\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: -99) slice_5c4634 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) reverse_875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_5c4634.list\n        position_eb4d5e -> slice_5c4634.start\n        0 -> slice_5c4634.end\n        slice_5c4634.result -> reverse_875ddb.list\n        reverse_875ddb.result -> concat_9b38cc.left\n        list_0c1a77 -> slice_14921d.list\n        position_eb4d5e -> slice_14921d.start\n        -1 -> slice_14921d.end\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -146, y: 233, name: \"position\") property(Number) position_eb8e6d\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: 6, y: -64, name: \"setter_8c6eda\") setter_8c6eda = reversedList\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < position\"\n        }\n        setter(x: 825, y: -223, name: \"setter_95dd4c\") setter_95dd4c = remainingList\n        getter(x: 252, y: -246, name: \"getter_e808a2\") getter_e808a2 = reversedList\n        getter(x: 313, y: 269, name: \"getter_c18a69\") getter_c18a69 = remainingList\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {}\n        setter_8c6eda.continue -> for_9ab286.reset\n        execute_1ddb9f -> setter_8c6eda.execute\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        for_9ab286.index -> ifexpression_5c4634.gen_1\n        ifexpression_5c4634.then -> add_14921d.execute\n        ifexpression_5c4634.else -> for_9ab286.next\n        add_14921d.continue -> for_9ab286.next\n        list_0c1a77 -> for_9ab286.items\n        concat_9b38cc.result -> data_0_0\n        empty_ea3a3a.list -> setter_8c6eda.new_value\n        for_9ab286.item -> add_14921d.item\n        add_14921d.listWithItem -> setter_95dd4c.new_value\n        for_9ab286.done -> continue_a7f942\n        getter_c18a69.value -> concat_9b38cc.right\n        slice_875ddb.result -> concat_9b38cc.left\n        list_0c1a77 -> slice_875ddb.list\n        position_eb8e6d -> slice_875ddb.start\n    }\n}"
            ],
            "32": [
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equal_9ff257 root.Std_k98ojb.Logic.Equal {}\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equals_9ff257 root.Std_k98ojb.Logic.Equal {}\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"list\") property(List) list_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equal_9ff257 root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_index\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = for_8eae56.index\n        list_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> setter_d09207.execute\n        getter_7f13b7.value -> index_fd7945\n        ifexpression_a2fa90.else -> for_8eae56.next\n        setter_d09207.continue -> continue_c95bcb\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"list\") property(List) list_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) getat_9ff257 root.Std_k98ojb.List.GetAt {}\n        list_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        getat_9ff257.itemAtIndex -> ifexpression_a2fa90.gen_1\n        for_8eae56.on_item -> getat_9eae56.execute\n        getat_9eae56.index -> index_fd7945\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.done -> continue_c95bcb\n    }\n}",
                "instance(x: 100, y: 100) for_2c11e7 root.Std_k98ojb.Std.For {}\ninstance(x: 300, y: 200) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n    expression: \"a == b\"\n}\ninstance(x: 500, y: 300) listgetat_8eae56 root.Std_k98ojb.List.GetAt {}\nin(x: 0, y: 0, name: \"array\") property(List) array_b5d10a\nin(x: 100, y: 0, name: \"target\") property(Number) target_1e19fb\nout(x: 800, y: 0, name: \"index\") property(Number) index_fd7945\nout(x: 900, y: 0, name: \"found\") trigger() found_c95bcb\narray_b5d10a -> for_2c11e7.items\nfor_2c11e7.on_item -> ifexpression_a2fa90.execute\nfor_2c11e7.item -> ifexpression_a2fa90.gen_0\ntarget_1e19fb -> ifexpression_a2fa90.gen_1\nifexpression_a2fa90.then -> found_c95bcb\nfor_2c11e7.index -> index_fd7945\nfor_2c11e7.done -> ifexpression_a2fa90.else",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"list\") property(List) list_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equals_9ff257 root.Std_k98ojb.Logic.Equal {}\n        list_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equals_9ff257 root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_index\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_index\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n        ifexpression_a2fa90.else -> for_8eae56.next\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equals_9ff257 root.Std_k98ojb.Logic.Equal {}\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "instance(x: 100, y: 100) std_4f2c16 root.Std_k98ojb.Std {}\ninstance(x: 300, y: 200) list_getat_e9e5d3 root.std_4f2c16.List.GetAt {}\ninstance(x: 500, y: 100) list_length_fcc6a8 root.std_4f2c16.List.Length {}\ninstance(x: 400, y: 300) math_div_d83419 root.std_4f2c16.Math.Div {}\ninstance(x: 200, y: 400) math_add_ba4095 root.std_4f2c16.Math.Add {}\ninstance(x: 100, y: 500) std_if_8e3b9d root.std_4f2c16.Std.If {}\ninstance(x: 300, y: 500) std_ifexpression_24a1cb root.std_4f2c16.Std.IfExpression {\n    expression: \"a < b\"\n}\nin(x: 0, y: 0, name: \"array\") property(List) array_35d5b3\nin(x: 100, y: 0, name: \"target\") property(Number) target_d83419\nin(x: 200, y: 0, name: \"execute\") trigger() execute_e9e5d3\nout(x: 800, y: 0, name: \"index\") property(Number) index_4f2c16\nout(x: 900, y: 0, name: \"found\") trigger() found_24a1cb\narray_35d5b3 -> list_length_fcc6a8.list\nlist_length_fcc6a8.length -> math_div_d83419.first\n2 -> math_div_d83419.second\nmath_div_d83419.result -> math_add_ba4095.first\n0 -> math_add_ba4095.second\nmath_add_ba4095.result -> list_getat_e9e5d3.index\narray_35d5b3 -> list_getat_e9e5d3.list\nlist_getat_e9e5d3.itemAtIndex -> std_ifexpression_24a1cb.a\ntarget_d83419 -> std_ifexpression_24a1cb.b\nexecute_e9e5d3 -> std_ifexpression_24a1cb.execute\nstd_ifexpression_24a1cb.then -> std_if_8e3b9d.execute\nstd_if_8e3b9d.value -> list_getat_e9e5d3.itemAtIndex\ntarget_d83419 -> std_if_8e3b9d.input\nstd_if_8e3b9d.then -> found_24a1cb\nlist_getat_e9e5d3.index -> index_4f2c16",
                "instance(x: 100, y: 100) std_6f2c11 root.Std.IfExpression {\n    expression: \"a < b ? a : b\"\n}\ninstance(x: 300, y: 200) for_8e0b5d root.Std.For {}\ninstance(x: 500, y: 100) listgetat_ebafe3 root.List.GetAt {}\ninstance(x: 400, y: 300) if_ba9f95 root.Std.If {\n}\nfor_8e0b5d.items -> listgetat_ebafe3.list\nlistgetat_ebafe3.index -> for_8e0b5d.index\nif_ba9f95.input -> std_6f2c11.value\nstd_6f2c11.gen_0 -> if_ba9f95.then\nfor_8e0b5d.on_item -> if_ba9f95.execute\nif_ba9f95.else -> for_8e0b5d.next\nlistgetat_ebafe3.itemAtIndex -> if_ba9f95.value"
            ],
            "39": [
                "instance(x: 140, y: 100) for_9f3b2a root.Std_k98ojb.Std.For {\n    instance(x: 305, y: 55) ifexpression_f14e7c root.Std_k98ojb.Std.IfExpression {\n        expression: \"index % 2 == 1 ? item % 2 == 1 : true\"\n    }\n    instance(x: 140, y: 220) listgetat_4a69d5 root.Std_k98ojb.List.GetAt {}\n    for_9f3b2a.on_item -> ifexpression_f14e7c.input\n    for_9f3b2a.item -> listgetat_4a69d5.item\n    for_9f3b2a.index -> ifexpression_f14e7c.index\n    instance(x: 140, y: 50) listlength_d459a6 root.Std_k98ojb.List.Length {}\n    listlength_d459a6.length -> for_9f3b2a.count\n}\ninstance(x: 500, y: 100) if_8d5c22 root.Std_k98ojb.Std.If {\n    if_8d5c22.input -> ifexpression_f14e7c.value\n}\nfor_9f3b2a.done -> if_8d5c22.then\ninstance(x: 140, y: -50) inputlist_e48a85 property(List) input_list\n\ninputlist_e48a85 -> listgetat_4a69d5.list\ninputlist_e48a85 -> listlength_d459a6.list",
                "instance(x: 119, y: 139) for_9f2e22 root.Std_k98ojb.Std.For {\n    items: list\n}\ninstance(x: 305, y: 55) ifexpression_4c0a6d root.Std_k98ojb.Std.IfExpression {\n    expression: \"index % 2 == 1 && item % 2 == 0 ? false : true\"\n}\nfor_9f2e22.on_item -> ifexpression_4c0a6d.input\nifexpression_4c0a6d.value -> output\ninstance(x: -56, y: 192) list_getat_f5a51b root.Std_k98ojb.List.GetAt {\n    index: for_9f2e22.index\n}\nlist_getat_f5a51b.item -> ifexpression_4c0a6d.a\nfor_9f2e22.index -> ifexpression_4c0a6d.b\ninstance(x: 119, y: -17) list_length_d8d3a1 root.Std_k98ojb.List.Length {\n    list: list\n}\nlist_length_d8d3a1.length -> for_9f2e22.count",
                "instance(x: 120, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_NotEqual_2 root.Logic.NotEqual {\n        left: index_mod_2\n        right: 0\n    }\ninstance(x: 500, y: 100) Logic_NotEqual_3 root.Logic.NotEqual {\n        left: item_mod_2\n        right: 0\n    }\ninstance(x: 120, y: 150) Math_Modulo_1 root.Math.Modulo {\n        value: index\n        divisor: 2\n    }\ninstance(x: 300, y: 150) Math_Modulo_2 root.Math.Modulo {\n        value: item\n        divisor: 2\n    }\nStd_For_1.index -> Math_Modulo_1.value\nMath_Modulo_1.result -> Logic_NotEqual_2.left\nStd_For_1.item -> Math_Modulo_2.value\nMath_Modulo_2.result -> Logic_NotEqual_3.left\nLogic_NotEqual_2.result -> Std_If_4.condition\nLogic_NotEqual_3.result -> Std_If_4.then\ninstance(x: 120, y: 250) Std_If_4 root.Std.If {\n        condition: Logic_NotEqual_2\n        then: Logic_NotEqual_3\n    }",
                "instance(x: 140, y: 100) Std_For_9f2e31 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 120) Logic_Modulo_8a32d1 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_4c9f61 root.Std.If {\n    input: result\n}\ninstance(x: 140, y: 50) List_GetAt_ea92b5 root.List.GetAt {\n    list: list\n    index: index\n}\nList_GetAt_ea92b5.item -> Logic_Modulo_8a32d1.value\nStd_For_9f2e31.item -> List_GetAt_ea92b5.item\nStd_For_9f2e31.index -> List_GetAt_ea92b5.index\nLogic_Modulo_8a32d1.result -> Std_If_4c9f61.input",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) Logic_NotEqual_4 root.Logic.NotEqual {\n    left: index\n    right: 0\n}\ninstance(x: 900, y: 100) Math_Modulo_5 root.Math.Modulo {\n    value: index\n    divisor: 2\n}\nStd_For_1.on_item -> Logic_Modulo_2.value\nLogic_Modulo_2.result -> Std_If_3.input\nStd_For_1.index -> Logic_NotEqual_4.left\nMath_Modulo_5.divisor -> Logic_NotEqual_4.right\nLogic_NotEqual_4.result -> Std_If_3.input\nStd_If_3.then -> Math_Modulo_5.value",
                "instance(x: 164, y: 135) for_6c9e46 root.Std_k98ojb.Std.For {\n    instance(x: 346, y: 93) ifexpression_4f2d16 root.Std_k98ojb.Std.IfExpression {\n        expression: \"it % 2 != 0 ? it : null\"\n    }\n    instance(x: 164, y: 246) logic_notequal_f1a3e5 root.Std_k98ojb.Logic.NotEqual {}\n    instance(x: 346, y: 246) list_getat_8d6f43 root.Std_k98ojb.List.GetAt {}\n    instance(x: 521, y: 135) list_length_e49c11 root.Std_k98ojb.List.Length {}\n    for_6c9e46.items -> ifexpression_4f2d16.it\n    for_6c9e46.index -> list_getat_8d6f43.index\n    list_getat_8d6f43.list -> for_6c9e46.items\n    list_length_e49c11.list -> for_6c9e46.items\n    ifexpression_4f2d16.value -> logic_notequal_f1a3e5.left\n    list_getat_8d6f43.item -> logic_notequal_f1a3e5.right\n    logic_notequal_f1a3e5.result -> for_6c9e46.condition\n\n}",
                "instance(x: 140, y: 100) for_9f3c21 root.Std_k98ojb.Std.For {\n    items: list_faf6c2\n}\ninstance(x: 305, y: 130) getat_c5e495 root.Std_k98ojb.List.GetAt {\n    index: for_9f3c21.index\n    list: list_faf6c2\n}\ninstance(x: 432, y: 170) modulo_e73a88 root.Std_k98ojb.Math.Modulo {\n    value: getat_c5e495.item\n    divisor: 2\n}\ninstance(x: 550, y: 130) ifexpression_5f4c32 root.Std_k98ojb.Std.IfExpression {\n    expression: \"index % 2 == 1 && result != 1\"\n}\nfor_9f3c21.index -> getat_c5e495.index\ngetat_c5e495.item -> modulo_e73a88.value\nmodulo_e73a88.result -> ifexpression_5f4c32.a\nfor_9f3c21.index -> ifexpression_5f4c32.b\nifexpression_5f4c32.value -> output_a2b59d",
                "instance(x: 106, y: 135) for_9f4a2c root.Std_k98ojb.Std.For {\n    instance(x: 240, y: 50) ifexpression_f5e45d root.Std_k98ojb.Std.IfExpression {\n        expression: \"index % 2 == 1 ? item % 2 == 1 : true\"\n    }\n    instance(x: 106, y: 263) listgetat_34a819 root.Std_k98ojb.List.GetAt {}\n    for_9f4a2c.on_item -> ifexpression_f5e45d.input\n    listgetat_34a819.item -> ifexpression_f5e45d.a\n    for_9f4a2c.index -> ifexpression_f5e45d.b\n    instance(x: 106, y: 50) listlength_68b1e6 root.Std_k98ojb.List.Length {}\n    for_9f4a2c.items -> listgetat_34a819.list\n    for_9f4a2c.items -> listlength_68b1e6.list\n    instance(x: 240, y: 263) logic_equal_d459d3 root.Std_k98ojb.Logic.Equal {}\n    ifexpression_f5e45d.value -> logic_equal_d459d3.left\n    logic_equal_d459d3.right = true\n    for_9f4a2c.trigger -> for_9f4a2c.trigger\n    listlength_68b1e6.length -> for_9f4a2c.count\n}",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) List_GetAt_4 root.List.GetAt {\n    list: list\n    index: index\n}\ninstance(x: 200, y: 200) Math_Modulo_5 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\nconnection(from: Std_For_1.on_item, to: List_GetAt_4.trigger)\nconnection(from: List_GetAt_4.item, to: Math_Modulo_5.value)\nconnection(from: Math_Modulo_5.result, to: Logic_Modulo_2.input)\nconnection(from: Logic_Modulo_2.result, to: Std_If_3.input)\nconnection(from: Std_For_1.index, to: Math_Modulo_5.trigger)",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) Logic_NotEqual_4 root.Logic.NotEqual {\n    left: index\n    right: 0\n}\ninstance(x: 900, y: 100) Math_Modulo_5 root.Math.Modulo {\n    value: index\n    divisor: 2\n}\nStd_For_1.on_item -> Logic_Modulo_2.value\nLogic_Modulo_2.result -> Std_If_3.input\nStd_For_1.index -> Logic_NotEqual_4.left\nLogic_NotEqual_4.result -> Math_Modulo_5.value\nMath_Modulo_5.result -> Std_If_3.input"
            ],
            "43": [
                "instance(x: 100, y: 100) iteration_find_95c2b1 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 246, y: 143) lambda_41a409 root.Std_k98ojb.Std.Lambda {\n    code: \"it % 2 != 0\"\n}\niteration_find_95c2b1.predicate -> lambda_41a409\nlambda_41a409.result -> iteration_find_95c2b1.result",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 250, y: 150) predicate_2 root.Std_k98ojb.Math.Expression {\n    expression: \"it % 2 != 0\"\n}\niteration_find_1.predicate -> predicate_2\npredicate_2.result -> iteration_find_1.item",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n        items: list\n        predicate: \"it % 2 != 0\"\n    }\n    out(x: 300, y: 100, name: \"first odd\") property(Number) first_odd\n\n    iteration_find_1.item -> first_odd",
                "instance(x: 100, y: 100) find_first_odd_95c21f root.Std_k98ojb.Iteration.Find {\n    items: list\n    predicate: \"it % 2 != 0\"\n}\nout(x: 300, y: 100, name: \"first odd\") property(Number) first_odd_57c890\nfind_first_odd_95c21f.item -> first_odd_57c890",
                "instance(x: 100, y: 100) find_first_odd_95c2e1 root.Std_k98ojb.Iteration.Find {\n    predicate: \"it % 2 != 0\"\n}\ninstance(x: 50, y: 150) list_42a51f root.Std_k98ojb.List {}\nfind_first_odd_95c2e1.items -> list_42a51f",
                "instance(x: 100, y: 100) iteration_find_9f2e1a root.Std_k98ojb.Iteration.Find {\n        items: list\n        predicate: \"it % 2 != 0\"\n    }\n    out(x: 300, y: 100, name: \"first odd\") property(Number) first_odd\n\n    iteration_find_9f2e1a.item -> first_odd",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n    predicate: \"it % 2 != 0\"\n}\ninstance(x: 300, y: 100) list_2 root.Std_k98ojb.List.Length {}\ninstance(x: 200, y: 150) query_filter_3 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\niteration_find_1.items -> list_2.list\nlist_2.list -> query_filter_3.list\nquery_filter_3.result -> iteration_find_1.items",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n        items: list\n        predicate: \"it % 2 != 0\"\n    }\n    out(x: 300, y: 100, name: \"first odd\") property(Number) first_odd\n\n    iteration_find_1.item -> first_odd",
                "instance(x: 100, y: 100) iteration_find_6a88e2 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 246, y: 135) lambda_3f456d root.Std_k98ojb.Std.Lambda {\n    code: \"it % 2 != 0\"\n}\niteration_find_6a88e2.predicate -> lambda_3f456d",
                "instance(x: 100, y: 100) find_first_odd_95c21e root.Std_k98ojb.Iteration.Find {\n    predicate: \"it % 2 != 0\"\n}\ninstance(x: 50, y: 150) list_542a51 root.Std_k98ojb.List {}\nlist_542a51 -> find_first_odd_95c21e.items"
            ],
            "44": [
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    \n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) range_6e8af5 Std.For {}\n    instance(x: 300, y: 0) square_3a8e90 Math.Mul {}\n    instance(x: 400, y: 0) add_8974a2 Math.Add {}\n    n -> range_6e8af5.items\n    0 -> range_6e8af5.index\n    range_6e8af5.item -> square_3a8e90.first\n    range_6e8af5.item -> square_3a8e90.second\n    sum -> add_8974a2.first\n    square_3a8e90.result -> add_8974a2.second\n    add_8974a2.result -> sum\n    func() {\n        in(x: 0, y: 100, name: \"item\") property(Number) item\n        instance(x: 100, y: 150) mul_0f3be6 Math.Mul {}\n        instance(x: 200, y: 150) sub_e38c7d Math.Sub {}\n        2 -> mul_0f3be6.first\n        item -> mul_0f3be6.second\n        mul_0f3be6.result -> sub_e38c7d.first\n        1 -> sub_e38c7d.second\n        sub_e38c7d.result -> square_3a8e90.first\n    } -> range_6e8af5.onItem\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) sub_e38c7d root.Std_k98ojb.Math.Sub {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i-1)*(2*i-1)\"\n            }\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) sub_e38c7d root.Std_k98ojb.Math.Sub {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i-1)*(2*i-1)\"\n            }\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) add_1e5c4d root.Std_k98ojb.Math.Add {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i - 1)*(2*i - 1)\"\n            }\n            current_c750f1 -> add_1e5c4d.first\n            expression_8eee0e.result -> add_1e5c4d.second\n            add_1e5c4d.result -> sum_72dd2a\n            i -> generaterange_6e8af5.gen_0\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) range_0 root.Std_k98ojb.List.GenerateRange {\n        from: 1,\n        to: n * 2 - 1,\n        step: 2\n    }\n    instance(x: 300, y: 0) map_1 root.Std_k98ojb.Iteration.Map {\n        items: range_0.list\n    }\n    func() {\n        in(x: -100, y: 50, name: \"x\") property(Number) x\n        out(x: 100, y: 50, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) expression_0 root.Std_k98ojb.Math.Expression {\n            expression: \"x*x\"\n        }\n        expression_0.result -> result\n    } -> map_1.mapper\n    instance(x: 500, y: 0) reduce_2 root.Std_k98ojb.Iteration.Reduce {\n        items: map_1.list,\n        initialValue: 0\n    }\n    func() {\n        in(x: -100, y: 50, name: \"acc\") property(Number) acc\n        in(x: -100, y: 150, name: \"x\") property(Number) x\n        out(x: 100, y: 100, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) add_0 root.Std_k98ojb.Math.Add {\n            first: acc,\n            second: x\n        }\n        add_0.result -> result\n    } -> reduce_2.reducer\n    reduce_2.output -> sum\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) add_8974a2 root.Std_k98ojb.Math.Add {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i-1)*(2*i-1)\"\n            }\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n            current_3f11cd -> expression_8eee0e.gen_0\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) sub_e38c7d root.Std_k98ojb.Math.Sub {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i-1)*(2*i-1)\"\n            }\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) sub_e38c7d root.Std_k98ojb.Math.Sub {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i-1)*(2*i-1)\"\n            }\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    out(x: 100, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 200, y: 0) range_0 root.Std_k98ojb.List.GenerateRange {\n        from: 1,\n        to: n * 2 - 1,\n        step: 2\n    }\n    instance(x: 300, y: 0) map_1 root.Std_k98ojb.Iteration.Map {\n        items: range_0.list\n    }\n    func() {\n        in(x: 0, y: 0, name: \"x\") property(Number) x\n        out(x: 100, y: 0, name: \"result\") property(Number) result\n\n        instance(x: 200, y: 0) mul_0 root.Std_k98ojb.Math.Mul {\n            first: x,\n            second: x\n        }\n        mul_0.result -> result\n    } -> map_1.mapper\n    instance(x: 400, y: 0) reduce_2 root.Std_k98ojb.Iteration.Reduce {\n        items: map_1.output,\n        initialValue: 0\n    }\n    func() {\n        in(x: 0, y: 0, name: \"acc\") property(Number) acc\n        in(x: 100, y: 0, name: \"x\") property(Number) x\n        out(x: 200, y: 0, name: \"result\") property(Number) result\n\n        instance(x: 300, y: 0) add_0 root.Std_k98ojb.Math.Add {\n            first: acc,\n            second: x\n        }\n        add_0.result -> result\n    } -> reduce_2.reducer\n    reduce_2.output -> sum\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    out(x: 100, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 200, y: 0) range_0 root.Std_k98ojb.List.GenerateRange {\n        from: 1,\n        to: n * 2 - 1,\n        step: 2\n    }\n    instance(x: 300, y: 0) map_1 root.Std_k98ojb.Iteration.Map {\n        items: range_0.list\n    }\n    func() {\n        in(x: -100, y: 0, name: \"x\") property(Number) x\n        out(x: 100, y: 0, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) expression_0 root.Std_k98ojb.Math.Expression {\n            expression: \"x * x\"\n        }\n        expression_0.result -> result\n    } -> map_1.mapper\n    instance(x: 400, y: 0) reduce_2 root.Std_k98ojb.Iteration.Reduce {\n        items: map_1.output,\n        initialValue: 0\n    }\n    func() {\n        in(x: -100, y: 0, name: \"acc\") property(Number) acc\n        in(x: -50, y: 0, name: \"x\") property(Number) x\n        out(x: 100, y: 0, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) add_0 root.Std_k98ojb.Math.Add {\n            first: acc,\n            second: x\n        }\n        add_0.result -> result\n    } -> reduce_2.reducer\n    reduce_2.output -> sum\n}"
            ],
            "47": [
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node_2.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node_2.first\n    math_mul_node.first -> math_mul_node_2.second\n    math_mul_node.trigger -> math_mul_node.trigger\n    math_mul_node_2.result -> List.Append",
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node_2.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node_2.first\n    math_mul_node.first -> math_mul_node_2.second\n    math_mul_node.trigger -> math_mul_node.trigger\n    math_mul_node_2.result -> List.Append",
                "List.Map {\n  input: list\n  func: Math.Mul {\n    first: item\n    second: Math.Mul {\n      first: item\n      second: item\n    }\n  }\n}",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 100, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_mul_node Math_k98ojb.Math.Mul {}\n    instance(x: 500, y: 0) math_mul_node2 Math_k98ojb.Math.Mul {}\n\n    for_node.items -> List([1, 2, 3, 4, 5])\n    for_node.trigger -> std.Std.Trigger()\n    for_node.on_item -> math_mul_node.first\n    for_node.item -> math_mul_node2.first\n    for_node.item -> math_mul_node.second\n    math_mul_node2.second -> math_mul_node.first\n    math_mul_node.result -> List.Result",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 100, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_mul_node Math_k98ojb.Math.Mul {}\n    instance(x: 500, y: 0) math_mul_node_2 Math_k98ojb.Math.Mul {}\n\n    in(x: 0, y: -100, name: \"items\") property(List) items\n    out(x: 700, y: 0, name: \"cubes\") property(List) cubes\n\n    items -> for_node.items\n    for_node.on_item -> math_mul_node.first\n    for_node.item -> math_mul_node.second\n    for_node.item -> math_mul_node_2.first\n    for_node.item -> math_mul_node_2.second\n    math_mul_node.result -> math_mul_node_2.first\n    math_mul_node_2.result -> cubes",
                "instance(x: 0, y: 0) std_k98ojb Std.If {}\n    instance(x: 100, y: 0) for_node Std.For {}\n    instance(x: 300, y: 0) math_expression Math.Expression {}\n    instance(x: 500, y: 0) list_get_at List.GetAt {}\n    instance(x: 700, y: 0) list_length List.Length {}\n\n    for_node.items -> list_length.list\n    list_length.length -> for_node.count\n\n    for_node.trigger -> for_node.next\n    for_node.index -> list_get_at.index\n    list_get_at.list -> for_node.items\n    list_get_at.item -> math_expression.a\n\n    math_expression.expression = \"a * a * a\"\n    math_expression.result -> for_node.result",
                "instance(x: 78, y: 120) std_for_node Std.For {}\n    instance(x: 292, y: 146) math_mul_node Math.Mul {}\n    instance(x: 461, y: 146) math_mul_node_1 Math.Mul {}\n\n    std_for_node.items -> List.GetAt.items\n    List.GetAt.item -> math_mul_node.first\n    math_mul_node.first -> math_mul_node_1.first\n    math_mul_node.first -> math_mul_node_1.second\n    math_mul_node_1.result -> std_for_node.on_item",
                "List.Map(input_list, Math.Mul(Math.Mul(element, element), element))",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 100, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_mul_node Math_k98ojb.Math.Mul {}\n    instance(x: 500, y: 0) math_mul_node_2 Math_k98ojb.Math.Mul {}\n\n    for_node.items -> List([1, 2, 3, 4, 5])\n    for_node.on_item -> math_mul_node.first\n    for_node.item -> math_mul_node.second\n    for_node.item -> math_mul_node_2.first\n    math_mul_node.result -> math_mul_node_2.second\n    math_mul_node_2.result -> for_node.next",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 100, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_mul_node Math_k98ojb.Math.Mul {}\n    instance(x: 500, y: 0) math_mul_node2 Math_k98ojb.Math.Mul {}\n\n    for_node.items -> List([1, 2, 3, 4, 5])\n    for_node.trigger -> std.Trigger()\n    for_node.on_item -> math_mul_node.first\n    for_node.item -> math_mul_node2.first\n    for_node.item -> math_mul_node.second\n    math_mul_node.result -> math_mul_node2.second\n    math_mul_node2.result -> for_node.next"
            ],
            "40": [
                "func(diff_even_odd) product_even_odd {\n    in(list) property(List) list\n    out(product) property(Number) product\n\n    instance(filter_even) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance(first_even) root.Std_k98ojb.List.FirstItem {}\n    instance(filter_odd) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance(first_odd) root.Std_k98ojb.List.FirstItem {}\n    instance(mul) root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> product\n}",
                "instance(x: 100, y: 100) query_filter_even_85b1e2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 350, y: 100) query_filter_odd_9d8f4c root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 250) list_firstitem_even_51a6e5 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 350, y: 250) list_firstitem_odd_4c873a root.Std_k98ojb.List.FirstItem {}\ninstance(x: 200, y: 400) math_mul_f2a81d root.Std_k98ojb.Math.Mul {}\nquery_filter_even_85b1e2.result -> list_firstitem_even_51a6e5.list\nquery_filter_odd_9d8f4c.result -> list_firstitem_odd_4c873a.list\nlist_firstitem_even_51a6e5.item -> math_mul_f2a81d.first\nlist_firstitem_odd_4c873a.item -> math_mul_f2a81d.second",
                "instance(x: 100, y: 100) query_filter_even_1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_3 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_4 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_5 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_1.result -> list_firstitem_even_3.list\nquery_filter_odd_2.result -> list_firstitem_odd_4.list\nlist_firstitem_even_3.item -> math_mul_5.first\nlist_firstitem_odd_4.item -> math_mul_5.second",
                "instance(x: 100, y: 100) query_filter_even_1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_3 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_4 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_5 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_1.result -> list_firstitem_even_3.list\nquery_filter_odd_2.result -> list_firstitem_odd_4.list\nlist_firstitem_even_3.item -> math_mul_5.first\nlist_firstitem_odd_4.item -> math_mul_5.second",
                "func diff_even_odd {\n    in list property(List) list\n    out difference property(Number) difference\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance firstitem_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance firstitem_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n    list -> filter_even.list\n    filter_even.result -> firstitem_even.list\n    list -> filter_odd.list\n    filter_odd.result -> firstitem_odd.list\n    firstitem_even.item -> mul.first\n    firstitem_odd.item -> mul.second\n    mul.result -> difference\n}",
                "instance(x: 100, y: 100) query_filter_even_1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_3 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_4 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_5 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_1.result -> list_firstitem_even_3.list\nquery_filter_odd_2.result -> list_firstitem_odd_4.list\nlist_firstitem_even_3.item -> math_mul_5.first\nlist_firstitem_odd_4.item -> math_mul_5.second",
                "instance(x: 100, y: 100) query_filter_even_2f4e8 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_2a6c1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_e48f5 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_24a91 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_b91e4 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_2f4e8.result -> list_firstitem_even_e48f5.list\nquery_filter_odd_2a6c1.result -> list_firstitem_odd_24a91.list\nlist_firstitem_even_e48f5.item -> math_mul_b91e4.first\nlist_firstitem_odd_24a91.item -> math_mul_b91e4.second",
                "instance(x: 100, y: 100) query_filter_even_85b2e1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_3c6f95 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_870503 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_3078c6 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 200, y: 300) math_mul_852f2e root.Std_k98ojb.Math.Mul {}\nquery_filter_even_85b2e1.result -> list_firstitem_even_870503.list\nquery_filter_odd_3c6f95.result -> list_firstitem_odd_3078c6.list\nlist_firstitem_even_870503.item -> math_mul_852f2e.first\nlist_firstitem_odd_3078c6.item -> math_mul_852f2e.second",
                "func diff_even_odd {\n    in(list) property(List) list\n    out(product) property(Number) product\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance first_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance first_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> product\n}",
                "func diff_even_odd {\n    in list property(List) list\n    out difference property(Number) difference\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance first_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance first_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> difference\n}"
            ],
            "41": [
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) math_expression_node calculate_index {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> calculate_index.index\n    get_length.length -> calculate_index.length\n    calculate_index.result -> check_equal.left\n    for_loop.item -> check_equal.right\n\n    check_equal.true -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> for_loop.index\n\n    for_loop.done -> result.done\n    check_equal.false -> for_loop.next\n    for_loop.on_item -> check_equal.trigger\n\n    instance(x: 600, y: 0) std_if_node return_last_position {}\n    check_equal.true -> return_last_position.input\n    for_loop.index -> return_last_position.then\n    -1 -> return_last_position.else\n    return_last_position.value -> result.result",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> get_element.index\n    get_length.list -> get_element.list\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> done_trigger\n    for_loop.index -> result_index\n\n    instance(x: 600, y: 0) math_sub_node subtract_one {}\n    for_loop.index -> subtract_one.first\n    1 -> subtract_one.second\n    subtract_one.result -> result_index",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node list_length {}\n    instance(x: 240, y: 0) logic_equal_node equal_check {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length_node.list\n    list_length_node.length -> for_loop.count\n    for_loop.index -> equal_check.left\n    for_loop.count -> equal_check.right\n    equal_check.result -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> for_loop.on_item\n\n    instance(x: 600, y: 0) iteration_find_node find_last_position {}\n    for_loop.done -> find_last_position.reset\n    for_loop.on_item -> find_last_position.trigger\n    get_element.item -> find_last_position.predicate_input\n    find_last_position.item -> result",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node list_length {}\n    instance(x: 240, y: 0) logic_equal_node equal_check {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length_node.list\n    list_length_node.length -> for_loop.count\n    for_loop.index -> equal_check.left\n    list_length_node.length -> equal_check.right\n    equal_check.result -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> for_loop.on_item\n\n    instance(x: 600, y: 0) iteration_find_node find_last_position {}\n    for_loop.done -> find_last_position.reset\n    get_element.item -> find_last_position.items\n    equal_check.result -> find_last_position.predicate\n\n    instance(x: 720, y: 0) std_if_node return_last_position {}\n    find_last_position.done -> return_last_position.input\n    find_last_position.item -> return_last_position.then\n    -1 -> return_last_position.else",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node get_length {}\n    instance(x: 200, y: 0) logic_equal_node check_equal {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> get_length.list\n    get_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position\n\n    target_value -> last_position\n    get_element.list -> last_position",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node list_length {}\n    instance(x: 240, y: 0) logic_equal_node equal_check {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length_node.list\n    list_length_node.length -> for_loop.count\n    for_loop.index -> equal_check.left\n    list_length_node.length -> equal_check.right\n    equal_check.result -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> for_loop.on_item\n\n    instance(x: 600, y: 0) iteration_find_node find_last_position {}\n    for_loop.items -> find_last_position.items\n    equal_check.result -> find_last_position.predicate",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> get_length.list\n    get_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> result\n\n    target_value = input value to search\n    input array -> for_loop.items\n    result = last position of element",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> done_trigger\n    for_loop.index -> result_output\n\n    target_value = input value to search for\n    get_length.list = input sorted array\n    result_output = output last position of element",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node list_length {}\n    instance(x: 200, y: 0) logic_equal_node equal_check {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length.list\n    list_length.list -> get_element.list\n    for_loop.index -> get_element.index\n    get_element.item -> equal_check.left\n    target_value -> equal_check.right\n    equal_check.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node get_length {}\n    instance(x: 200, y: 0) logic_equal_node check_equal {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> get_length.list\n    get_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 2482,
        "task_candidates": {
            "8": [
                "instance(x: 100, y: 100) query_filter_1 root.Query.Filter {}\ninstance(x: 200, y: 100) list_get_at_2 root.List.GetAt {}\ninstance(x: 300, y: 100) math_expression_3 root.Math.Expression {}\ninstance(x: 400, y: 100) logic_equal_4 root.Logic.Equal {}\n\nlist_get_at_2.list -> query_filter_1.items\nmath_expression_3.expression -> \"it > num\"\nquery_filter_1.where -> math_expression_3.result\nlogic_equal_4.left -> list_get_at_2.item\nlogic_equal_4.right -> query_filter_1.items",
                "instance(x: 100, y: 100) math_expression_4a2b1c root.Std_k98ojb.Math.Expression {\n    expression: \"input > it\"\n}\n\ninstance(x: 200, y: 100) query_filter_f81e91 root.Query.Filter {\n    where: \"math_expression_4a2b1c.value\"\n}\n\ninstance(x: 300, y: 100) list_length_ebafe5 root.List.Length {\n}\n\ninstance(x: 400, y: 100) logic_equal_69d8f9 root.Logic.Equal {\n}\n\nquery_filter_f81e91.items -> list_length_ebafe5.list\nlist_length_ebafe5.length -> logic_equal_69d8f9.left\n0 -> logic_equal_69d8f9.right",
                "instance(x: 100, y: 50) query_filter_5b4a2e root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_f3c0cb root.List.GetAt {}\ninstance(x: 250, y: 100) math_expression_e8d45f root.Math.Expression {}\ninstance(x: 50, y: 100) input_number_1a1743 property(Number) {}\ninstance(x: 50, y: 200) input_list_4ff980 property(List) {}\n\ninput_number_1a1743 -> query_filter_5b4a2e.it\ninput_list_4ff980 -> query_filter_5b4a2e.items\n\"it > num\" -> query_filter_5b4a2e.where\ninput_number_1a1743 -> math_expression_e8d45f.num",
                "instance(x: 100, y: 50) query_filter_1 root.Query.Filter {}\ninstance(x: 200, y: 50) list_get_at_2 root.List.GetAt {}\ninstance(x: 150, y: -50) math_expression_3 root.Math.Expression {}\ninstance(x: 250, y: 50) iteration_find_4 root.Iteration.Find {}\n\nlist_get_at_2.index -> math_expression_3.a\ninput_number -> math_expression_3.b\nmath_expression_3.expression = \"a < b\"\nquery_filter_1.where -> math_expression_3.result\ninput_list -> query_filter_1.items\niteration_find_4.predicate -> query_filter_1.result\ninput_list -> iteration_find_4.items",
                "instance(x: 100, y: 50) query_filter_8e2b6c root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_d8f5a3 root.List.GetAt {}\ninstance(x: 250, y: 100) math_expression_e8d95a root.Math.Expression {}\ninstance(x: 50, y: 100) input_number_1b4c11 property(Number) {}\ninstance(x: 150, y: 50) input_list_f4a2cb property(List<Number>) {}\ninput_number_1b4c11 -> query_filter_8e2b6c.it\ninput_list_f4a2cb -> query_filter_8e2b6c.items\n\"it > \" + input_number_1b4c11 -> query_filter_8e2b6c.where\nquery_filter_8e2b6c.result -> list_get_at_d8f5a3.list\n0 -> list_get_at_d8f5a3.index\ninput_number_1b4c11 -> math_expression_e8d95a.a\nlist_get_at_d8f5a3.result -> math_expression_e8d95a.b\n\"a > b\" -> math_expression_e8d95a.expression",
                "instance(x: 100, y: 200) query_filter_8a3b21 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_eba522 root.List.GetAt {}\ninstance(x: 200, y: 300) math_expression_f46d1c root.Math.Expression {}\ninstance(x: 250, y: 350) iteration_find_651a92 root.Iteration.Find {}\ninstance(x: 50, y: 150) list_length_29e8f2 root.List.Length {}\ninstance(x: 0, y: 100) std_if_expression_a927d5 root.Std.IfExpression {}\n\nlist_length_29e8f2.items -> query_filter_8a3b21.items\n\"it < input\" -> query_filter_8a3b21.where\ninput -> query_filter_8a3b21.input\nquery_filter_8a3b21.result -> iteration_find_651a92.items\ntrue -> iteration_find_651a92.predicate\niteration_find_651a92.item -> list_get_at_eba522.list\n0 -> list_get_at_eba522.index\nlist_get_at_eba522.result -> math_expression_f46d1c.input\n\"input > 0\" -> std_if_expression_a927d5.expression\nmath_expression_f46d1c.result -> std_if_expression_a927d5.input",
                "instance(x: 100, y: 200) query_filter_1 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_2 root.List.GetAt {}\ninstance(x: 200, y: 300) math_expression_3 root.Math.Expression {}\ninstance(x: 250, y: 350) logic_equal_4 root.Logic.Equal {}\n\nlist_get_at_2.list -> query_filter_1.items\nmath_expression_3.expression -> \"it > num\"\nnum -> math_expression_3.num\nquery_filter_1.where -> math_expression_3.result\nlogic_equal_4.left -> query_filter_1.result\nlogic_equal_4.right -> list_get_at_2.item",
                "instance(x: 100, y: 200) query_filter_4c2a16 root.Query.Filter {}\ninstance(x: 150, y: 250) list_get_at_f3c0cb root.List.GetAt {}\ninstance(x: 250, y: 200) math_expression_e8d421 root.Math.Expression {}\ninstance(x: 300, y: 250) logic_equal_19f431 root.Logic.Equal {}\n\n5 -> query_filter_4c2a16.it\n[1, 2, 3, 4] -> query_filter_4c2a16.items\nit > item -> query_filter_4c2a16.where",
                "instance(x: 100, y: 50) query_filter_8a2b5e root.Query.Filter {}\ninstance(x: 200, y: 150) list_get_at_ebafe3 root.List.GetAt {}\ninstance(x: 50, y: 50) math_expression_f46c21 root.Math.Expression {}\ninstance(x: 250, y: 100) std_if_35a621 root.Std.If {}\ninstance(x: 300, y: 200) list_length_6b8f11 root.List.Length {}\n\nlist_length_6b8f11.items -> query_filter_8a2b5e.items\nquery_filter_8a2b5e.where -> \"it < num\"\nnum -> math_expression_f46c21.num\narray -> list_get_at_ebafe3.list\nindex -> list_get_at_ebafe3.index\nlist_get_at_ebafe3.item -> math_expression_f46c21.array_item\nmath_expression_f46c21.result -> std_if_35a621.input\ntrue -> std_if_35a621.then_value\nfalse -> std_if_35a621.else_value",
                "instance(x: 100, y: 100) query_filter_5b4e7c root.Query.Filter {}\ninstance(x: 200, y: 100) list_get_at_ebafe8 root.List.GetAt {}\ninstance(x: 300, y: 100) math_expression_f46a95 root.Math.Expression {}\ninstance(x: 400, y: 100) logic_equal_21d8f1 root.Logic.Equal {}\n\nlist_get_at_ebafe8.index -> math_expression_f46a95.a\ninput_number -> math_expression_f46a95.b\nmath_expression_f46a95.result -> logic_equal_21d8f1.left\n0 -> logic_equal_21d8f1.right\nquery_filter_5b4e7c.where -> logic_equal_21d8f1.result"
            ],
            "10": [
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_3b6a5e\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_a8d95c\n\n    instance(x: 100, y: 0) contains_z_351f1e root.Std_k98ojb.List.Contains {}\n    instance(x: 0, y: 50) characters_3a03c5 root.Std_k98ojb.Strings.Characters {}\n\n    characters_3a03c5.input -> input_3b6a5e\n    characters_3a03c5.characters -> contains_z_351f1e.list\n    \"z\" -> contains_z_351f1e.item\n    contains_z_351f1e.is_contained -> match_a8d95c\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_12a5b6\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_a8d2f1\n\n    instance(x: 100, y: 0) if_expression_45a8e9 Std.IfExpression {}\n    if_expression_45a8e9.expression = \"input.contains('z')\"\n    input_12a5b6 -> if_expression_45a8e9.input\n    if_expression_45a8e9.value -> match_a8d2f1\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_1c2a3d\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_a5e1f4\n\n    instance(x: 100, y: 0) if_expression_b6a2d8 Std.IfExpression {}\n    if_expression_b6a2d8.expression = \"input.contains('z')\"\n    input_1c2a3d -> if_expression_b6a2d8.input\n    if_expression_b6a2d8.value -> match_a5e1f4\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_5a4c21\n    out(x: 200, y: 0, name: \"match\") property(Boolean) match_e49d8e\n\n    instance(x: 100, y: 0) if_expression_d8f2b3 Std.IfExpression {}\n    if_expression_d8f2b3.expression = \"input.contains('z')\"\n    if_expression_d8f2b3.input -> input_5a4c21\n    if_expression_d8f2b3.value -> match_e49d8e\n    input_5a4c21 -> if_expression_d8f2b3.input\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_3c1f4a\n    out(x: 200, y: 0, name: \"match\") property(Boolean) match_a8d95e\n\n    instance(x: 100, y: 0) contains_z_d4598b root.Std_k98ojb.List.Contains {}\n    instance(x: 0, y: 50) characters_71a657 root.Std_k98ojb.Strings.Characters {}\n\n    characters_71a657.input -> input_3c1f4a\n    characters_71a657.characters -> contains_z_d4598b.list\n    \"z\" -> contains_z_d4598b.item\n    contains_z_d4598b.is_contained -> match_a8d95e\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 1080, y: 45) contains_10d4db root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 79) characters_e4ab8f root.Std_k98ojb.Strings.Characters {}\n        characters_e4ab8f.input -> word_71a657\n        word_71a657 -> contains_10d4db.item\n        \"z\" -> contains_10d4db.list\n        contains_10d4db.is_contained -> if_204695.predicate\n        execute_97d5d5 -> if_204695.execute\n        if_204695.then -> continue_1914e0\n        if_204695.value -> match_f2523c\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 1080, y: 45) contains_z_d8e2a5 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 79) characters_e4ab8f root.Std_k98ojb.Strings.Characters {}\n        characters_e4ab8f.characters -> contains_z_d8e2a5.list\n        \"z\" -> contains_z_d8e2a5.item\n        word_71a657 -> characters_e4ab8f.input\n        execute_97d5d5 -> if_204695.execute\n        contains_z_d8e2a5.is_contained -> if_204695.predicate\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n        if_204695.else -> continue_1914e0\n        false -> match_f2523c\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"matches a word containing 'z'.\") match_z {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"word\") property(String) word_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"match\") property(Bool) match_f2523c\n\n        instance(x: 526, y: 135) if_204695 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 79) contains_z_e4ab8f root.Std_k98ojb.List.Contains {}\n        instance(x: 295, y: 125) characters_f245354 root.Std_k98ojb.Strings.Characters {}\n        characters_f245354.characters -> contains_z_e4ab8f.list\n        \"z\" -> contains_z_e4ab8f.item\n        word_71a657 -> characters_f245354.input\n        execute_97d5d5 -> if_204695.execute\n        contains_z_e4ab8f.is_contained -> if_204695.predicate\n        if_204695.then -> continue_1914e0\n        true -> match_f2523c\n        if_204695.else -> continue_1914e0\n        false -> match_f2523c\n    }\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_3b4a11\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_8d6c2e\n\n    instance(x: 100, y: 0) if_expression_d9f5b7 Std.IfExpression {}\n    if_expression_d9f5b7.expression = \"input.contains('z')\"\n    if_expression_d9f5b7.input -> input_3b4a11\n    if_expression_d9f5b7.value -> match_8d6c2e\n}",
                "func(doc: \"matches a word containing 'z'\") match_z {\n    in(x: 0, y: 0, name: \"input\") property(String) input_1b6c71\n    out(x: 200, y: 0, name: \"match\") property(Bool) match_8d9f4a\n\n    instance(x: 100, y: 0) if_expression_35a871 Std.IfExpression {}\n    if_expression_35a871.expression = \"input.includes('z')\"\n    input_1b6c71 -> if_expression_35a871.input\n    if_expression_35a871.value -> match_8d9f4a\n}"
            ],
            "14": [
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) convert_to_string_2 root.Std.Strings.ToString {}\n    instance(x: 300, y: 100) characters_3 root.Std.Strings.Characters {}\n    instance(x: 400, y: 100) map_4 root.Std.Iteration.Map {\n        handler: func() {\n            in(x: -200, y: -50, name: \"char\") property(String) char\n            out(x: 200, y: -50, name: \"number\") property(Number) number\n            instance(x: 0, y: 0) to_number_5 root.Std.Strings.ToNumber {}\n            char -> to_number_5.input\n            to_number_5.output -> number\n        }\n    }\n    instance(x: 500, y: 100) sum_6 root.Std.Math.Sum {}\n    convert_to_string_2.output -> characters_3.input\n    characters_3.characters -> map_4.items\n    map_4.output_list -> sum_6.items",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 150) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 100) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 100) math_expression_5 root.Std.Math.Expression {\n        expression: \"a + b\"\n    }\n    list_for_each_3.item -> math_expression_1.a\n    math_expression_1.result -> math_add_4.first\n    list_for_each_3.index -> math_add_4.second\n    math_add_4.result -> math_expression_5.b\n    strings_characters_2.input: \"12345\"\n    math_expression_5.a: 0",
                "instance(x: 100, y: 100) Math.Sum_6c0f24 root.Std.Math.Sum {}\n    instance(x: 200, y: 150) Strings.Characters_ba9e26 root.Std.Strings.Characters {}\n    instance(x: 300, y: 200) Query.Filter_e48a1d root.Std.Query.Filter {}\n    instance(x: 400, y: 250) Math.Expression_5c2f33 root.Std.Math.Expression {}\n\n    Strings.Characters_ba9e26.input -> Query.Filter_e48a1d.items\n    Query.Filter_e48a1d.output_list -> Math.Sum_6c0f24.items\n\n    func() {\n        in(x: -272, y: -48, name: \"current\") property(String) current_86a8fb\n        out(x: 405, y: -52, name: \"output\") property(Number) output_8ba733\n        instance(x: 24, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") parseInt_f4e9a5 root.Std.Math.ParseInt {}\n        current_86a8fb -> parseInt_f4e9a5.input\n        parseInt_f4e9a5.result -> output_8ba733\n    } -> Query.Filter_e48a1d.handler",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) list_get_at_2 root.List.GetAt {\n    }\n    instance(x: 300, y: 100) strings_characters_3 root.Strings.Characters {\n    }\n    instance(x: 400, y: 100) list_length_4 root.List.Length {\n    }\n    instance(x: 500, y: 150) std_for_5 root.Std.For {\n    }\n    instance(x: 600, y: 200) math_add_6 root.Math.Add {\n    }\n    instance(x: 700, y: 100) func_result_7 root.Func.Result {\n    }\n\n    strings_characters_3.input -> list_get_at_2.list\n    std_for_5.items -> strings_characters_3.characters\n    list_length_4.list -> std_for_5.length\n    strings_characters_3.characters -> list_length_4.list\n    math_expression_1.result -> func_result_7.value\n    list_get_at_2.item -> math_add_6.first\n    math_add_6.result -> math_expression_1.a\n    std_for_5.index -> list_get_at_2.index",
                "instance(x: 240, y: 69) Math.Sum_5a8f46 root.Std.Math.Sum {}\n    instance(x: 177, y: 66) Strings.Characters_f6c2e1 root.Std.Strings.Characters {}\n    instance(x: -61, y: 62) Iteration.Map_c9b522 root.Std.Iteration.Map {}\n    instance(x: 723, y: 62) Math.Expression_8815e6 root.Std.Math.Expression {}\n\n    Strings.Characters_f6c2e1.input -> Iteration.Map_c9b522.items\n    Iteration.Map_c9b522.output_list -> Math.Sum_5a8f46.items\n\n    func() {\n        in(x: -272, y: -48, name: \"current\") property(String) current_86a8fb\n        out(x: 405, y: -52, name: \"output\") property(Number) output_8ba733\n        instance(x: 24, y: -54) Math.Expression_1f468d root.Std.Math.Expression {}\n        current_86a8fb -> Math.Expression_1f468d.expression\n        Math.Expression_1f468d.result -> output_8ba733\n        Math.Expression_1f468d.expression = \"parseInt(current)\"\n    } -> Iteration.Map_c9b522.handler",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 200) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 250) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 300) math_multiply_by_10_5 root.Math.Mul {\n        second: 10\n    }\n    list_for_each_3.item -> math_add_4.first\n    math_add_4.result -> math_multiply_by_10_5.first\n    math_multiply_by_10_5.result -> math_expression_1.a\n\n    instance(x: 250, y: 50) input_number_6 root.Std.Property.Number {\n        name: \"input\"\n    }\n    input_number_6 -> strings_characters_2.input\n    list_for_each_3.trigger -> math_add_4.trigger\n    math_multiply_by_10_5.result -> list_for_each_3.next",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) strings_characters_2 root.Strings.Characters {}\n    instance(x: 300, y: 200) list_for_each_3 root.Std.For {\n        items: strings_characters_2.characters\n    }\n    instance(x: 400, y: 250) math_add_4 root.Math.Add {}\n    instance(x: 500, y: 300) math_multiply_by_ten_5 root.Math.Mul {\n        second: 10\n    }\n    list_for_each_3.item -> math_expression_1.a\n    math_expression_1.result -> math_add_4.first\n    math_add_4.result -> math_multiply_by_ten_5.first\n    strings_characters_2.input: \"12345\"",
                "instance(x: 100, y: 100) Math.Sum_1 root.Std.Math.Sum {}\n    instance(x: 200, y: 150) Strings.Characters_2 root.Std.Strings.Characters {}\n    instance(x: 50, y: 150) Query.Filter_3 root.Std.Query.Filter {}\n    instance(x: 350, y: 100) Math.Expression_4 root.Std.Math.Expression {}\n\n    Strings.Characters_2.input -> Query.Filter_3.items\n    Query.Filter_3.output_list -> Math.Sum_1.items\n\n    func() {\n        in(x: -272, y: -48, name: \"current\") property(String) current_86a8fb\n        out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n        instance(x: 24, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std.Logic.Equal {}\n        current_86a8fb -> isnumeric_9cb360.left\n        \"0123456789\" -> isnumeric_9cb360.right\n        isnumeric_9cb360.result -> output_8ba733\n    } -> Query.Filter_3.handler",
                "instance(x: 100, y: 100) math_expression_1 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) list_get_at_2 root.List.GetAt {}\n    instance(x: 300, y: 100) strings_characters_3 root.Strings.Characters {}\n    instance(x: 400, y: 100) list_length_4 root.List.Length {}\n    instance(x: 500, y: 100) math_add_5 root.Math.Add {}\n    instance(x: 600, y: 100) std_for_6 root.Std.For {\n        items: strings_characters_3.characters\n    }\n    instance(x: 700, y: 100) logic_equal_7 root.Logic.Equal {}\n    instance(x: 800, y: 100) math_multiply_8 root.Math.Mul {}\n    instance(x: 900, y: 100) math_subtract_9 root.Math.Sub {}\n\n    strings_characters_3.input -> list_get_at_2.list\n    std_for_6.trigger -> math_add_5.trigger\n    math_add_5.result -> math_expression_1.a\n    list_length_4.length -> std_for_6.index\n    list_get_at_2.item -> math_multiply_8.first\n    math_multiply_8.result -> math_subtract_9.first\n    math_subtract_9.result -> math_add_5.second",
                "instance(x: 100, y: 100) Math.Expression_6e4f17 root.Std.Math.Expression {\n        expression: \"a\"\n    }\n    instance(x: 200, y: 150) Strings.Characters_f46c14 root.Strings.Characters {}\n    instance(x: 300, y: 200) List.Length_ebafe3 root.List.Length {}\n    instance(x: 400, y: 250) Math.Add_5a69d6 root.Math.Add {}\n    instance(x: 500, y: 100) Std.For_d45913 root.Std.For {\n        items: Strings.Characters_f46c14.characters\n    }\n    link(Std_For_d45913_on_item, Math_Add_5a69d6_trigger)\n    link(Math_Add_5a69d6_result, Math_Expression_6e4f17_a)\n    instance(x: 600, y: 150) Logic.Equal_f7c2b3 root.Logic.Equal {}\n    link(Strings_Characters_f46c14_characters, List_Length_ebafe3_list)\n    link(List_Length_ebafe3_length, Logic_Equal_f7c2b3_left)\n    instance(x: 700, y: 200) Math.Expression_2d8e91 root.Std.Math.Expression {\n        expression: \"0\"\n    }\n    link(Math_Expression_2d8e91_result, Logic_Equal_f7c2b3_right)\n    instance(x: 800, y: 250) Std.If_81f1c4 root.Std.If {}\n    link(Logic_Equal_f7c2b3_equal, Std_If_81f1c4_input)\n    link(Math_Expression_6e4f17_result, Std_If_81f1c4_value)\n    instance(x: 900, y: 100) Math.Expression_c5fc15 root.Std.Math.Expression {\n        expression: \"0\"\n    }\n    link(Std_For_d45913_done, Std_If_81f1c4_else)\n    link(Math_Expression_c5fc15_result, Std_If_81f1c4_then)"
            ],
            "15": [
                "instance(x: 194, y: 120) sort_a49ae4 root.Std_k98ojb.List.Sort {}\n    instance(x: 405, y: 135) expression_b5dba9 root.Std_k98ojb.Math.Expression {\n        expression: \"list1 == list2\"\n    }\n    instance(x: 251, y: 257) input_list_82d404 root.Std_k98ojb.List.GetAt {}\n    sort_a49ae4.sorted_list -> expression_b5dba9.gen_0\n    input_list_82d404.list -> expression_b5dba9.gen_1\n    input_list_82d404.list -> sort_a49ae4.list\n    expression_b5dba9.result -> output",
                "instance(x: 134, y: 98) sort_3c531d root.Std_k98ojb.List.Sort {}\n    instance(x: 267, y: 101) equal_e4a5f6 root.Std_k98ojb.Logic.Equal {}\n    in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n    out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n    list_faf6c2 -> sort_3c531d.list\n    list_faf6c2 -> equal_e4a5f6.left\n    sort_3c531d.sorted_list -> equal_e4a5f6.right\n    equal_e4a5f6.result -> output_a2b59d",
                "instance(x: 140, y: 120) sort_9f3c1a root.Std_k98ojb.List.Sort {}\n    instance(x: 300, y: 130) expression_e4a322 root.Std_k98ojb.Logic.Equal {}\n    instance(x: 20, y: 110) input_list_8d6e32 property(List) list_faf6c2\n    instance(x: 520, y: 140) output_5f454a property(Bool) output_a2b59d\n    input_list_8d6e32 -> sort_9f3c1a.list\n    sort_9f3c1a.sorted_list -> expression_e4a322.right\n    input_list_8d6e32 -> expression_e4a322.left\n    expression_e4a322.result -> output_5f454a",
                "instance(x: 114, y: 155) sort_9f3c17 root.Std_k98ojb.List.Sort {}\n    instance(x: 305, y: 161) expression_afe531 root.Std_k98ojb.Logic.Equal {\n        left: list_faf6c2,\n        right: sorted_list_b5a4e1\n    }\n    instance(x: -41, y: 123) list_faf6c2 property(List) {}\n    sort_9f3c17.sorted_list -> expression_afe531.right\n    list_faf6c2 -> sort_9f3c17.list\n    expression_afe531.result -> output_8a4e1b\n\n    instance(x: 532, y: 135) output_8a4e1b property(Bool) {}",
                "instance(x: 114, y: 135) sort_5c2e11 root.Std_k98ojb.List.Sort {}\n    instance(x: 270, y: 137) equal_d4598a root.Std_k98ojb.Logic.Equal {}\n    in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n    out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n    list_faf6c2 -> sort_5c2e11.list\n    list_faf6c2 -> equal_d4598a.left\n    sort_5c2e11.sorted_list -> equal_d4598a.right\n    equal_d4598a.result -> output_a2b59d",
                "instance(x: 100, y: 100) sort_5f4a2c root.Std_k98ojb.List.Sort {}\ninstance(x: 300, y: 100) equals_f1e9d3 root.Std_k98ojb.Logic.Equal {}\ninstance(x: 0, y: 0) input_list_e4a321 property(List) list\ninput_list_e4a321 -> sort_5f4a2c.list\nsort_5f4a2c.sorted_list -> equals_f1e9d3.left\ninput_list_e4a321 -> equals_f1e9d3.right\ninstance(x: 500, y: 100) output_8b7f53 property(Bool) is_sorted\nequals_f1e9d3.result -> output_8b7f53",
                "instance(x: 114, y: 135) sort_a49ae4 root.Std_k98ojb.List.Sort {}\ninstance(x: 270, y: 156) expression_b5dba9 root.Std_k98ojb.Math.Expression {\n    expression: \"list1 == list2\"\n}\ninstance(x: 114, y: 56) list_18909a property(List) list_faf6c2\nsort_a49ae4.list -> list_18909a\nlist_18909a -> sort_a49ae4.list\nexpression_b5dba9.gen_0 -> sort_a49ae4.sorted_list\nlist_18909a -> expression_b5dba9.gen_1\ninstance(x: 432, y: 135) output_a2b59d property(Bool) output\nexpression_b5dba9.result -> output_a2b59d",
                "instance(x: 164, y: 120) sort_5c4a2d root.Std_k98ojb.List.Sort {}\ninstance(x: 346, y: 121) equal_8e3f16 root.Std_k98ojb.Logic.Equal {}\ninstance(x: 42, y: 123) input_list_ecc442 property(List) input_list\ninput_list_ecc442 -> sort_5c4a2d.list\nsort_5c4a2d.sorted_list -> equal_8e3f16.right\ninput_list_ecc442 -> equal_8e3f16.left\ninstance(x: 522, y: 124) output_f6a93b property(Bool) output\nequal_8e3f16.result -> output_f6a93b",
                "instance(x: 194, y: 120) sort_4c9f3a root.Std_k98ojb.List.Sort {}\n    instance(x: 412, y: 135) expression_85d95e root.Std_k98ojb.Logic.Equal {\n        left: list_faf6c2\n        right: sorted_list_b5e62d\n    }\n    instance(x: -15, y: 242) list_faf6c2 root.Std_k98ojb.Property(List) {}\n    sort_4c9f3a.sorted_list -> expression_85d95e.right\n    list_faf6c2 -> sort_4c9f3a.list\n    instance(x: 638, y: 135) output_a2b59d root.Std_k98ojb.Property(Bool) {}\n    expression_85d95e.result -> output_a2b59d",
                "instance(x: 164, y: 135) sort_8f4a5c Std.List.Sort {}\n    instance(x: 346, y: 142) equal_d98s2d Logic.Equal {}\n    instance(x: 56, y: 101) input_list_a9f6b3 property(List) list\n    instance(x: 210, y: 246) output_46a8c1 property(Bool) is_sorted\n\n    input_list_a9f6b3 -> sort_8f4a5c.list\n    input_list_a9f6b3 -> equal_d98s2d.left\n    sort_8f4a5c.sorted_list -> equal_d98s2d.right\n    equal_d98s2d.result -> output_46a8c1"
            ],
            "25": [
                "instance(x: 100, y: 100) for_7f4c16 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_f459d2 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_eb1e3a root.List.Length {}\n    instance(x: 500, y: 200) list_length_4e0c16 root.List.Length {}\n\n    for_7f4c16.items -> list_length_eb1e3a.list\n    for_7f4c16.items -> list_length_4e0c16.list\n\n    in(x: -100, y: 100, name: \"list1\") property(List) list1_c8f404\n    in(x: -100, y: 200, name: \"list2\") property(List) list2_016b2e\n\n    list1_c8f404 -> for_7f4c16.items\n    list2_016b2e -> for_7f4c16.items\n\n    instance(x: 200, y: 100) list_getat_40a93d root.List.GetAt {}\n    instance(x: 200, y: 200) list_getat_d5cc3a root.List.GetAt {}\n\n    for_7f4c16.index -> list_getat_40a93d.index\n    for_7f4c16.index -> list_getat_d5cc3a.index\n\n    list1_c8f404 -> list_getat_40a93d.list\n    list2_016b2e -> list_getat_d5cc3a.list\n\n    list_getat_40a93d.item -> math_modulo_f459d2.value\n    list_getat_d5cc3a.item -> math_modulo_f459d2.divisor\n\n    out(x: 600, y: 100, name: \"output\") property(List) output_879de6\n\n    for_7f4c16.onItem -> math_modulo_f459d2\n    math_modulo_f459d2.result -> output_879de6",
                "instance(x: 100, y: 100) for_6c11d7 root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_f4a2b9 root.Math.Modulo {}\nfor_6c11d7.items -> list1_c8f404\nfor_6c11d7.items -> list2_016b2e\nlist1_c8f404 -> for_6c11d7.items\nlist2_016b2e -> for_6c11d7.items\nfor_6c11d7.onItem -> math_modulo_f4a2b9.trigger\nmath_modulo_f4a2b9.value -> result_e879de6\nList.GetAt(index: for_6c11d7.index, list: list1_c8f404) -> math_modulo_f4a2b9.dividend\nList.GetAt(index: for_6c11d7.index, list: list2_016b2e) -> math_modulo_f4a2b9.divisor",
                "instance(x: 100, y: 100) list1_016b2e property(List) \ninstance(x: 200, y: 100) list2_c8f404 property(List) \ninstance(x: 300, y: 100) length_78d487 root.Std_k98ojb.List.Length {}\ninstance(x: 400, y: 100) for_loop_d0e3a4 root.Std_k98ojb.Std.For {}\nlist1_016b2e -> length_78d487.list\nlength_78d487.length -> for_loop_d0e3a4.items\ninstance(x: 500, y: 150) get_at_list1_f143f9 root.Std_k98ojb.List.GetAt {}\ninstance(x: 600, y: 150) get_at_list2_43c8d5 root.Std_k98ojb.List.GetAt {}\nfor_loop_d0e3a4.index -> get_at_list1_f143f9.index\nfor_loop_d0e3a4.index -> get_at_list2_43c8d5.index\nlist1_016b2e -> get_at_list1_f143f9.list\nlist2_c8f404 -> get_at_list2_43c8d5.list\ninstance(x: 700, y: 200) modulo_e3a4c7 root.Std_k98ojb.Math.Modulo {}\nget_at_list1_f143f9.item -> modulo_e3a4c7.value\nget_at_list2_43c8d5.item -> modulo_e3a4c7.divisor\ninstance(x: 800, y: 200) result_879de6 property(List)\nfor_loop_d0e3a4.on_item -> result_879de6\nmodulo_e3a4c7.result -> result_879de6",
                "instance(x: 100, y: 100) list1_123 property(List) \ninstance(x: 200, y: 100) list2_456 property(List) \ninstance(x: 300, y: 100) length_789 root.Std.List.Length {}\ninstance(x: 400, y: 100) for_loop_abc root.Std.For {}\ninstance(x: 500, y: 100) get_at_list1_def root.Std.List.GetAt {}\ninstance(x: 600, y: 100) get_at_list2_ghi root.Std.List.GetAt {}\ninstance(x: 700, y: 100) modulo_jkl root.Std.Math.Modulo {}\ninstance(x: 800, y: 100) result_mno property(List)\n\nlist1_123 -> length_789.list\nlength_789.length -> for_loop_abc.count\n\nfor_loop_abc.trigger -> get_at_list1_def.trigger\nget_at_list1_def.index <- for_loop_abc.index\nlist1_123 -> get_at_list1_def.list\n\nfor_loop_abc.trigger -> get_at_list2_ghi.trigger\nget_at_list2_ghi.index <- for_loop_abc.index\nlist2_456 -> get_at_list2_ghi.list\n\nget_at_list1_def.item -> modulo_jkl.value\nget_at_list2_ghi.item -> modulo_jkl.divisor\nmodulo_jkl.result -> result_mno.append",
                "instance(x: 100, y: 100) for_9f3c2e root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_f4a5d1 root.Math.Modulo {}\nfor_9f3c2e.items -> list_length_eb8f41 input\ninstance(x: 200, y: 100) list_get_at_1_c6f422 root.List.GetAt {}\ninstance(x: 200, y: 200) list_get_at_2_6a2d4e root.List.GetAt {}\nlist_get_at_1_c6f422.list -> for_9f3c2e.items\nlist_get_at_2_6a2d4e.list -> for_9f3c2e.items\nfor_9f3c2e.index -> list_get_at_1_c6f422.index\nfor_9f3c2e.index -> list_get_at_2_6a2d4e.index\nlist_get_at_1_c6f422.item -> math_modulo_f4a5d1.value\nlist_get_at_2_6a2d4e.item -> math_modulo_f4a5d1.divisor\ninstance(x: 400, y: 100) list_eb8f41 root.List {}\nmath_modulo_f4a5d1.result -> list_eb8f41.append",
                "instance(x: 100, y: 100) for_5a6c21 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_f4e1d2 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_get_at_left_3b8e95 root.List.GetAt {}\n    instance(x: 500, y: 200) list_get_at_right_48a411 root.List.GetAt {}\n\n    for_5a6c21.items -> list_length_e4d9b7\n    list_length_e4d9b7.length -> for_5a6c21.count\n\n    for_5a6c21.index -> list_get_at_left_3b8e95.index\n    for_5a6c21.index -> list_get_at_right_3b8e95.index\n\n    in(x: 0, y: 0) left_list_e4d9b7 property(List) \n    in(x: 0, y: 100) right_list_48a411 property(List)\n\n    left_list_e4d9b7 -> list_get_at_left_3b8e95.list\n    right_list_48a411 -> list_get_at_right_3b8e95.list\n\n    list_get_at_left_3b8e95.item -> math_modulo_f4e1d2.value\n    list_get_at_right_3b8e95.item -> math_modulo_f4e1d2.divisor\n\n    instance(x: 700, y: 100) list_append_e4c5a9 root.List.Append {}\n    math_modulo_f4e1d2.result -> list_append_e4c5a9.item\n    for_5a6c21.done -> list_append_e4c5a9.trigger\n\n    out(x: 900, y: 100) result_48a411 property(List)\n    list_append_e4c5a9.list -> result_48a411",
                "instance(x: 100, y: 100) for_9f3c65 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_ba9e44 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_2eef11 root.List.Length {}\n    instance(x: 500, y: 200) list_length_2eef12 root.List.Length {}\n\n    for_9f3c65.items -> list_length_2eef11.list\n    for_9f3c65.items -> list_length_2eef12.list\n\n    in(x: -100, y: 100, name: \"list1\") property(List) list1_f4a5d7\n    in(x: -100, y: 200, name: \"list2\") property(List) list2_19c6f8\n\n    list1_f4a5d7 -> for_9f3c65.items\n    list2_19c6f8 -> for_9f3c65.items\n\n    instance(x: 200, y: 100) list_get_at_41a321 root.List.GetAt {}\n    instance(x: 200, y: 200) list_get_at_41a322 root.List.GetAt {}\n\n    for_9f3c65.index -> list_get_at_41a321.index\n    for_9f3c65.index -> list_get_at_41a322.index\n\n    list1_f4a5d7 -> list_get_at_41a321.list\n    list2_19c6f8 -> list_get_at_41a322.list\n\n    list_get_at_41a321.item -> math_modulo_ba9e44.value\n    list_get_at_41a322.item -> math_modulo_ba9e44.divisor\n\n    out(x: 600, y: 100, name: \"output\") property(List) output_ebafe5\n    for_9f3c65.onItem -> output_ebafe5\n    math_modulo_ba9e44.result -> output_ebafe5",
                "instance(x: 100, y: 100) for_3f4a21 root.Std.For {}\n    instance(x: 300, y: 100) math_modulo_e48c11 root.Math.Modulo {}\n    instance(x: 500, y: 100) list_length_9d8f42 root.List.Length {}\n    instance(x: 500, y: 200) list_length_3c2a51 root.List.Length {}\n\n    for_3f4a21.items -> list_length_9d8f42.list\n    for_3f4a21.items -> list_length_3c2a51.list\n\n    in(x: -100, y: 100, name: \"list1\") property(List) list1_f5a431\n    in(x: -100, y: 200, name: \"list2\") property(List) list2_d8f42e\n\n    list1_f5a431 -> for_3f4a21.items\n    list2_d8f42e -> for_3f4a21.items\n\n    instance(x: 200, y: 100) list_get_at_64b411 root.List.GetAt {}\n    instance(x: 200, y: 200) list_get_at_30c1d2 root.List.GetAt {}\n\n    for_3f4a21.index -> list_get_at_64b411.index\n    for_3f4a21.index -> list_get_at_30c1d2.index\n\n    list1_f5a431 -> list_get_at_64b411.list\n    list2_d8f42e -> list_get_at_30c1d2.list\n\n    list_get_at_64b411.item -> math_modulo_e48c11.value\n    list_get_at_30c1d2.item -> math_modulo_e48c11.divisor\n\n    out(x: 600, y: 100, name: \"output\") property(List) output_f5a431\n    math_modulo_e48c11.result -> output_f5a431",
                "instance(x: 100, y: 100) list1_016b2e property(List) \ninstance(x: 200, y: 100) list2_c8f404 property(List) \ninstance(x: 300, y: 100) length_78d487 root.Std_k98ojb.List.Length {}\ninstance(x: 400, y: 100) for_loop_d5cc4 root.Std_k98ojb.Std.For {}\ninstance(x: 500, y: 100) get_at_1_c8f404 root.Std_k98ojb.List.GetAt {}\ninstance(x: 600, y: 100) get_at_2_016b2e root.Std_k98ojb.List.GetAt {}\ninstance(x: 700, y: 100) modulo_cd5cc4 root.Std_k98ojb.Math.Modulo {}\nlist1_016b2e -> length_78d487.list\nlength_78d487.length -> for_loop_d5cc4.count\nfor_loop_d5cc4.index -> get_at_1_c8f404.index\nfor_loop_d5cc4.index -> get_at_2_016b2e.index\nlist1_016b2e -> get_at_1_c8f404.list\nlist2_c8f404 -> get_at_2_016b2e.list\nget_at_1_c8f404.item -> modulo_cd5cc4.value\nget_at_2_016b2e.item -> modulo_cd5cc4.divisor\nfor_loop_d5cc4.trigger -> for_loop_d5cc4.reset",
                "instance(x: 100, y: 100) for_7c1d9b root.Std.For {}\ninstance(x: 300, y: 100) math_modulo_e48f65 root.Math.Modulo {}\nfor_7c1d9b.items -> list1_f4a2e5\nfor_7c1d9b.items -> list2_91c405\nlist1_f4a2e5 -> for_7c1d9b.items\nlist2_91c405 -> for_7c1d9b.items\nfor_7c1d9b.on_item -> math_modulo_e48f65.value\nmath_modulo_e48f65.divisor -> for_7c1d9b.item\nmath_modulo_e48f65.value -> for_7c1d9b.index\nin(x: 50, y: 150, name: \"list1\") property(List) list1_f4a2e5\nin(x: 50, y: 250, name: \"list2\") property(List) list2_91c405\nout(x: 500, y: 200, name: \"output\") property(List) output_d8d9f7\nfor_7c1d9b.done -> output_d8d9f7"
            ],
            "26": [
                "instance(x: 0, y: 0) to_uppercase_8a6d9b root.Std_k98ojb.Std.IfExpression {\n    to_uppercase_8a6d9b.expression = \"input.toUpperCase()\"\n    in(x: -100, y: 0, name: \"execute\") trigger() execute_e5c4e3\n    in(x: -200, y: 0, name: \"input\") property(String) input_71a657\n    out(x: 200, y: 0, name: \"result\") property(String) result_f2523c\n    execute_e5c4e3 -> to_uppercase_8a6d9b.execute\n    input_71a657 -> to_uppercase_8a6d9b.input\n    to_uppercase_8a6d9b.value -> result_f2523c\n}",
                "instance(x: 0, y: 0) to_uppercase_45a2b1 root.Std_k98ojb.Std.IfExpression {\n    expression = \"input.toUpperCase()\"\n}\nin(x: -100, y: 0, name: \"execute\") trigger() execute_97d5d5\nin(x: -200, y: 0, name: \"string\") property(String) string_71a657\nout(x: 300, y: 0, name: \"result\") property(String) result_f2523c\nexecute_97d5d5 -> to_uppercase_45a2b1.execute\nstring_71a657 -> to_uppercase_45a2b1.input\nto_uppercase_45a2b1.value -> result_f2523c",
                "instance(x: 0, y: 0) to_uppercase_35a721 root.Std_k98ojb.Std.IfExpression {\n    \"input.toUpperCase()\" -> to_uppercase_35a721.expression\n}\nin(x: -100, y: 50, name: \"string\") property(String) string_e5c1f3\nout(x: 200, y: 0, name: \"result\") property(String) result_6d9e95\nstring_e5c1f3 -> to_uppercase_35a721.input\nto_uppercase_35a721.value -> result_6d9e95",
                "instance(x: 0, y: 0) to_uppercase_3f51b2 root.Std_k98ojb.Std.IfExpression {\n    to_uppercase_3f51b2.expression = \"input.toUpperCase()\"\n    in(x: -130, y: 50, name: \"execute\") trigger() execute_e8d815\n    in(x: -130, y: -50, name: \"input\") property(String) input_71a657\n    out(x: 250, y: 0, name: \"value\") property(String) value_1914e0\n    execute_e8d815 -> to_uppercase_3f51b2.execute\n    input_71a657 -> to_uppercase_3f51b2.input\n    to_uppercase_3f51b2.value -> value_1914e0\n}",
                "instance(x: 0, y: 0) to_uppercase_8e2f14 root.Std_k98ojb.Std.IfExpression {\n    in(x: -120, y: 50, name: \"input\") property(String) input_ecc79d\n    out(x: 220, y: 50, name: \"result\") property(String) result_9fcce3\n    to_uppercase_8e2f14.expression = \"input.toUpperCase()\"\n    input_ecc79d -> to_uppercase_8e2f14.input\n    to_uppercase_8e2f14.value -> result_9fcce3\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpper {}\n        to_uppercase_073b72.input -> string_71a657\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.ToUpper {}\n        to_uppercase_073b72.input -> string_71a657\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"converts a given string to uppercase.\") to_uppercase {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"uppercase\") property(String) uppercase_f2523c\n\n        instance(x: 526, y: 135) to_uppercase_073b72 root.Std_k98ojb.Strings.To_Uppercase {}\n        to_uppercase_073b72.input -> string_71a657\n        execute_97d5d5 -> to_uppercase_073b72.execute\n        to_uppercase_073b72.uppercase -> uppercase_f2523c\n        to_uppercase_073b72.done -> continue_1914e0\n    }\n}",
                "instance(x: 0, y: 0) to_uppercase_8a2e94 root.Std_k98ojb.Std.IfExpression {\n    in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n    in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n    out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n    out(x: 904, y: 359, name: \"result\") property(String) result_f2523c\n\n    execute_97d5d5 -> to_uppercase_8a2e94.execute\n    string_71a657 -> to_uppercase_8a2e94.input_string\n    to_uppercase_8a2e94.result -> result_f2523c\n    to_uppercase_8a2e94.done -> continue_1914e0\n    \"input_string.toUpperCase()\" -> to_uppercase_8a2e94.expression\n}",
                "instance(x: 0, y: 0) to_uppercase_5c46a3 root.Std_k98ojb.Std.IfExpression {\n    expression = \"input.toUpperCase()\"\n}\nin(x: -100, y: 0, name: \"execute\") trigger() execute_c4e2f8\nin(x: -200, y: 0, name: \"string\") property(String) string_71a657\nout(x: 300, y: 0, name: \"result\") property(String) result_e8391b\nexecute_c4e2f8 -> to_uppercase_5c46a3.execute\nstring_71a657 -> to_uppercase_5c46a3.input\nto_uppercase_5c46a3.value -> result_e8391b"
            ],
            "30": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -139, y: 226, name: \"position\") property(Number) position_e4e5b3\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) slice_9b38cc root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < position\"\n        }\n        instance(x: 300, y: 168) reverse_e875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) concat_14921d root.Std_k98ojb.List.Concat {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        ifexpression_5c4634.then -> reverse_e875ddb.execute\n        ifexpression_5c4634.else -> for_9ab286.next\n        list_0c1a77 -> slice_9b38cc.list\n        position_e4e5b3 -> slice_9b38cc.end\n        slice_9b38cc.result -> reverse_e875ddb.list\n        reverse_e875ddb.result -> concat_14921d.left\n        list_0c1a77 -> for_9ab286.items\n        position_e4e5b3 -> for_9ab286.count\n        for_9ab286.done -> continue_a7f942\n        concat_14921d.result -> data_0_0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -148, y: 240, name: \"position\") property(Number) position_eb8e2d\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: -99) slice_5c4634 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) reverse_875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_5c4634.list\n        position_eb8e2d -> slice_5c4634.end\n        slice_5c4634.result -> reverse_875ddb.list\n        reverse_875ddb.result -> concat_9b38cc.left\n        list_0c1a77 -> slice_14921d.list\n        position_eb8e2d -> slice_14921d.start\n        -1 -> slice_14921d.end\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -148, y: 220, name: \"position\") property(Number) position_e4e5ea\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n    instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {}\n    instance(x: 400, y: 168) reverse_d7d1e5 root.Std_k98ojb.List.Reverse {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_875ddb.list\n    position_e4e5ea -> slice_875ddb.end\n    slice_875ddb.result -> reverse_d7d1e5.list\n    reverse_d7d1e5.result -> concat_9b38cc.left\n    array_0c1a77 -> for_9ab286.items\n    position_e4e5ea -> for_9ab286.length\n    for_9ab286.done -> continue_a7f942\n    List.GetAt(array_0c1a77, position_e4e5ea) -> concat_9b38cc.right\n    concat_9b38cc.result -> data_0_0\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -146, y: 160, name: \"position\") property(Number) position_e4a3b7\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) slice_e4a3b7 root.Std_k98ojb.List.Slice {}\n    instance(x: 554, y: -99) reverse_dae2e5 root.Std_k98ojb.List.Reverse {}\n    instance(x: 300, y: 168) concat_875ddb root.Std_k98ojb.List.Concat {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_e4a3b7.list\n    position_e4a3b7 -> slice_e4a3b7.end\n    slice_e4a3b7.result -> reverse_dae2e5.list\n    reverse_dae2e5.result -> concat_875ddb.left\n    array_0c1a77 -> slice_e4a3b7.list\n    position_e4a3b7 -> slice_e4a3b7.start\n    instance(x: 557, y: 239) slice_e4a3b71 root.Std_k98ojb.List.Slice {\n        start: position_e4a3b7\n        end: -1\n    }\n    slice_e4a3b71.result -> concat_875ddb.right\n    array_0c1a77 -> slice_e4a3b71.list\n    concat_875ddb.result -> data_0_0\n    for_9ab286.done -> continue_a7f942\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -145, y: 220, name: \"position\") property(Number) position_eb3d8e\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) slice_2c5a95 root.Std_k98ojb.List.Slice {}\n    instance(x: 554, y: -99) reverse_e8f475 root.Std_k98ojb.List.Reverse {}\n    instance(x: 300, y: 168) concat_875ddb root.Std_k98ojb.List.Concat {}\n\n    execute_1ddb9f -> for_9ab286.reset\n    array_0c1a77 -> slice_2c5a95.list\n    position_eb3d8e -> slice_2c5a95.end\n    slice_2c5a95.result -> reverse_e8f475.list\n    reverse_e8f475.result -> concat_875ddb.left\n    array_0c1a77 -> slice_2c5a95.list\n    position_eb3d8e -> slice_2c5a95.start\n    List.Length(array_0c1a77) -> slice_2c5a95.end\n    slice_2c5a95.result -> concat_875ddb.right\n    concat_875ddb.result -> data_0_0\n    for_9ab286.done -> continue_a7f942\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -147, y: 230, name: \"position\") property(Number) position_e4e6b7\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) slice_e5c1a3 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) reverse_875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < position\"\n        }\n        instance(x: 562, y: -203) concat_14921d root.Std_k98ojb.List.Concat {}\n        slice_e5c1a3.list -> reverse_875ddb.list\n        ifexpression_5c4634.then -> for_9ab286.next\n        execute_1ddb9f -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        for_9ab286.index -> ifexpression_5c4634.gen_1\n        reverse_875ddb.result -> concat_14921d.left\n        list_0c1a77 -> slice_e5c1a3.list\n        position_e4e6b7 -> slice_e5c1a3.end\n        for_9ab286.done -> continue_a7f942\n        List.Length(list_0c1a77) - position_e4e6b7 -> slice_e5c1a3.start\n        slice_e5c1a3.result -> concat_14921d.right\n        concat_14921d.result -> data_0_0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -145, y: 200, name: \"position\") property(Number) position_eb5e55\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {}\n        instance(x: 400, y: 168) reverse_f4c2a5 root.Std_k98ojb.List.Reverse {}\n        instance(x: 500, y: 168) slice_31e8f1 root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_875ddb.list\n        position_eb5e55 -> slice_875ddb.end\n        slice_875ddb.result -> reverse_f4c2a5.list\n        reverse_f4c2a5.result -> concat_9b38cc.left\n        list_0c1a77 -> slice_31e8f1.list\n        position_eb5e55 -> slice_31e8f1.start\n        -1 -> slice_31e8f1.end\n        slice_31e8f1.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) list_0c1a77\n        in(x: -174, y: 220, name: \"position\") property(Number) position_eb3e2d\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) slice_875ddb root.Std_k98ojb.List.Slice {\n            start: 0,\n            end: position_eb3e2d\n        }\n        instance(x: 400, y: 168) reverse_42f4a5 root.Std_k98ojb.List.Reverse {}\n        instance(x: 500, y: 168) slice_875ddb2 root.Std_k98ojb.List.Slice {\n            start: position_eb3e2d,\n            end: -1\n        }\n        execute_1ddb9f -> for_9ab286.reset\n        list_0c1a77 -> slice_875ddb.list\n        list_0c1a77 -> slice_875ddb2.list\n        position_eb3e2d -> slice_875ddb.end\n        slice_875ddb.result -> reverse_42f4a5.list\n        reverse_42f4a5.result -> concat_9b38cc.left\n        slice_875ddb2.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}",
                "func(doc: \"Reverses an array up to a given position.\") reverse_array {\n    in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n    in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n    in(x: -149, y: 220, name: \"position\") property(Number) position_e4a5b7\n\n    out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n    out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n    instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n    instance(x: 557, y: 167) slice_e629d6 root.Std_k98ojb.List.Slice {}\n    instance(x: 554, y: -99) reverse_5c4634 root.Std_k98ojb.List.Reverse {}\n    instance(x: 300, y: 168) concat_875ddb root.Std_k98ojb.List.Concat {}\n\n    execute_1ddb9f -> slice_e629d6.execute\n    array_0c1a77 -> slice_e629d6.list\n    position_e4a5b7 -> slice_e629d6.end\n    slice_e629d6.result -> reverse_5c4634.list\n    reverse_5c4634.result -> concat_875ddb.left\n    array_0c1a77 -> slice_e629d6.list\n    position_e4a5b7 -> slice_e629d6.start\n    -1 -> slice_e629d6.end\n    instance(x: 557, y: 259) slice_e629d7 root.Std_k98ojb.List.Slice {}\n    slice_e629d7.result -> concat_875ddb.right\n    concat_875ddb.result -> data_0_0\n    reverse_5c4634.done -> continue_a7f942\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Reverses an array up to a given position.\") reverse_array {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"array\") property(List) array_0c1a77\n        in(x: -149, y: 211, name: \"position\") property(Number) position_e4e6b7\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: -99) slice_5c4634 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) reverse_875ddb root.Std_k98ojb.List.Reverse {}\n        instance(x: 562, y: -203) slice_14921d root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> for_9ab286.reset\n        array_0c1a77 -> slice_5c4634.list\n        position_e4e6b7 -> slice_5c4634.end\n        slice_5c4634.result -> reverse_875ddb.list\n        reverse_875ddb.result -> concat_9b38cc.left\n        array_0c1a77 -> slice_14921d.list\n        position_e4e6b7 -> slice_14921d.start\n        -1 -> slice_14921d.end\n        slice_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        for_9ab286.done -> continue_a7f942\n    }\n}"
            ],
            "32": [
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equal_9ff257 root.Std_k98ojb.Logic.Equal {}\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) getat_9ff257 root.Std_k98ojb.List.GetAt {}\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        getat_9ff257.itemAtIndex -> ifexpression_a2fa90.gen_0\n        target_1e19fb -> ifexpression_a2fa90.gen_1\n        for_8eae56.index -> getat_8eae56.index\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"list\") property(List) list_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equals_9ff257 root.Std_k98ojb.Logic.Equal {}\n        list_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equal_9ff257 root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_index\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_index\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n        ifexpression_a2fa90.else -> for_8eae56.next\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equals_9ff257 root.Std_k98ojb.Logic.Equal {}\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        for_8eae56.item -> equals_9ff257.left\n        target_1e19fb -> equals_9ff257.right\n        equals_9ff257.result -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n        ifexpression_a2fa90.else -> for_8eae56.next\n    }\n}",
                "instance(x: 100, y: 100) std_8d9f17 root.Std_k98ojb.Std {}\ninstance(x: 300, y: 200) list_getat_f4a201 root.std_8d9f17.List.GetAt {}\ninstance(x: 500, y: 100) list_length_ea74e5 root.std_8d9f17.List.Length {}\ninstance(x: 200, y: 300) math_sub_ba609c root.std_8d9f17.Math.Sub {}\ninstance(x: 400, y: 300) math_div_ec57b4 root.std_8d9f17.Math.Div {}\ninstance(x: 100, y: 500) std_ifexpression_2e90ab root.std_8d9f17.Std.IfExpression {\n    expression: \"a < b ? a : b\"\n}\ninstance(x: 300, y: 500) std_ifexpression_afe7c5 root.std_8d9f17.Std.IfExpression {\n    expression: \"a == 0 ? -1 : a\"\n}\nin(x: 100, y: 50, name: \"array\") property(List) array_f86629\nin(x: 200, y: 50, name: \"target\") property(Number) target_5c2f3d\nout(x: 500, y: 600, name: \"index\") property(Number) index_9e6a4b\narray_f86629 -> list_length_ea74e5.list\nlist_length_ea74e5.length -> math_div_ec57b4.first\ntarget_5c2f3d -> math_div_ec57b4.second\nmath_div_ec57b4.result -> std_ifexpression_2e90ab.gen_0\narray_f86629 -> list_getat_f4a201.list\nstd_ifexpression_2e90ab.value -> list_getat_f4a201.index\nlist_getat_f4a201.itemAtIndex -> std_ifexpression_afe7c5.gen_0\nmath_sub_ba609c.result -> std_ifexpression_afe7c5.a\ntarget_5c2f3d -> math_sub_ba609c.first\nlist_getat_f4a201.itemAtIndex -> math_sub_ba609c.second\nstd_ifexpression_afe7c5.value -> index_9e6a4b",
                "instance(x: 100, y: 100) for_4e8a5d root.Std_k98ojb.Std.For {}\ninstance(x: 300, y: 100) listgetat_f47c1a root.Std_k98ojb.List.GetAt {}\ninstance(x: 500, y: 100) logic_equal_c9f2da root.Std_k98ojb.Logic.Equal {}\n\nin(x: 0, y: 0, name: \"array\") property(List) array_79e4d5\nin(x: 0, y: 50, name: \"target\") property(Number) target_ea92c8\nin(x: 0, y: 100, name: \"execute\") trigger() execute_2b6f1c\n\nout(x: 800, y: 0, name: \"index\") property(Number) index_f765d9\nout(x: 800, y: 50, name: \"done\") trigger() done_408a5e\n\narray_79e4d5 -> for_4e8a5d.items\nexecute_2b6f1c -> for_4e8a5d.trigger\nfor_4e8a5d.on_item -> listgetat_f47c1a.execute\nfor_4e8a5d.item -> listgetat_f47c1a.list\nfor_4e8a5d.index -> listgetat_f47c1a.index\ntarget_ea92c8 -> logic_equal_c9f2da.left\nlistgetat_f47c1a.itemAtIndex -> logic_equal_c9f2da.right\nlogic_equal_c9f2da.execute -> for_4e8a5d.next\nfor_4e8a5d.done -> done_408a5e\nlogic_equal_c9f2da.value -> index_f765d9",
                "instance(x: 100, y: 100) std_5f4c21 root.Std_k98ojb.Std {}\ninstance(x: 300, y: 200) list_getat_f3a819 root.Std_k98ojb.List.GetAt {}\ninstance(x: 500, y: 100) list_length_8e2d91 root.Std_k98ojb.List.Length {}\ninstance(x: 400, y: 300) math_sub_71f249 root.Std_k98ojb.Math.Sub {}\ninstance(x: 200, y: 400) math_div_9c0e5a root.Std_k98ojb.Math.Div {}\ninstance(x: 100, y: 500) math_add_2d4e75 root.Std_k98ojb.Math.Add {}\ninstance(x: 300, y: 500) ifexpression_afe7f6 root.Std_k98ojb.Std.IfExpression {\n    expression: \"a < b ? a : b\"\n}\ninstance(x: 600, y: 200) for_33c1d5 root.Std_k98ojb.Std.For {}\nfor_33c1d5.items -> list_getat_f3a819.list\nlist_length_8e2d91.list -> list_getat_f3a819.list\nmath_sub_71f249.first -> ifexpression_afe7f6.gen_0\nifexpression_afe7f6.execute -> for_33c1d5.trigger\nfor_33c1d5.on_item -> math_add_2d4e75.execute\nlist_getat_f3a819.itemAtIndex -> math_sub_71f249.second\nmath_div_9c0e5a.first -> list_length_8e2d91.list\nmath_div_9c0e5a.second -> for_33c1d5.index\nmath_add_2d4e75.first -> for_33c1d5.index\nmath_add_2d4e75.second -> math_sub_71f249.result\nfor_33c1d5.done -> ifexpression_afe7f6.else",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"array\") property(List) array_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_1e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 196, y: 256) equal_9ff257 root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_index\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_index\n        array_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_1e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n        ifexpression_a2fa90.else -> for_8eae56.next\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"finds the index of the first occurrence of a given number in a sorted array.\") find_index {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"list\") property(List) list_b5d10a\n        in(x: -289, y: 126, name: \"target\") property(Number) target_e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"index\") property(Number) index_fd7945\n\n        instance(x: 406, y: 546) for_8eae56 root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        list_b5d10a -> for_8eae56.items\n        execute_1e159f -> for_8eae56.trigger\n        for_8eae56.on_item -> ifexpression_a2fa90.execute\n        target_e19fb -> ifexpression_a2fa90.gen_0\n        for_8eae56.item -> ifexpression_a2fa90.gen_1\n        ifexpression_a2fa90.then -> continue_c95bcb\n        for_8eae56.index -> index_fd7945\n    }\n}"
            ],
            "39": [
                "instance(x: 140, y: 100) for_9f3b2a root.Std_k98ojb.Std.For {\n    instance(x: 305, y: 55) ifexpression_f14e7c root.Std_k98ojb.Std.IfExpression {\n        expression: \"index % 2 == 1 ? item % 2 == 1 : true\"\n    }\n    instance(x: 140, y: 220) listgetat_4a69d5 root.Std_k98ojb.List.GetAt {}\n    for_9f3b2a.on_item -> ifexpression_f14e7c.input\n    for_9f3b2a.item -> listgetat_4a69d5.item\n    for_9f3b2a.index -> ifexpression_f14e7c.index\n    instance(x: 140, y: 50) listlength_d459a6 root.Std_k98ojb.List.Length {}\n    listlength_d459a6.length -> for_9f3b2a.count\n}\ninstance(x: 500, y: 100) if_8d5c22 root.Std_k98ojb.Std.If {\n    if_8d5c22.input -> ifexpression_f14e7c.value\n}\nfor_9f3b2a.done -> if_8d5c22.then\ninstance(x: 140, y: -50) inputlist_e48a85 property(List) input_list\n\ninputlist_e48a85 -> listgetat_4a69d5.list\ninputlist_e48a85 -> listlength_d459a6.list",
                "instance(x: 140, y: 100) for_9f2e7c root.Std_k98ojb.Std.For {\n    items: list\n}\ninstance(x: 300, y: 120) ifexpression_4a8d1a root.Std_k98ojb.Std.IfExpression {\n    expression: \"index % 2 == 1 && item % 2 == 0 ? false : true\"\n}\nfor_9f2e7c.on_item -> ifexpression_4a8d1a.input\ninstance(x: 500, y: 150) if_d96281 root.Std_k98ojb.Std.If {\n    input: ifexpression_4a8d1a.value\n}\nifexpression_4a8d1a.value -> if_d96281.input\nfor_9f2e7c.index -> ifexpression_4a8d1a.index\nfor_9f2e7c.item -> ifexpression_4a8d1a.item\ninstance(x: 700, y: 180) output_71e829 property(Bool) {\n}\nif_d96281.then -> output_71e829",
                "instance(x: 119, y: 135) Std_For_5b4a2e root.Std.For {\n    items: list\n}\ninstance(x: 301, y: 67) Logic_Modulo_c9f7a3 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 119, y: 246) Std_IfExpression_ba95e1 root.Std.IfExpression {\n    expression: \"index % 2 == 1 && result != 0\"\n}\ninstance(x: 437, y: 135) Logic_NotEqual_a8d93f root.Logic.NotEqual {\n    left: false\n    right: value\n}\nStd_For_5b4a2e.on_item -> Std_IfExpression_ba95e1.input\nLogic_Modulo_c9f7a3.result -> Std_IfExpression_ba95e1.index\nStd_For_5b4a2e.item -> Logic_Modulo_c9f7a3.value\nStd_For_5b4a2e.index -> Std_IfExpression_ba95e1.input\nStd_IfExpression_ba95e1.value -> Logic_NotEqual_a8d93f.left\nLogic_NotEqual_a8d93f.result -> output",
                "instance(x: 119, y: 139) Std_For_5b4e46 root.Std.For {\n    items: list_8a351c\n}\ninstance(x: 305, y: 140) Logic_NotEqual_d5f2a3 root.Logic.NotEqual {\n    left: index_5b4e46\n    right: 0\n}\ninstance(x: 234, y: 142) Math_Modulo_e9d51c root.Math.Modulo {\n    value: item_5b4e46\n    divisor: 2\n}\ninstance(x: 427, y: 141) Std_IfExpression_f1a8d3 root.Std.IfExpression {\n    expression: \"index % 2 != 0 && item % 2 == 0 ? false : true\"\n}\nStd_For_5b4e46.on_item -> Logic_NotEqual_d5f2a3.trigger\nLogic_NotEqual_d5f2a3.value -> Math_Modulo_e9d51c.trigger\nMath_Modulo_e9d51c.result -> Std_IfExpression_f1a8d3.trigger\nStd_For_5b4e46.item -> item_5b4e46\nStd_For_5b4e46.index -> index_5b4e46\nStd_IfExpression_f1a8d3.value -> output_a2b59d\n\ninstance(x: 119, y: -23) list_8a351c property(List) {\n    name: \"list\"\n}\ninstance(x: 427, y: 270) output_a2b59d property(Bool) {\n    name: \"output\"\n}",
                "instance(x: 106, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 305, y: 101) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 507, y: 103) Logic_Equal_3 root.Logic.Equal {\n    left: result\n    right: 0\n}\ninstance(x: 106, y: 202) Std_If_4 root.Std.If {\n    input: equal\n}\ninstance(x: 305, y: 203) Math_Modulo_5 root.Math.Modulo {\n    value: index\n    divisor: 2\n}\ninstance(x: 507, y: 204) Logic_Equal_6 root.Logic.Equal {\n    left: result\n    right: 1\n}\nStd_For_1.on_item -> Std_If_4.input\nitem -> Logic_Modulo_2.value\nindex -> Math_Modulo_5.value\nLogic_Modulo_2.result -> Logic_Equal_3.left\nMath_Modulo_5.result -> Logic_Equal_6.left\nLogic_Equal_3.right -> Std_If_4.then\nLogic_Equal_6.right -> Std_If_4.else",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) List_GetAt_4 root.List.GetAt {\n    list: list\n    index: index\n}\ninstance(x: 200, y: 200) Math_Modulo_5 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\nconnection(from: Std_For_1.on_item, to: List_GetAt_4)\nconnection(from: List_GetAt_4.item, to: Math_Modulo_5.value)\nconnection(from: Math_Modulo_5.result, to: Logic_Modulo_2.value)\nconnection(from: Logic_Modulo_2.result, to: Std_If_3.input)\nconnection(from: Std_For_1.index, to: Math_Modulo_5.value)",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) List_GetAt_4 root.List.GetAt {\n    list: list\n    index: index\n}\ninstance(x: 200, y: 200) Math_Modulo_5 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\nconnection(List_GetAt_4.item, Std_For_1.item)\nconnection(Std_For_1.index, List_GetAt_4.index)\nconnection(Math_Modulo_5.result, Std_If_3.input)\nconnection(Logic_Modulo_2.result, Std_If_3.value)\nconnection(Std_For_1.trigger, Math_Modulo_5.trigger)",
                "instance(x: 100, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 500, y: 100) Std_If_3 root.Std.If {\n    input: result\n}\ninstance(x: 700, y: 100) Logic_NotEqual_4 root.Logic.NotEqual {\n    left: index\n    right: 0\n}\ninstance(x: 900, y: 100) Math_Modulo_5 root.Math.Modulo {\n    value: index\n    divisor: 2\n}\nStd_For_1.on_item -> Logic_Modulo_2.value\nLogic_Modulo_2.result -> Std_If_3.input\nStd_For_1.index -> Logic_NotEqual_4.left\nLogic_NotEqual_4.result -> Math_Modulo_5.value\nMath_Modulo_5.result -> Std_If_3.input",
                "instance(x: 155, y: 105) Std_For_6f2e17 root.Std.For {\n    items: list\n}\ninstance(x: 262, y: 212) Logic_Modulo_e9d8a3 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 155, y: 305) Std_IfExpression_a4e912 root.Std.IfExpression {\n    expression: \"index % 2 == 1 && result != 0\"\n}\ninstance(x: 419, y: 105) Logic_NotEqual_71f429 root.Logic.NotEqual {\n    left: false\n    right: value\n}\nStd_For_6f2e17.on_item -> Logic_Modulo_e9d8a3.trigger\nLogic_Modulo_e9d8a3.result -> Std_IfExpression_a4e912.item\nStd_For_6f2e17.index -> Std_IfExpression_a4e912.index\nStd_IfExpression_a4e912.value -> Logic_NotEqual_71f429.left\nLogic_NotEqual_71f429.result -> output",
                "instance(x: 140, y: 100) Std_For_1 root.Std.For {\n    items: list\n}\ninstance(x: 300, y: 100) Logic_Modulo_2 root.Math.Modulo {\n    value: item\n    divisor: 2\n}\ninstance(x: 460, y: 100) Logic_Equal_3 root.Logic.Equal {\n    left: result\n    right: 0\n}\ninstance(x: 620, y: 100) Std_If_4 root.Std.If {\n    input: equal\n}\ninstance(x: 780, y: 50) Math_Modulo_5 root.Math.Modulo {\n    value: index\n    divisor: 2\n}\ninstance(x: 940, y: 50) Logic_Equal_6 root.Logic.Equal {\n    left: result\n    right: 1\n}\nStd_For_1.on_item -> Logic_Modulo_2.value\nStd_For_1.index -> Math_Modulo_5.value\nMath_Modulo_5.result -> Logic_Equal_6.left\nLogic_Equal_6.right -> Logic_Equal_6.right\nLogic_Modulo_2.result -> Logic_Equal_3.left\nLogic_Equal_3.right -> Logic_Equal_3.right\nLogic_Equal_3.equal -> Std_If_4.input\nStd_If_4.then -> Std_For_1.next\nLogic_Equal_6.equal -> Std_If_4.else"
            ],
            "43": [
                "instance(x: 100, y: 100) iteration_find_95c2b1 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 246, y: 143) lambda_41a409 root.Std_k98ojb.Std.Lambda {\n    code: \"it % 2 != 0\"\n}\niteration_find_95c2b1.predicate -> lambda_41a409\nlambda_41a409.result -> iteration_find_95c2b1.result",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 250, y: 150) predicate_2 root.Std_k98ojb.Math.Expression {\n    expression: \"it % 2 != 0\"\n}\niteration_find_1.predicate -> predicate_2",
                "instance(x: 100, y: 100) find_first_odd_5f4a2e root.Std_k98ojb.Iteration.Find {\n        items: list\n        predicate: \"it % 2 != 0\"\n    }\n\n    out(x: 300, y: 100, name: \"first odd\") property(Number) first_odd_57c890\n    find_first_odd_5f4a2e.item -> first_odd_57c890",
                "instance(x: 100, y: 100) iteration_find_85b2e5 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 246, y: 105) lambda_9d8f43 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\niteration_find_85b2e5.predicate: lambda_9d8f43\niteration_find_85b2e5.items: list",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n        items: list\n        predicate: \"it % 2 != 0\"\n    }\n    out(x: 300, y: 100, name: \"first odd number\") property(Number) first_odd_number\n    iteration_find_1.item -> first_odd_number",
                "instance(x: 100, y: 100) iteration_find_5b8e21 root.Std_k98ojb.Iteration.Find {\n    items: list\n}\ninstance(x: 246, y: 104) lambda_7a3d9c root.Std_k98ojb.Std.Lambda {\n    code: \"it % 2 != 0\"\n}\niteration_find_5b8e21.predicate -> lambda_7a3d9c\nlambda_7a3d9c.result -> iteration_find_5b8e21.item",
                "instance(x: 100, y: 100) iteration_find_1 root.Std_k98ojb.Iteration.Find {\n    predicate: \"it % 2 != 0\"\n}\ninstance(x: 50, y: 150) list_length_2 root.Std_k98ojb.List.Length {}\ninstance(x: -50, y: 200) if_expression_3 root.Std_k98ojb.Std.IfExpression {\n    expression: \"list.length > 0 ? iteration_find.items : null\"\n}\niteration_find_1.items -> if_expression_3.list\nif_expression_3.value -> item",
                "instance(x: 100, y: 100) find_first_odd_85c2b1 root.Std_k98ojb.Iteration.Find {\n    predicate: \"it % 2 != 0\"\n}\ninstance(x: 50, y: 150) list_542a51 root.Std_k98ojb.List {}\nlist_542a51 -> find_first_odd_85c2b1.items",
                "instance(x: 100, y: 100) iteration_find_9f2e1c root.Std_k98ojb.Iteration.Find {\n        items: list\n        predicate: \"it % 2 != 0\"\n    }\n    out(x: 300, y: 100, name: \"first odd\") property(Number) first_odd\n\n    iteration_find_9f2e1c.item -> first_odd\n\n    in(x: 0, y: 100, name: \"list\") property(List) list",
                "instance(x: 100, y: 100) find_first_odd_95c41f root.Std_k98ojb.Iteration.Find {\n    items: list\n    predicate: \"it % 2 != 0\"\n}\nout(x: 300, y: 100, name: \"first odd\") property(Number) first_odd_c7d91a\nfind_first_odd_95c41f.item -> first_odd_c7d91a"
            ],
            "44": [
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    \n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) range_6e8af5 Std.For {}\n    instance(x: 300, y: 0) square_3a8e90 Math.Mul {}\n    instance(x: 400, y: 0) add_8974a2 Math.Add {}\n    n -> range_6e8af5.items\n    0 -> range_6e8af5.index\n    range_6e8af5.item -> square_3a8e90.first\n    range_6e8af5.item -> square_3a8e90.second\n    sum -> add_8974a2.first\n    square_3a8e90.result -> add_8974a2.second\n    add_8974a2.result -> sum\n    func() {\n        in(x: 0, y: 100, name: \"item\") property(Number) item\n        instance(x: 100, y: 150) mul_0f3be6 Math.Mul {}\n        instance(x: 200, y: 150) sub_e38c7d Math.Sub {}\n        2 -> mul_0f3be6.first\n        item -> mul_0f3be6.second\n        mul_0f3be6.result -> sub_e38c7d.first\n        1 -> sub_e38c7d.second\n        sub_e38c7d.result -> square_3a8e90.first\n    } -> range_6e8af5.onItem\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) sub_e38c7d root.Std_k98ojb.Math.Sub {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i-1)*(2*i-1)\"\n            }\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) add_8974a2 root.Std_k98ojb.Math.Add {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i-1)*(2*i-1)\"\n            }\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n            current_3f11cd -> expression_8eee0e.gen_0\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) sub_e38c7d root.Std_k98ojb.Math.Sub {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i - 1)*(2*i - 1)\"\n            }\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } i=-> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) sub_e38c7d root.Std_k98ojb.Math.Sub {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i-1)*(2*i-1)\"\n            }\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    out(x: 100, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 200, y: 0) range_0 root.Std_k98ojb.List.GenerateRange {\n        from: 1,\n        to: n * 2 - 1,\n        step: 2\n    }\n    instance(x: 300, y: 0) map_1 root.Std_k98ojb.Iteration.Map {\n        items: range_0.list\n    }\n    func() {\n        in(x: -100, y: 0, name: \"x\") property(Number) x\n        out(x: 100, y: 0, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) expression_0 root.Std_k98ojb.Math.Expression {\n            expression: \"x * x\"\n        }\n        expression_0.result -> result\n    } -> map_1.mapper\n    instance(x: 400, y: 0) reduce_2 root.Std_k98ojb.Iteration.Reduce {\n        items: map_1.output,\n        initialValue: 0\n    }\n    func() {\n        in(x: -100, y: 0, name: \"acc\") property(Number) acc\n        in(x: -50, y: 0, name: \"x\") property(Number) x\n        out(x: 100, y: 0, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) add_0 root.Std_k98ojb.Math.Add {\n            first: acc,\n            second: x\n        }\n        add_0.result -> result\n    } -> reduce_2.reducer\n    reduce_2.output -> sum\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    \n    out(x: 200, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 100, y: 0) for_1 root.Std.For {}\n    0 -> for_1.index\n    n -> for_1.length\n    func() {\n        in(x: -50, y: -25, name: \"index\") property(Number) index\n        \n        out(x: 150, y: -25, name: \"sum\") property(Number) sum_out\n\n        instance(x: 0, y: -50) mul_1 root.Std.Math.Mul {}\n        instance(x: 100, y: -50) add_2 root.Std.Math.Add {}\n        instance(x: 0, y: 0) mul_3 root.Std.Math.Mul {}\n        2 -> mul_1.first\n        index -> mul_1.second\n        1 -> mul_1.second\n        mul_1.result -> mul_3.first\n        mul_1.result -> mul_3.second\n        sum -> add_2.first\n        mul_3.result -> add_2.second\n        add_2.result -> sum_out\n    } -> for_1.body\n    for_1.sum -> sum\n}",
                "func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n    in(x: 0, y: 0, name: \"n\") property(Number) n\n    out(x: 100, y: 0, name: \"sum\") property(Number) sum\n\n    instance(x: 200, y: 0) range_0 root.Std_k98ojb.List.GenerateRange {\n        from: 1,\n        to: n * 2 - 1,\n        step: 2\n    }\n    instance(x: 300, y: 0) map_1 root.Std_k98ojb.Iteration.Map {\n        items: range_0.list\n    }\n    func() {\n        in(x: -100, y: 0, name: \"x\") property(Number) x\n        out(x: 100, y: 0, name: \"result\") property(Number) result\n\n        instance(x: 0, y: 0) expression_0 root.Std_k98ojb.Math.Expression {\n            expression: \"x * x\"\n        }\n        expression_0.result -> result\n    } -> map_1.mapper\n    instance(x: 400, y: 0) reduce_2 root.Std_k98ojb.Iteration.Reduce {\n        items: map_1.output,\n        initialValue: 0\n    }\n    func() {\n        in(x: -100, y: 0, name: \"accumulated\") property(Number) accumulated\n        in(x: -50, y: 0, name: \"current\") property(Number) current\n        out(x: 100, y: 0, name: \"sum\") property(Number) sum\n\n        instance(x: 0, y: 0) add_0 root.Std_k98ojb.Math.Add {\n            first: accumulated,\n            second: current\n        }\n        add_0.result -> sum\n    } -> reduce_2.reducer\n    reduce_2.output -> sum\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) sub_e38c7d root.Std_k98ojb.Math.Sub {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i - 1)*(2*i - 1)\"\n            }\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            expression_8eee0e.result -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n            i -> expression_8eee0e.gen_0\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of the squares of the first n odd natural numbers.\") sum_of_squares {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) mul_0f3be6 root.Std_k98ojb.Math.Mul {}\n            instance(x: 298, y: 1) add_1e7c4d root.Std_k98ojb.Math.Add {}\n            instance(x: 568, y: 1) expression_8eee0e root.Std_k98ojb.Math.Expression {\n                expression: \"(2*i - 1)*(2*i - 1)\"\n            }\n            current_c750f1 -> add_1e7c4d.first\n            expression_8eee0e.result -> add_1e7c4d.second\n            add_1e7c4d.result -> sum_72dd2a\n            generaterange_6e8af5.index -> current_3f11cd\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n    }\n}"
            ],
            "47": [
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node_2.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node_2.first\n    math_mul_node.first -> math_mul_node_2.second\n    math_mul_node.trigger -> math_mul_node.trigger\n    math_mul_node_2.result -> List.Append",
                "instance(x: 98, y: 120) std_for_node Std.For {}\n    instance(x: 301, y: 123) math_mul_node Math.Mul {}\n    property(List) input_list\n    property(List) output_list\n\n    input_list -> std_for_node.items\n    std_for_node.on_item -> math_mul_node.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node.second\n    std_for_node.item -> math_mul_node.third\n    math_mul_node.result -> output_list.add",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 100, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_mul_node Math_k98ojb.Math.Mul {}\n    instance(x: 500, y: 0) math_mul_node2 Math_k98ojb.Math.Mul {}\n\n    for_node.items -> List([1, 2, 3, 4, 5])\n    for_node.on_item -> math_mul_node.first\n    for_node.item -> math_mul_node.second\n    for_node.item -> math_mul_node2.first\n    math_mul_node.result -> math_mul_node2.second\n    math_mul_node2.result -> for_node.next",
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node.trigger\n    math_mul_node.first -> std_for_node.item\n    math_mul_node.second -> std_for_node.item\n    math_mul_node.result -> math_mul_node_2.first\n    math_mul_node_2.second -> std_for_node.item\n    math_mul_node_2.trigger -> std_for_node.next",
                "List.Map(input_list, Math.Mul(Math.Mul(element, element), element))",
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node_2.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node_2.first\n    math_mul_node.first -> math_mul_node_2.second\n    math_mul_node.trigger -> math_mul_node.trigger\n    math_mul_node_2.result -> List.Append",
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List.FromArray([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node_2.trigger\n    std_for_node.item -> math_mul_node.first\n    std_for_node.item -> math_mul_node_2.first\n    math_mul_node.first -> math_mul_node_2.second\n    math_mul_node.trigger -> math_mul_node.trigger\n    math_mul_node_2.result -> List.Append",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 100, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_mul_node Math_k98ojb.Math.Mul {}\n    instance(x: 500, y: 0) math_mul_node2 Math_k98ojb.Math.Mul {}\n\n    for_node.items -> List([1, 2, 3, 4, 5])\n    for_node.trigger -> std.Std.Trigger()\n    for_node.on_item -> math_mul_node.first\n    for_node.item -> math_mul_node2.first\n    for_node.item -> math_mul_node.second\n    math_mul_node.result -> math_mul_node2.second\n    math_mul_node2.result -> List.Append()",
                "instance(x: 100, y: 100) std_for_node Std.For {}\n    instance(x: 300, y: 100) math_mul_node Math.Mul {}\n    instance(x: 500, y: 100) math_mul_node_2 Math.Mul {}\n\n    std_for_node.items -> List([1, 2, 3, 4, 5])\n    std_for_node.on_item -> math_mul_node.trigger\n    math_mul_node.first -> std_for_node.item\n    math_mul_node.second -> std_for_node.item\n    math_mul_node.result -> math_mul_node_2.first\n    math_mul_node_2.second -> std_for_node.item\n    math_mul_node_2.trigger -> std_for_node.next",
                "instance(x: 0, y: 0) std Math_k98ojb\n    instance(x: 100, y: 0) for_node Std_k98ojb.Std.For {}\n    instance(x: 300, y: 0) math_mul_node Math_k98ojb.Math.Mul {}\n    instance(x: 500, y: 0) math_mul_node2 Math_k98ojb.Math.Mul {}\n\n    for_node.items -> List([1, 2, 3, 4, 5])\n    for_node.on_item -> math_mul_node.first\n    for_node.item -> math_mul_node.second\n    for_node.item -> math_mul_node2.first\n    math_mul_node.result -> math_mul_node2.second\n    math_mul_node2.result -> for_node.next"
            ],
            "40": [
                "func(diff_even_odd) product_even_odd {\n    in(list) property(List) list\n    out(product) property(Number) product\n\n    instance(filter_even) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance(first_even) root.Std_k98ojb.List.FirstItem {}\n    instance(filter_odd) root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance(first_odd) root.Std_k98ojb.List.FirstItem {}\n    instance(mul) root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> product\n}",
                "instance(x: 100, y: 100) query_filter_even_75c1b2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_9d8f43 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_58c103 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_4f3a91 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_21e456 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_75c1b2.result -> list_firstitem_even_58c103.list\nquery_filter_odd_9d8f43.result -> list_firstitem_odd_4f3a91.list\nlist_firstitem_even_58c103.item -> math_mul_21e456.first\nlist_firstitem_odd_4f3a91.item -> math_mul_21e456.second",
                "instance(x: 100, y: 100) query_filter_even_1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_3 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_4 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_5 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_1.result -> list_firstitem_even_3.list\nquery_filter_odd_2.result -> list_firstitem_odd_4.list\nlist_firstitem_even_3.item -> math_mul_5.first\nlist_firstitem_odd_4.item -> math_mul_5.second",
                "instance(x: 100, y: 100) query_filter_even_85c2b1 Std.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_3a4e11 Std.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_870503 List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_3078c6 List.FirstItem {}\ninstance(x: 200, y: 300) math_mul_852f2e Math.Mul {}\nquery_filter_even_85c2b1.list -> input_list\nquery_filter_odd_3a4e11.list -> input_list\nquery_filter_even_85c2b1.result -> list_firstitem_even_870503.list\nquery_filter_odd_3a4e11.result -> list_firstitem_odd_3078c6.list\nlist_firstitem_even_870503.item -> math_mul_852f2e.first\nlist_firstitem_odd_3078c6.item -> math_mul_852f2e.second\nmath_mul_852f2e.result -> output_product",
                "instance(x: 100, y: 100) query_filter_even_85b2e1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_30a51f root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_542a94 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_3078c6 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_852f2e root.Std_k98ojb.Math.Mul {}\nquery_filter_even_85b2e1.result -> list_firstitem_even_542a94.list\nquery_filter_odd_30a51f.result -> list_firstitem_odd_3078c6.list\nlist_firstitem_even_542a94.item -> math_mul_852f2e.first\nlist_firstitem_odd_3078c6.item -> math_mul_852f2e.second",
                "func diff_even_odd {\n    in list property(List) list\n    out difference property(Number) difference\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance first_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance first_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> difference\n}",
                "func diff_even_odd {\n    in list property(List) list\n    out difference property(Number) difference\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance first_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance first_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> difference\n}",
                "func diff_even_odd {\n    in(list) property(List) list\n    out(product) property(Number) product\n\n    instance filter_even root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 == 0\"\n    }\n    instance first_even root.Std_k98ojb.List.FirstItem {}\n    instance filter_odd root.Std_k98ojb.Query.Filter {\n        where: \"it % 2 != 0\"\n    }\n    instance first_odd root.Std_k98ojb.List.FirstItem {}\n    instance mul root.Std_k98ojb.Math.Mul {}\n\n    list -> filter_even.list\n    filter_even.result -> first_even.list\n    list -> filter_odd.list\n    filter_odd.result -> first_odd.list\n    first_even.item -> mul.first\n    first_odd.item -> mul.second\n    mul.result -> product\n}",
                "instance(x: 100, y: 100) query_filter_even_2c4f6e root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_8a65d1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_e9815e root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_71f3c9 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_f81a32 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_2c4f6e.result -> list_firstitem_even_e9815e.list\nquery_filter_odd_8a65d1.result -> list_firstitem_odd_71f3c9.list\nlist_firstitem_even_e9815e.item -> math_mul_f81a32.first\nlist_firstitem_odd_71f3c9.item -> math_mul_f81a32.second",
                "instance(x: 100, y: 100) query_filter_even_1 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 == 0\"\n}\ninstance(x: 300, y: 100) query_filter_odd_2 root.Std_k98ojb.Query.Filter {\n    where: \"it % 2 != 0\"\n}\ninstance(x: 100, y: 200) list_firstitem_even_3 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 300, y: 200) list_firstitem_odd_4 root.Std_k98ojb.List.FirstItem {}\ninstance(x: 500, y: 200) math_mul_5 root.Std_k98ojb.Math.Mul {}\nquery_filter_even_1.result -> list_firstitem_even_3.list\nquery_filter_odd_2.result -> list_firstitem_odd_4.list\nlist_firstitem_even_3.item -> math_mul_5.first\nlist_firstitem_odd_4.item -> math_mul_5.second"
            ],
            "41": [
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) math_expression_node calculate_index {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> calculate_index.index\n    get_length.length -> calculate_index.length\n    calculate_index.result -> check_equal.left\n    for_loop.item -> check_equal.right\n\n    check_equal.true -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> for_loop.index\n\n    for_loop.done -> result.done\n    check_equal.false -> for_loop.next\n    for_loop.on_item -> check_equal.trigger\n\n    instance(x: 600, y: 0) std_if_node return_last_position {}\n    check_equal.true -> return_last_position.input\n    for_loop.index -> return_last_position.then\n    -1 -> return_last_position.else\n    return_last_position.value -> result.result",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> done_trigger\n    for_loop.index -> result_output\n\n    target_value = input value to search for\n    get_length.list = input sorted array\n    result_output = output last position of element",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node list_length {}\n    instance(x: 240, y: 0) logic_equal_node equal_check {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length_node.list\n    list_length_node.length -> for_loop.count\n    for_loop.index -> equal_check.left\n    list_length_node.length -> equal_check.right\n    equal_check.result -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> for_loop.on_item\n\n    instance(x: 600, y: 0) iteration_find_node find_last_position {}\n    for_loop.items -> find_last_position.items\n    equal_check.result -> find_last_position.predicate",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) math_expression_node calculate_index {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> calculate_index.index\n    get_length.length -> calculate_index.length\n    for_loop.item -> check_equal.left\n    target_value -> check_equal.right\n\n    check_equal.result -> std_if_node.condition\n    decrement_index.first -> for_loop.index\n    1 -> decrement_index.second\n\n    std_if_node.then -> decrement_index.trigger\n    std_if_node.else -> for_loop.next\n\n    for_loop.done -> done_trigger\n    calculate_index.result -> result_output",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> get_element.index\n    get_length.list -> get_element.list\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> result\n\n    target_value = input value to search for\n    get_length.list = input sorted array\n    result = output last position of element",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node list_length {}\n    instance(x: 200, y: 0) logic_equal_node equal_check {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length.list\n    list_length.list -> get_element.list\n    for_loop.index -> get_element.index\n    get_element.item -> equal_check.left\n    target_value -> equal_check.right\n    equal_check.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node list_length {}\n    instance(x: 200, y: 0) logic_equal_node equal_check {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length.list\n    list_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> equal_check.left\n    target_value -> equal_check.right\n    equal_check.result -> for_loop.condition\n    for_loop.done -> output_done\n    for_loop.index -> output_index\n\n    instance(x: 500, y: 0) math_sub_node subtract_one {}\n    for_loop.index -> subtract_one.first\n    1 -> subtract_one.second\n    subtract_one.result -> output_index",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 100, y: 0) list_length_node get_length {}\n    instance(x: 200, y: 0) logic_equal_node check_equal {}\n    instance(x: 300, y: 0) math_sub_node decrement_index {}\n    instance(x: 400, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> get_length.list\n    get_length.length -> for_loop.count\n    for_loop.index -> get_element.index\n    get_element.list -> for_loop.items\n    get_element.item -> check_equal.left\n    target_value -> check_equal.right\n    check_equal.result -> for_loop.condition\n    for_loop.done -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> last_position\n\n    target_value -> last_position\n    get_element.list -> last_position",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node get_length {}\n    instance(x: 240, y: 0) logic_equal_node check_equal {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) math_expression_node calculate_index {}\n\n    get_length.list -> for_loop.items\n    for_loop.index -> calculate_index.index\n    get_length.length -> calculate_index.length\n    for_loop.item -> check_equal.left\n    target_value -> check_equal.right\n\n    check_equal.result -> std_if_node.condition\n    decrement_index.first -> for_loop.index\n    1 -> decrement_index.second\n\n    std_if_node.then -> decrement_index.trigger\n    std_if_node.else -> for_loop.next\n\n    for_loop.done -> done_trigger\n    calculate_index.result -> result_output",
                "instance(x: 0, y: 0) std_for_node for_loop {}\n    instance(x: 120, y: 0) list_length_node list_length {}\n    instance(x: 240, y: 0) logic_equal_node equal_check {}\n    instance(x: 360, y: 0) math_sub_node decrement_index {}\n    instance(x: 480, y: 0) list_get_at_node get_element {}\n\n    for_loop.items -> list_length_node.list\n    list_length_node.length -> for_loop.count\n    for_loop.index -> equal_check.left\n    for_loop.count -> equal_check.right\n    equal_check.result -> decrement_index.trigger\n    for_loop.index -> decrement_index.first\n    1 -> decrement_index.second\n    decrement_index.result -> get_element.index\n    for_loop.items -> get_element.list\n    get_element.item -> for_loop.on_item\n\n    instance(x: 600, y: 0) logic_not_equal_node not_equal_check {}\n    instance(x: 720, y: 0) std_if_node if_statement {}\n\n    equal_check.result -> not_equal_check.left\n    false -> not_equal_check.right\n    not_equal_check.result -> if_statement.input\n    for_loop.index -> if_statement.then\n    decrement_index.result -> if_statement.else"
            ]
        }
    }
]