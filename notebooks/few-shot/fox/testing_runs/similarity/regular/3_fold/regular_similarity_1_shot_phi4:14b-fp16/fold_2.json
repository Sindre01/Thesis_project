[
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 2930,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        \n        instance(x: 200, y: -150) has_elements_ae4c3d root.Std_k98ojb.List.Contains {}\n        intersection_201051.intersect -> has_elements_ae4c3d.list\n        func() {\n            out(x: 245, y: -54, name: \"item\") property(Number) item_e245cb\n\n            instance(x: -8, y: -53) first_item_4e8c54 root.Std_k98ojb.List.FirstItem {}\n            has_elements_ae4c3d.item -> first_item_4e8c54.list\n            first_item_4e8c54.item -> item_e245cb\n        } -> has_elements_ae4c3d.handler\n        \n        instance(x: 250, y: -160) not_empty_b2f1a5 root.Std_k98ojb.Logic.NotEqual {}\n        func() {\n            out(x: 300, y: -170, name: \"empty\") property(Number) empty_7a8e4c\n\n            instance(x: -231, y: -69) zero_42bc6f root.Std_k98ojb.Number {}\n            zero_42bc6f.value -> empty_7a8e4c\n        } -> not_empty_b2f1a5.left\n        item_e245cb -> not_empty_b2f1a5.right\n\n        not_empty_b2f1a5.result -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommon\") property(Bool) has_common_9e7a8d\n\n        instance(x: 133, y: -131) intersection_e3b0f1 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_e3b0f1.left\n        list2_c62075 -> intersection_e3b0f1.right\n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_8a5e4d\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_6c7b2f\n\n            instance(x: -8, y: -53) has_items_1f0f9f root.Std_k98ojb.List.Length {}\n            intersect_8a5e4d -> has_items_1f0f9f.list\n            func() {\n                in(x: -231, y: -69, name: \"list\") property(List) list_7c3a6b\n\n                out(x: 245, y: -54, name: \"result\") property(Number) result_5e8d4b\n\n                instance(x: -8, y: -53) greater_than_zero_9f2c1d root.Std_k98ojb.Logic.GreaterThan {}\n                has_items_1f0f9f.result -> greater_than_zero_9f2c1d.left\n                0 -> greater_than_zero_9f2c1d.right\n                greater_than_zero_9f2c1d.result -> result_6c7b2f\n            } -> has_items_1f0f9f.handler\n        } -> intersection_e3b0f1.handler\n        intersection_e3b0f1.intersect -> has_common_9e7a8d\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_42bc6f\n\n            out(x: 245, y: -54, name: \"hasCommonElement\") property(Bool) hasCommonElement_e245cb\n\n            instance(x: -8, y: -53) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n            intersect_42bc6f -> not_empty_4e8c54.list\n            func() {\n                out(x: 246, y: -55, name: \"isEmpty\") property(Bool) isEmpty_f245cb\n\n                instance(x: 247, y: -56) equal_5e8c54 root.Std_k98ojb.Logic.Equal {}\n                0 -> equal_5e8c54.left\n                not_empty_4e8c54.length -> equal_5e8c54.right\n                equal_5e8c54.result -> isEmpty_f245cb\n            } -> not_empty_4e8c54.handler\n\n            instance(x: -9, y: -52) logic_not_g6h8d7 root.Std_k98ojb.Logic.Not {}\n            isEmpty_f245cb -> logic_not_g6h8d7.value\n            logic_not_g6h8d7.result -> hasCommonElement_e245cb\n        } -> intersection_201051.handler\n\n        hasCommonElement_e245cb -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_f9e8c7\n\n        instance(x: 133, y: -131) intersection_3a6b5f root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_3a6b5f.left\n        list2_c62075 -> intersection_3a6b5f.right\n\n        instance(x: 132, y: -57) length_8c4d7e root.Std_k98ojb.List.Length {}\n        intersection_3a6b5f.intersect -> length_8c4d7e.list\n\n        instance(x: 133, y: -18) if_e0c2b1 root.Std_k98ojb.Logic.Equal {}\n        length_8c4d7e.length -> if_e0c2b1.left\n        number(0) -> if_e0c2b1.right\n\n        out(x: 245, y: -54, name: \"result\") property(Bool) result_b5f9a6\n        if_e0c2b1.result -> result_b5f9a6\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_7e4d8f root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommon\") property(Bool) has_common_b9c0d8\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_e245cb\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_d8f7a1\n\n            instance(x: -8, y: -53) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n            intersect_e245cb -> not_empty_4e8c54.list\n            func() {\n                in(x: 0, y: 0, name: \"length\") property(Number) length_1f846b\n\n                out(x: -231, y: -69, name: \"notEmpty\") property(Bool) not_empty_e245cb\n\n                instance(x: -8, y: -53) greater_than_zero_4e8c54 root.Std_k98ojb.Logic.GreaterThan {}\n                length_1f846b -> greater_than_zero_4e8c54.left\n                0 -> greater_than_zero_4e8c54.right\n                greater_than_zero_4e8c54.result -> not_empty_e245cb\n            } -> not_empty_4e8c54.handler\n            not_empty_4e8c54.length > 0 -> result_d8f7a1\n        } -> intersection_201051.handler\n        result_d8f7a1 -> has_common_b9c0d8\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_f7d5e4\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> func() {\n            in(x: -231, y: -69, name: \"intersection\") property(List) intersect_f7d5e4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_1a3b2c\n\n            instance(x: -8, y: -53) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n            intersect_f7d5e4 -> not_empty_4e8c54.list\n            func() {\n                in(x: 0, y: 0, name: \"length\") property(Number) length_e245cb\n\n                out(x: 245, y: -54, name: \"result\") property(Bool) result_f7d5e4_2\n\n                instance(x: -8, y: -53) greater_than_zero_4e8c54 root.Std_k98ojb.Logic.NotEqual {}\n                length_e245cb -> greater_than_zero_4e8c54.left\n                0 -> greater_than_zero_4e8c54.right\n                greater_than_zero_4e8c54.result -> result_f7d5e4_2\n            } -> not_empty_4e8c54.handler\n            not_empty_4e8c54.length -> result_1a3b2c\n        }\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n            item_42bc6f -> not_empty_4e8c54.list\n            func() {\n                in(x: -231, y: -69, name: \"length\") property(Number) length_42bc6f\n\n                out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n                instance(x: -8, y: -53) gt_0 root.Std_k98ojb.Logic.GreaterThan {}\n                length_42bc6f -> gt_0.left\n                0 -> gt_0.right\n                gt_0.result -> result_e245cb\n            } -> not_empty_4e8c54.handler\n        } -> intersection_201051.handler\n        intersection_201051.intersect -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_e245cb\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_f7a8e4\n\n            out(x: 245, y: -54, name: \"has_common\") property(Bool) has_common_e245cb\n\n            instance(x: -8, y: -53) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n            intersect_f7a8e4 -> not_empty_4e8c54.list\n            func() {\n                in(x: -231, y: -69, name: \"length\") property(Number) length_f7a8e4\n\n                out(x: 245, y: -54, name: \"not_zero\") property(Bool) not_zero_e245cb\n\n                instance(x: -8, y: -53) greater_than_0_4e8c54 root.Std_k98ojb.Logic.GreaterThan {}\n                length_f7a8e4 -> greater_than_0_4e8c54.left\n                0 -> greater_than_0_4e8c54.right\n                greater_than_0_4e8c54.result -> not_zero_e245cb\n            } -> not_empty_4e8c54.handler\n            not_empty_4e8c54.length -> has_common_e245cb\n        } -> intersection_201051.handler\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_2b6e8f\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_ea4d9c\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7d3b1e\n\n        instance(x: 133, y: -131) intersection_5f0f6a root.Std_k98ojb.Sets.Intersection {}\n        list1_2b6e8f -> intersection_5f0f6a.left\n        list2_ea4d9c -> intersection_5f0f6a.right\n\n        instance(x: 133, y: -199) has_common_element_check root.Std_k98ojb.Logic.NotEqual {}\n        intersection_5f0f6a.intersect -> has_common_element_check.left\n        [] -> has_common_element_check.right\n        func() {\n            in(x: -231, y: -69, name: \"result\") property(Bool) result_f9d3e8\n\n            out(x: 245, y: -54, name: \"hasCommonElement\") property(Bool) has_common_element_1b5f6a\n            result_f9d3e8 -> has_common_element_1b5f6a\n        } -> has_common_element_check.handler\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_2c4d7b root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_e245cb\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_c76d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) getat_7836b4 root.Std_k98ojb.List.GetAt {}\n            instance(x: 705, y: 54) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            add_c76d2b.first -> getat_7836b4.index\n            current_81298e -> add_c76d2b.second\n            list_07cae4 -> getat_7836b4.list\n            getat_7836b4.item -> notequal_7836b4.right\n            current_81298e -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        list_07cae4 -> filter_c91965.items\n\n        func() {\n            in(x: 0, y: 79, name: \"_index\") property(Number) _index_170471\n\n            out(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            instance(x: 74, y: -23) getat_ad7b2a root.Std_k98ojb.List.GetAt {}\n            getat_ad7b2a.list -> list_07cae4\n            _index_170471 -> getat_ad7b2a.index\n            getat_ad7b2a.item -> current_81298e\n        } -> map_c73e3b.handler\n\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        filter_c91965.output_list -> map_c73e3b.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -18, name: \"_next\") property(Number) _next_a7c3d1\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 285, y: -25) add_c5b6a8 root.Std_k98ojb.Math.Add {}\n            instance(x: 74, y: -23) equal_1c3f2d root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> add_c5b6a8.first\n            1 -> add_c5b6a8.second\n            add_c5b6a8.result -> equal_1c3f2d.left\n            _next_a7c3d1 -> equal_1c3f2d.right\n            equal_1c3f2d.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_170471 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        filter_c91965.output_list -> map_c73e3b.items\n        contains_32727d.is_contained -> output_8d07dc\n        map_c73e3b.output_list -> contains_32727d.list\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_9f1c4a root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -525, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            0 -> notequal_7836b4.right\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n            in(x: 5, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            _index_769593 -> filter_c91965.handler._index\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_a6a0f4 root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_number_c5a1c2\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_5d7b8f root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_number_c5a1c2 -> add_5d7b8f.first\n            1 -> add_5d7b8f.second\n            add_5d7b8f.result -> contains_32727d.item\n            input_list_07cae4 -> contains_32727d.list\n\n            contains_32727d.is_contained -> notequal_7836b4.left\n            false -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n\n        instance(x: -303, y: -205, name: \"filter list\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        input_list_07cae4 -> filter_c91965.items\n\n        func() {\n            in(x: 0, y: 0) property(Number) _index_170471\n            out(x: 0, y: 0) property(Bool) bool_output_b3a1d2\n\n            instance(x: -100, y: 50) add_5d7b8f root.Std_k98ojb.Math.Add {}\n            instance(x: 150, y: 50) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_170471 -> add_5d7b8f.first\n            1 -> add_5d7b8f.second\n            add_5d7b8f.result -> contains_32727d.item\n            input_list_07cae4 -> contains_32727d.list\n\n            contains_32727d.is_contained -> notequal_7836b4.left\n            false -> notequal_7836b4.right\n            notequal_7836b4.result -> bool_output_b3a1d2\n        } -> map_c73e3b.handler\n\n        instance(x: 246, y: -209, name: \"map numbers\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        filter_c91965.output_list -> map_c73e3b.items\n\n        func() {\n            in(x: 0, y: 0) property(Bool) bool_input_4a1d2\n            out(x: 0, y: 0) property(Bool) final_output_b3a1d2\n\n            instance(x: -100, y: 50) not_75283f root.Std_k98ojb.Logic.Not {}\n            not_75283f.result -> final_output_b3a1d2\n            bool_input_4a1d2 -> not_75283f.input\n        } -> reduce_c73e3b.handler\n\n        instance(x: 1058, y: -203) reduce_c73e3b root.Std_k98ojb.Iteration.Reduce {}\n        map_c73e3b.output_list -> reduce_c73e3b.items\n        true -> reduce_c73e3b.initial_value\n\n        reduce_c73e3b.result -> not_75283f.input\n        not_75283f.result -> output_8d07dc\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"check consecutive pairs\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 29, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_d4f1d8 root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_d4f1d8.first\n            list_07cae4[_index_769593 + 1] -> sub_d4f1d8.second\n            sub_d4f1d8.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_a1f7a4 root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -528, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 71, y: -13, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 285, y: -25) sub_eb9c8f root.Std_k98ojb.Math.Sub {}\n            instance(x: 74, y: -23) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_eb9c8f.first\n            list_07cae4[_index_769593 + 1] -> sub_eb9c8f.second\n            sub_eb9c8f.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) or_4e1c8a root.Std_k98ojb.Logic.Or {}\n            _index_170471 -> or_4e1c8a.left\n            map_c73e3b.output_list[_index_769593] -> or_4e1c8a.right\n            or_4e1c8a.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_07cae4 -> contains_32727d.items\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_7c9f4d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_3b8e5a\n\n        instance(x: 847, y: -207) sort_b6d2e3 root.Std_k98ojb.List.Sort {}\n        instance(x: 1058, y: -203) for_loop_c1f7e4 root.Std_k98ojb.Iteration.For {}\n        instance(x: 246, y: -209, name: \"check consecutive\") map_consecutive_5a3c2d root.Std_k98ojb.Iteration.Map {}\n\n        input_list_7c9f4d -> sort_b6d2e3.list\n        sort_b6d2e3.sorted_list -> for_loop_c1f7e4.items\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_item_f8a5b9\n            in(x: 79, y: -23, name: \"_index\") property(Number) _index_2d3f7e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) is_consecutive_b6c1a8\n\n            instance(x: 226, y: 56) sub_d9b4a5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7f3d2e root.Std_k98ojb.Logic.Equal {}\n\n            sub_d9b4a5.first -> current_item_f8a5b9\n            list_getat_result -> sub_d9b4a5.second\n            sub_d9b4a5.result -> equal_7f3d2e.left\n            1 -> equal_7f3d2e.right\n\n            equal_7f3d2e.result -> is_consecutive_b6c1a8\n        } -> map_consecutive_5a3c2d.handler\n\n        for_loop_c1f7e4.output_list -> map_consecutive_5a3c2d.items\n\n        instance(x: 1058, y: -203) any_a9b7d0 root.Std_k98ojb.Iteration.Any {}\n        map_consecutive_5a3c2d.output_list -> any_a9b7d0.list\n        true -> any_a9b7d0.condition\n\n        instance(x: 1058, y: -203) not_bf6e4a root.Std_k98ojb.Logic.Not {}\n        any_a9b7d0.result -> not_bf6e4a.input\n\n        not_bf6e4a.result -> output_3b8e5a\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_check root.main.has_consecutive_numbers {}\n\n    func() {\n        in(x: 79, y: -23, name: \"_index\") property(Number) _index_2d3f7e\n\n        out(x: 705, y: -28, name: \"result\") property(Number) list_getat_result\n\n        instance(x: 226, y: -25) getat_d1b4c8 root.Std_k98ojb.List.GetAt {}\n        for_loop_c1f7e4.index -> _index_2d3f7e\n        sort_b6d2e3.sorted_list -> getat_d1b4c8.list\n        _index_2d3f7e -> getat_d1b4c8.index\n\n        getat_d1b4c8.result -> list_getat_result\n    } -> for_loop_c1f7e4.handler\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_previous\") property(Number) _previous_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_c76d2b.first\n            _previous_769593 -> sub_c76d2b.second\n            sub_c76d2b.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -192, y: 24, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 10, name: \"output\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 17) equal_b7b2a root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_b7b2a.left\n            1 -> equal_b7b2a.right\n            equal_b7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_f7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) sorted_list_a1b2c3 root.Std_k98ojb.List.Sort {}\n        instance(x: 1058, y: -203) consecutive_check_d4e5f6 root.Std_k98ojb.Iteration.Find {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name=\"index\") property(Number) index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_g7h8i9 root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_j0k1l2 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> add_g7h8i9.first\n            index_769593 -> add_g7h8i9.second\n            add_g7h8i9.result -> sorted_list_a1b2c3.list[index_769593 + 1]\n            notequal_j0k1l2.left -> sorted_list_a1b2c3.list[index_769593 + 1]\n            current_81298e -> notequal_j0k1l2.right\n            notequal_j0k1l2.result -> output_efbc78\n        } -> consecutive_check_d4e5f6.predicate\n\n        input_list_07cae4 -> sorted_list_a1b2c3.list\n        sorted_list_a1b2c3.sorted_list -> consecutive_check_d4e5f6.items\n        consecutive_check_d4e5f6.item -> output_8d07dc\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -528, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"only consecutive pairs\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 77, y: -21, name: \"_next\") property(Number) _next_1a0c5d\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> sub_c76d2b.first\n            _next_1a0c5d -> sub_c76d2b.second\n            sub_c76d2b.result -> equal_7836b4.left\n            1 -> equal_7836b4.right\n            equal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"list\") property(List) list_9c5f7b\n\n            instance(x: 74, y: -23) slice_ad7b2a root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) index_b8a55 root.Std_k98ojb.List.GetAt {}\n            current_81298e -> index_b8a55.index\n            list_07cae4 -> index_b8a55.list\n            1 -> slice_ad7b2a.start\n            index_b8a55.result -> slice_ad7b2a.stop\n            list_07cae4 -> slice_ad7b2a.list\n            slice_ad7b2a.result -> list_9c5f7b\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> filter_c91965.items\n        false -> contains_32727d.item\n        filter_c91965.output_list -> contains_32727d.list\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> getter_b280eb.property\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 10, y: -20) for_d26972_sublist root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb_sub\") getter_b280eb_sub = sub_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c_sub\") setter_9d4f1c_sub = sub_index\n        instance(x: -275, y: -35) getat_ce2a48_sub root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> for_d26972_sublist.items\n\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        for_d26972_sublist.item -> getat_ce2a48_sub.list\n        0 -> getat_ce2a48_sub.index\n        getat_ce2a48_sub.itemAtIndex -> setter_9d4f1c_sub.new_value\n\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.index -> ifexpression_875761.gen_2\n        getter_b280eb_sub.value -> for_d26972_sublist.index\n        for_d26972.item -> for_d26972_sublist.items\n\n        setter_9d4f1c.new_value == sublist_ec88cd[0] -> for_d26972_sublist.reset\n        ifexpression_875761.then -> for_d26972.next\n        getter_b280eb_sub.value == len(sublist_ec88cd) - 1 -> continue_a96db6\n\n        setter_9d4f1c_sub.continue -> for_d26972_sublist.next\n        for_d26972_sublist.done -> setter_9d4f1c.continue\n\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 180, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> for_sublist.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 800, y: -200) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_item == main_list_item\"\n        }\n        getter(x: 500, y: 160, name: \"getter_b280eb_sub\") getter_b280eb_sub = previous\n        setter(x: 750, y: -313, name: \"setter_9d4f1c_sub\") setter_9d4f1c_sub = previous\n        instance(x: 400, y: -20) for_sublist root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c_sub\") setter_38e107_sub = previous\n        ifexpression_875761_sub.else -> continue_a96db6\n        ifexpression_875761_sub.value -> output_5bbcd7\n        ifexpression_875761_sub.then -> setter_9d4f1c_sub.execute\n        for_sublist.item -> ifexpression_875761_sub.gen_2\n        for_sublist.index -> ifexpression_875761_sub.gen_0\n        getter_b280eb_sub.value -> ifexpression_875761_sub.gen_1\n        for_sublist.onItem -> ifexpression_875761_sub.execute\n        for_sublist.done -> continue_a96db6\n        for_sublist.item -> setter_9d4f1c_sub.new_value\n\n        instance(x: 800, y: -350) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == sublist_length\"\n        }\n        getter(x: 500, y: 160, name: \"getter_b280eb_sub\") getter_b280eb_sub = previous\n        setter(x: 750, y: -313, name: \"setter_9d4f1c_sub\") setter_9d4f1c_sub = previous\n        instance(x: 400, y: -20) for_sublist root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c_sub\") setter_38e107_sub = previous\n        ifexpression_875761_sub.else -> continue_a96db6\n        ifexpression_875761_sub.value -> output_5bbcd7\n        ifexpression_875761_sub.then -> true\n        for_sublist.item -> ifexpression_875761_sub.gen_2\n        for_sublist.index -> ifexpression_875761_sub.gen_0\n        getter_b280eb_sub.value -> ifexpression_875761_sub.gen_1\n        for_sublist.onItem -> ifexpression_875761_sub.execute\n        for_sublist.done -> continue_a96db6\n        for_sublist.item -> setter_9d4f1c_sub.new_value\n\n        instance(x: 800, y: -500) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        main_list_ec88cd -> getat_ce2a48.list\n        index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> main_list_item\n\n        instance(x: 800, y: -550) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        sublist_ec88cd -> getat_ce2a48.list\n        index_sublist -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> sublist_item\n\n        instance(x: 800, y: -600) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        main_list_ec88cd -> getat_ce2a48.list\n        index_main -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> main_list_item\n\n        instance(x: 800, y: -650) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index_sublist == 0\"\n        }\n        getter(x: 500, y: 160, name: \"getter_b280eb_sub\") getter_b280eb_sub = previous\n        setter(x: 750, y: -313, name: \"setter_9d4f1c_sub\") setter_9d4f1c_sub = previous\n        instance(x: 400, y: -20) for_sublist root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c_sub\") setter_38e107_sub = previous\n        ifexpression_875761_sub.else -> continue_a96db6\n        ifexpression_875761_sub.value -> output_5bbcd7\n        ifexpression_875761_sub.then -> true\n        for_sublist.item -> ifexpression_875761_sub.gen_2\n        for_sublist.index -> ifexpression_875761_sub.gen_0\n        getter_b280eb_sub.value -> ifexpression_875761_sub.gen_1\n        for_sublist.onItem -> ifexpression_875761_sub.execute\n        for_sublist.done -> continue_a96db6\n        for_sublist.item -> setter_9d4f1c_sub.new_value\n\n        instance(x: 800, y: -700) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        sublist_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> sublist_length\n\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_38e107.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.index -> getat_ce2a48.index\n        sublist_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_1\n        execute_90aaec -> getat_ce2a48.execute\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        setter_38e107.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_b280eb\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) for_9d4f1c root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: -300) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_index == -1 || sublist[sub_index] == main_list[main_index]\"\n        }\n        instance(x: 752, y: -500) ifexpression_a96db6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_index == len(sublist)\"\n        }\n\n        for_d26972.items -> main_list_ec88cd\n        for_9d4f1c.items -> sublist_5bbcd7\n\n        for_d26972.onItem -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getat_ce2a48.list -> main_list_ec88cd\n        for_d26972.item -> getat_ce2a48.itemAtIndex\n        0 -> getat_ce2a48.index\n\n        ifexpression_875761.then -> for_9d4f1c.reset\n        ifexpression_a96db6.then -> output_b280eb.set(true)\n        ifexpression_a96db6.else -> continue_a96db6\n\n        ifexpression_875761.value -> ifexpression_a96db6.gen_0\n        0 -> ifexpression_875761.gen_1\n        for_9d4f1c.onItem -> ifexpression_875761.execute\n        for_9d4f1c.done -> continue_a96db6\n\n        execute_90aaec -> getat_ce2a48.execute\n        getat_ce2a48.continue -> for_d26972.next\n        for_9d4f1c.index -> ifexpression_875761.gen_1\n        for_9d4f1c.item -> ifexpression_a96db6.gen_1\n\n        continue_a96db6 -> output_b280eb.set(false)\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 180, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == sublist_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = main_list_element\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = main_list_element\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> getter_b280eb.property\n        getter_b280eb.value -> sublist_element\n        sublist_element -> ifexpression_875761.gen_2\n        for_d26972.item -> main_list_element\n        for_d26972.index -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        sublist_ec88cd -> getat_ce2a48.list\n        setter_9d4f1c.value -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> sublist_element\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        main_list_element == sublist_element -> ifexpression_875761.gen_1\n        0 -> setter_9d4f1c.new_value\n        setter_9d4f1c.value + 1 -> setter_9d4f1c.new_value\n        sublist_ec88cd -> List.Length.result -> sublist_length\n        for_d26972.index - sublist_length + 1 -> ifexpression_875761.gen_3\n        ifexpression_875761.gen_3 < 0 -> continue_a96db6\n        setter_9d4f1c.value -> ifexpression_875761.gen_4\n        ifexpression_875761.gen_4 >= main_list_length -> continue_a96db6\n        for_d26972.item -> setter_38e107.new_value\n        main_list_ec88cd -> List.Length.result -> main_list_length\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_3b2c4d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n\n        main_list_ec88cd -> for_d26972.items\n        sublist_3b2c4d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_1\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> ifexpression_875761.gen_0\n\n        execute_90aaec -> getat_ce2a48.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -480, y: -150, name: \"sublist\") property(List) sublist_d9b8f3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || main_list[index] == sublist[current_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_d9b8f3 -> getat_sublist.getat_ce2a48.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        getat_sublist.itemAtIndex -> setter_9d4f1c.new_value\n        sublist_d9b8f3 -> getat_sublist.getat_ce2a48.list\n        0 -> getat_sublist.getat_ce2a48.index\n        for_d26972.item -> getat_main_list.getat_ce2a48.new_value\n        main_list_ec88cd -> getat_main_list.getat_ce2a48.list\n        getter_b280eb.value -> getat_main_list.getat_ce2a48.index\n        execute_90aaec -> getat_main_list.getat_ce2a48.execute\n        ifexpression_875761.then -> setter_38e107.execute\n        for_d26972.item -> getat_sublist.getat_ce2a48.new_value\n        getat_sublist.itemAtIndex -> getter_b280eb.new_value\n        execute_90aaec -> getat_sublist.getat_ce2a48.execute\n        0 -> setter_38e107.new_value\n        setter_9d4f1c.continue -> for_d26972.next\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_b280eb\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || sublist[index] == main_list[current_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_previous\") property(Int) previous\n        setter(x: 679, y: -313, name: \"setter_current_index\") property(Int) current_index\n        instance(x: 321, y: -20) for_main root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -160) for_sublist root.Std_k98ojb.Std.For {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_b280eb\n        ifexpression_875761.then -> setter_current_index.execute\n\n        main_list_ec88cd -> for_main.items\n        sublist_5bbcd7 -> for_sublist.items\n        for_main.item -> getter_previous.value\n        for_main.index -> ifexpression_875761.gen_0\n        previous -> ifexpression_875761.gen_1\n        current_index -> ifexpression_875761.gen_2\n\n        for_sublist.onItem -> setter_current_index.execute\n        for_sublist.done -> continue_a96db6\n        for_sublist.item -> getter_previous.value\n        for_main.onItem -> ifexpression_875761.execute\n        for_main.done -> continue_a96db6\n\n        execute_90aaec -> setter_current_index.new_value.set(0)\n        setter_current_index.continue -> for_main.reset\n        ifexpression_875761.then -> setter_current_index.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -480, y: -210, name: \"sublist\") property(List) sublist_f7b4d2\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == main_list_len || sublist_index >= sublist_len\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -275, y: -210) getat_3e7f4d root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.else -> continue_a96db6\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n\n        sublist_f7b4d2 -> getat_3e7f4d.items\n        getter_b280eb.value -> getat_3e7f4d.index\n        getat_3e7f4d.itemAtIndex -> ifexpression_875761.gen_0\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        main_list_ec88cd -> List.Length(items).value -> main_list_len\n        sublist_f7b4d2 -> List.Length(items).value -> sublist_len\n\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_numbers_ai -> find_missing_node.sorted_numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -453) std_if_node root.Std_k98ojb.If {}\n\n        sorted_numbers_ai -> for_node.items\n        for_node.on_item -> std_if_node.input\n\n        instance(x: 426, y: -588) math_expression_node_1 root.Std_k98ojb.Math.Expression {}\n        instance(x: 426, y: -729) math_expression_node_2 root.Std_k98ojb.Math.Expression {}\n\n        for_node.index -> math_expression_node_1.index\n        sorted_numbers_ai -> math_expression_node_1.sorted_numbers\n\n        std_if_node.then -> math_expression_node_2.trigger\n\n        math_expression_node_1.expression = \"it - index\"\n        math_expression_node_2.expression = \"index + 1\"\n\n        instance(x: 426, y: -864) set_property_node root.Std_k98ojb.SetProperty {}\n        instance(x: 426, y: -1005) std_if_else_node root.Std_k98ojb.IfElse {}\n\n        math_expression_node_1.result -> std_if_node.value\n        std_if_node.else_ -> set_property_node.trigger\n\n        std_if_else_node.input -> std_if_node.output\n        std_if_else_node.then -> math_expression_node_2.result\n        std_if_else_node.else_ -> for_node.index\n\n        set_property_node.property = \"missing_number\"\n        set_property_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        for_node.on_item -> for_node.next\n        for_node.done -> find_missing_num\n\n        func(doc: \"finds the missing number in a sorted list.\") find_missing_num {\n            in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n            in(x: -426, y: -303, name: \"current_number\") property(Number) current_number_ai\n\n            instance(x: 426, y: -378) get_at_node root.Std_k98ojb.List.GetAt {}\n            for_node.index -> get_at_node.index\n            numbers_ai -> get_at_node.list\n            get_at_node.item -> expected_number\n\n            instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n            index_ai + 1 != current_number_ai -> if_node.input\n            if_node.then -> missing_number_output\n            if_node.else -> for_node.next\n\n            func(doc: \"outputs the missing number.\") missing_number_output {\n                in(x: -426, y: -303, name: \"expected\") property(Number) expected_ai\n                out(x: 159, y: -219, name: \"\") property(Number) output_ai\n\n                index_ai + 1 -> expected_ai\n                expected_ai -> output_ai\n            }\n        }\n\n        instance(x: 426, y: -303) find_missing_num_node root.main.find_missing_num {}\n        for_node.index -> find_missing_num_node.index\n        for_node.item -> find_missing_num_node.current_number\n\n        instance(x: 426, y: -528) if_end_node root.Std_k98ojb.If {}\n        find_missing_num_node.done -> if_end_node.input\n        if_end_node.then -> set_missing_number_to_max\n        if_end_node.else -> missing_number_output\n\n        func(doc: \"sets the missing number to max value if none found.\") set_missing_number_to_max {\n            in(x: -426, y: -303, name: \"\") property(Number) max_ai\n            out(x: 159, y: -219, name: \"\") property(Number) output_ai\n\n            List.Length(numbers_ai) + 1 -> max_ai\n            max_ai -> output_ai\n        }\n\n        instance(x: 426, y: -603) set_missing_number_to_max_node root.main.set_missing_number_to_max {}\n        numbers_ai -> set_missing_number_to_max_node.max\n\n        instance(x: 426, y: -678) missing_number_output_end root.main.missing_number_output {}\n        find_missing_num_node.output -> missing_number_output_end.expected\n        if_end_node.then -> missing_number_output_end.input\n        missing_number_output_end.output -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        for_node.on_item -> if_node.input\n\n        instance(x: 426, y: -603) math_expression_node root.Std_k98ojb.Math.Expression {\n            expression: \"index + 1\"\n        }\n        for_node.index -> math_expression_node.index\n        math_expression_node.result -> if_node.expression.a\n\n        instance(x: 426, y: -753) list_getat_node root.Std_k98ojb.List.GetAt {}\n        for_node.item -> list_getat_node.list\n        for_node.index -> list_getat_node.index\n        list_getat_node.item -> if_node.expression.b\n\n        if_node.then -> missing_number_ai\n        math_expression_node.result -> missing_number_ai\n\n        instance(x: 426, y: -903) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        if_node.expression -> logic_not_equal_node.left\n        list_getat_node.item -> logic_not_equal_node.right\n        logic_not_equal_node.output -> if_node.value\n\n        for_node.next -> for_node.done\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> trigger_node.trigger\n\n        instance(x: 426, y: -453) trigger_node root.Std_k98ojb.Std.If {\n            in(value: false) if_input\n            then(trigger: true) then_trigger\n            else(trigger: true) else_trigger\n        }\n        index := for_node.index\n        item := for_node.item\n\n        instance(x: 426, y: -579) check_missing root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 ? (item != 1) : (item != (previous + 1))\"\n        }\n        index -> check_missing.index\n        item -> check_missing.item\n        previous := for_node.previous_item\n\n        instance(x: 426, y: -705) return_missing root.Std_k98ojb.Std.If {\n            in(value: true) if_input\n            then(trigger: true) then_trigger\n            else(trigger: true) else_trigger\n        }\n        check_missing.value -> return_missing.if_input\n        item + 1 -> return_missing.then.trigger\n\n        instance(x: 426, y: -831) next_node root.Std_k98ojb.Std.If {\n            in(value: false) if_input\n            then(trigger: true) then_trigger\n            else(trigger: true) else_trigger\n        }\n        check_missing.value -> next_node.if_input\n        for_node.next -> next_node.then.trigger\n\n        instance(x: 426, y: -957) done_node root.Std_k98ojb.Std.If {\n            in(value: true) if_input\n            then(trigger: true) then_trigger\n            else(trigger: true) else_trigger\n        }\n        for_node.done -> done_node.if_input\n        numbers_ai.Length() + 1 -> done_node.then.trigger\n\n        instance(x: 426, y: -1083) previous_item root.Std_k98ojb.List.GetAt {\n            in(index: -1) index\n            in(list: []) list\n        }\n        for_node.item -> previous_item.list\n        index - 1 -> previous_item.index\n\n        return_missing.then.trigger -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.trigger\n        for_node.reset -> for_node.reset\n\n        instance(x: 726, y: -303) std_if_node root.Std_k98ojb.If {}\n        for_node.index -> std_if_node.input\n        for_node.item -> std_if_node.value\n\n        instance(x: 1026, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression = \"it + 1\"\n        }\n        std_if_node.then -> math_expr_node.trigger\n        for_node.index -> math_expr_node.it\n\n        instance(x: 1326, y: -303) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        for_node.item -> logic_not_equal_node.left\n        math_expr_node.result -> logic_not_equal_node.right\n\n        instance(x: 1626, y: -303) std_if_else_node root.Std_k98ojb.If {\n            expression = \"it\"\n        }\n        logic_not_equal_node.value -> std_if_else_node.input\n        math_expr_node.result -> std_if_else_node.value\n\n        std_if_else_node.then -> missing_number_ai.trigger\n        std_if_else_node.value -> missing_number_ai.value\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) std_for_node root.Std_k98ojb.For {}\n        numbers_ai -> std_for_node.items\n        std_for_node.trigger -> std_if_node_1.trigger\n\n        instance(x: 426, y: -483) std_if_node_1 root.Std_k98ojb.If {}\n        std_for_node.index -> std_if_node_1.input\n        std_if_node_1.then -> std_if_expression_node.trigger\n        std_if_node_1.else -> std_for_node.next\n\n        instance(x: 426, y: -633) std_if_expression_node root.Std_k98ojb.IfExpression {}\n        std_if_expression_node.expression = \"it == index + 1 ? null : index + 1\"\n        std_if_expression_node.a -> std_for_node.item\n        std_if_expression_node.b -> std_for_node.index\n        std_if_expression_node.value -> missing_number_ai\n\n        instance(x: 426, y: -783) std_if_node_2 root.Std_k98ojb.If {}\n        std_for_node.done -> std_if_node_2.trigger\n        std_if_node_2.then -> missing_number_ai.set(1)\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> trigger\n        for_node.done -> done\n\n        instance(x: 426, y: -423) if_node root.Std_k98ojb.If {}\n        for_node.index -> if_node.input\n        for_node.item -> if_node.value\n        for_node.next -> if_node.then\n        reset -> if_node.reset\n\n        instance(x: 426, y: -519) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"it + 1\"\n        }\n        if_node.index -> math_expr_node.it\n        math_expr_node.result -> expected_ai\n\n        instance(x: 426, y: -615) if_expr_node root.Std_k98ojb.IfExpression {}\n        for_node.item -> if_expr_node.value\n        expected_ai -> if_expr_node.expression\n        if_expr_node.value -> found_ai\n\n        instance(x: 426, y: -711) if_missing_node root.Std_k98ojb.If {}\n        found_ai -> if_missing_node.input\n        true -> if_missing_node.then\n        false -> if_missing_node.else_\n\n        if_missing_node.then -> missing_ai\n        math_expr_node.result -> missing_ai\n\n        instance(x: 426, y: -807) trigger input {}\n        instance(x: 426, y: -903) reset input {}\n\n        instance(x: 426, y: -999) done output {}\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) std_for_node root.Std_k98ojb.For {}\n        numbers_ai -> std_for_node.items\n        std_for_node.trigger -> std_if_expression_node1.trigger\n        std_if_expression_node1.then -> std_for_node.next\n        std_if_expression_node1.else -> std_for_node.done\n\n        instance(x: 426, y: -423) std_if_expression_node1 root.Std_k98ojb.IfExpression {}\n        std_for_node.index -> std_if_expression_node1.expression.a\n        std_for_node.item -> std_if_expression_node1.expression.b\n        std_if_expression_node1.expression.expr <- \"a + 1 != b ? a + 1 : null\"\n\n        instance(x: 426, y: -519) std_if_node root.Std_k98ojb.If {}\n        std_if_expression_node1.value -> std_if_node.input\n        std_if_node.then -> missing_number_ai\n\n        instance(x: 426, y: -615) std_for_reset_node root.Std_k98ojb.For {}\n        std_if_node.else -> std_for_reset_node.reset\n\n        instance(x: 426, y: -711) std_if_expression_node2 root.Std_k98ojb.IfExpression {}\n        std_for_reset_node.index -> std_if_expression_node2.expression.a\n        std_for_reset_node.item -> std_if_expression_node2.expression.b\n        std_if_expression_node2.expression.expr <- \"a + 1 != b ? a + 1 : null\"\n\n        instance(x: 426, y: -807) std_if_node2 root.Std_k98ojb.If {}\n        std_if_expression_node2.value -> std_if_node2.input\n        std_if_node2.then -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> trigger_node.trigger\n\n        instance(x: 426, y: -423) trigger_node Std_k98ojb.Trigger {}\n        trigger_node.trigger -> for_node.trigger\n\n        instance(x: 426, y: -519) if_node root.Std_k98ojb.If {}\n        for_node.index -> index_ai\n        index_ai + 1 -> expected_index_ai\n        for_node.item -> current_item_ai\n        expected_index_ai == current_item_ai -> if_node.input\n        if_node.then -> then_node.trigger\n\n        instance(x: -426, y: -519) trigger_node Std_k98ojb.Trigger {}\n        trigger_node.trigger -> if_node.then\n\n        instance(x: 426, y: -615) add_node root.Std_k98ojb.Math.Add {}\n        index_ai + 1 -> add_node.first\n        current_item_ai -> add_node.second\n        add_node.result -> missing_ai\n\n        instance(x: 426, y: -711) if_node root.Std_k98ojb.If {}\n        for_node.done -> if_node.input\n        if_node.else -> else_node.trigger\n\n        instance(x: -426, y: -711) trigger_node Std_k98ojb.Trigger {}\n        trigger_node.trigger -> if_node.else\n\n        instance(x: 426, y: -807) add_node root.Std_k98ojb.Math.Add {}\n        index_ai + 1 -> add_node.first\n        numbers_ai.length -> add_node.second\n        add_node.result -> missing_ai\n\n        property(x: -426, y: -519, name: \"index\") Number index_ai\n        property(x: 159, y: -519, name: \"expected_index\") Number expected_index_ai\n        property(x: 426, y: -615, name: \"current_item\") Number current_item_ai\n\n        instance(x: 426, y: -903) trigger_node Std_k98ojb.Trigger {}\n        for_node.done -> trigger_node.trigger\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"helper function to find the smallest missing number.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) std_for_node root.Std_k98ojb.For {}\n        numbers_ai -> std_for_node.items\n\n        instance(x: 426, y: -453) if_expression_node root.Std_k98ojb.IfExpression {}\n        std_for_node.item -> if_expression_node.expression.a\n        \"1\" -> if_expression_node.expression.b\n        if_expression_node.value -> std_for_node.index\n        std_for_node.next -> std_for_node.next\n\n        instance(x: 426, y: -588) if_node root.Std_k98ojb.If {}\n        std_for_node.done -> if_node.input\n        if_node.then -> missing_number_ai.set(1)\n\n        instance(x: 426, y: -723) math_expression_node root.Std_k98ojb.Math.Expression {}\n        std_for_node.index -> math_expression_node.expression.a\n        \"1\" -> math_expression_node.expression.b\n        math_expression_node.result -> missing_number_ai\n\n        instance(x: 426, y: -858) if_node_2 root.Std_k98ojb.If {}\n        std_for_node.item -> if_node_2.left\n        math_expression_node.result -> if_node_2.right\n        Logic_k98ojb.NotEqual(if_node_2)\n        if_node_2.then -> missing_number_ai.set(math_expression_node.result)\n\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_4f7d5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_d9a3e8 root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_e6b3f1 root.Std_k98ojb.Strings.Join {}\n        characters_4f7d5c.output -> filter_d9a3e8.items\n        \"it != ' '\" -> filter_d9a3e8.where\n        \"it != ','\" -> filter_d9a3e8.and\n        \"it != '.'\" -> filter_d9a3e8.and\n        filter_d9a3e8.result -> join_e6b3f1.items\n        \":\" -> join_e6b3f1.separator\n        input_0 -> characters_4f7d5c.input\n        join_e6b3f1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_d2a9e8 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_3f8d7e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) replace_d42dce root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -2) join_4c5b9a root.Std_k98ojb.Strings.Join {}\n        characters_3f8d7e.output -> replace_d42dce.input\n        input_0 -> characters_3f8d7e.input\n        \" ,.\" -> replace_d42dce.replacement\n        \":\" -> replace_d42dce.search\n        replace_d42dce.output -> join_4c5b9a.items\n        \"\" -> join_4c5b9a.separator\n        join_4c5b9a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_f54b7f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_4b5c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_f6a7d3 root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_9e8b4f root.Std_k98ojb.Strings.Join {}\n        characters_4b5c8f.output -> filter_f6a7d3.items\n        input_0 -> characters_4b5c8f.input\n        \": \" -> join_9e8b4f.join_with\n        filter_f6a7d3.filtered_items -> join_9e8b4f.items\n\n        instance(x: 265, y: -1) if_e1b2c7 root.Std_k98ojb.Logic.Equal {}\n        characters_4b5c8f.item -> if_e1b2c7.left\n        \" \" -> if_e1b2c7.right\n        if_e1b2c7.result -> filter_f6a7d3.predicate\n\n        instance(x: 265, y: -11) if_c9d8e5 root.Std_k98ojb.Logic.Equal {}\n        characters_4b5c8f.item -> if_c9d8e5.left\n        \",\" -> if_c9d8e5.right\n        if_c9d8e5.result -> filter_f6a7d3.predicate\n\n        instance(x: 265, y: -21) if_b2c1d4 root.Std_k98ojb.Logic.Equal {}\n        characters_4b5c8f.item -> if_b2c1d4.left\n        \".\" -> if_b2c1d4.right\n        if_b2c1d4.result -> filter_f6a7d3.predicate\n\n        instance(x: 265, y: -31) logic_not_9e8b4f root.Std_k98ojb.Logic.Not {}\n        if_e1b2c7.result -> logic_not_9e8b4f.input\n        logic_not_9e8b4f.output -> filter_f6a7d3.predicate\n\n        instance(x: 265, y: -41) logic_and_5f6d7e root.Std_k98ojb.Logic.And {}\n        logic_not_9e8b4f.output -> logic_and_5f6d7e.left\n        if_c9d8e5.result -> logic_and_5f6d7e.right\n\n        instance(x: 265, y: -51) logic_not_3c2d1e root.Std_k98ojb.Logic.Not {}\n        logic_and_5f6d7e.output -> logic_not_3c2d1e.input\n        logic_not_3c2d1e.output -> filter_f6a7d3.predicate\n\n        instance(x: 265, y: -61) logic_and_8f9b0c root.Std_k98ojb.Logic.And {}\n        logic_not_3c2d1e.output -> logic_and_8f9b0c.left\n        if_b2c1d4.result -> logic_and_8f9b0c.right\n\n        logic_and_8f9b0c.output -> filter_f6a7d3.predicate\n        join_9e8b4f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1a2b3c root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_5e3c7d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_ba6f9e root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_4c8f1a root.Std_k98ojb.Strings.Join {}\n        characters_5e3c7d.output -> filter_ba6f9e.items\n        \"x\" -> filter_ba6f9e.where\n        filter_ba6f9e.item -> join_4c8f1a.items\n        \":\" -> join_4c8f1a.separator\n        input_0 -> characters_5e3c7d.input\n        join_4c8f1a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_3e5c9a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 70) for_e7c6d4 root.Std_k98ojb.Loop.For {}\n        instance(x: 265, y: 70) if_expression_c8f1f2 root.Std_k98ojb.Logic.IfExpression {}\n        characters_3e5c9a.output -> for_e7c6d4.items\n        for_e7c6d4.on_item -> if_expression_c8f1f2.input\n        \"it == ' ' || it == ',' || it == '.' ? ':' : it\" -> if_expression_c8f1f2.expression\n        if_expression_c8f1f2.value -> for_e7c6d4.output\n        input_0 -> characters_3e5c9a.input\n        for_e7c6d4.done -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_7b8c1f root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_d3f9e5 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) filter_b4d8c6 root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: 1) join_7e2a1f root.Std_k98ojb.Strings.Join {}\n        characters_d3f9e5.output -> filter_b4d8c6.items\n        \"it != ' ' && it != ',' && it != '.'\" -> filter_b4d8c6.where\n        filter_b4d8c6.filtered -> join_7e2a1f.items\n        \":\" -> join_7e2a1f.separator\n        input_0 -> characters_d3f9e5.input\n        join_7e2a1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_8c4d2b root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_5b9c3a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) for_8e7d6a root.Std_k98ojb.For {}\n        instance(x: 530, y: -2) replace_4f7e9c root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> characters_5b9c3a.input\n        for_8e7d6a.trigger <- characters_5b9c3a.on_character\n        for_8e7d6a.items <- characters_5b9c3a.characters\n\n        for_8e7d6a.item -> replace_4f7e9c.old_value\n        \":\" -> replace_4f7e9c.new_value\n        input_0 -> replace_4f7e9c.input\n\n        Logic.Equal(left: \" \", right: for_8e7d6a.item) -> Std.IfExpression_2b3c1a.expression\n        Logic.Equal(left: \",\", right: for_8e7d6a.item) -> Std.IfExpression_2b3c1a.expression\n        Logic.Equal(left: \".\", right: for_8e7d6a.item) -> Std.IfExpression_2b3c1a.expression\n\n        Std.IfExpression_2b3c1a.value -> replace_4f7e9c.trigger\n        for_8e7d6a.next <- replace_4f7e9c.on_done\n        for_8e7d6a.done -> result_0\n\n        instance(x: 265, y: -2) Std.IfExpression_2b3c1a root.Std_k98ojb.Logic.Equal {}\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_4f7e9c root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_c9e3d5 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_d42dce root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_8f4a3a root.Std_k98ojb.Strings.Join {}\n        characters_c9e3d5.output -> filter_d42dce.items\n        \"it != ' ' && it != ',' && it != '.'\" -> filter_d42dce.where\n        \": \" -> join_8f4a3a.separator\n        filter_d42dce.result -> join_8f4a3a.items\n        input_0 -> characters_c9e3d5.input\n        join_8f4a3a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_f54b7f root.main.text_replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_5e9f4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 50) for_8f7c6a root.Std_k98ojb.Loop.For {}\n        instance(x: 265, y: -20) replace_char_1f8b2e root.main.replace_char {}\n        characters_5e9f4d.output -> for_8f7c6a.items\n        input_0 -> characters_5e9f4d.input\n\n        instance(x: 0, y: 80) concat_3d2f1e root.Std_k98ojb.Strings.Concat {}\n        concat_3d2f1e.inputs <- for_8f7c6a.on_item\n        concat_3d2f1e.inputs <- for_8f7c6a.reset\n\n        instance(x: 0, y: 120) if_expression_4b9f8c root.Std_k98ojb.Logic.IfExpression {}\n        \"it == ' '\" -> if_expression_4b9f8c.expression\n        \":\" -> if_expression_4b9f8c.then_value\n        it -> if_expression_4b9f8c.else_value\n        for_8f7c6a.item -> if_expression_4b9f8c.input\n        if_expression_4b9f8c.value -> replace_char_1f8b2e.char\n\n        instance(x: 265, y: 50) concat_3d2f1e_1 root.Std_k98ojb.Strings.Concat {}\n        for_8f7c6a.item -> concat_3d2f1e_1.inputs\n        replace_char_1f8b2e.output -> concat_3d2f1e_1.inputs\n\n        instance(x: 0, y: 160) if_expression_4b9f8c_1 root.Std_k98ojb.Logic.IfExpression {}\n        \"it == ','\" -> if_expression_4b9f8c_1.expression\n        \":\" -> if_expression_4b9f8c_1.then_value\n        it -> if_expression_4b9f8c_1.else_value\n        for_8f7c6a.item -> if_expression_4b9f8c_1.input\n        if_expression_4b9f8c_1.value -> replace_char_1f8b2e.char\n\n        instance(x: 0, y: 200) if_expression_4b9f8c_2 root.Std_k98ojb.Logic.IfExpression {}\n        \"it == '.'\" -> if_expression_4b9f8c_2.expression\n        \":\" -> if_expression_4b9f8c_2.then_value\n        it -> if_expression_4b9f8c_2.else_value\n        for_8f7c6a.item -> if_expression_4b9f8c_2.input\n        if_expression_4b9f8c_2.value -> replace_char_1f8b2e.char\n\n        concat_3d2f1e.output -> result_0\n        for_8f7c6a.done -> concat_3d2f1e.inputs\n    }\n\n    func(doc: \"replaces a specific character with another.\") replace_char {\n        in(x: -230, y: 0, name: \"char\") property(Char) char_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) if_expression_4b9f8c_3 root.Std_k98ojb.Logic.IfExpression {}\n        \"it == char_0\" -> if_expression_4b9f8c_3.expression\n        \":\" -> if_expression_4b9f8c_3.then_value\n        it -> if_expression_4b9f8c_3.else_value\n        for_8f7c6a.item -> if_expression_4b9f8c_3.input\n        if_expression_4b9f8c_3.value -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_d54b7f root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replaceall_4f5b7a root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) characters_b9d3e6 root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_b9d3e6.input\n        characters_b9d3e6.characters -> replaceall_4f5b7a.list\n\n        instance(x: 530, y: -1) for_8c9d2f root.Std_k98ojb.For {}\n        instance(x: 265, y: 0) if_e4f3b7 root.Std_k98ojb.Std.If {}\n        characters_b9d3e6.characters -> for_8c9d2f.items\n        for_8c9d2f.on_item -> if_e4f3b7.input\n        \" ,.\" -> if_e4f3b7.value\n\n        instance(x: 530, y: -1) replaceall_1a2e5b root.Std_k98ojb.Strings.ReplaceAll {}\n        if_e4f3b7.then -> for_8c9d2f.trigger\n        if_e4f3b7.else -> for_8c9d2f.reset\n\n        instance(x: 265, y: -1) concat_f5a6e2 root.Std_k98ojb.Strings.Concat {}\n        concat_f5a6e2.strings -> replaceall_1a2e5b.list\n        \":\" -> concat_f5a6e2.strings\n        for_8c9d2f.item -> concat_f5a6e2.strings\n\n        instance(x: 530, y: -1) if_3d4f7a root.Std_k98ojb.Std.If {}\n        for_8c9d2f.index -> if_3d4f7a.value\n        for_8c9d2f.length -> if_3d4f7a.value\n\n        instance(x: 530, y: -1) concat_6e5d3b root.Std_k98ojb.Strings.Concat {}\n        replaceall_1a2e5b.output -> concat_6e5d3b.strings\n        \":\" -> concat_6e5d3b.strings\n        if_3d4f7a.then -> concat_6e5d3b.trigger\n\n        instance(x: 530, y: -1) replaceall_f2c8d9 root.Std_k98ojb.Strings.ReplaceAll {}\n        concat_6e5d3b.output -> replaceall_f2c8d9.input\n        \" ,.\" -> replaceall_f2c8d9.list\n\n        instance(x: 265, y: -1) concat_d4f7a3 root.Std_k98ojb.Strings.Concat {}\n        replaceall_4f5b7a.output -> concat_d4f7a3.strings\n        replaceall_f2c8d9.output -> concat_d4f7a3.strings\n\n        instance(x: 530, y: -1) if_9e6d3a root.Std_k98ojb.Std.If {}\n        for_8c9d2f.done -> if_9e6d3a.input\n        concat_d4f7a3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_5f7b2a root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") are_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 2123, y: -53) equal_2e5c0d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1926, y: -155) if_d9a8c7 root.Std_k98ojb.Std.If {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_eb8a1e root.Std_k98ojb.Strings.Substring {}\n            element_5f51f7 -> substr_eb8a1e.string\n            0 -> substr_eb8a1e.startIndex\n            1 -> substr_eb8a1e.length\n            substr_eb8a1e.output -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> List.Length.length\n        List.Length.length -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        map_6030c9.output_list -> equal_2e5c0d.list\n        equal_2e5c0d.list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_2e5c0d.element\n        0 -> equal_2e5c0d.gen_1\n        equal_2e5c0d.result -> if_d9a8c7.predicate\n        if_07b8c7.then -> if_d9a8c7.execute\n        if_d9a8c7.else -> continue_8ba06b\n        if_d9a8c7.then -> equal_2e5c0d.next\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) are_characters_same_f0be66 root.main.are_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 2145, y: -493) query_3e7c0d root.Std_k98ojb.Query.Filter {\n            where: \"it == first\"\n        }\n        instance(x: 2136, y: -639) if_8a1b4f root.Std_k98ojb.Std.If {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.input\n        Strings.Characters.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) if_3e4c1d root.Std_k98ojb.Std.If {}\n            element_5f51f7 -> query_3e7c0d.input\n            query_3e7c0d.output_list -> if_3e4c1d.value\n            if_3e4c1d.then -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> Strings.Characters.input\n        Strings.Characters.characters -> generaterange_038fce.to\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        map_6030c9.output_list[0] -> query_3e7c0d.first\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.value -> if_8a1b4f.predicate\n        if_8a1b4f.then -> continue_8ba06b\n        if_8a1b4f.else -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_e5e2d6 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_f11fda root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_038fce root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(c == first_char)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) getat_b4554f root.Std_k98ojb.List.GetAt {}\n\n        input_f5c03d -> characters_f11fda.input\n        characters_f11fda.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) getat_b4554f root.Std_k98ojb.List.GetAt {}\n            0 -> getat_b4554f.index\n            element_5f51f7 -> getat_b4554f.list\n            getat_b4554f.item -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        getat_b4554f.item -> expression_b720d7.gen_0\n        lessthanorequal_038fce.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> lessthanorequal_038fce.left\n        1 -> lessthanorequal_038fce.right\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_1e6a8c root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_1e6a8c.left\n            Strings.Characters.characters[0] -> equal_1e6a8c.right\n            equal_1e6a8c.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        Strings.Characters.characters.length -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_5f1d7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_5f1d7a.input\n        characters_5f1d7a.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_c6e1c2 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> eq_c6e1c2.left\n            input_f5c03d.characters[0] -> eq_c6e1c2.right\n            eq_c6e1c2.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        input_f5c03d.characters[0] -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        1 -> add_b4554f.first\n        for_8cb3f6.index -> add_b4554f.second\n        add_b4554f.result -> lessthanorequal_f11fda.left\n        characters_5f1d7a.characters.length -> lessthanorequal_f11fda.right\n\n        lessthanorequal_f11fda.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n\n        if_07b8c7.value -> and_80a119.left\n        lessthanorequal_f11fda.result -> and_80a119.right\n        and_80a119.result -> out_f3db9f\n\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_c0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) equal_3a1e7f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) if_9f2c8e root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_3a1e7f root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_3a1e7f.left\n            input_f5c03d[0] -> equal_3a1e7f.right\n            equal_3a1e7f.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        input_f5c03d[0] -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        instance(x: 1860, y: -356) if_1d4a2e root.Std_k98ojb.Std.If {}\n        if_07b8c7.value -> if_1d4a2e.predicate\n        if_07b8c7.then -> if_1d4a2e.execute\n        if_1d4a2e.else -> continue_8ba06b\n\n        instance(x: 1860, y: -187) if_5f6a9b root.Std_k98ojb.Std.If {}\n        if_07b8c7.value -> if_5f6a9b.predicate\n        if_07b8c7.then -> if_5f6a9b.execute\n        if_5f6a9b.else -> continue_8ba06b\n\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_1d4a2e.then -> if_e19a62.execute\n        if_5f6a9b.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n\n        instance(x: 2136, y: -187) expression_b7e0d3 root.Std_k98ojb.Math.Expression {\n            expression: \"(i == len(chars))\"\n        }\n        for_8cb3f6.index -> expression_b7e0d3.gen_0\n        Strings.Characters.characters -> expression_b7e0d3.gen_1\n        expression_b7e0d3.result -> if_9f2c8e.predicate\n\n        instance(x: 2136, y: -54) equal_f5b4a2 root.Std_k98ojb.Logic.Equal {}\n        map_6030c9.output_list[0] -> equal_f5b4a2.left\n        Strings.Characters.characters[0] -> equal_f5b4a2.right\n\n        equal_f5b4a2.result -> if_9f2c8e.then\n        expression_b7e0d3.result -> if_9f2c8e.else\n\n        if_9f2c8e.then -> out_f3db9f\n        if_e19a62.then -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_7d4b5f root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) filter_1e3d2a root.Std_k98ojb.Query.Filter {\n            where: \"it != first_char\"\n        }\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) characters_3e9f0d root.Std_k98ojb.Strings.Characters {}\n\n        in(x: -76, y: 46, name: \"element\") property(String) element_d0fd24\n        out(x: 382, y: 19, name: \"out\") property(Bool) out_5f51f7\n\n        instance(x: 106, y: 17) equal_f11fda root.Std_k98ojb.Logic.Equal {}\n        characters_3e9f0d.input -> map_6030c9.items\n        func() {\n            element_d0fd24 -> equal_f11fda.left\n            input_f5c03d[0] -> equal_f11fda.right\n            equal_f11fda.result -> out_5f51f7\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        characters_3e9f0d.characters -> filter_1e3d2a.list\n        for_8cb3f6.item -> if_07b8c7.predicate\n        if_07b8c7.else -> continue_8ba06b\n        filter_1e3d2a.output_list -> if_e19a62.input\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.then -> if_e19a62.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_0 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) filter_f7f1e4 root.Std_k98ojb.Query.Filter {\n            where: \"it != first_char\"\n        }\n        instance(x: 933, y: 25) length_8a2c5d root.Std_k98ojb.List.Length {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) characters_b5f9d2 root.Std_k98ojb.Strings.Characters {}\n\n        input_f5c03d -> characters_b5f9d2.input\n        characters_b5f9d2.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n            element_5f51f7 -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> filter_f7f1e4.list\n        characters_b5f9d2.characters[0] -> filter_f7f1e4.first_char\n        filter_f7f1e4.output_list -> length_8a2c5d.list\n        length_8a2c5d.count -> if_07b8c7.predicate\n\n        func() {\n            in(x: -76, y: 46, name: \"value\") property(Number) value_b3e0f6\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_4a2d9b\n            Logic_k98ojb.Equal(value_b3e0f6, 0) -> out_4a2d9b\n        } -> if_07b8c7.handler\n\n        for_8cb3f6.items -> characters_b5f9d2.input\n        for_8cb3f6.onItem -> execute_27b8c3\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.else -> continue_8ba06b\n        length_8a2c5d.count -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) filter_3e4f7a root.Std_k98ojb.Query.Filter {\n            where: \"it != first_char\"\n        }\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it != first_char\"\n        }\n        instance(x: 1496, y: -187) characters_3f9c8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 2136, y: -356) if_a7e2d1 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_3f9c8a.input\n        characters_3f9c8a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_c9b8e2 root.Std_k98ojb.Math.Expression {\n                expression: \"it == element_5f51f7\"\n            }\n            characters_3f9c8a.characters[0] -> expression_c9b8e2.gen_1\n            element_5f51f7 -> expression_c9b8e2.gen_0\n            expression_c9b8e2.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list[0] -> if_07b8c7.predicate\n        characters_3f9c8a.characters[0] -> if_a7e2d1.gen_1\n        filter_3e4f7a.list -> if_a7e2d1.gen_0\n        if_a7e2d1.result -> expression_b720d7.gen_0\n        map_6030c9.output_list -> filter_3e4f7a.items\n        filter_3e4f7a.list -> for_8cb3f6.items\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_07b8c7.then -> continue_8ba06b\n        if_07b8c7.else -> if_e19a62.execute\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        expression_b720d7.result -> if_e19a62.predicate\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings_Characters_3e7f9a.input\n        Strings_Characters_3e7f9a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_3b2a1e root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_3b2a1e.left\n            input_f5c03d.characters[0] -> equal_3b2a1e.right\n            equal_3b2a1e.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.characters.length() -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d.characters.length() -> expression_9fba8c.gen_0\n        input_f5c03d.characters.length() -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) filter_61b38d root.Std_k98ojb.Query.Filter {\n            where: \"'0' <= it && it <= '9'\"\n        }\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_adfa16.input\n        characters_adfa16.characters -> filter_61b38d.items\n\n        filter_61b38d.on_item -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n\n        1 -> add_88bb8a.first\n        add_88bb8a.second -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> characters_adfa16.input\n        characters_adfa16.characters -> length_61b38d.list\n\n        length_61b38d.length -> add_88bb8a.first\n        1 -> add_88bb8a.second\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> strings_characters_abc123.input\n        instance(x: 200, y: -100) strings_characters_abc123 root.Std_k98ojb.Strings.Characters {}\n        strings_characters_abc123.characters -> iteration_find_efg456.items\n        instance(x: 400, y: -150) iteration_find_efg456 root.Std_k98ojb.Iteration.Find {\n            predicate: \"it >= '0' && it <= '9'\"\n        }\n        iteration_find_efg456.item -> div_547f34.first\n        iteration_find_efg456.found -> ifexpression_3d7de6.gen_1\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> strings_characters_1.characters\n        0 -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        div_547f34.result -> modulo_adfa16.divisor\n        div_547f34.second -> modulo_adfa16.value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        strings_characters_1.characters -> for_loop_2.items\n        0 -> for_loop_2.index\n        for_loop_2.on_item -> check_digit_3.trigger\n        check_digit_3.then -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 0, y: 0) strings_characters_1 root.Std_k98ojb.Strings.Characters {\n            input: s_6b655b\n        }\n        instance(x: 97, y: -127) for_loop_2 root.Std_k98ojb.Std.ForLoop {\n            index: index_4\n            items: strings_characters_1.characters\n        }\n        instance(x: 0, y: 0) check_digit_3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"isdigit(char)\"\n        }\n\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) filter_61b38d root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_adfa16.input\n        characters_adfa16.characters -> filter_61b38d.items\n        filter_61b38d.on_item -> setter_375321.execute\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        input_string_6b655b -> characters_adfa16.input\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_digit_f5c9a7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"'0' <= s[0] && s[0] <= '9'\"\n        }\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_d1f2c3 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        \n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> is_digit_f5c9a7.execute\n        is_digit_f5c9a7.then -> add_88bb8a.first = 1\n        is_digit_f5c9a7.else -> add_88bb8a.first = 0\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> slice_d1f2c3.execute\n        slice_d1f2c3.start = 1\n        slice_d1f2c3.end = -1\n        slice_d1f2c3.input -> count_digits_96023e.s_6b655b\n        slice_d1f2c3.result -> setter_375321.s\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        characters_adfa16.input -> count_digits_96023e.characters_input\n        count_digits_96023e.continue_d9efd7 -> setter_41e4ad.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_41e4ad.new_value\n\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_adfa16.input\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_digit_1f2a16 root.Std_k98ojb.Std.IfExpression {\n            expression: \"'0' <= s[0] && s[0] <= '9'\"\n        }\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> is_digit_1f2a16.execute\n        is_digit_1f2a16.then -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.s_6b655b\n        is_digit_1f2a16.else -> slice_547f34.start\n        1 -> slice_547f34.end\n        s_6b655b -> slice_547f34.list\n        slice_547f34.slice -> count_digits_96023e.s_6b655b\n        getter_38583a.value -> output_732a8a\n        setter_375321.execute -> count_digits_96023e.continue_d9efd7\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) is_digit_61b38d root.Std_k98ojb.Std.IfExpression {\n            expression: \"'0' <= character && character <= '9'\"\n        }\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n\n        execute_cdac2a -> characters_adfa16.input\n        characters_adfa16.characters -> count_digits_96023e.characters_8b655b\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.first\n        1 -> add_88bb8a.second\n\n        is_digit_61b38d.character -> characters_adfa16.gen_0\n        is_digit_61b38d.then -> add_88bb8a.execute\n        is_digit_61b38d.else -> continue_d9efd7\n\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n\n        execute_cdac2a -> setter_41e4ad.execute\n\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n\n        s_6b655b -> strings_characters_1f5e2c.input\n        instance(x: 97, y: -127) strings_characters_1f5e2c root.Std_k98ojb.Strings.Characters {}\n        strings_characters_1f5e2c.characters -> query_filter_7a3d4b.items\n\n        instance(x: 200, y: -180) query_filter_7a3d4b root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n\n        count_digits_96023e.n_6b655b -> list_length_2c8f5a.list\n        instance(x: 400, y: -200) list_length_2c8f5a root.Std_k98ojb.List.Length {}\n\n        list_length_2c8f5a.length -> count_digits_96023e.output_732a8a\n\n    }\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Creates a function that finds the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_powers {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 430, y: 132) data_4e1a9f  = 3\n        instance(x: 412, y: 2) div_5d7b8c root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: -25) expression_f9e1f6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -53) mul_2c7d0a root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 109) data_b9f8e6  = 3\n        instance(x: 303, y: -52) div_5a4f1a root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: -79) expression_e7c8d2 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -107) mul_5a6f3c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 85) data_b7e0d9  = 3\n        instance(x: 303, y: -106) div_2c8a1f root.Std_k98ojb.Math.Div {}\n\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n\n        expression_f9e1f6.result -> mul_2c7d0a.second\n        n_3a3116 -> mul_2c7d0a.first\n        n_3a3116 -> expression_f9e1f6.gen_0\n        div_5d7b8c.result -> sum_365f7b\n\n        data_4e1a9f -> div_5d7b8c.second\n        mul_2c7d0a.result -> div_5d7b8c.first\n\n        expression_e7c8d2.result -> mul_5a6f3c.second\n        n_3a3116 -> mul_5a6f3c.first\n        n_3a3116 -> expression_e7c8d2.gen_0\n        div_2c8a1f.result -> sum_365f7b\n\n        data_b9f8e6 -> div_5a4f1a.second\n        mul_f892a4.result -> div_5a4f1a.first\n\n        data_b7e0d9 -> div_2c8a1f.second\n        mul_2c7d0a.result -> div_2c8a1f.first\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -22) div_7f1c5b root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -21) data_f9e8a8  = 3\n        instance(x: 12, y: -18) expression_e6d0fa root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        div_7f1c5b.result -> mul_f892a4.first\n        data_f9e8a8 -> div_7f1c5b.second\n        expression_e6d0fa.result -> mul_f892a4.second\n        n_3a3116 -> expression_e6d0fa.gen_0\n        div_64046c.result -> div_7f1c5b.first\n        div_7f1c5b.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_c9e2d6 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) div_5b8f7e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -27) data_f4c9a7  = 3\n        mul_f892a4.result -> div_5b8f7e.first\n        data_f4c9a7 -> div_5b8f7e.second\n\n        instance(x: 12, y: -28) expression_2d6da6_1 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_2d6da6_1.gen_0\n        div_5b8f7e.result -> expression_2d6da6_1.gen_1\n\n        instance(x: 23, y: -57) mul_eb9c4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6_1.result -> mul_eb9c4.second\n        div_64046c.result -> mul_eb9c4.first\n\n        instance(x: 303, y: -55) div_7f5a3e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -131) data_f8d6e2  = 3\n        mul_eb9c4.result -> div_7f5a3e.first\n        data_f8d6e2 -> div_7f5a3e.second\n\n        instance(x: 12, y: -132) expression_2d6da6_2 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_2d6da6_2.gen_0\n        div_7f5a3e.result -> expression_2d6da6_2.gen_1\n\n        instance(x: 23, y: -161) mul_f4b8c9 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6_2.result -> mul_f4b8c9.second\n        div_5b8f7e.result -> mul_f4b8c9.first\n\n        instance(x: 303, y: -159) div_a1a0d root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -235) data_e6a3c2  = 3\n        mul_f4b8c9.result -> div_a1a0d.first\n        data_e6a3c2 -> div_a1a0d.second\n\n        instance(x: 12, y: -236) expression_2d6da6_3 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_2d6da6_3.gen_0\n        div_a1a0d.result -> expression_2d6da6_3.gen_1\n\n        instance(x: 23, y: -255) mul_e8b7f root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6_3.result -> mul_e8b7f.second\n        div_7f5a3e.result -> mul_e8b7f.first\n\n        instance(x: 303, y: -253) div_c1c0e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -329) data_d4a2c1  = 3\n        mul_e8b7f.result -> div_c1c0e.first\n        data_d4a2c1 -> div_c1c0e.second\n\n        instance(x: 12, y: -330) expression_2d6da6_4 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_2d6da6_4.gen_0\n        div_c1c0e.result -> expression_2d6da6_4.gen_1\n\n        instance(x: 23, y: -349) mul_f7b8f root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6_4.result -> mul_f7b8f.second\n        div_a1a0d.result -> mul_f7b8f.first\n\n        instance(x: 303, y: -347) sum_e9c5e root.Std_k98ojb.Math.Add {}\n        div_c1c0e.result -> sum_e9c5e.second\n        mul_f7b8f.result -> sum_e9c5e.first\n\n        instance(x: 303, y: -375) sum_d3a2e root.Std_k98ojb.Math.Add {}\n        sum_e9c5e.result -> sum_d3a2e.second\n        div_7f5a3e.result -> sum_d3a2e.first\n\n        instance(x: 303, y: -403) sum_f4b8d root.Std_k98ojb.Math.Add {}\n        sum_d3a2e.result -> sum_f4b8d.second\n        div_5b8f7e.result -> sum_f4b8d.first\n\n        instance(x: 303, y: -431) sum_c1c0d root.Std_k98ojb.Math.Add {}\n        sum_f4b8d.result -> sum_c1c0d.second\n        div_64046c.result -> sum_c1c0d.first\n\n        sum_c1c0d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 420, y: -1) pow_8f7e5c root.Std_k98ojb.Math.Expression {\n            expression: \"x*x\"\n        }\n        div_64046c.result -> pow_8f7e5c.gen_0\n        instance(x: 490, y: -1) sum_instance root.Std_k98ojb.Iteration.Find {\n            predicate: func(it: Number) bool { return true }\n        }\n        pow_8f7e5c.result -> sum_instance.items\n        sum_instance.item -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_a2d1f3 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: -1) mul_5f8c7b root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_4c9e3a  = 3\n        instance(x: 303, y: 2) div_6d9f0f root.Std_k98ojb.Math.Div {}\n        data_4c9e3a -> div_6d9f0f.second\n        mul_5f8c7b.result -> div_6d9f0f.first\n        div_64046c.result -> mul_5f8c7b.second\n\n        instance(x: 303, y: -1) div_b4a3e5 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_2d9b0b  = 3\n        mul_f892a4.result -> div_b4a3e5.first\n        n_3a3116 -> div_b4a3e5.second\n\n        instance(x: 303, y: -1) add_a7f8c2 root.Std_k98ojb.Math.Add {}\n        div_64046c.result -> add_a7f8c2.first\n        div_b4a3e5.result -> add_a7f8c2.second\n\n        instance(x: 12, y: -1) mul_9d0e6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_e7c1b6  = 3\n        add_a7f8c2.result -> mul_9d0e6f.first\n        div_64046c.result -> mul_9d0e6f.second\n\n        instance(x: 303, y: -1) div_5a4f3e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_8f7c9d  = 3\n        mul_9d0e6f.result -> div_5a4f3e.first\n        n_3a3116 -> div_5a4f3e.second\n\n        instance(x: 303, y: -1) add_2b8f9c root.Std_k98ojb.Math.Add {}\n        mul_5f8c7b.result -> add_2b8f9c.first\n        div_6d9f0f.result -> add_2b8f9c.second\n\n        instance(x: 12, y: -1) mul_3e4a8b root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_d7f6b5  = 3\n        add_2b8f9c.result -> mul_3e4a8b.first\n        div_64046c.result -> mul_3e4a8b.second\n\n        instance(x: 303, y: -1) div_c0d7f6 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9e5b2c  = 3\n        mul_3e4a8b.result -> div_c0d7f6.first\n        n_3a3116 -> div_c0d7f6.second\n\n        instance(x: 303, y: -1) add_f9b8e2 root.Std_k98ojb.Math.Add {}\n        mul_5f8c7b.result -> add_f9b8e2.first\n        div_c0d7f6.result -> add_f9b8e2.second\n\n        instance(x: 303, y: -1) add_4d3a7e root.Std_k98ojb.Math.Add {}\n        mul_5f8c7b.result -> add_4d3a7e.first\n        div_5a4f3e.result -> add_4d3a7e.second\n\n        instance(x: 303, y: -1) add_d9c6b2 root.Std_k98ojb.Math.Add {}\n        add_f9b8e2.result -> add_d9c6b2.first\n        div_b4a3e5.result -> add_d9c6b2.second\n\n        instance(x: 303, y: -1) add_7f0d9b root.Std_k98ojb.Math.Add {}\n        add_4d3a7e.result -> add_7f0d9b.first\n        div_5a4f3e.result -> add_7f0d9b.second\n\n        instance(x: 303, y: -1) add_6c8f2e root.Std_k98ojb.Math.Add {}\n        add_d9c6b2.result -> add_6c8f2e.first\n        div_5a4f3e.result -> add_6c8f2e.second\n\n        instance(x: 303, y: -1) add_b7d0e4 root.Std_k98ojb.Math.Add {}\n        add_d9c6b2.result -> add_b7d0e4.first\n        div_c0d7f6.result -> add_b7d0e4.second\n\n        instance(x: 303, y: -1) add_8a3f5d root.Std_k98ojb.Math.Add {}\n        add_7f0d9b.result -> add_8a3f5d.first\n        div_c0d7f6.result -> add_8a3f5d.second\n\n        instance(x: 303, y: -1) add_e2c4b7 root.Std_k98ojb.Math.Add {}\n        add_b7d0e4.result -> add_e2c4b7.first\n        div_c0d7f6.result -> add_e2c4b7.second\n\n        instance(x: 303, y: -1) add_9f8a3b root.Std_k98ojb.Math.Add {}\n        add_6c8f2e.result -> add_9f8a3b.first\n        div_c0d7f6.result -> add_9f8a3b.second\n\n        instance(x: 303, y: -1) add_a4d5e7 root.Std_k98ojb.Math.Add {}\n        add_e2c4b7.result -> add_a4d5e7.first\n        div_c0d7f6.result -> add_a4d5e7.second\n\n        instance(x: 303, y: -1) add_3c9a8f root.Std_k98ojb.Math.Add {}\n        add_9f8a3b.result -> add_3c9a8f.first\n        div_c0d7f6.result -> add_3c9a8f.second\n\n        instance(x: 303, y: -1) add_f5b2e4 root.Std_k98ojb.Math.Add {}\n        add_a4d5e7.result -> add_f5b2e4.first\n        div_c0d7f6.result -> add_f5b2e4.second\n\n        instance(x: 303, y: -1) add_1c8a3b root.Std_k98ojb.Math.Add {}\n        add_3c9a8f.result -> add_1c8a3b.first\n        div_c0d7f6.result -> add_1c8a3b.second\n\n        instance(x: 303, y: -1) add_d4e5a7 root.Std_k98ojb.Math.Add {}\n        add_f5b2e4.result -> add_d4e5a7.first\n        div_c0d7f6.result -> add_d4e5a7.second\n\n        instance(x: 303, y: -1",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -22) div_64046c_5b9e8f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_4a1d7f  = 3\n        data_cde0dc_4a1d7f -> div_64046c_5b9e8f.second\n        mul_f892a4.result -> div_64046c_5b9e8f.first\n\n        instance(x: 23, y: -25) mul_f892a4_3b0b6c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc_2d1c5d  = 3\n        div_64046c.result -> mul_f892a4_3b0b6c.first\n        data_cde0dc_2d1c5d -> mul_f892a4_3b0b6c.second\n\n        instance(x: 303, y: -44) div_64046c_7f9e8b root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_1d2a5f  = 3\n        mul_f892a4_3b0b6c.result -> div_64046c_7f9e8b.first\n        data_cde0dc_1d2a5f -> div_64046c_7f9e8b.second\n\n        div_64046c_7f9e8b.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_d3cc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_9b7e8f root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> pow_9b7e8f.first\n        div_64046c.result -> pow_9b7e8f.second\n        instance(x: 303, y: 2) sum_f1d4a5 root.Std_k98ojb.Math.Add {}\n        sum_f1d4a5.first -> sum_365f7b\n        pow_9b7e8f.result -> sum_f1d4a5.second\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_6c0f2b root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -26) div_1b5f9c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_bf4e7c  = 3\n        mul_f892a4.result -> div_1b5f9c.first\n        data_bf4e7c -> div_1b5f9c.second\n        instance(x: 12, y: -26) expression_2d6da6_2 root.Std_k98ojb.Math.Expression {\n            expression: \"16*n*n*n*n-8*n*n+1\"\n        }\n        n_3a3116 -> expression_2d6da6_2.gen_0\n        div_64046c.result -> sum_365f7b\n        instance(x: 23, y: -26) mul_b5e4d8 root.Std_k98ojb.Math.Mul {}\n        div_1b5f9c.result -> mul_b5e4d8.first\n        expression_2d6da6_2.result -> mul_b5e4d8.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_a7c0a3 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -24) div_64046c_1 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -19) data_cde0dc_1  = 3\n        data_cde0dc_1 -> div_64046c_1.second\n        mul_f892a4.result -> div_64046c_1.first\n\n        instance(x: 23, y: -45) mul_f892a4_1 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4_1.second\n        div_64046c_1.result -> mul_f892a4_1.first\n\n        instance(x: 303, y: -66) div_64046c_2 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -61) data_cde0dc_2  = 3\n        data_cde0dc_2 -> div_64046c_2.second\n        mul_f892a4_1.result -> div_64046c_2.first\n\n        instance(x: 23, y: -87) mul_f892a4_2 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4_2.second\n        div_64046c_2.result -> mul_f892a4_2.first\n\n        instance(x: 303, y: -108) div_64046c_3 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -103) data_cde0dc_3  = 3\n        data_cde0dc_3 -> div_64046c_3.second\n        mul_f892a4_2.result -> div_64046c_3.first\n\n        instance(x: 303, y: -129) add_a5f1d6 root.Std_k98ojb.Math.Add {}\n        div_64046c.result -> add_a5f1d6.first\n        div_64046c_3.result -> add_a5f1d6.second\n\n        add_a5f1d6.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"8*n*n*n*n-4*n*n+1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e7f9d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_5c1a3b\n\n        instance(x: 94, y: -105) multiply_6a4f0e root.Std_k98ojb.Math.Mul {}\n        size_8e7f9d -> multiply_6a4f0e.first\n        size_8e7f9d -> multiply_6a4f0e.second\n        multiply_6a4f0e.result -> surfaceArea_5c1a3b\n\n        instance(x: 94, y: -145) multiply_2b7e9f root.Std_k98ojb.Math.Mul {}\n        6 -> multiply_2b7e9f.first\n        multiply_6a4f0e.result -> multiply_2b7e9f.second\n        multiply_2b7e9f.result -> surfaceArea_5c1a3b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_8d3a7f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7c8f3d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_1b4a6e root.Std_k98ojb.Math.Mul {}\n        size_7c8f3d -> mul_1b4a6e.first\n        size_7c8f3d -> mul_1b4a6e.second\n        mul_1b4a6e.result -> mul_2b5d9e.input\n\n        instance(x: 94, y: -22) mul_2b5d9e root.Std_k98ojb.Math.Mul {}\n        6 -> mul_2b5d9e.first\n        mul_1b4a6e.result -> mul_2b5d9e.second\n        mul_2b5d9e.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_3f8c0d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3f2a8b\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f1e4c0\n\n        instance(x: 94, y: -105) mathExpression_c9d7e6 root.Std_k98ojb.Math.Expression {}\n        size_3f2a8b -> mathExpression_c9d7e6.a\n        \"6 * a^2\" -> mathExpression_c9d7e6.expression\n        mathExpression_c9d7e6.result -> surfaceArea_f1e4c0\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_3b8a5f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a1d2f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_f4b7e9\n\n        instance(x: 94, y: -105) mul_1c5f8e root.Std_k98ojb.Math.Mul {}\n        size_3a1d2f -> mul_1c5f8e.first\n        size_3a1d2f -> mul_1c5f8e.second\n        func() {\n            in(x: -121, y: -37, name: \"\") property(Number) _7dd980\n\n            out(x: 333, y: -50, name: \"result\") property(Number) result_9b6a3d\n\n            instance(x: 92, y: -22) mul_5f8c2e root.Std_k98ojb.Math.Mul {}\n            _7dd980 -> mul_5f8c2e.first\n            6 -> mul_5f8c2e.second\n            mul_5f8c2e.result -> result_9b6a3d\n        } -> mul_1c5f8e.handler\n        mul_1c5f8e.result -> surface_area_f4b7e9\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8ee839\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_8ee839 -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_d7e839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            x_d7e839 -> pow_584bfd.x\n            2 -> pow_584bfd.y\n            pow_584bfd.result -> _7dd980\n        } -> mul_f2330d.handler\n        mul_f2330d.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_b9ff6b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_9a3e1f\n\n        out(x: 656, y: -68, name: \"\") property(Number) result_f8c7b5\n\n        instance(x: 94, y: -105) mul_4f2d7a root.Std_k98ojb.Math.Mul {}\n        size_9a3e1f -> mul_4f2d7a.first\n        6 -> mul_4f2d7a.second\n        mul_4f2d7a.result -> result_f8c7b5\n\n        instance(x: 94, y: -105) mul_7c0e3f root.Std_k98ojb.Math.Mul {}\n        size_9a3e1f -> mul_7c0e3f.first\n        mul_4f2d7a.result -> mul_7c0e3f.second\n        mul_7c0e3f.result -> result_f8c7b5\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_6e1d9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1d8f9e\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_eb3c7a\n\n        instance(x: 94, y: -105) mul_4b2e6c root.Std_k98ojb.Math.Mul {}\n        size_1d8f9e -> mul_4b2e6c.first\n        size_1d8f9e -> mul_4b2e6c.second\n        func() {\n            in(x: -121, y: -37, name: \"\") property(Number) _5a7b0d\n\n            out(x: 333, y: -50, name: \"\") property(Number) _1c3f8e\n\n            instance(x: 92, y: -22) mul_6b9c2a root.Std_k98ojb.Math.Mul {}\n            _5a7b0d -> mul_6b9c2a.first\n            6 -> mul_6b9c2a.second\n            mul_6b9c2a.result -> _1c3f8e\n        } -> mul_4b2e6c.handler\n        mul_4b2e6c.result -> surfaceArea_eb3c7a\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5a3d9b\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_1e4f2c\n\n        instance(x: 94, y: -105) expr_8b7d3e root.Std_k98ojb.Math.Expression {}\n        size_5a3d9b -> expr_8b7d3e.a\n        \"6 * a^2\" -> expr_8b7d3e.expression\n        expr_8b7d3e.result -> result_1e4f2c\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_9a5b0f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1d7a3c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_f5e2b9\n\n        instance(x: 94, y: -105) mul_8e6f4a root.Std_k98ojb.Math.Mul {}\n        size_1d7a3c -> mul_8e6f4a.first\n        size_1d7a3c -> mul_8e6f4a.second\n        mul_8e6f4a.result -> surface_area_f5e2b9\n\n        instance(x: 94, y: -135) math_expression_d0a5b root.Std_k98ojb.Math.Expression {}\n        \"6 * (first * second)\" -> math_expression_d0a5b.expression\n        size_1d7a3c -> math_expression_d0a5b.first\n        size_1d7a3c -> math_expression_d0a5b.second\n        math_expression_d0a5b.result -> surface_area_f5e2b9\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e9c5d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_1f8b0a root.Std_k98ojb.Math.Mul {}\n        size_6e9c5d -> mul_1f8b0a.first\n        size_6e9c5d -> mul_1f8b0a.second\n        mul_1f8b0a.result -> result_cbb7bd\n\n        instance(x: 94, y: -30) mul_4b2e3c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_4b2e3c.first\n        result_cbb7bd -> mul_4b2e3c.second\n        mul_4b2e3c.result -> result_cbb7bd\n    }\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 726, y: -303) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -393) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -483) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        \n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -453) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -603) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        \n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n        \n        instance(x: 426, y: -378) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -453) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_value_node root.main.diff_largest_smallest {}\n    instance(x: 426, y: -378) min_value_node root.main.diff_largest_smallest {}\n    instance(x: 426, y: -453) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 726, y: -303) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        \n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 726, y: -303) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 639, y: -366) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> expression_7b3b7b.num\n        expression_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n        instance(x: 772, y: 150) falseNode root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> falseNode.input\n        falseNode.else -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) checkEven_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) check_even root.Std_k98ojb.Math.Modulo {\n            value: num_ai\n            divisor: 2\n        }\n        check_even.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_expression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> if_expression_7b3b7b.number\n        if_expression_7b3b7b.value -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"number % 2 == 0 ? true : false\"\n        }\n        number_ai -> if_7b3b7b.number\n        if_7b3b7b.value -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"(num % 2 == 0)\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 100, y: 50) find_first_repeat_a1b2c3 root.Std_k98ojb.Iteration.Find {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> find_first_repeat_a1b2c3.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_x1y1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_z9w8v7\n\n            instance(x: 89, y: 29) contains_3c2b1a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_6e5d4c root.Std_k98ojb.List.Slice {}\n\n            char_x1y1 -> contains_3c2b1a.item\n            characters_7g8h9i.characters -> slice_6e5d4c.list\n\n            find_first_repeat_a1b2c3.index -> slice_6e5d4c.start\n            -1 -> slice_6e5d4c.end\n\n            contains_3c2b1a.result -> bool_z9w8v7\n        } -> find_first_repeat_a1b2c3.predicate\n\n        find_first_repeat_a1b2c3.item -> char_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_5f8d3b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_7a9c2e\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1a9f5e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3c2d8f\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_807ffd root.Std_k98ojb.List.Slice {}\n\n            string_5f8d3b -> characters_9f6850.input\n            characters_9f6850.characters -> list_abed4a\n\n            list_abed4a -> slice_807ffd.list\n            -1 -> slice_807ffd.end\n            0 -> slice_807ffd.start\n            slice_807ffd.slice -> contains_1088d5.list\n\n            char_1a9f5e -> contains_1088d5.item\n            contains_1088d5.contains -> bool_3c2d8f\n\n        } -> find_repeated_char_6d05b0.predicate\n        list_abed4a -> find_repeated_char_6d05b0.items\n        find_repeated_char_6d05b0.item -> char_7a9c2e\n    }\n\n    instance(x: -55, y: 529) characters_9f6850 root.Std_k98ojb.Strings.Characters {}\n    instance(x: -55, y: 529) list_abed4a {}\n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_5a7c3f\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(Char) repeated_char_8b2d4e\n\n        instance(x: 0, y: 0) characters_a1b2c3 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 100, y: 50) find_first_repeat_d4e5f6 root.Std_k98ojb.Iteration.Find {}\n\n        input_string_5a7c3f -> characters_a1b2c3.input\n        characters_a1b2c3.characters -> find_first_repeat_d4e5f6.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"is_repeated\") property(Bool) is_repeated_af09a7\n\n            instance(x: 89, y: 29) list_contains_1234ab root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) temp_list_cdefgh List {}\n\n            char_9f6850 -> list_contains_1234ab.item\n            find_first_repeat_d4e5f6.processed_items -> list_contains_1234ab.list\n\n            list_contains_1234ab.result -> is_repeated_af09a7\n        } -> find_first_repeat_d4e5f6.predicate\n\n        instance(x: 200, y: 100) temp_list_builder_i8j9k0 List {}\n\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Char) item_1a2b3c\n            item_1a2b3c -> temp_list_builder_i8j9k0.append\n        } -> find_first_repeat_d4e5f6.on_item\n\n        find_first_repeat_d4e5f6.item -> repeated_char_8b2d4e\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1c2d4a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_bed4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 60) find_repeated_c5d6e7 root.Std_k98ojb.Iteration.Find {}\n        \n        string_1c2d4a -> characters_bed4a.input\n        instance(x: 0, y: 120) set_a3f4b9 root.Std_k98ojb.Sets.Set {}\n        instance(x: 0, y: 180) contains_d5e6f8 root.Std_k98ojb.List.Contains {}\n\n        characters_bed4a.characters -> find_repeated_c5d6e7.items\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) set_add_fgh9i0 root.Std_k98ojb.Sets.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            char_9f6850 -> set_add_fgh9i0.item\n            set_a3f4b9.items -> set_add_fgh9i0.set\n\n            set_add_fgh9i0.result -> contains_d5e6f8.list\n            char_9f6850 -> contains_d5e6f8.item\n\n            contains_d5e6f8.result -> notequal_807ffd.left\n            true -> notequal_807ffd.right\n\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_repeated_c5d6e7.predicate\n\n        instance(x: 0, y: 240) set_add_fgh9i1 root.Std_k98ojb.Sets.Add {}\n        find_repeated_c5d6e7.item -> set_add_fgh9i1.item\n        set_a3f4b9.items -> set_add_fgh9i1.set\n\n        set_add_fgh9i1.result -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_5f8d4a\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        string_5f8d4a -> characters_6d05b0.input\n        instance(x: 0, y: 100) contains_7e06b1 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 200) find_8c07b2 root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) seen_chars_1088d5 root.Std_k98ojb.List.Slice {}\n            \n            characters_6d05b0.characters -> find_8c07b2.items\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_ef09a7\n\n                instance(x: 89, y: 29) slice_1088d5 root.Std_k98ojb.List.Slice {}\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n                item_9f6850 -> contains_7e06b1.item\n                seen_chars_1088d5.list -> contains_7e06b1.list\n\n                contains_7e06b1.result -> bool_ef09a7\n                \n                instance(x: 89, y: 59) append_1098d6 root.Std_k98ojb.List.Slice {}\n                \n                slice_1088d5.start -> seen_chars_1088d5.start\n                slice_1088d5.end -> seen_chars_1088d5.end\n\n                item_9f6850 -> append_1098d6.list\n                seen_chars_1088d5.list -> append_1098d6.list\n                \n                append_1098d6.result -> find_8c07b2.predicate.item\n\n            } -> find_8c07b2.predicate\n            find_8c07b2.item -> char_3bc2ae\n        }\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1f8d2a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) character_d4b3e7\n\n        instance(x: 0, y: 0) characters_a9c5d6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 50) find_8f2a1c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 100) contains_b4e7fa root.Std_k98ojb.List.Contains {}\n\n        input_string_1f8d2a -> characters_a9c5d6.input\n        characters_a9c5d6.characters -> find_8f2a1c.items\n\n        instance(x: 0, y: 150) list_slice_f3e7b4 root.Std_k98ojb.List.Slice {}\n        instance(x: 0, y: 200) first_item_g6h2e9 root.Std_k98ojb.List.FirstItem {}\n\n        find_8f2a1c.item -> list_slice_f3e7b4.start\n        0 -> list_slice_f3e7b4.start\n        find_8f2a1c.index -> list_slice_f3e7b4.end\n\n        characters_a9c5d6.characters -> list_slice_f3e7b4.list\n        list_slice_f3e7b4.slice -> first_item_g6h2e9.list\n\n        instance(x: 0, y: 250) if_expression_1a8f7d root.Std_k98ojb.Std.IfExpression {}\n        \n        contains_b4e7fa.item -> if_expression_1a8f7d.expression\n        list_slice_f3e7b4.slice -> contains_b4e7fa.list\n\n        first_item_g6h2e9.item -> character_d4b3e7\n\n        find_8f2a1c.predicate {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_9f6850\n            contains_b4e7fa.result -> if_expression_1a8f7d.value\n            list_slice_f3e7b4.slice -> if_expression_1a8f7d.expression\n        }\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_a9c2d5 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_d4e5f6\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        string_1a2b3c -> characters_7g8h9i.input\n        instance(x: -100, y: 50) find_repeated_jk0l1m {\n            in(x: -113, y: 34, name: \"char\") property(String) char_n2o3p4\n\n            out(x: 515, y: 44, name: \"found\") property(Bool) found_q5r6s7\n\n            instance(x: 89, y: 29) contains_t8u9v0 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_w1x2y3 root.Std_k98ojb.Logic.NotEqual {}\n\n            in(x: -150, y: 70, name: \"seen\") property(List) seen_z4a5b6\n\n            char_n2o3p4 -> contains_t8u9v0.item\n            seen_z4a5b6 -> contains_t8u9v0.list\n            contains_t8u9v0.result -> notequal_w1x2y3.left\n            0 -> notequal_w1x2y3.right\n            notequal_w1x2y3.result -> found_q5r6s7\n\n            instance(x: -180, y: 90) if_8c9d0e {\n                in(x: -193, y: 104, name: \"condition\") property(Bool) condition_f1g2h3\n                char_n2o3p4 -> seen_z4a5b6.append\n            }\n            found_q5r6s7 -> if_8c9d0e.input\n        } -> characters_7g8h9i.on item\n        find_repeated_jk0l1m.char -> char_d4e5f6\n\n        instance(x: -200, y: 100) list_builder {\n            out(x: -210, y: 110, name: \"list\") property(List) seen_list_3d4e5f\n        } -> find_repeated_jk0l1m.seen\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1f3d2a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) character_4e5b7c\n\n        instance(x: 0, y: 0) characters_9f8a2b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 50) for_loop_c3d1ef root.Std_k98ojb.For {}\n        instance(x: 0, y: 100) contains_check_d4e6af root.Std_k98ojb.List.Contains {}\n\n        input_string_1f3d2a -> characters_9f8a2b.input\n        characters_9f8a2b.characters -> for_loop_c3d1ef.items\n\n        func() {\n            in(x: -113, y: 34, name: \"current_char\") property(Char) current_char_7e8c4d\n            out(x: 515, y: 44, name: \"is_repeated\") property(Bool) is_repeated_b2f3a1\n\n            instance(x: 89, y: 29) seen_chars_6b5d9e root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) contains_check_d4e6af root.Std_k98ojb.List.Contains {}\n\n            for_loop_c3d1ef.item -> current_char_7e8c4d\n            seen_chars_6b5d9e.slice -> contains_check_d4e6af.list\n\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(Char) char_2f3a1b\n                out(x: 515, y: 44, name: \"index\") property(Int) index_5d9c7e\n\n                instance(x: 89, y: 29) list_getat_8c4d6b root.Std_k98ojb.List.GetAt {}\n                func() {\n                    in(x: -113, y: 34, name: \"index\") property(Int) index_5d9c7e\n                    out(x: 515, y: 44, name: \"char\") property(Char) char_2f3a1b\n\n                    list_getat_8c4d6b.index -> index_5d9c7e\n                    seen_chars_6b5d9e.slice -> list_getat_8c4d6b.list\n                } -> char_2f3a1b\n            } -> contains_check_d4e6af.item\n\n            contains_check_d4e6af.result -> is_repeated_b2f3a1\n\n            func() {\n                in(x: -113, y: 34, name: \"index\") property(Int) index_5d9c7e\n                out(x: 515, y: 44, name: \"char\") property(Char) char_2f3a1b\n\n                list_getat_8c4d6b.index -> index_5d9c7e\n                seen_chars_6b5d9e.slice -> list_getat_8c4d6b.list\n            } -> current_char_7e8c4d\n\n            if(is_repeated_b2f3a1) {\n                current_char_7e8c4d -> character_4e5b7c\n                break(for_loop_c3d1ef)\n            }\n\n            seen_chars_6b5d9e.start -> 0\n            for_loop_c3d1ef.index -> seen_chars_6b5d9e.end\n\n            current_char_7e8c4d -> seen_chars_6b5d9e.item\n        }\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_abed4a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_807ffd root.Std_k98ojb.List.Slice {}\n\n            string_abed4a -> characters_0x12345.root.Std_k98ojb.Strings.Characters\n            characters_0x12345.characters -> slice_807ffd.list\n            0 -> slice_807ffd.start\n            -1 -> slice_807ffd.end\n\n            slice_807ffd.result -> contains_1088d5.list\n            char_9f6850 -> contains_1088d5.item\n            contains_1088d5.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        characters_0x12345.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1d2f3a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_b4c8e7\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1b2c3d root.Std_k98ojb.List.Contains {}\n            list_seen -> contains_1b2c3d.list\n            char_9f6850 -> contains_1b2c3d.item\n            contains_1b2c3d.result -> bool_af09a7\n\n            instance(x: 310, y: 35) add_4e5f6g root.Std_k98ojb.List.Add {}\n            list_seen -> add_4e5f6g.list\n            char_9f6850 -> add_4e5f6g.item\n        } -> find_6d05b0.predicate\n        characters_2h3i4j -> find_6d05b0.items\n        find_6d05b0.item -> char_b4c8e7\n\n        instance(x: -55, y: 529) characters_2h3i4j root.Std_k98ojb.Strings.Characters {}\n        string_1d2f3a -> characters_2h3i4j.input\n\n        out(x: -284, y: -0, name: \"list\") property(List) list_seen\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_7g8h9i root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) sort_node Std_k98ojb.List.Sort {}\n        items_ai -> sort_node.list\n\n        instance(x: 426, y: -453) slice_node Std_k98ojb.List.Slice {}\n        sort_node.sorted_list -> slice_node.list\n        property(value: 1) start_ai -> slice_node.start\n        property(value: -1) end_ai -> slice_node.end\n\n        instance(x: 426, y: -588) list_min_node Std_k98ojb.List.Min {}\n        slice_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list_ai\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list_ai -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        list_slice_node.slice -> second_min_list_ai\n\n        instance(x: 426, y: -519) first_item_node root.Std_k98ojb.List.FirstItem {}\n        second_min_list_ai -> first_item_node.list\n        first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sorted_list_ai property(List)\n    instance(x: 426, y: -423) second_min_list_ai property(List)\n\n    \n    instance(x: 426, y: -303) sort_instance root.main.second_smallest_num.List.Sort {}\n    instance(x: 426, y: -423) slice_instance root.main.second_smallest_num.List.Slice {}\n    instance(x: 426, y: -519) first_item_instance root.main.second_smallest_num.List.FirstItem {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list_ai\n\n        instance(x: 426, y: -393) list_slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list_ai -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        list_slice_node.slice -> slice_result_ai\n\n        instance(x: 426, y: -483) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_result_ai -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    in(x: -426, y: -303) sorted_list_ai property(List)\n    in(x: -426, y: -393) slice_result_ai property(List)\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list\n\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list -> list_slice_node.list\n        1 -> list_slice_node.start\n        2 -> list_slice_node.end\n        list_slice_node.slice -> slice_result\n\n        instance(x: 426, y: -588) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_result -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list_ai\n        \n        instance(x: 426, y: -393) slice_node Std_k98ojb.List.Slice {}\n        sorted_list_ai -> slice_node.list\n        slice_node.start = 1\n        slice_node.end = -1\n        slice_node.slice -> second_smallest_ai\n\n        instance(x: 426, y: -483) list_first_item_node Std_k98ojb.List.FirstItem {}\n        second_smallest_ai -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sorted_list_ai property(List) {}\n    instance(x: 426, y: -393) second_smallest_ai property(List) {}\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 639, y: -303) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        property(Number)(x: 846, y: -304) start_2nd_smallest { value = 1 }\n        start_2nd_smallest.value -> list_slice_node.start\n        property(Number)(x: 846, y: -334) end_after_2nd { value = -1 }\n        end_after_2nd.value -> list_slice_node.end\n        instance(x: 1059, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        list_slice_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start <- 1\n        list_slice_node.end <- -1\n        instance(x: 426, y: -588) list_min_node root.Std_k98ojb.List.Min {}\n        list_slice_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 726, y: -303) slice_first_two_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_first_two_node.list\n        slice_first_two_node.start = 1\n        slice_first_two_node.end = 2\n        instance(x: 1026, y: -303) get_at_index_one_node root.Std_k98ojb.List.GetAt {}\n        slice_first_two_node.slice -> get_at_index_one_node.list\n        get_at_index_one_node.index = 0\n        get_at_index_one_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -483) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        instance(x: 426, y: -648) list_min_node root.Std_k98ojb.List.Min {}\n        list_slice_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> slice_start_node.list\n\n        instance(x: 426, y: -423) slice_start_node root.Std_k98ojb.List.Slice {}\n        slice_start_node.start = 1\n        slice_start_node.end = -1\n        slice_start_node.list -> second_min_node.items\n\n        instance(x: 426, y: -519) list_min_node root.Std_k98ojb.List.Min {}\n        slice_start_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 2930,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        \n        instance(x: 200, y: -150) has_elements_ae4c3d root.Std_k98ojb.List.Contains {}\n        intersection_201051.intersect -> has_elements_ae4c3d.list\n        func() {\n            out(x: 245, y: -54, name: \"item\") property(Number) item_e245cb\n\n            instance(x: -8, y: -53) first_item_4e8c54 root.Std_k98ojb.List.FirstItem {}\n            has_elements_ae4c3d.item -> first_item_4e8c54.list\n            first_item_4e8c54.item -> item_e245cb\n        } -> has_elements_ae4c3d.handler\n        \n        instance(x: 250, y: -160) not_empty_b2f1a5 root.Std_k98ojb.Logic.NotEqual {}\n        func() {\n            out(x: 300, y: -170, name: \"empty\") property(Number) empty_7a8e4c\n\n            instance(x: -231, y: -69) zero_42bc6f root.Std_k98ojb.Number {}\n            zero_42bc6f.value -> empty_7a8e4c\n        } -> not_empty_b2f1a5.left\n        item_e245cb -> not_empty_b2f1a5.right\n\n        not_empty_b2f1a5.result -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_9e5d3a\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n            intersect_42bc6f -> not_empty_4e8c54.list\n            func() {\n                out(x: 246, y: -55, name: \"length\") property(Number) length_f7a9d2\n\n                instance(x: 248, y: -57) greater_than_0_3b1d5f root.Std_k98ojb.Logic.GreaterThan {}\n                length_f7a9d2 -> greater_than_0_3b1d5f.left\n                in(x: 250, y: -59, name: \"zero\") property(Number) zero_8c4e6b\n\n                out(x: 252, y: -61, name: \"result\") property(Bool) result_9a2b7d\n\n                greater_than_0_3b1d5f.right -> zero_8c4e6b\n                greater_than_0_3b1d5f.result -> result_9a2b7d\n            } -> not_empty_4e8c54.handler\n            not_empty_4e8c54.length -> result_e245cb\n        } -> intersection_201051.handler\n        result_e245cb -> has_common_element_9e5d3a\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_b5a6c8\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        \n        instance(x: 245, y: -54) has_elements_4e8c54 root.Std_k98ojb.List.Length {}\n        intersection_201051.intersect -> has_elements_4e8c54.list\n\n        instance(x: 133, y: -131) check_non_empty_201051 root.Std_k98ojb.Logic.Equal {}\n        has_elements_4e8c54.length -> check_non_empty_201051.left\n        number(0) -> check_non_empty_201051.right\n        \n        check_non_empty_201051.result -> has_common_element_b5a6c8\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_d9a8e4\n\n        instance(x: 133, y: -131) intersection_1b3d6f root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1b3d6f.left\n        list2_c62075 -> intersection_1b3d6f.right\n\n        instance(x: 133, y: -131) length_check_8c7a4e root.Std_k98ojb.List.Length {}\n        intersection_1b3d6f.intersect -> length_check_8c7a4e.list\n\n        out(x: 245, y: -54, name: \"length\") property(Number) length_2e9f0b\n        length_check_8c7a4e.length -> length_2e9f0b\n\n        instance(x: 133, y: -131) not_equal_3d1a6b root.Std_k98ojb.Logic.NotEqual {}\n        number(0) -> not_equal_3d1a6b.left\n        length_2e9f0b -> not_equal_3d1a6b.right\n\n        out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n        not_equal_3d1a6b.result -> result_e245cb\n\n        instance(x: 133, y: -131) and_7f8c5e root.Std_k98ojb.Logic.And {}\n        intersection_1b3d6f.intersect -> and_7f8c5e.left\n        not_equal_3d1a6b.result -> and_7f8c5e.right\n\n        out(x: 245, y: -54, name: \"finalResult\") property(Bool) final_result_9f4a2c\n        and_7f8c5e.result -> final_result_9f4a2c\n\n        final_result_9f4a2c -> has_common_element_d9a8e4\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_f3e8d5\n\n        instance(x: 133, y: -131) intersection_4c6f9a root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4c6f9a.left\n        list2_c62075 -> intersection_4c6f9a.right\n\n        instance(x: 133, y: -199) length_5e7d3a root.Std_k98ojb.List.Length {}\n        intersection_4c6f9a.intersect -> length_5e7d3a.list\n\n        instance(x: 133, y: -267) if_expression_2f8b1a root.Std_k98ojb.Std.IfExpression {}\n        func() {\n            in(x: -231, y: -305, name: \"expression\") property(String) expression_6e4d9c\n            expression_6e4d9c = \"length > 0\"\n        } -> if_expression_2f8b1a.handler\n        length_5e7d3a.length -> if_expression_2f8b1a.left\n\n        if_expression_2f8b1a.result -> result_f3e8d5\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_instance root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_ea9e7b root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_ea9e7b.left\n        list2_c62075 -> intersection_ea9e7b.right\n        intersection_ea9e7b.intersect -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_instance root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> has_common_element_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3c7e8d\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n            intersect_42bc6f -> not_empty_4e8c54.list\n            func() {\n                in(x: 0, y: 0, name: \"length\") property(Number) length_1a2b3c\n\n                out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n                instance(x: -8, y: -53) greater_than_zero_5f6d7e root.Std_k98ojb.Logic.GreaterThan {}\n                length_1a2b3c -> greater_than_zero_5f6d7e.left\n                0 -> greater_than_zero_5f6d7e.right\n                greater_than_zero_5f6d7e.result -> result_e245cb\n            } -> not_empty_4e8c54.handler\n        } -> intersection_201051.handler\n        not_empty_4e8c54.result -> has_common_element_3c7e8d\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7e9c5d\n\n        instance(x: 133, y: -131) intersection_1a6b4f root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1a6b4f.left\n        list2_c62075 -> intersection_1a6b4f.right\n\n        instance(x: 133, y: -131) length_check_3d8e5c root.Std_k98ojb.List.Length {}\n        intersection_1a6b4f.intersect -> length_check_3d8e5c.list\n        func() {\n            in(x: -231, y: -69, name: \"length\") property(Number) length_a9f0e7\n\n            out(x: 245, y: -54, name: \"hasCommonElement\") property(Bool) has_common_element_2b5d4c\n            Logic_k98ojb.NotEqual {\n                left: Number(length_a9f0e7)\n                right: Number(0)\n                notEqual -> has_common_element_2b5d4c\n            }\n        } -> length_check_3d8e5c.handler\n        has_common_element_2b5d4c -> has_common_element_7e9c5d\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_ba1f0f root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_c76d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) getat_7836b4 root.Std_k98ojb.List.GetAt {}\n            instance(x: 705, y: 54) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            add_c76d2b.first -> getat_7836b4.index\n            current_81298e -> add_c76d2b.second\n            list_07cae4 -> getat_7836b4.list\n            getat_7836b4.item -> notequal_7836b4.right\n            current_81298e -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        list_07cae4 -> filter_c91965.items\n\n        func() {\n            in(x: 0, y: 79, name: \"_index\") property(Number) _index_170471\n\n            out(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            instance(x: 74, y: -23) getat_ad7b2a root.Std_k98ojb.List.GetAt {}\n            getat_ad7b2a.list -> list_07cae4\n            _index_170471 -> getat_ad7b2a.index\n            getat_ad7b2a.item -> current_81298e\n        } -> map_c73e3b.handler\n\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        filter_c91965.output_list -> map_c73e3b.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_1b8c9e root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_2a0d3c root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> sub_1b8c9e.first\n            _next_769593 -> sub_1b8c9e.second\n            sub_1b8c9e.result -> equal_2a0d3c.left\n            1 -> equal_2a0d3c.right\n            equal_2a0d3c.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: -303, y: -205, name: \"only pairs\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) firstitem_3f7c5a root.Std_k98ojb.List.FirstItem {}\n            instance(x: 463, y: 51) seconditem_e6e1d2 root.Std_k98ojb.Iteration.Map.SecondItem {}\n            current_170471 -> filter_c91965.handler\n            map_c73e3b.output_list -> filter_c91965.items\n            firstitem_3f7c5a.item -> func()._next_769593\n            seconditem_e6e1d2.item -> func().current_81298e\n        } -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"filter out zero differences\") filter_5a1d2f root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -23, name: \"previous\") property(Number) previous_9d3f8a\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_d1e4b2 root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_d1e4b2.first\n            previous_9d3f8a -> sub_d1e4b2.second\n            sub_d1e4b2.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        \n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) _diff_170471\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_a1b2c3 root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_a1b2c3.right\n            _diff_170471 -> equal_a1b2c3.left\n            equal_a1b2c3.result -> bool_4524be\n        } -> filter_5a1d2f.handler\n\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> filter_5a1d2f.items\n        false -> contains_32727d.item\n        filter_5a1d2f.output_list -> contains_32727d.list\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -526, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 71, y: 79, name: \"_next\") property(Number) _next_2c8f0a\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 285, y: -25) sub_c5e1d6 root.Std_k98ojb.Math.Sub {}\n            instance(x: 74, y: -23) equal_a3a7f2 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> sub_c5e1d6.first\n            _next_2c8f0a -> sub_c5e1d6.second\n            sub_c5e1d6.result -> equal_a3a7f2.left\n            1 -> equal_a3a7f2.right\n            equal_a3a7f2.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: 71, y: 79, name: \"_next\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_c9b3f6 root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) getat_2e8d4a root.Std_k98ojb.List.GetAt {}\n            instance(x: 704, y: 54) notequal_e5c1a0 root.Std_k98ojb.Logic.NotEqual {}\n            add_c9b3f6.result -> getat_2e8d4a.index\n            list_07cae4 -> getat_2e8d4a.list\n            _index_769593 -> add_c9b3f6.second\n            1 -> add_c9b3f6.first\n            getat_2e8d4a.value -> notequal_e5c1a0.left\n            _index_170471 -> notequal_e5c1a0.right\n            notequal_e5c1a0.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        contains_32727d.is_contained -> output_8d07dc\n        false -> contains_32727d.item\n        map_c73e3b.output_list -> contains_32727d.list\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_9a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_7c8d5f\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_result_b1a2e3\n\n        instance(x: 847, y: -207) sorted_6b4c3a root.Std_k98ojb.List.Sort {}\n        instance(x: 1058, y: -203) for_loop_5d9f7a root.Std_k98ojb.Iteration.For {}\n        instance(x: 246, y: -209, name: \"check consecutive\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n\n        sorted_6b4c3a.list -> input_list_7c8d5f\n        sorted_6b4c3a.sorted_list -> for_loop_5d9f7a.items\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_number_1f2e3d\n            in(x: -23, y: 79, name=\"next\") property(Number) next_number_4c5b6d\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) is_consecutive_8a9b0c\n\n            instance(x: 226, y: 56) sub_d1e2f3 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_g4h5i6 root.Std_k98ojb.Logic.Equal {}\n\n            current_number_1f2e3d -> sub_d1e2f3.first\n            next_number_4c5b6d -> sub_d1e2f3.second\n            sub_d1e2f3.result -> equal_g4h5i6.left\n            1 -> equal_g4h5i6.right\n            equal_g4h5i6.result -> is_consecutive_8a9b0c\n        } -> map_c73e3b.handler\n\n        for_loop_5d9f7a.output_list -> map_c73e3b.items\n        instance(x: 1058, y: -203) any_7h8i9j root.Std_k98ojb.Iteration.Any {}\n        map_c73e3b.output_list -> any_7h8i9j.items\n\n        any_7h8i9j.result -> output_result_b1a2e3\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_check_3k4l5m root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"check consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 53, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_7f5b9e root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_7f5b9e.first\n            _index_769593 -> sub_7f5b9e.second\n            1 -> sub_7f5b9e.second\n            output_efbc78 -> filter_c91965.handler\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_75283f root.Std_k98ojb.Logic.Not {}\n            current_81298e -> not_75283f.input\n            not_75283f.result -> bool_4524be\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n        false -> contains_32727d.item\n        filter_c91965.output_list -> contains_32727d.list\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_b3c9f6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"filter out non-consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_bf0e3b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_bf0e3b.first\n            list_07cae4[_index_769593 - 1] -> sub_bf0e3b.second\n            sub_bf0e3b.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        list_07cae4[1:] -> map_c73e3b.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_c76d2b root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_c76d2b.left\n            1 -> equal_c76d2b.right\n            equal_c76d2b.result -> bool_4524be\n        } -> filter_c91965.handler\n\n        map_c73e3b.output_list -> filter_c91965.items\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) equal_c76d2b root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_c76d2b.left\n            1 -> equal_c76d2b.right\n            equal_c76d2b.result -> output_efbc78\n        } -> contains_32727d.handler\n\n        filter_c91965.output_list -> contains_32727d.items\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -17, name: \"_next\") property(Number) _next_5c8d1a\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 285, y: -25) equal_bf9b6e root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_bf9b6e.left\n            _next_5c8d1a -> equal_bf9b6e.right\n            equal_bf9b6e.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_e5e6c4 root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) getat_8f7a3d root.Std_k98ojb.List.GetAt {}\n            _index_769593 -> add_e5e6c4.first\n            1 -> add_e5e6c4.second\n            list_07cae4 -> getat_8f7a3d.list\n            add_e5e6c4.result -> getat_8f7a3d.index\n            getat_8f7a3d.item -> output_efbc78\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_a3b2e4 root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_prev\") property(Number) _prev_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_7b3f8c root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_7b3f8c.first\n            _prev_769593 -> sub_7b3f8c.second\n            sub_7b3f8c.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        instance(x: -303, y: -205, name: \"slice list\") slice_a1d9a5 root.Std_k98ojb.List.Slice {}\n        1 -> slice_a1d9a5.start\n        -1 -> slice_a1d9a5.end\n        list_07cae4 -> slice_a1d9a5.list\n\n        instance(x: -303, y: -205, name: \"prepend zero\") prepend_bf8e2b root.Std_k98ojb.List.Prepend {}\n        0 -> prepend_bf8e2b.item\n        slice_a1d9a5.output_list -> prepend_bf8e2b.list\n\n        instance(x: -303, y: -205, name: \"append zero\") append_4c3d7f root.Std_k98ojb.List.Append {}\n        0 -> append_4c3d7f.item\n        prepend_bf8e2b.output_list -> append_4c3d7f.list\n\n        map_c73e3b.items -> append_4c3d7f.input_list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_diff_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_9f3a2d root.Std_k98ojb.Logic.Equal {}\n            current_diff_81298e -> equal_9f3a2d.left\n            1 -> equal_9f3a2d.right\n            equal_9f3a2d.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        contains_32727d.list -> map_c73e3b.items\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_bf9d5a root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) getat_3e4c0a root.Std_k98ojb.List.GetAt {}\n            current_81298e -> add_bf9d5a.first\n            1 -> add_bf9d5a.second\n            list_07cae4 -> getat_3e4c0a.list\n            add_bf9d5a.result -> getat_3e4c0a.index\n            getat_3e4c0a.item -> output_efbc78\n        } -> contains_32727d.handler\n        list_07cae4 -> contains_32727d.items\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_f7a3e6 root.main.has_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_for.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 850, y: -20) for_sublist_for root.Std_k98ojb.Std.For {}\n        instance(x: 1040, y: 93) ifexpression_sublist_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"subindex == 0 || sub_previous <= sublist_current\"\n        }\n        getter(x: 724, y: 160, name: \"getter_sub_b280eb\") getter_sub_b280eb = sub_previous\n        setter(x: 979, y: -313, name: \"setter_sub_9d4f1c\") setter_sub_9d4f1c = sub_previous\n        instance(x: 702, y: -20) for_sublist_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 850, y: -121, name: \"setter_sub_9d4f1c\") setter_sub_38e107 = sub_previous\n        instance(x: 635, y: -35) getat_sub_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_sublist_875761.else -> continue_a96db6\n        ifexpression_sublist_875761.value -> output_5bbcd7\n        ifexpression_sublist_875761.then -> setter_sub_9d4f1c.execute\n        sublist_ec88cd -> for_sublist_for.items\n        for_sublist_for.item -> ifexpression_sublist_875761.gen_2\n        for_sublist_for.index -> ifexpression_sublist_875761.gen_0\n        getter_sub_b280eb.value -> ifexpression_sublist_875761.gen_1\n        for_sublist_for.onItem -> ifexpression_sublist_875761.execute\n        for_sublist_for.done -> continue_a96db6\n        for_sublist_for.item -> setter_sub_9d4f1c.new_value\n        sublist_ec88cd -> getat_sub_ce2a48.list\n        0 -> getat_sub_ce2a48.index\n        getat_sub_ce2a48.itemAtIndex -> setter_sub_38e107.new_value\n        execute_90aaec -> setter_sub_38e107.execute\n        setter_sub_38e107.continue -> for_sublist_for.reset\n        setter_sub_9d4f1c.continue -> for_sublist_for.next\n\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_for.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 321, y: -20) for_sublist_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_sub_b280eb\") getter_sub_b280eb = sub_previous\n        setter(x: 679, y: -313, name: \"setter_sub_9d4f1c\") setter_sub_9d4f1c = sub_previous\n        instance(x: 321, y: -20) for_sublist_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_sub_9d4f1c\") setter_sub_38e107 = sub_previous\n        instance(x: -275, y: -35) getat_sub_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_sublist_875761.else -> continue_a96db6\n        ifexpression_sublist_875761.value -> output_5bbcd7\n        ifexpression_sublist_875761.then -> setter_sub_9d4f1c.execute\n        sublist_ec88cd -> for_sublist_d26972.items\n        for_sublist_d26972.item -> ifexpression_sublist_875761.gen_2\n        for_sublist_d26972.index -> ifexpression_sublist_875761.gen_0\n        getter_sub_b280eb.value -> ifexpression_sublist_875761.gen_1\n        for_sublist_d26972.onItem -> ifexpression_sublist_875761.execute\n        for_sublist_d26972.done -> continue_a96db6\n        for_sublist_d26972.item -> setter_sub_9d4f1c.new_value\n        sublist_ec88cd -> getat_sub_ce2a48.list\n        0 -> getat_sub_ce2a48.index\n        getat_sub_ce2a48.itemAtIndex -> setter_sub_38e107.new_value\n        execute_90aaec -> setter_sub_38e107.execute\n        setter_sub_38e107.continue -> for_sublist_d26972.reset\n        setter_sub_9d4f1c.continue -> for",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_2\n        sublist_ec88cd -> getter_b280eb.property\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        ifexpression_875761.value -> setter_9d4f1c.new_value\n        sublist_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        for_d26972.index -> ifexpression_875761.gen_0\n        sublist_index == -1 -> ifexpression_875761.input\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_b280eb\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == sublist_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_previous\") getter_previous = main_list_element\n        setter(x: 679, y: -313, name: \"setter_previous\") setter_previous = main_list_element\n        instance(x: 321, y: -20) for_main root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_sublist_index\") setter_sublist_index = sublist_index\n        instance(x: -275, y: -35) getat_sublist root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_b280eb\n        ifexpression_875761.then -> setter_previous.execute\n        main_list_ec88cd -> for_main.items\n        for_main.item -> getter_previous.value\n        for_main.index -> setter_sublist_index.new_value\n        getter_previous.value -> ifexpression_875761.gen_1\n        sublist_5bbcd7 -> getat_sublist.list\n        0 -> getat_sublist.index\n        getat_sublist.itemAtIndex -> ifexpression_875761.gen_2\n        execute_90aaec -> setter_previous.execute\n        setter_previous.continue -> for_main.next\n        for_main.onItem -> getter_previous.execute\n        for_main.done -> continue_a96db6\n        setter_sublist_index.value -> getat_sublist.index\n        ifexpression_875761.gen_0 -> setter_sublist_index.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 180, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_b280eb.value\n        sublist_ec88cd -> iteration_find_3b7e8d.items\n        getter_b280eb.value -> iteration_find_3b7e8d.predicate\n        for_d26972.onItem -> iteration_find_3b7e8d.trigger\n        iteration_find_3b7e8d.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        setter_38e107.new_value = -1\n        iteration_find_3b7e8d.item -> setter_9d4f1c.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n    instance(x: -275, y: 120) iteration_find_3b7e8d root.Std_k98ojb.List.Find {\n        predicate: \"x == current\"\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_f8a3c1\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == sublist_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = main_list_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = main_list_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_f8a3c1 -> filter_sublist.Filter.where\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        main_list_ec88cd -> filter_main.List.Filter.where\n        filter_sublist.onItem -> ifexpression_875761.gen_1\n        filter_main.onItem -> ifexpression_875761.gen_0\n        for_d26972.index -> getter_b280eb.value\n        for_d26972.item -> ifexpression_875761.gen_2\n        filter_main.items -> for_d26972.items\n        sublist_f8a3c1 -> getat_ce2a48.list\n        main_list_index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        ifexpression_875761.else -> continue_a96db6\n        filter_main.onItem -> for_d26972.execute\n        filter_sublist.items -> sublist_index.List.Filter.where\n        0 -> sublist_index.List.Filter.where\n        sublist_f8a3c1 -> sublist_length.List.Length\n        sublist_length.List.Length -> ifexpression_875761.gen_3\n        setter_38e107.continue -> for_d26972.reset\n        filter_sublist.onItem -> sublist_index.List.Filter.where\n        sublist_index.List.Filter.where -> ifexpression_875761.gen_4\n        filter_main.done -> continue_a96db6\n        filter_sublist.items -> sublist_f8a3c1\n        filter_sublist.done -> setter_9d4f1c.continue\n        for_d26972.onItem -> getat_ce2a48.execute\n        getter_b280eb.value -> ifexpression_875761.gen_5\n        filter_main.done -> continue_a96db6\n        sublist_index.List.Filter.where -> ifexpression_875761.gen_6\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"super_list\") property(List) super_list_ec88cd\n        in(x: -485, y: 165, name: \"sub_list\") property(List) sub_list_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || super_list[index] == sub_list[previous_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        super_list_ec88cd -> for_d26972.items\n        sub_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        list_length -> getat_ce2a48.end_index\n        if(getat_ce2a48.itemAtIndex != null) {\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.item -> ifexpression_875761.gen_0\n            for_d26972.index -> ifexpression_875761.gen_2\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        }\n        ifexpression_875761.value -> output_5bbcd7\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -485, y: 165, name: \"subList\") property(List) subList_3b2f1d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < subListLength\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 750, y: -210) ifexpression_b7a8e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mainList[index] == subList[index]\"\n        }\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        subList_3b2f1d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> subListLength\n        List.Length(subList_3b2f1d) -> subListLength\n        for_d26972.item -> ifexpression_b7a8e6.gen_2\n        for_d26972.index -> ifexpression_b7a8e6.gen_0\n        getter_b280eb.value -> ifexpression_b7a8e6.gen_1\n        mainList_ec88cd -> getat_ce2a48.list\n        setter_38e107.new_value -> getat_ce2a48.index\n        for_d26972.onItem -> ifexpression_b7a8e6.execute\n        ifexpression_b7a8e6.else -> continue_a96db6\n        ifexpression_b7a8e6.then -> setter_9d4f1c.execute\n        getat_ce2a48.itemAtIndex -> mainListIndex\n        for_d26972.index -> mainListIndex\n        ifexpression_b7a8e6.value -> output_5bbcd7\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> sub_for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> sub_for_d26972.next\n        sub_for_d26972.onItem -> ifexpression_sublist.execute\n        sub_for_d26972.done -> continue_a96db6\n\n        instance(x: 1000, y: -20) for_sub_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 300) ifexpression_sublist root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter_sub_b280eb = previous\n        setter_sub_9d4f1c = previous\n        sub_for_d26972.item -> ifexpression_sublist.gen_2\n        sub_for_d26972.index -> ifexpression_sublist.gen_0\n        getter_sub_b280eb.value -> ifexpression_sublist.gen_1\n        ifexpression_sublist.else -> continue_a96db6\n        ifexpression_sublist.value -> output_5bbcd7\n        ifexpression_sublist.then -> setter_sub_9d4f1c.execute\n        sub_for_d26972.onItem -> ifexpression_sublist.execute\n        sub_for_d26972.done -> continue_a96db6\n        sub_for_d26972.item -> setter_sub_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || main_list[index] == sublist[main_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = main_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = main_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = main_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        instance(x: -275, y: 160) sublist_for root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 35, name: \"getter_b280eb\") sublist_getter = main_index\n        setter(x: -275, y: 235, name: \"setter_9d4f1c\") sublist_setter = main_index\n        instance(x: -485, y: 320) sublist_ifexpression root.Std_k98ojb.Std.IfExpression {\n            expression: \"main_list[main_index] == sublist[sublist_index]\"\n        }\n        sublist_for.items -> sublist_ec88cd\n        sublist_for.index -> sublist_ifexpression.gen_0\n        sublist_getter.value -> sublist_ifexpression.gen_1\n        sublist_for.item -> sublist_ifexpression.gen_2\n        sublist_setter.new_value -> main_list_ec88cd[sublist_index]\n        sublist_setter.execute -> sublist_ifexpression.execute\n        sublist_ifexpression.then -> sublist_setter.continue\n        sublist_ifexpression.else -> continue_a96db6\n        sublist_ifexpression.value -> output_5bbcd7\n        sublist_for.onItem -> sublist_ifexpression.execute\n        sublist_for.done -> continue_a96db6\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == main_index + sublist_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = current\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = main_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = current\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> for_sublist.items\n        for_d26972.item -> getter_b280eb.value\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_sublist.item -> setter_38e107.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        setter_9d4f1c.value -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_b280eb.value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.next\n        sublist_ec88cd -> for_sublist.items\n        0 -> for_sublist.index\n        for_sublist.onItem -> ifexpression_875761.execute\n        for_sublist.done -> continue_a96db6\n\n        instance(x: -275, y: 160) for_sublist root.Std_k98ojb.Std.For {}\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_numbers_ai -> find_missing_node.sorted_numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -453) std_if_node root.Std_k98ojb.If {}\n\n        sorted_numbers_ai -> for_node.items\n        for_node.on_item -> std_if_node.input\n\n        instance(x: 426, y: -588) math_expression_node_1 root.Std_k98ojb.Math.Expression {}\n        instance(x: 426, y: -729) math_expression_node_2 root.Std_k98ojb.Math.Expression {}\n\n        for_node.index -> math_expression_node_1.index\n        sorted_numbers_ai -> math_expression_node_1.sorted_numbers\n\n        std_if_node.then -> math_expression_node_2.trigger\n\n        math_expression_node_1.expression = \"it - index\"\n        math_expression_node_2.expression = \"index + 1\"\n\n        instance(x: 426, y: -864) set_property_node root.Std_k98ojb.SetProperty {}\n        instance(x: 426, y: -1005) std_if_else_node root.Std_k98ojb.IfElse {}\n\n        math_expression_node_1.result -> std_if_node.value\n        std_if_node.else_ -> set_property_node.trigger\n\n        std_if_else_node.input -> std_if_node.output\n        std_if_else_node.then -> math_expression_node_2.result\n        std_if_else_node.else_ -> for_node.index\n\n        set_property_node.property = \"missing_number\"\n        set_property_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_list_ai -> for_node.items\n        for_node.trigger -> trigger\n        for_node.reset -> reset\n        for_node.on_item -> on_item\n        for_node.done -> done\n\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n        for_node.index -> if_node.input\n        for_node.item -> if_node.value\n        trigger -> if_node.then\n        reset -> if_node.else_\n\n        instance(x: 426, y: -588) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"index + 1\"\n        }\n        if_node.then -> math_expr_node.trigger\n\n        instance(x: 426, y: -723) list_contains_node root.Std_k98ojb.List.Contains {}\n        sorted_list_ai -> list_contains_node.list\n        math_expr_node.result -> list_contains_node.item\n\n        instance(x: 426, y: -858) if_expression_node root.Std_k98ojb.IfExpression {\n            expression: \"not value\"\n        }\n        list_contains_node.value -> if_expression_node.input\n        if_expression_node.value -> missing_number_ai\n\n        instance(x: 426, y: -993) math_expr_node2 root.Std_k98ojb.Math.Expression {\n            expression: \"value + 1\"\n        }\n        if_expression_node.then -> math_expr_node2.trigger\n\n        instance(x: 426, y: -1128) list_contains_node2 root.Std_k98ojb.List.Contains {}\n        sorted_list_ai -> list_contains_node2.list\n        math_expr_node2.result -> list_contains_node2.item\n\n        instance(x: 426, y: -1263) if_expression_node2 root.Std_k98ojb.IfExpression {\n            expression: \"not value\"\n        }\n        list_contains_node2.value -> if_expression_node2.input\n        if_expression_node2.value -> missing_number_ai\n\n        on_item -> for_node.next\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -483) if_expression_node root.Std_k98ojb.IfExpression {}\n        instance(x: 426, y: -663) std_if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.on_item -> if_expression_node.trigger\n        for_node.item -> if_expression_node.expression.a\n\n        \"index + 1 != item\" -> if_expression_node.expression.expression\n        if_expression_node.value -> std_if_node.input\n\n        instance(x: 426, y: -843) math_add_node root.Std_k98ojb.Math.Add {}\n        for_node.index -> math_add_node.first\n        number(1) -> math_add_node.second\n\n        std_if_node.then -> math_add_node.trigger\n        math_add_node.result -> missing_number_ai\n\n        instance(x: 426, y: -1023) std_if_else_node root.Std_k98ojb.If {}\n        for_node.done -> std_if_else_node.input\n        number(0) -> std_if_else_node.else_trigger\n\n        std_if_else_node.then -> math_add_node.trigger\n        std_if_else_node.else_ -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        for_node.on_item -> if_node.input\n\n        for_node.index -> if_node.value.left\n        for_node.item -> if_node.value.right\n\n        instance(x: 426, y: -603) math_expression_node root.Std_k98ojb.Math.Expression {}\n        math_expression_node.expression = \"it + 1\"\n\n        if_node.then -> math_expression_node.input\n        math_expression_node.result -> missing_ai\n\n        for_node.next -> for_node.done\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        \n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n        for_node.index -> if_node.input\n        Math_k98ojb.Expression {\n            expression: \"it + 1\"\n        } -> if_node.then\n        Math_k98ojb.Sub {\n            first: for_node.item\n            second: Math_k98ojb.Expression {\n                expression: \"it + 1\"\n            }\n        } -> if_node.else\n        \n        instance(x: 426, y: -603) filter_node root.Std_k98ojb.Query.Filter {}\n        if_node.value -> filter_node.where\n        for_node.item -> filter_node.items\n\n        instance(x: 426, y: -753) first_item_node root.Std_k98ojb.List.FirstItem {}\n        filter_node.output -> first_item_node.list\n        \n        first_item_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> trigger_ai\n        for_node.reset -> reset_ai\n        \n        instance(x: 426, y: -423) if_node root.Std_k98ojb.If {}\n        for_node.index -> if_node.input\n        std.math_expression(\"it + 1\") -> if_node.expression\n\n        instance(x: 426, y: -519) math_sub_node root.Std_k98ojb.Math.Sub {}\n        if_node.value -> math_sub_node.first\n        for_node.item -> math_sub_node.second\n        \n        instance(x: 426, y: -615) std_if_expression_node root.Std_k98ojb.IfExpression {}\n        math_sub_node.result -> std_if_expression_node.expression\n\n        instance(x: 426, y: -711) list_contains_node root.Std_k98ojb.List.Contains {}\n        numbers_ai -> list_contains_node.list\n        std_if_expression_node.value -> list_contains_node.item\n        \n        instance(x: 426, y: -807) std_if_node root.Std_k98ojb.If {}\n        not(list_contains_node.contains) -> std_if_node.input\n\n        std_if_node.then -> then_trigger_ai\n        std_if_node.else_ -> else_trigger_ai\n\n        instance(x: 426, y: -903) math_expression_node root.Std_k98ojb.Math.Expression {}\n        std_if_expression_node.value -> math_expression_node.expression\n        \n        math_expression_node.result -> missing_ai\n\n        trigger_ai = true\n        reset_ai = false\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_list_ai -> find_missing_node.sorted_list\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) std_for_node root.Std_k98ojb.For {}\n        sorted_list_ai -> std_for_node.items\n        std_for_node.trigger -> trigger_trigger\n        std_for_node.done -> done_trigger\n\n        instance(x: 426, y: -453) expected_num_node root.main.expected_num {}\n        var(x: 426, y: -378) num_0 Number\n        num_0.value = 1\n        expected_num_node.num -> std_for_node.item\n        std_for_node.index -> index_ai\n\n        instance(x: 426, y: -603) if_missing_node root.Std_k98ojb.If {}\n        std_for_node.item -> if_missing_node.input\n        expected_num_node.expected_num -> if_missing_node.value\n        if_missing_node.then -> then_trigger\n        trigger_trigger -> if_missing_node.trigger\n\n        instance(x: 426, y: -678) set_missing_number_node root.main.set_missing_number {}\n        if_missing_node.output -> set_missing_number_node.is_missing\n        std_for_node.item -> set_missing_number_node.current_num\n        set_missing_number_node.missing_number -> missing_number_ai\n\n        instance(x: 426, y: -753) next_trigger_node root.Std_k98ojb.Trigger {}\n        then_trigger -> next_trigger_node.trigger\n        next_trigger_node.output -> std_for_node.next\n    }\n\n    func(doc: \"calculates the expected number at a given index.\") expected_num {\n        in(x: -426, y: -248, name: \"num\") property(Number) num_ai\n        out(x: 159, y: -219, name: \"expected_num\") property(Number) expected_num_ai\n\n        instance(x: 426, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {}\n        var(x: 426, y: -378) index Number\n        index.value = 1\n        num_ai -> math_expr_node.num\n        index -> math_expr_node.index\n        math_expr_node.expression = \"num + index\"\n        math_expr_node.result -> expected_num_ai\n    }\n\n    func(doc: \"sets the missing number if found.\") set_missing_number {\n        in(x: -426, y: -248, name: \"is_missing\") property(Bool) is_missing_ai\n        in(x: -426, y: -303, name: \"current_num\") property(Number) current_num_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -378) std_if_node root.Std_k98ojb.If {}\n        is_missing_ai -> std_if_node.input\n        current_num_ai -> std_if_node.value\n        std_if_node.then -> then_trigger\n        trigger_trigger -> std_if_node.trigger\n\n        instance(x: 426, y: -453) set_number_node root.Std_k98ojb.Set {}\n        current_num_ai -> set_number_node.number\n        set_number_node.output -> missing_number_ai\n\n        instance(x: 426, y: -528) next_trigger_node root.Std_k98ojb.Trigger {}\n        then_trigger -> next_trigger_node.trigger\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_list_ai -> for_node.items\n        for_node.trigger -> trigger_input\n        for_node.reset -> reset_input\n\n        instance(x: 426, y: -453) if_expression_node root.Std_k98ojb.IfExpression {\n            expression: \"index > 0 && item != index\"\n        }\n        for_node.index -> if_expression_node.index\n        for_node.item -> if_expression_node.item\n        if_expression_node.value -> trigger_output\n\n        instance(x: 426, y: -588) math_expression_node root.Std_k98ojb.Math.Expression {\n            expression: \"index - 1\"\n        }\n        for_node.index -> math_expression_node.index\n        math_expression_node.result -> missing_number_ai\n\n        instance(x: 426, y: -723) trigger_input Trigger {}\n        instance(x: 426, y: -858) reset_input Trigger {}\n\n        \n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n    instance(x: 426, y: -723) trigger_output Trigger {}\n    instance(x: 426, y: -858) reset_input Trigger {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_list_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        \n        instance(x: 726, y: -303) if_expression_node root.Std_k98ojb.IfExpression {\n            expression: \"index == 0 ? false : (item_at_index_minus_one + 1 != current_item)\"\n        }\n        for_node.index -> if_expression_node.index\n        for_node.item -> if_expression_node.current_item\n        sorted_list_ai -> for_node.items\n        instance(x: 1026, y: -303) get_at_node root.Std_k98ojb.List.GetAt {}\n        sorted_list_ai -> get_at_node.list\n        (for_node.index - 1) -> get_at_node.index\n        get_at_node.item -> if_expression_node.item_at_index_minus_one\n\n        instance(x: 1326, y: -303) std_if_node root.Std_k98ojb.If {\n            input: if_expression_node.value\n        }\n        if_expression_node.value -> std_if_node.input\n        for_node.on_item -> std_if_node.then\n        \n        instance(x: 1596, y: -303) set_number_node root.std.SetNumber {}\n        for_node.item -> set_number_node.number\n        std_if_node.then -> set_number_node.trigger\n\n        missing_number_ai <- set_number_node.number\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> trigger_ai\n        for_node.reset -> reset_ai\n        \n        instance(x: 426, y: -453) std_if_node root.Std_k98ojb.If {}\n        for_node.index -> std_if_node.input\n        std_if_node.then -> then_trigger_ai\n\n        instance(x: 426, y: -588) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"it + 1\"\n        }\n        std_if_node.value -> math_expr_node.result\n        for_node.item -> math_expr_node.it\n        math_expr_node.result -> missing_ai\n\n        instance(x: 426, y: -723) std_if_expression_node root.Std_k98ojb.IfExpression {\n            expression: \"it != it_next\"\n        }\n        for_node.item -> std_if_expression_node.left\n        list_getat_node.item -> std_if_expression_node.right\n        \n        instance(x: 426, y: -858) list_getat_node root.Std_k98ojb.List.GetAt {}\n        numbers_ai -> list_getat_node.list\n        math_expr_node.result -> list_getat_node.index\n\n        instance(x: 426, y: -993) std_if_else_node root.Std_k98ojb.If {\n            then: true,\n            else: true\n        }\n        std_if_expression_node.value -> std_if_else_node.input\n        \n        instance(x: 426, y: -1128) trigger_ai root.Std_k98ojb.Trigger {}\n        std_if_else_node.then -> next_trigger_ai\n\n        instance(x: 426, y: -1263) reset_ai root.Std_k98ojb.Reset {}\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_4f7d5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_d9a3e8 root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_e6b3f1 root.Std_k98ojb.Strings.Join {}\n        characters_4f7d5c.output -> filter_d9a3e8.items\n        \"it != ' '\" -> filter_d9a3e8.where\n        \"it != ','\" -> filter_d9a3e8.and\n        \"it != '.'\" -> filter_d9a3e8.and\n        filter_d9a3e8.result -> join_e6b3f1.items\n        \":\" -> join_e6b3f1.separator\n        input_0 -> characters_4f7d5c.input\n        join_e6b3f1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_d2a9e8 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) split_3e8b5a root.Std_k98ojb.Strings.Split {}\n        instance(x: 265, y: 0) join_4f9d6c root.Std_k98ojb.Strings.Join {}\n        input_0 -> split_3e8b5a.input\n        \" ,.\" -> split_3e8b5a.delimiter\n        split_3e8b5a.output -> join_4f9d6c.items\n        \":\" -> join_4f9d6c.separator\n        join_4f9d6c.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_a1b2c3 root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_c7e4c9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 165, y: 0) replace_all_f3f6a8 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 330, y: 0) join_2d1a5a root.Std_k98ojb.Strings.Join {}\n        characters_c7e4c9.output -> replace_all_f3f6a8.input\n        \" \" -> replace_all_f3f6a8.old_value\n        \":\" -> replace_all_f3f6a8.new_value\n        \",\" -> replace_all_f3f6a8.old_value_1\n        \":\" -> replace_all_f3f6a8.new_value_1\n        \".\" -> replace_all_f3f6a8.old_value_2\n        \":\" -> replace_all_f3f6a8.new_value_2\n        input_0 -> characters_c7e4c9.input\n        replace_all_f3f6a8.output -> join_2d1a5a.items\n        \":\" -> join_2d1a5a.separator\n        join_2d1a5a.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_d9e8f3 root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_c9c3e6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_d4a7f8 root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -1) join_5f2d5e root.Std_k98ojb.Strings.Join {}\n        characters_c9c3e6.output -> filter_d4a7f8.items\n        \"it == ' ' || it == ',' || it == '.'\" -> filter_d4a7f8.where\n        input_0 -> characters_c9c3e6.input\n        \":\" -> join_5f2d5e.separator\n        filter_d4a7f8.filteredItems -> join_5f2d5e.items\n        join_5f2d5e.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_3c6b9d root.main.text_replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_all_c4c5e8 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) split_a3f7d6 root.Std_k98ojb.Strings.Split {}\n        instance(x: 530, y: -2) join_1a9b2c root.Std_k98ojb.Strings.Join {}\n        input_0 -> replace_all_c4c5e8.input\n        \" ,.\" -> replace_all_c4c5e8.replaceWith\n        \":\" -> replace_all_c4c5e8.with\n        replace_all_c4c5e8.output -> split_a3f7d6.input\n        \"\" -> split_a3f7d6.delimiter\n        split_a3f7d6.output -> join_1a9b2c.items\n        \":\" -> join_1a9b2c.joinWith\n        join_1a9b2c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_3f7d8e root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_5b9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) replace_characters_3a7d2e root.Std_k98ojb.Strings.ReplaceCharacters {}\n        characters_5b9c8f.input -> replace_characters_3a7d2e.input\n        \" ,.\" -> replace_characters_3a7d2e.characters\n        \":\" -> replace_characters_3a7d2e.replaceWith\n        input_0 -> characters_5b9c8f.input\n        replace_characters_3a7d2e.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceCharacters_1a4f6d root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_ba8d9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) for_5c4b7e root.Std_k98ojb.For {}\n        instance(x: 530, y: -2) replace_chars_f3e6c1 root.main.replace_char {}\n        characters_ba8d9f.output -> for_5c4b7e.items\n        for_5c4b7e.on_item -> replace_chars_f3e6c1.input\n        input_0 -> characters_ba8d9f.input\n        replace_chars_f3e6c1.result -> result_0\n\n        instance(x: 265, y: -60) filter_2e1444 root.Std_k98ojb.Query.Filter {}\n        for_5c4b7e.output -> filter_2e1444.items\n        \"it == ' ' || it == ',' || it == '.'\" -> filter_2e1444.where\n        filter_2e1444.item -> replace_chars_f3e6c1.char\n\n        instance(x: 530, y: -60) concat_ba8d9f root.Std_k98ojb.Strings.Concat {}\n        for_5c4b7e.output -> concat_ba8d9f.items\n        concat_ba8d9f.result -> result_0\n    }\n\n    func(doc: \"Replaces a single character with a colon if it is a space, comma, or dot.\") replace_char {\n        in(x: -230, y: 0, name: \"char\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) if_expression_5c4b7e root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 265, y: 0) concat_f3e6c1 root.Std_k98ojb.Strings.Concat {}\n        \"it == ' ' || it == ',' || it == '.'\" -> if_expression_5c4b7e.expression\n        input_0 -> if_expression_5c4b7e.it\n        if_expression_5c4b7e.value -> concat_f3e6c1.items\n        \":\" -> concat_f3e6c1.items\n        input_0 -> concat_f3e6c1.items\n        concat_f3e6c1.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_e54b7f root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_3f8c9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) filter_f5a6e7 root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: 1) join_e4b2d0 root.Std_k98ojb.Strings.Join {}\n        characters_3f8c9d.output -> filter_f5a6e7.items\n        \"it != ' '\" -> filter_f5a6e7.where\n        input_0 -> characters_3f8cjfd.input\n        \": \" -> join_e4b2d0.separator\n        filter_f5a6e7.filtered -> join_e4b2d0.items\n        join_e4b2d0.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3f8c9d root.main.text_replace_spaces_commas_dots_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_9f3b5e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_4c8d7a root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_6e1b7c root.Std_k98ojb.Strings.Join {}\n        characters_9f3b5e.output -> filter_4c8d7a.items\n        \"it != ' '\" -> filter_4c8d7a.where\n        \"it != ','\" -> filter_4c8d7a.where\n        \"it != '.'\" -> filter_4c8d7a.where\n        \"':'\" -> join_6e1b7c.separator\n        input_0 -> characters_9f3b5e.input\n        filter_4c8d7a.result -> join_6e1b7c.items\n        join_6e1b7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_f9f7b5 root.main.text_replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_c4e6d9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 65) for_5c8f7a root.Std_k98ojb.For {}\n        instance(x: 265, y: 32) ifexpression_3a1e2f root.Std_k98ojb.Std.IfExpression {}\n        characters_c4e6d9.output -> for_5c8f7a.items\n        input_0 -> characters_c4e6d9.input\n        for_5c8f7a.on_item -> ifexpression_3a1e2f.trigger\n        \"it == ' ' || it == ',' || it == '.' ? ':' : it\" -> ifexpression_3a1e2f.expression\n        ifexpression_3a1e2f.value -> for_5c8f7a.on_item\n        for_5c8f7a.done -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_6b9d4 root.main.text_replace_space_comma_dot {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") are_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 2123, y: -53) equal_2e5c0d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1926, y: -155) if_d9a8c7 root.Std_k98ojb.Std.If {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_eb8a1e root.Std_k98ojb.Strings.Substring {}\n            element_5f51f7 -> substr_eb8a1e.string\n            0 -> substr_eb8a1e.startIndex\n            1 -> substr_eb8a1e.length\n            substr_eb8a1e.output -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> List.Length.length\n        List.Length.length -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        map_6030c9.output_list -> equal_2e5c0d.list\n        equal_2e5c0d.list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_2e5c0d.element\n        0 -> equal_2e5c0d.gen_1\n        equal_2e5c0d.result -> if_d9a8c7.predicate\n        if_07b8c7.then -> if_d9a8c7.execute\n        if_d9a8c7.else -> continue_8ba06b\n        if_d9a8c7.then -> equal_2e5c0d.next\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) are_characters_same_f0be66 root.main.are_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c6a1d5 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) getat_1f0e9c root.Std_k98ojb.List.GetAt {}\n\n        input_f5c03d -> characters_c6a1d5.input\n        characters_c6a1d5.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) if_f9c3b1 root.Std_k98ojb.Std.If {}\n            func() {\n                in(x: -76, y: 46, name: \"index\") property(Number) index_8f2d6e\n                out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n                instance(x: 106, y: 17) getat_9c7b3a root.Std_k98ojb.List.GetAt {}\n                index_8f2d6e -> getat_9c7b3a.index\n                characters_c6a1d5.characters -> getat_9c7b3a.list\n\n                getat_9c7b3a.value -> out_d0fd24\n            } -> if_f9c3b1.then\n            1 -> if_f9c3b1.predicate\n            element_5f51f7 -> if_f9c3b1.execute\n            if_f9c3b1.value -> expression_b720d7.gen_1\n            if_f9c3b1.value -> out_d0fd24\n\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        getat_1f0e9c.list -> characters_c6a1d5.characters\n        0 -> getat_1f0e9c.index\n        getat_1f0e9c.value -> first_char_f2b3e4\n\n        expression_b720d7.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        1 -> lessthanorequal_f11fda.left\n        map_6030c9.output_list -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_4d5e1a root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c1f2e6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n != first_char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_c1f2e6.input\n        characters_c1f2e6.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_9b8e1c root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_9b8e1c.left\n            input_f5c03d -> equal_9b8e1c.right\n            equal_9b8e1c.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) equal_8e7f5a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(ch == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> Strings_Characters_0b3e9d.input\n        Strings_Characters_0b3e9d.characters -> generaterange_038fce.from\n        1 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n            element_5f51f7 -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        input_f5c03d[0] -> equal_8e7f5a.left\n        for_8cb3f6.item -> equal_8e7f5a.right\n        equal_8e7f5a.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        1 -> add_b4554f.first\n        for_8cb3f6.index -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> equal_8e7f5a.gen_0\n        for_8cb3f6.item -> equal_8e7f5a.gen_1\n\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> for_8cb3f6.next\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_characters_same_ea1e0d root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1200, y: -50) firstitem_5e3d2c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 1306, y: -50) equal_d8a7e1 root.Std_k98ojb.Logic.Equal {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            element_5f51f7 -> firstitem_5e3d2c.list\n            firstitem_5e3d2c.element -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_d8a7e1.left\n        firstitem_5e3d2c.element -> equal_d8a7e1.right\n        equal_d8a7e1.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7f5e2d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_7f5e2d.input\n        characters_7f5e2d.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) firstitem_8e1a2b root.Std_k98ojb.List.FirstItem {}\n            element_5f51f7 -> firstitem_8e1a2b.list\n            firstitem_8e1a2b.item -> expression_b720d7.gen_0\n            element_5f51f7 -> expression_b720d7.gen_1\n            expression_b720d7.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_characters_same_1d0c5e root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") are_all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_3f6d7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(c == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_3f6d7a.input\n        characters_3f6d7a.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) firstitem_f3a4b6 root.Std_k98ojb.List.FirstItem {}\n            element_5f51f7 -> firstitem_f3a4b6.list\n            firstitem_f3a4b6.item -> expression_b720d7.gen_1\n\n            instance(x: 106, y: -36) equal_c0e9c2 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_c0e9c2.left\n            firstitem_f3a4b6.item -> equal_c0e9c2.right\n\n            equal_c0e9c2.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        characters_3f6d7a.characters.length -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        firstitem_f3a4b6.item -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c6f3d2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_c6f3d2.input\n        characters_c6f3d2.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_3c6a9e root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> eq_3c6a9e.left\n            input_f5c03d -> eq_3c6a9e.right\n            eq_3c6a9e.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        map_6030c9.output_list[0] -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> and_80a119.right\n\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> out_f3db9f\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c6e1a2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_f11fda root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(ch == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) getat_b4554f root.Std_k98ojb.List.GetAt {}\n        1 -> characters_c6e1a2.input\n        input_f5c03d -> characters_c6e1a2.input\n        characters_c6e1a2.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_2f9d09 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_2f9d09.left\n            input_f5c03d -> equal_2f9d09.right\n            equal_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        getat_b4554f.index -> 1\n        characters_c6e1a2.characters -> getat_b4554f.list\n        getat_b4554f.value -> equal_f11fda.left\n        getat_b4554f.value -> expression_b720d7.gen_0\n        for_8cb3f6.item -> equal_f11fda.right\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        equal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        equal_f11fda.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> getat_b4554f.index\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_characters_same_f0be66 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1985, y: -54) characters_3e6d1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1950, y: -319) equal_7a8d9f root.Std_k98ojb.Logic.Equal {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> characters_3e6d1c.input\n        characters_3e6d1c.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        instance(x: 2135, y: -54) if_d4a9d2 root.Std_k98ojb.Std.If {}\n        map_6030c9.output_list[1] -> equal_7a8d9f.left\n        for_8cb3f6.item -> equal_7a8d9f.right\n        equal_7a8d9f.result -> if_d4a9d2.predicate\n        if_07b8c7.value -> if_d4a9d2.execute\n\n        instance(x: 2500, y: -54) if_c1e6a3 root.Std_k98ojb.Std.If {}\n        if_d4a9d2.then -> if_c1e6a3.execute\n        if_07b8c7.value -> if_c1e6a3.predicate\n\n        instance(x: 2875, y: -54) expression_0f8f2a root.Std_k98ojb.Math.Expression {\n            expression: \"false\"\n        }\n        expression_0f8f2a.result -> if_c1e6a3.then\n        if_d4a9d2.else -> if_c1e6a3.predicate\n\n        instance(x: 3250, y: -54) expression_eb7c5c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        expression_eb7c5c.result -> if_c1e6a3.then\n        if_d4a9d2.else -> if_c1e6a3.execute\n\n        instance(x: 3625, y: -54) if_8f7b1c root.Std_k98ojb.Std.If {}\n        if_c1e6a3.value -> if_8f7b1c.predicate\n        if_c1e6a3.then -> if_8f7b1c.execute\n\n        instance(x: 4000, y: -54) expression_a5d2d9 root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        expression_a5d2d9.result -> if_8f7b1c.then\n        if_c1e6a3.else -> if_8f7b1c.execute\n\n        instance(x: 4375, y: -54) expression_4b0b3c root.Std_k98ojb.Math.Expression {\n            expression: \"false\"\n        }\n        expression_4b0b3c.result -> if_8f7b1c.then\n        if_c1e6a3.else -> if_8f7b1c.predicate\n\n        if_8f7b1c.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_characters_same_f0be66 root.main.all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) filter_61b38d root.Std_k98ojb.Query.Filter {\n            where: \"'0' <= it && it <= '9'\"\n        }\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_adfa16.input\n        characters_adfa16.characters -> filter_61b38d.items\n\n        filter_61b38d.on_item -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n\n        1 -> add_88bb8a.first\n        add_88bb8a.second -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> strings_characters_123456.root.Std_k98ojb.Strings.Characters {\n            input: s_6b655b\n        }\n        strings_characters_123456.characters -> iteration_find_789abc.root.Std_k98ojb.Iteration.Find {\n            predicate: \"it >= '0' && it <= '9'\"\n        }\n        iteration_find_789abc.item -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> strings_characters_1c5e4f.input\n        strings_characters_1c5e4f.characters -> for_loop_f3d2b1.items\n        for_loop_f3d2b1.on_item -> ifexpression_2d9b7c.execute\n        ifexpression_2d9b7c.then -> add_88bb8a.execute\n        ifexpression_2d9b7c.else -> continue_d9efd7\n        ifexpression_2d9b7c.gen_0 -> for_loop_f3d2b1.item\n        for_loop_f3d2b1.next -> for_loop_f3d2b1.execute\n        for_loop_f3d2b1.done -> setter_375321.execute\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n    instance(x: 97, y: -127) strings_characters_1c5e4f root.Std_k98ojb.Strings.Characters {}\n    instance(x: 395, y: -378) for_loop_f3d2b1 root.Std_k98ojb.Std.For {}\n    instance(x: 80, y: -417) ifexpression_2d9b7c root.Std_k98ojb.Std.IfExpression {\n        expression: \"is_digit(item)\"\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) length_547f34 root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        s_6b655b -> characters_adfa16.input\n        characters_adfa16.characters -> length_547f34.list\n        length_547f34.length -> add_88bb8a.second\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_digit_a9fa16 root.Std_k98ojb.Query.Filter {\n            where: \"'0' <= it && it <= '9'\"\n        }\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> is_digit_a9fa16.list\n        is_digit_a9fa16.item -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_41e4ad.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_41e4ad.execute\n        setter_41e4ad.continue -> count_digits_96023e.execute_cdac2a\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> count_digits_96023e.s_6b655b\n        count_digits_96023e.characters -> div_547f34.first\n        1 -> div_547f34.second\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) filter_88bb8a root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        characters_adfa16.input -> count_digits_96023e.characters_input\n        count_digits_96023e.characters_output -> filter_88bb8a.items\n        filter_88bb8a.on_item -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_adfa16.input\n        execute_cdac2a -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> getter_38583a.execute\n        ifexpression_3d7de6.else -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -127) is_digit_adfa16 root.main.is_digit {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> length_61b38d.list\n        length_61b38d.length -> slice_547f34.end\n\n        1 -> slice_547f34.start\n        slice_547f34.slice -> is_digit.input\n\n        is_digit.output -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n    func(doc: \"Checks if a character is a digit.\") is_digit {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"c\") property(String) c_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"'0' <= c && c <= '9'\"\n        }\n\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> ifexpression_3d7de6.execute\n\n        1 -> output_732a8a\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        s_6b655b -> characters_adfa16.input\n        characters_adfa16.characters -> count_digits_96023e.characters_9c8f2d\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> count_digits_96023e.execute_cdac2a\n        characters_adfa16.characters -> count_digits_96023e.next_character_7d3f9b\n        count_digits_96023e.done -> getter_38583a.execute\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Creates a function that finds the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_powers {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 430, y: 132) data_4e1a9f  = 3\n        instance(x: 412, y: 2) div_5d7b8c root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: -25) expression_f9e1f6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -53) mul_2c7d0a root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 109) data_b9f8e6  = 3\n        instance(x: 303, y: -52) div_5a4f1a root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: -79) expression_e7c8d2 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -107) mul_5a6f3c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 85) data_b7e0d9  = 3\n        instance(x: 303, y: -106) div_2c8a1f root.Std_k98ojb.Math.Div {}\n\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n\n        expression_f9e1f6.result -> mul_2c7d0a.second\n        n_3a3116 -> mul_2c7d0a.first\n        n_3a3116 -> expression_f9e1f6.gen_0\n        div_5d7b8c.result -> sum_365f7b\n\n        data_4e1a9f -> div_5d7b8c.second\n        mul_2c7d0a.result -> div_5d7b8c.first\n\n        expression_e7c8d2.result -> mul_5a6f3c.second\n        n_3a3116 -> mul_5a6f3c.first\n        n_3a3116 -> expression_e7c8d2.gen_0\n        div_2c8a1f.result -> sum_365f7b\n\n        data_b9f8e6 -> div_5a4f1a.second\n        mul_f892a4.result -> div_5a4f1a.first\n\n        data_b7e0d9 -> div_2c8a1f.second\n        mul_2c7d0a.result -> div_2c8a1f.first\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of the fourth powers of the first n odd natural numbers.\") power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"8*n*n*n*n-4*n*n+1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) power_sum_9dcc3d root.main.power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 403, y: -1) mul_7b9e5c root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_7b9e5c.first\n        div_64046c.result -> mul_7b9e5c.second\n        mul_7b9e5c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) power_sum_9dcc3d root.main.power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -24) div_1c7e8b root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_bf4e5c  = 3\n        div_64046c.result -> div_1c7e8b.first\n        data_bf4e5c -> div_1c7e8b.second\n\n        instance(x: 23, y: -48) mul_2d6a1c root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_2d6a1c.first\n        div_1c7e8b.result -> mul_2d6a1c.second\n\n        instance(x: 303, y: -71) div_4c5f0d root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9e3f2c  = 3\n        mul_2d6a1c.result -> div_4c5f0d.first\n        data_9e3f2c -> div_4c5f0d.second\n\n        instance(x: 23, y: -94) mul_f8b7c9 root.Std_k98ojb.Math.Mul {}\n        div_1c7e8b.result -> mul_f8b7c9.first\n        div_4c5f0d.result -> mul_f8b7c9.second\n\n        instance(x: 303, y: -117) for_6a7f1f root.Std_k98ojb.Std.For {\n            items: \"range(1,n+1)\"\n        }\n        n_3a3116 -> for_6a7f1f.items\n        div_f8b7c9.result -> sum_365f7b\n\n        instance(x: 12, y: -148) expression_e2e0d5 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_e2e0d5.gen_0\n        expression_e2e0d5.result -> mul_f892a4.second\n\n        instance(x: 12, y: -172) expression_bf7c8b root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_bf7c8b.gen_0\n        expression_bf7c8b.result -> mul_f892a4.first\n\n        instance(x: 12, y: -196) expression_2d9e7c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_2d9e7c.gen_0\n        expression_2d9e7c.result -> mul_f8b7c9.first\n\n        instance(x: 12, y: -220) expression_e5f3ef root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_e5f3ef.gen_0\n        expression_e5f3ef.result -> mul_f8b7c9.second\n\n        instance(x: 12, y: -244) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> div_64046c.first\n\n        instance(x: 12, y: -268) expression_9b5f8e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_9b5f8e.gen_0\n        expression_9b5f8e.result -> div_64046c.second\n\n        instance(x: 12, y: -292) expression_c2d7e9 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_c2d7e9.gen_0\n        expression_c2d7e9.result -> div_1c7e8b.first\n\n        instance(x: 12, y: -316) expression_bf7c8b root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_bf7c8b.gen_0\n        expression_bf7c8b.result -> div_1c7e8b.second\n\n        instance(x: 12, y: -340) expression_e5f3ef root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_e5f3ef.gen_0\n        expression_e5f3ef.result -> div_4c5f0d.first\n\n        instance(x: 12, y: -364) expression_2d9e7c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_2d9e7c.gen_0\n        expression_2d9e7c.result -> div_4c5f0d.second\n\n        for_6a7f1f.on_item -> mul_f892a4.first\n        for_6a7f1f.on_item -> mul_f892a4.second\n        for_6a7f1f.on_item -> expression_e2e0d5.gen_0\n        for_6a7f1f.on_item -> expression_bf7c8b.gen_0\n        for_6a7f1f.on_item -> expression_2d9e7c.gen_0\n        for_6a7f1f.on_item -> expression_e5f3ef.gen_0\n        for_6a7f1f.on_item -> div_f8b7c9.first\n        for_6a7f1f.on_item -> div_f8b7c9.second\n        for_6a7f1f.on_item -> mul_f8b7c9.first\n        for_6a7f1f.on_item -> mul_f8b7c9.second\n        for_6a7f1f.on_item -> expression_2d6da6.gen_0\n        for_6a7f1f.on_item -> expression_c2d7e9.gen_0\n        for_6a7f1f.on_item -> div_64046c.first\n        for_6a7f1f.on_item -> div_64046c.second\n        for_6a7f1f.on_item -> mul_f892a4.first\n        for_6a7f1f.on_item -> mul_f892a4.second\n        for_6a7f1f.on_item -> expression_e2e0d5.gen_0\n        for_6a7f1f.on_item -> expression_bf7c8b.gen_0\n        for_6a7f1f.on_item -> div_f8b7c9.first\n        for_6a7f1f.on_item -> div_f8b7c9.second\n        for_6a7f1f.on_item -> mul_f8b7c9.first\n        for_6a7f1f.on_item -> mul_f8b7c9.second\n        for_6a7f1f.on_item -> expression_2d6da6.gen_0\n        for_6a7f1f.on_item -> div_64046c.first\n        for_6a7f1f.on_item -> div_64046c.second",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -25) div_1c5f9e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -27) data_7e8a4f  = 3\n        data_7e8a4f -> div_1c5f9e.second\n        div_64046c.result -> div_1c5f9e.first\n\n        instance(x: 23, y: -26) mul_2d7b6e root.Std_k98ojb.Math.Mul {}\n        div_1c5f9e.result -> mul_2d7b6e.second\n        div_64046c.result -> mul_2d7b6e.first\n\n        instance(x: 303, y: -51) div_3a0b8d root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -53) data_f5f9b4  = 3\n        data_f5f9b4 -> div_3a0b8d.second\n        mul_2d7b6e.result -> div_3a0b8d.first\n\n        instance(x: 23, y: -52) mul_4c1b5f root.Std_k98ojb.Math.Mul {}\n        div_3a0b8d.result -> mul_4c1b5f.second\n        div_1c5f9e.result -> mul_4c1b5f.first\n\n        instance(x: 303, y: -77) div_5b2a6e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -79) data_8d3c7e  = 3\n        data_8d3c7e -> div_5b2a6e.second\n        mul_4c1b5f.result -> div_5b2a6e.first\n\n        instance(x: 23, y: -78) mul_6e3a7f root.Std_k98ojb.Math.Mul {}\n        div_5b2a6e.result -> mul_6e3a7f.second\n        div_3a0b8d.result -> mul_6e3a7f.first\n\n        instance(x: 303, y: -103) for_7f4b8g root.Std_k98ojb.Std.For {}\n        n_3a3116 -> for_7f4b8g.items\n        div_64046c.result -> for_7f4b8g.item\n        mul_6e3a7f.result -> sum_365f7b\n\n        instance(x: 303, y: -127) add_8h5c9i root.Std_k98ojb.Math.Add {}\n        div_64046c.result -> add_8h5c9i.first\n        for_7f4b8g.on_item -> add_8h5c9i.trigger\n        mul_6e3a7f.result -> add_8h5c9i.second\n\n        instance(x: 303, y: -151) set_property_9i6d0j root.Std_k98ojb.Set.Property {}\n        for_7f4b8g.done -> set_property_9i6d0j.trigger\n        add_8h5c9i.result -> set_property_9i6d0j.value\n\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_ae7f8k root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -22) div_1c7e5b root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_1  = 3\n        data_cde0dc_1 -> div_1c7e5b.second\n        div_64046c.result -> div_1c7e5b.first\n\n        instance(x: 23, y: -24) mul_4d6f8a root.Std_k98ojb.Math.Mul {}\n        mul_f892a4.result -> mul_4d6f8a.second\n        div_64046c.result -> mul_4d6f8a.first\n\n        instance(x: 303, y: -45) div_5f3e2a root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_2  = 3\n        data_cde0dc_2 -> div_5f3e2a.second\n        mul_4d6f8a.result -> div_5f3e2a.first\n\n        instance(x: 23, y: -47) mul_1c7b9d root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_1c7b9d.second\n        div_1c7e5b.result -> mul_1c7b9d.first\n\n        instance(x: 303, y: -68) div_6a2b4f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_3  = 3\n        data_cde0dc_3 -> div_6a2b4f.second\n        mul_1c7b9d.result -> div_6a2b4f.first\n\n        div_5f3e2a.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_f8a0a root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_8f9b5c root.Std_k98ojb.Math.Expression {\n            expression: \"value*value\"\n        }\n        div_64046c.result -> pow_8f9b5c.value\n        instance(x: 303, y: 2) div_6e4a7d root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_6e4a7d.second\n        pow_8f9b5c.result -> div_6e4a7d.first\n        div_6e4a7d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -24) div_1c7b8f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_2  = 3\n        instance(x: 23, y: -25) mul_f892a4_2 root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_f892a4_2.second\n        div_1c7b8f.result -> mul_f892a4_2.first\n        data_cde0dc_2 -> div_1c7b8f.second\n        mul_f892a4_2.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 403, y: -1) pow_8e7b5f root.Std_k98ojb.Math.Expression {\n            expression: \"result*result\"\n        }\n        div_64046c.result -> pow_8e7b5f.gen_0\n        pow_8e7b5f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -20) div_5c9e8f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 33) data_f1b4f7  = 3\n        div_64046c.result -> div_5c9e8f.first\n        data_f1b4f7 -> div_5c9e8f.second\n        instance(x: 23, y: -21) mul_2a6d5c root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_2a6d5c.first\n        div_5c9e8f.result -> mul_2a6d5c.second\n        instance(x: 303, y: -42) div_e4b3a7 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 53) data_1f9f0c  = 3\n        mul_2a6d5c.result -> div_e4b3a7.first\n        data_1f9f0c -> div_e4b3a7.second\n        div_e4b3a7.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_c8e6d5 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e7f9d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_5c1a3b\n\n        instance(x: 94, y: -105) multiply_6a4f0e root.Std_k98ojb.Math.Mul {}\n        size_8e7f9d -> multiply_6a4f0e.first\n        size_8e7f9d -> multiply_6a4f0e.second\n        multiply_6a4f0e.result -> surfaceArea_5c1a3b\n\n        instance(x: 94, y: -145) multiply_2b7e9f root.Std_k98ojb.Math.Mul {}\n        6 -> multiply_2b7e9f.first\n        multiply_6a4f0e.result -> multiply_2b7e9f.second\n        multiply_2b7e9f.result -> surfaceArea_5c1a3b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_8d3a7f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e4f8b\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b9c3d1\n\n        instance(x: 94, y: -105) math_expression_7a5f2c root.Std_k98ojb.Math.Expression {}\n        size_6e4f8b -> math_expression_7a5f2c.a\n        \"6 * pow($a, 2)\" -> math_expression_7a5f2c.expression\n        math_expression_7a5f2c.result -> surface_area_b9c3d1\n    }\n\n    \n\n    instance(x: -92, y: 45) find_surface_area_instance root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1e8f0b\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) math_expr_f2330d root.Std_k98ojb.Math.Expression {}\n        6 -> math_expr_f2330d.expression\n        size_1e8f0b -> math_expr_f2330d.a\n        size_1e8f0b -> math_expr_f2330d.b\n        math_expr_f2330d.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_b9ff6b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7e1f9c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_3a4b8d\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_7e1f9c -> mul_f2330d.first\n        size_7e1f9c -> mul_f2330d.second\n        mul_f2330d.result -> surface_area_temp_3a4b8d\n\n        instance(x: 94, y: -30) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        6 -> mul_584bfd.first\n        surface_area_temp_3a4b8d -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_3a4b8d\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a2f9c\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_1b4d7e\n\n        instance(x: 94, y: -105) multiply_f2330d root.Std_k98ojb.Math.Mul {}\n        size_3a2f9c -> multiply_f2330d.first\n        6 -> multiply_f2330d.second\n        multiply_f2330d.result -> surfaceArea_1b4d7e\n\n        instance(x: 94, y: -105) square_584bfd root.Std_k98ojb.Math.Pow {}\n        size_3a2f9c -> square_584bfd.x\n        2 -> square_584bfd.y\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3f9a8b\n\n        out(x: 656, y: -68, name: \"\") property(Number) _e4d5c0\n\n        instance(x: 94, y: -105) math_expression_1c7d2e root.Std_k98ojb.Math.Expression {}\n        size_3f9a8b -> math_expression_1c7d2e.x\n        \"6 * x * x\" -> math_expression_1c7d2e.expression\n        math_expression_1c7d2e.result -> _e4d5c0\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_8a3f9b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3f0b4e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_f1d8a7\n\n        instance(x: 94, y: -105) multiply_b2c9a6 root.Std_k98ojb.Math.Mul {}\n        size_3f0b4e -> multiply_b2c9a6.first\n        size_3f0b4e -> multiply_b2c9a6.second\n        multiply_b2c9a6.result -> surface_area_f1d8a7\n\n        instance(x: 94, y: -140) multiply_5d8a3f root.Std_k98ojb.Math.Mul {}\n        6 -> multiply_5d8a3f.first\n        multiply_b2c9a6.result -> multiply_5d8a3f.second\n        multiply_5d8a3f.result -> surface_area_f1d8a7\n    }\n\n    \n\n    instance(x: -92, y: 45) find_surface_area_of_cube_4e0b9c root.main.find_surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e5f8d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1a7b2c\n\n        instance(x: 94, y: -105) math_expression_d4e3a1 root.Std_k98ojb.Math.Expression {}\n        size_6e5f8d -> math_expression_d4e3a1.a\n        \"6 * a^2\" -> math_expression_d4e3a1.expression\n        math_expression_d4e3a1.result -> surface_area_1a7b2c\n    }\n\n    \n\n    instance(x: -92, y: 45) find_surface_area_f8d9f2 root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e9c3d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b1a7f2\n\n        instance(x: 94, y: -105) mul_5b4f8a root.Std_k98ojb.Math.Mul {}\n        size_8e9c3d -> mul_5b4f8a.first\n        size_8e9c3d -> mul_5b4f8a.second\n        func() {\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_1a2f6b root.Std_k98ojb.Math.Mul {}\n            mul_5b4f8a.result -> mul_1a2f6b.first\n            6 -> mul_1a2f6b.second\n            mul_1a2f6b.result -> _7dd980\n        } -> surface_area_b1a7f2\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_3d4e8f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8f2a1c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b7e3d4\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_8f2a1c -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            x_8ee839 -> mul_584bfd.first\n            x_8ee839 -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> mul_f2330d.handler\n        mul_f2330d.result -> surface_area_b7e3d4\n    }\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 639, y: -353) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 726, y: -353) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 626, y: -403) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -453) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -603) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 639, y: -351) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        \n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_of_list {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -453) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 726, y: -378) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        \n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_of_list_node root.main.range_of_list {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_of_values {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_of_values_node root.main.range_of_values {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> expression_7b3b7b.num\n        expression_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            divisor: 2\n        }\n        number_ai -> modulo_7b3b7b.value\n        instance(x: 1050, y: 76) equal_7b3b7b root.Std_k98ojb.Logic.Equal {\n        }\n        modulo_7b3b7b.result -> equal_7b3b7b.left\n        constant(x: 1228, y: 75, value: \"0\") zero_ai\n        zero_ai.value -> equal_7b3b7b.right\n        equal_7b3b7b.equal -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: number_ai % 2 == 0\n        }\n        then: true -> isEven_ai\n        else: false -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) check_even root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_even.num\n        check_even.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        instance(x: 1050, y: 76) equal_1e54f6 root.Std_k98ojb.Logic.Equal {\n            left: modulo_7b3b7b.result\n            right: 0\n        }\n        equal_1e54f6.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) check_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) equal_1 root.Std_k98ojb.Logic.Equal {\n            left: check_7b3b7b.result\n            right: 0\n        }\n        equal_1.value -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.CheckEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 100, y: 50) find_first_repeat_a1b2c3 root.Std_k98ojb.Iteration.Find {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> find_first_repeat_a1b2c3.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_x1y1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_z9w8v7\n\n            instance(x: 89, y: 29) contains_3c2b1a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_6e5d4c root.Std_k98ojb.List.Slice {}\n\n            char_x1y1 -> contains_3c2b1a.item\n            characters_7g8h9i.characters -> slice_6e5d4c.list\n\n            find_first_repeat_a1b2c3.index -> slice_6e5d4c.start\n            -1 -> slice_6e5d4c.end\n\n            contains_3c2b1a.result -> bool_z9w8v7\n        } -> find_first_repeat_a1b2c3.predicate\n\n        find_first_repeat_a1b2c3.item -> char_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_9f8d2a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_807ffd root.Std_k98ojb.List.Slice {}\n\n            string_9f8d2a -> characters_1e0f4c\n            characters_1e0f4c -> slice_807ffd.list\n\n            slice_807ffd.start = -1\n            slice_807ffd.end = 0\n            elem_9f6850 -> slice_807ffd.item\n\n            slice_807ffd.result -> contains_1088d5.list\n            elem_9f6850 -> contains_1088d5.item\n\n            contains_1088d5.result -> bool_af09a7\n        } -> find_repeated_char_6d05b0.predicate\n        string_9f8d2a -> characters_1e0f4c\n        characters_1e0f4c -> find_repeated_char_6d05b0.items\n\n        find_repeated_char_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2c3d\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4b5e6f\n\n        instance(x: 0, y: 0) characters_a9b8c7 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 50) find_repeated_3d2c1b root.Std_k98ojb.Iteration.Find {}\n        \n        string_1a2c3d -> characters_a9b8c7.input\n        characters_a9b8c7.characters -> find_repeated_3d2c1b.items\n\n        instance(x: 0, y: 100) set_a9b8c7 root.Std_k98ojb.Sets {}\n        \n        instance(x: 0, y: 150) if_expression_5f6e4d root.Std_k98ojb.Std.IfExpression {}\n\n        characters_a9b8c7.characters -> find_repeated_3d2c1b.items\n        set_a9b8c7.item -> if_expression_5f6e4d.a\n\n        instance(x: 0, y: 200) contains_d4c3b2 root.Std_k98ojb.List.Contains {}\n        \n        characters_a9b8c7.characters -> contains_d4c3b2.list\n        find_repeated_3d2c1b.item -> contains_d4c3b2.item\n\n        contains_d4c3b2.result -> if_expression_5f6e4d.expression\n\n        instance(x: 0, y: 250) set_add_e3d2c1 root.Std_k98ojb.Sets {}\n        \n        find_repeated_3d2c1b.item -> set_add_e3d2c1.item\n        if_expression_5f6e4d.value -> set_add_e3d2c1.add\n\n        set_a9b8c7.set -> set_add_e3d2c1.set\n\n        find_repeated_3d2c1b.item -> char_4b5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) output_character_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_char_instance root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) current_char_g7h8i9\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_jk0l1m\n\n            instance(x: 89, y: 29) characters_instance root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_instance root.Std_k98ojb.List.Contains {}\n\n            input_string_1a2b3c -> characters_instance.input\n            characters_instance.characters -> find_repeated_char_instance.items\n\n            instance(x: 89, y: 100) temp_list_instance {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(Char) item_n1o2p3\n\n                out(x: 515, y: 44, name: \"list\") property(List) list_q4r5s6\n\n                temp_list_instance.list -> find_repeated_char_instance.on_item\n            }\n\n            current_char_g7h8i9 -> contains_instance.item\n            temp_list_instance.list -> contains_instance.list\n\n            contains_instance.result -> is_repeated_jk0l1m\n        } -> find_repeated_char_instance.predicate\n\n        find_repeated_char_instance.item -> output_character_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_3f2d9a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_d4b7c6\n\n        instance(x: 0, y: 0) characters_5e8b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 50) for_9a3d2e root.Std_k98ojb.Std.For {}\n        instance(x: -55, y: 529) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n\n        string_3f2d9a -> characters_5e8b4f.input\n        characters_5e8b4f.characters -> for_9a3d2e.items\n\n        in(x: -113, y: 34, name: \"char\") property(Char) char_1c7f6a\n        func() {\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_a8b4f3\n\n            instance(x: 89, y: 29) contains_2d5e9b root.Std_k98ojb.List.Contains {}\n            in(x: -113, y: 34, name: \"seen_chars\") property(List) seen_chars_b1c6a7\n            char_1c7f6a -> contains_2d5e9b.item\n            seen_chars_b1c6a7 -> contains_2d5e9b.list\n\n            contains_2d5e9b.result -> bool_a8b4f3\n        } -> for_9a3d2e.on_item\n\n        in(x: -113, y: 34, name: \"seen_chars\") property(List) seen_chars_b1c6a7\n        func() {\n            out(x: 515, y: 44, name: \"list\") property(List) list_4f8d2b\n\n            instance(x: 89, y: 29) append_3e9b5c root.Std_k98ojb.List.Append {}\n            seen_chars_b1c6a7 -> append_3e9b5c.list\n            for_9a3d2e.item -> append_3e9b5c.value\n\n            append_3e9b5c.result -> list_4f8d2b\n        } -> find_6d05b0.predicate\n\n        in(x: -113, y: 34, name: \"seen_chars\") property(List) seen_chars_b1c6a7\n        func() {\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d3f9e8\n\n            instance(x: 89, y: 29) contains_2d5e9b root.Std_k98ojb.List.Contains {}\n            seen_chars_b1c6a7 -> contains_2d5e9b.list\n            for_9a3d2e.item -> contains_2d5e9b.item\n\n            contains_2d5e9b.result -> bool_d3f9e8\n        } -> find_6d05b0.predicate\n\n        seen_chars_b1c6a7 -> find_6d05b0.items\n        for_9a3d2e.done -> find_6d05b0.trigger\n        find_6d05b0.item -> char_d4b7c6\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_8f4b1e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 50) for_loop_jk1l2m root.Std_k98ojb.Std.For {}\n\n        input_string_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> for_loop_jk1l2m.items\n\n        instance(x: 0, y: 100) set_contains_nopqrs root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 150) list_builder_tuvwx root.Std_k98ojb.List {}\n\n        in(x: -113, y: 34, name: \"char\") property(String) current_char_3yz4ab\n        for_loop_jk1l2m.item -> current_char_3yz4ab\n\n        instance(x: 0, y: 200) if_expression_cdefg root.Std_k98ojb.Std.IfExpression {}\n        in(x: -113, y: 34, name: \"list\") property(List) list_so_far_hijk\n        list_so_far_hijk -> set_contains_nopqrs.list\n\n        current_char_3yz4ab -> if_expression_cdefg.expression.a\n        list_so_far_hijk -> if_expression_cdefg.expression.b\n        expression: \"{a} in {b}\"\n\n        if_expression_cdefg.value -> set_contains_nopqrs.item\n\n        instance(x: 0, y: 250) std_if_ghijkl root.Std_k98ojb.Std.If {}\n        std_if_ghijkl.input -> set_contains_nopqrs.result\n        then {\n            current_char_3yz4ab -> repeated_char_4d5e6f\n        }\n        else {\n            list_so_far_hijk -> list_builder_tuvwx.list\n            current_char_3yz4ab -> list_builder_tuvwx.item\n            list_builder_tuvwx.list -> list_so_far_hijk\n        }\n\n        for_loop_jk1l2m.trigger -> std_if_ghijkl.input\n    }\n}\n\ninstance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_9f5a2d\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_d4e3b8\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_f7c2a1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9f8d3b\n\n            instance(x: 89, y: 29) contains_b5e4c0 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_1a2b6f root.Std_k98ojb.List.Slice {}\n\n            input_9f5a2d -> characters_8f3c7d.input\n            characters_8f3c7d.characters -> list_ae4f2b\n\n            slice_1a2b6f.start -> 0\n            elem_f7c2a1 -> slice_1a2b6f.end\n            list_ae4f2b -> slice_1a2b6f.list\n            slice_1a2b6f.slice -> contains_b5e4c0.list\n\n            elem_f7c2a1 -> contains_b5e4c0.item\n            contains_b5e4c0.contains -> bool_9f8d3b\n        } -> find_6d05b0.predicate\n        characters_8f3c7d.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_d4e3b8\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_d4e5f6\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        string_1a2b3c -> characters_7g8h9i.input\n\n        instance(x: 150, y: 50) find_repeated_jk0l1m root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_2n3o4p\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_qr5s6t\n\n            instance(x: 89, y: 29) contains_u7v8w9x root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_y1z2a3b root.Std_k98ojb.List.Slice {}\n\n            characters_7g8h9i.characters -> slice_y1z2a3b.list\n            elem_2n3o4p -> slice_y1z2a3b.start\n\n            slice_y1z2a3b.slice -> contains_u7v8w9x.list\n            elem_2n3o4p -> contains_u7v8w9x.item\n\n            contains_u7v8w9x.result -> bool_qr5s6t\n        } -> find_repeated_jk0l1m.predicate\n        characters_7g8h9i.characters -> find_repeated_jk0l1m.items\n        find_repeated_jk0l1m.item -> char_d4e5f6\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_5f3b2a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) character_b7d4c8\n\n        instance(x: 0, y: 0) characters_9e6f2a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_repeated_3a5b1c root.Std_k98ojb.Iteration.Find {}\n        \n        in(x: -113, y: 34, name: \"seen\") property(Set) seen_c4d9f7\n        instance(x: 0, y: 0) set_contains_8e2d6f root.Std_k98ojb.List.Contains {}\n\n        characters_9e6f2a.input -> find_repeated_3a5b1c.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_4f8b7d\n\n            out(x: 515, y: 44, name: \"is_repeated\") property(Bool) is_repeated_6a3c9e\n\n            instance(x: 89, y: 29) set_contains_8e2d6f root.Std_k98ojb.List.Contains {}\n            \n            char_4f8b7d -> set_contains_8e2d6f.item\n            seen_c4d9f7 -> set_contains_8e2d6f.list\n\n            set_contains_8e2d6f.result -> is_repeated_6a3c9e\n            \n            func() {\n                in(x: -113, y: 34, name: \"char\") property(Char) char_4f8b7d\n                \n                out(x: 515, y: 44, name: \"add_to_seen\") property(Void) add_to_seen_d1e2a9\n\n                char_4f8b7d -> seen_c4d9f7.add\n            } -> find_repeated_3a5b1c.onItem\n        } -> find_repeated_3a5b1c.predicate\n\n        find_repeated_3a5b1c.item -> character_b7d4c8\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_6f9e2b root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_5d8c2a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_d3f9b4\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1a2c3f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7e9d4b\n\n            instance(x: 89, y: 29) characters_8f5d6b root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_3c2a1d root.Std_k98ojb.List.Contains {}\n            instance(x: 410, y: 50) slice_4e9f7a root.Std_k98ojb.List.Slice {}\n\n            input_5d8c2a -> characters_8f5d6b.input\n            characters_8f5d6b.characters -> slice_4e9f7a.list\n\n            char_1a2c3f -> slice_4e9f7a.end\n            0 -> slice_4e9f7a.start\n\n            slice_4e9f7a.slice -> contains_3c2a1d.list\n            characters_8f5d6b.characters -> contains_3c2a1d.item\n\n            contains_3c2a1d.result -> bool_7e9d4b\n        } -> find_6d05b0.predicate\n        characters_8f5d6b.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_d3f9b4\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) sort_node Std_k98ojb.List.Sort {}\n        items_ai -> sort_node.list\n\n        instance(x: 426, y: -453) slice_node Std_k98ojb.List.Slice {}\n        sort_node.sorted_list -> slice_node.list\n        property(value: 1) start_ai -> slice_node.start\n        property(value: -1) end_ai -> slice_node.end\n\n        instance(x: 426, y: -588) list_min_node Std_k98ojb.List.Min {}\n        slice_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list\n\n        instance(x: 426, y: -423) slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list -> slice_node.list\n        instance(x: 426, y: -519) number_1 root.Std_k98ojb.Number {}\n        number_1.value = 1\n        number_1 -> slice_node.start\n        instance(x: 426, y: -615) number_minus_1 root.Std_k98ojb.Number {}\n        number_minus_1.value = -1\n        number_minus_1 -> slice_node.end\n\n        slice_node.slice -> sliced_list\n\n        instance(x: 426, y: -711) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        sliced_list -> list_first_item_node.list\n\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list_ai\n        \n        instance(x: 426, y: -393) slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list_ai -> slice_node.list\n        slice_node.start <- 1\n        slice_node.end <- -1\n        slice_node.slice -> sliced_list_ai\n\n        instance(x: 426, y: -483) list_min_node root.Std_k98ojb.List.Min {}\n        sliced_list_ai -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sorted_list_ai property(List)\n    instance(x: 426, y: -393) sliced_list_ai property(List)\n\n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 726, y: -303) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        slice_node.start = 1\n        slice_node.end = -1\n        instance(x: 1026, y: -303) first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_node.slice -> first_item_node.list\n        first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list_ai\n        \n        instance(x: 426, y: -483) slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list_ai -> slice_node.list\n        instance(x: 159, y: -453) number_two Node {}\n        number_two.value = 1\n        number_two.out -> slice_node.start\n        instance(x: 426, y: -513) number_three Node {}\n        number_three.value = -1\n        number_three.out -> slice_node.end\n        \n        slice_node.slice -> sliced_list_ai\n\n        instance(x: 426, y: -603) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        sliced_list_ai -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -453) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        property(Number)(value: 1) start_ai\n        start_ai -> slice_node.start\n        property(Number)(value: -1) end_ai\n        end_ai -> slice_node.end\n        \n        instance(x: 426, y: -588) list_min_node root.Std_k98ojb.List.Min {}\n        slice_node.slice -> list_min_node.items\n\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        instance(x: 426, y: -588) get_at_node root.Std_k98ojb.List.GetAt {}\n        slice_node.slice -> get_at_node.list\n        property(Number) index_ai\n        index_ai.value = 1\n        index_ai -> get_at_node.index\n        get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> slice_input.items\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        slice_input := property(List)\n        slice_input <- list_sort_node.sorted\n        slice_input -> list_slice_node.start_at\n        list_slice_node.end_at <- -1\n        list_slice_node.slice -> unique_items.items\n\n        instance(x: 426, y: -519) query_filter_node root.Std_k98ojb.Query.Filter {}\n        unique_items := property(List)\n        unique_items <- list_slice_node.slice\n        query_filter_node.where <- \"it != List.FirstItem(unique_items)\"\n        query_filter_node.items <- unique_items\n        query_filter_node.filtered -> sorted_unique.items\n\n        instance(x: 426, y: -615) list_sort_node_2 root.Std_k98ojb.List.Sort {}\n        sorted_unique := property(List)\n        sorted_unique <- query_filter_node.filtered\n        list_sort_node_2.items <- sorted_unique\n        list_sort_node_2.sorted -> second_min_output\n\n        instance(x: 426, y: -711) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        second_min_output := property(List)\n        second_min_output <- list_sort_node_2.sorted\n        list_get_at_node.index <- 1\n        list_get_at_node.list <- second_min_output\n        list_get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n        \n        instance(x: 426, y: -423) list_slice_node Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n\n        instance(x: 426, y: -519) list_first_item_node Std_k98ojb.List.FirstItem {}\n        list_slice_node.slice -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        instance(x: 426, y: -588) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.sliced -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 2930,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        \n        instance(x: 200, y: -150) has_elements_ae4c3d root.Std_k98ojb.List.Contains {}\n        intersection_201051.intersect -> has_elements_ae4c3d.list\n        func() {\n            out(x: 245, y: -54, name: \"item\") property(Number) item_e245cb\n\n            instance(x: -8, y: -53) first_item_4e8c54 root.Std_k98ojb.List.FirstItem {}\n            has_elements_ae4c3d.item -> first_item_4e8c54.list\n            first_item_4e8c54.item -> item_e245cb\n        } -> has_elements_ae4c3d.handler\n        \n        instance(x: 250, y: -160) not_empty_b2f1a5 root.Std_k98ojb.Logic.NotEqual {}\n        func() {\n            out(x: 300, y: -170, name: \"empty\") property(Number) empty_7a8e4c\n\n            instance(x: -231, y: -69) zero_42bc6f root.Std_k98ojb.Number {}\n            zero_42bc6f.value -> empty_7a8e4c\n        } -> not_empty_b2f1a5.left\n        item_e245cb -> not_empty_b2f1a5.right\n\n        not_empty_b2f1a5.result -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3a8e9d\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> has_common_element_3a8e9d\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n\n        instance(x: 0, y: -60) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n        intersection_201051.intersect -> not_empty_4e8c54.list\n\n        instance(x: -30, y: -80) has_common_element_check_9a3f2d root.Std_k98ojb.Logic.Equal {}\n        not_empty_4e8c54.length -> has_common_element_check_9a3f2d.left\n        0 -> has_common_element_check_9a3f2d.right\n\n        has_common_element_check_9a3f2d.result -> has_common_element_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_e245cb\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        \n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_42bc6f\n            Logic_k98ojb.NotEqual_k98ojb.Equal(Std_k98ojb.ListLength(intersect_42bc6f), 0) -> result_e245cb\n        } -> intersection_201051.handler\n    }\n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommon\") property(Bool) has_common_5c9d6a\n\n        instance(x: 133, y: -131) intersection_1b8f4e root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1b8f4e.left\n        list2_c62075 -> intersection_1b8f4e.right\n\n        instance(x: 133, y: -201) length_6a7c9d root.Std_k98ojb.List.Length {}\n        intersection_1b8f4e.intersect -> length_6a7c9d.list\n        func() {\n            in(x: -231, y: -69, name: \"length\") property(Number) list_length_2f5e3b\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) greater_than_0_1d9c6a root.Std_k98ojb.Logic.GreaterThan {}\n            list_length_2f5e3b -> greater_than_0_1d9c6a.left\n            0 -> greater_than_0_1d9c6a.right\n            greater_than_0_1d9c6a.result -> result_e245cb\n        } -> length_6a7c9d.handler\n        length_6a7c9d.length -> has_common_5c9d6a\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_f3a9c8\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(List) result_e245cb\n\n            instance(x: -8, y: -53) firstItem_4e8c54 root.Std_k98ojb.List.FirstItem {}\n            item_42bc6f -> firstItem_4e8c54.list\n            firstItem_4e8c54.item -> result_e245cb\n        } -> intersection_201051.handler\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(List) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) notEqual_4e8c54 root.Std_k98ojb.Logic.NotEqual {}\n            item_42bc6f -> notEqual_4e8c54.left\n            [] -> notEqual_4e8c54.right\n            notEqual_4e8c54.result -> result_e245cb\n        } -> intersection_201051.has_result\n\n        intersection_201051.intersect -> has_common_element_f3a9c8\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n            intersect_42bc6f -> contains_4e8c54.list\n            func() {\n                in(x: 0, y: 0, name: \"item\") property(Any) item_5a2d3b\n\n                out(x: 0, y: 0, name: \"\") property(Bool) bool_7f6b4e\n\n                instance(x: 0, y: 0) any_any_e245cb root.Std_k98ojb.Logic.Any {}\n                item_5a2d3b -> any_any_e245cb.item\n                contains_4e8c54.item -> any_any_e245cb.predicate\n                any_any_e245cb.result -> bool_7f6b4e\n            } -> contains_4e8c54.predicate\n            contains_4e8c54.contains -> result_e245cb\n        } -> intersection_201051.handler\n        result_e245cb -> has_common_element_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_f5e9d4\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"intersect\") property(List) intersect_e245cb\n\n            out(x: 245, y: -54, name: \"hasCommon\") property(Bool) has_common_d5e8c4\n\n            instance(x: -8, y: -53) not_empty_4e8c54 root.Std_k98ojb.List.Length {}\n            intersect_e245cb -> not_empty_4e8c54.list\n            func() {\n                out(x: 245, y: -54, name: \"notEmpty\") property(Bool) not_empty_c5d9f4\n\n                instance(x: -8, y: -53) greater_than_zero_4e8c54 root.Std_k98ojb.Logic.NotEqual {}\n                number(-1) -> greater_than_zero_4e8c54.left\n                not_empty_4e8c54.length -> greater_than_zero_4e8c54.right\n                greater_than_zero_4e8c54.result -> not_empty_c5d9f4\n            } -> not_empty_4e8c54.handler\n            not_empty_c5d9f4 -> has_common_d5e8c4\n        } -> intersection_201051.handler\n        has_common_d5e8c4 -> result_f5e9d4\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_c76d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) getat_7836b4 root.Std_k98ojb.List.GetAt {}\n            instance(x: 705, y: 54) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            add_c76d2b.first -> getat_7836b4.index\n            current_81298e -> add_c76d2b.second\n            list_07cae4 -> getat_7836b4.list\n            getat_7836b4.item -> notequal_7836b4.right\n            current_81298e -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        list_07cae4 -> filter_c91965.items\n\n        func() {\n            in(x: 0, y: 79, name: \"_index\") property(Number) _index_170471\n\n            out(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            instance(x: 74, y: -23) getat_ad7b2a root.Std_k98ojb.List.GetAt {}\n            getat_ad7b2a.list -> list_07cae4\n            _index_170471 -> getat_ad7b2a.index\n            getat_ad7b2a.item -> current_81298e\n        } -> map_c73e3b.handler\n\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        filter_c91965.output_list -> map_c73e3b.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_b8c7a6\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_c9e3b2 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) equal_8f5d0a root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> sub_c9e3b2.first\n            _next_b8c7a6 -> sub_c9e3b2.second\n            sub_c9e3b2.result -> equal_8f5d0a.left\n            1 -> equal_8f5d0a.right\n            equal_8f5d0a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: -303, y: -205, name: \"only pairs\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _pair_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) firstitem_a9e5c8 root.Std_k98ojb.List.FirstItem {}\n            instance(x: 463, y: 51) second_7d1f3a root.Std_k98ojb.Iteration.Second {}\n            firstitem_a9e5c8.list -> _pair_170471\n            true -> output_efbc78\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) firstitem_a9e5c8 root.Std_k98ojb.List.FirstItem {}\n            instance(x: 285, y: -25) second_7d1f3a root.Std_k98ojb.Iteration.Second {}\n            firstitem_a9e5c8.list -> current_81298e\n            second_7d1f3a.list -> current_81298e\n            true -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        contains_32727d.is_contained -> not_75283f.input\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_c0a3b6 root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"check consecutive\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_b3f5a8 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_b3f5a8.first\n            list_07cae4[_index_769593 + 1] -> sub_b3f5a8.second\n            sub_b3f5a8.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Number) bool_4524be\n\n            instance(x: 74, y: -23) min_7b5f9a root.Std_k98ojb.List.Min {}\n            instance(x: 285, y: -25) max_1e2c0d root.Std_k98ojb.List.Max {}\n            instance(x: 496, y: -24) sub_e6a8ed root.Std_k98ojb.Math.Sub {}\n\n            list_07cae4 -> min_7b5f9a.list\n            list_07cae4 -> max_1e2c0d.list\n            max_1e2c0d.result -> sub_e6a8ed.first\n            min_7b5f9a.result -> sub_e6a8ed.second\n            sub_e6a8ed.result + 1 -> bool_4524be\n\n            instance(x: 705, y: -26) notequal_c3e0c2 root.Std_k98ojb.Logic.NotEqual {}\n            map_c73e3b.output_list.length -> notequal_c3e0c2.left\n            bool_4524be -> notequal_c3e0c2.right\n            notequal_c3e0c2.result -> output_efbc78\n\n        } -> contains_32727d.handler\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_ae0c1d\n            in(x: -23, y: 79, name: \"_prev\") property(Number) _prev_6a5b7f\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_ae0c1d -> sub_c76d2b.first\n            _prev_6a5b7f -> sub_c76d2b.second\n            sub_c76d2b.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_a7b2a root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_a7b2a.left\n            1 -> equal_a7b2a.right\n            equal_a7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_b8a55 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_b8a55.left\n            1 -> equal_b8a55.right\n            equal_b8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_c8a55 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_c8a55.left\n            1 -> equal_c8a55.right\n            equal_c8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_d8a55 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_d8a55.left\n            1 -> equal_d8a55.right\n            equal_d8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_e8a55 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_e8a55.left\n            1 -> equal_e8a55.right\n            equal_e8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_a7b2a root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: 0, y: 24, name: \"current\") property(Number) current_1f9c4e\n            in(x: -30, y: -25, name: \"index\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) add_7f5e1c root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: -27) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_1f9c4e -> modulo_c76d2b.value\n            _index_170471 -> add_7f5e1c.first\n            1 -> add_7f5e1c.second\n            list_07cae4 -> add_7f5e1c.list\n            add_7f5e1c.result -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n            current_81298e -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        contains_32727d.list -> map_c73e3b.output_list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_c76d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> add_c76d2b.first\n            1 -> add_c76d2b.second\n            add_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> list_07cae4\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) add_ad7b2a root.Std_k98ojb.Math.Add {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> add_ad7b2a.first\n            1 -> add_ad7b2a.second\n            add_ad7b2a.result -> notequal_cb8a55.left\n            list_07cae4 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        list_07cae4 -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_f7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) has_consecutive_2b1a3f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_c76d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> add_c76d2b.first\n            1 -> add_c76d2b.second\n            add_c76d2b.result -> notequal_7836b4.left\n            _index_170471 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> has_consecutive_2b1a3f.handler\n        list_07cae4 -> has_consecutive_2b1a3f.list\n        has_consecutive_2b1a3f.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_b7c9ad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 49, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_7f8b5e root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> sub_7f8b5e.first\n            list_07cae4[_index_769593 + 1] -> sub_7f8b5e.second\n            sub_7f8b5e.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        list_07cae4[0..-2] -> map_c73e3b.items\n\n        contains_32727d.list -> map_c73e3b.output_list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_b7a4da root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 80, name: \"_next\") property(Number) _next_8c9d1f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_2b7e0a root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) equal_9d5c3c root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> sub_2b7e0a.first\n            _next_8c9d1f -> sub_2b7e0a.second\n            sub_2b7e0a.result -> equal_9d5c3c.left\n            1 -> equal_9d5c3c.right\n            equal_9d5c3c.result -> bool_4524be\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) getat_1f9d2a root.Std_k98ojb.List.GetAt {}\n            instance(x: 463, y: 51) slice_f7e3c6 root.Std_k98ojb.List.Slice {}\n            _index_769593 -> slice_f7e3c6.start\n            list_07cae4 -> getat_1f9d2a.list\n            _index_769593 -> getat_1f9d2a.index\n            getat_1f9d2a.value -> slice_f7e3c6.list\n            1 -> slice_f7e3c6.length\n            slice_f7e3c6.output_list -> output_efbc78\n        } -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_f6c7a4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"check consecutive pairs\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_1a5e3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n\n            _index_769593 -> sub_1a5e3f.first\n            _index_170471 -> sub_1a5e3f.second\n            sub_1a5e3f.result -> equal_7836b4.left\n            1 -> equal_7836b4.right\n            equal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"pair\") property(List) pair_4524be\n\n            instance(x: 74, y: -23) sub_1a5e3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) list_7d2b8a root.Std_k98ojb.List.List {}\n\n            _index_769593 -> sub_1a5e3f.first\n            1 -> sub_1a5e3f.second\n            sub_1a5e3f.result -> list_7d2b8a.index\n            current_81298e -> list_7d2b8a.value\n            list_7d2b8a.output_list -> pair_4524be\n        } -> filter_c91965.handler\n\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_a1f2d root.main.has_consecutive_numbers {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> getter_b280eb.property\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_for.items\n        sublist_for.item -> sublist_ifexpression.gen_2\n        sublist_for.index -> sublist_ifexpression.gen_0\n        getter_b280eb.value -> sublist_ifexpression.gen_1\n        sublist_for.onItem -> sublist_ifexpression.execute\n        sublist_for.done -> continue_a96db6\n        sublist_for.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sublist_ifexpression.value -> output_5bbcd7\n        sublist_ifexpression.else -> continue_a96db6\n        sublist_ifexpression.then -> main_for.reset\n        sublist_ifexpression.expression: \"sublist_index == 0 || sublist_previous == current\"\n        getter(x: -275, y: 160, name: \"getter_b280eb\") sublist_getter = sublist_previous\n        setter(x: -275, y: -313, name: \"setter_9d4f1c\") sublist_setter = sublist_previous\n        instance(x: -550, y: -20) sublist_for root.Std_k98ojb.Std.For {}\n        instance(x: -825, y: 93) sublist_ifexpression root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == 0 || sublist_previous == current\"\n        }\n        main_list_ec88cd -> main_for.items\n        sublist_ec88cd -> sublist_for.items\n        sublist_getter.value -> sublist_ifexpression.gen_1\n        sublist_setter.new_value -> sublist_for.item\n        sublist_for.index -> sublist_ifexpression.gen_0\n        sublist_for.item -> sublist_ifexpression.gen_2\n        sublist_for.onItem -> sublist_ifexpression.execute\n        sublist_for.done -> continue_a96db6\n        main_for.onItem -> main_getat.list\n        0 -> main_getat.index\n        main_getat.itemAtIndex -> getter_b280eb.new_value\n        execute_90aaec -> main_getat.execute\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        setter_9d4f1c.continue -> for_d26972.next\n        sublist_setter.continue -> sublist_for.next\n        main_for.item -> getat_ce2a48.new_value\n        main_getat.continue -> main_for.reset\n        sublist_ifexpression.then -> main_for.next\n        main_for.index -> ifexpression_875761.gen_0\n        main_for.item -> ifexpression_875761.gen_2\n        main_for.onItem -> ifexpression_875761.execute\n        main_for.done -> continue_a96db6\n\n        instance(x: -550, y: 160) sublist_getter root.Std_k98ojb.Getter {}\n        instance(x: -550, y: -313) sublist_setter root.Std_k98ojb.Setter {}\n        instance(x: -825, y: -20) sublist_for root.Std_k98ojb.Std.For {}\n        instance(x: -1100, y: 93) sublist_ifexpression root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == 0 || sublist_previous == current\"\n        }\n        instance(x: -1375, y: 160) main_getat root.Std_k98ojb.List.GetAt {}\n        instance(x: -1375, y: -20) main_for root.Std_k98ojb.Std.For {}\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        instance(x: 900, y: -100) find_f3a7e2 root.Std_k98ojb.Iteration.Find {\n            predicate: \"it == sublist[index]\"\n        }\n        getter(x: 600, y: -200, name: \"getter_sublist_index\") getter_sublist_index = index\n        setter(x: 800, y: -300, name: \"setter_main_list_index\") setter_main_list_index = main_list_index\n\n        find_f3a7e2.item -> setter_38e107.new_value\n        list_ec88cd -> getat_ce2a48.list\n        getter_sublist_index.value -> find_f3a7e2.items\n        for_d26972.index -> setter_main_list_index.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> getter_sublist_index.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"outer_list\") property(List) outer_list_ec88cd\n        in(x: -485, y: 155, name: \"inner_list\") property(List) inner_list_a6b9d3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        outer_list_ec88cd -> for_d26972.items\n        inner_list_a6b9d3 -> for_inner.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        outer_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 750, y: -150) ifexpression_inner root.Std_k98ojb.Std.IfExpression {\n            expression: \"inner_index == 0 || previous_inner <= current_inner\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb_inner\") getter_b280eb_inner = previous_inner\n        setter(x: 679, y: -313, name: \"setter_9d4f1c_inner\") setter_9d4f1c_inner = previous_inner\n        instance(x: 321, y: -20) for_inner root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c_inner\") setter_38e107_inner = previous_inner\n        instance(x: -275, y: -35) getat_ce2a48_inner root.Std_k98ojb.List.GetAt {}\n        ifexpression_inner.else -> continue_a96db6\n        ifexpression_inner.value -> output_5bbcd7\n        ifexpression_inner.then -> setter_9d4f1c_inner.execute\n        inner_list_a6b9d3 -> for_inner.items\n        for_inner.item -> ifexpression_inner.gen_2\n        for_inner.index -> ifexpression_inner.gen_0\n        getter_b280eb_inner.value -> ifexpression_inner.gen_1\n        for_inner.onItem -> ifexpression_inner.execute\n        for_inner.done -> continue_a96db6\n        for_inner.item -> setter_9d4f1c_inner.new_value\n        inner_list_a6b9d3 -> getat_ce2a48_inner.list\n        0 -> getat_ce2a48_inner.index\n        getat_ce2a48_inner.itemAtIndex -> setter_38e107_inner.new_value\n        execute_90aaec -> setter_38e107_inner.execute\n        setter_38e107_inner.continue -> for_inner.reset\n        setter_9d4f1c_inner.continue -> for_inner.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_9f8b6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_9f8b6d -> sublist_for.items\n        sublist_for.item -> sublist_if.expression.gen_0\n        sublist_for.index -> sublist_if.expression.gen_1\n        sublist_if.value -> output_5bbcd7\n        sublist_if.else -> continue_a96db6\n        sublist_if.then -> for_d26972.next\n        sublist_if.execute -> sublist_for.reset\n        sublist_for.onItem -> sublist_if.execute\n        sublist_for.done -> continue_a96db6\n\n        instance(x: 750, y: -180) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> sublist_for.items\n        for_d26972.index -> sublist_if.expression.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 750, y: -360) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.item -> ifexpression_875761.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.index -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 750, y: -540) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.item -> sublist_for.items\n        for_d26972.index -> sublist_if.expression.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 750, y: -720) root.Std_k98ojb.Std.For sublist_for {}\n\n        instance(x: 750, y: -900) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist[index] == main_list[current_index]\"\n        }\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_1\n\n        sublist_ec88cd -> for_d26972_sub.sublist\n        instance(x: 321, y: -20) for_d26972_sub root.Std_k98ojb.Std.For {}\n        for_d26972_sub.item -> getat_ce2a48_sub.list\n        0 -> getat_ce2a48_sub.index\n        getat_ce2a48_sub.itemAtIndex -> ifexpression_875761.gen_2\n\n        sublist_ec88cd -> ifexpression_875761.sublist\n        ifexpression_875761.then -> for_d26972_sub.next\n        ifexpression_875761.else -> for_d26972_sub.reset\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        execute_90aaec -> getat_ce2a48.execute\n        getat_ce2a48.continue -> for_d26972.next\n\n        instance(x: -275, y: 155) getat_ce2a48_sub root.Std_k98ojb.List.GetAt {}\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_5bbcd7\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_d26972\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_d26972.execute\n        ifexpression_875761.else -> continue_5bbcd7\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n\n        sublist_a96db6 -> for_sublist.items\n        getter_b280eb.value -> ifexpression_875761.gen_0\n\n        instance(x: 800, y: -20) for_sublist root.Std_k98ojb.Std.For {}\n        index -> for_sublist.index\n        setter_9d4f1c.new_value -> for_sublist.item\n        getter_b280eb.value == List.Length(sublist_a96bd7) -> ifexpression_875761.gen_2\n\n        sublist_a96db6 -> getat_ce2a48_sub.list\n        index -> getat_ce2a48_sub.index\n        getat_ce2a48_sub.itemAtIndex -> ifexpression_875761.gen_1\n\n        for_d26972.onItem -> setter_9d4f1c.execute\n        for_d26972.done -> continue_5bbcd7\n        for_d26972.item -> getter_b280eb.value\n        for_d26972.index -> setter_9d4f1c.new_value\n        setter_38e107.continue -> for_d26972.next\n\n        ifexpression_875761.value -> output_d26972.execute\n        for_sublist.onItem -> continue_5bbcd7\n        for_sublist.done -> continue_5bbcd7\n        for_sublist.item == getat_ce2a48_sub.itemAtIndex -> setter_9d4f1c.new_value\n        getter_b280eb.value == List.Length(sublist_a96bd7) -> ifexpression_875761.gen_3\n\n        instance(x: -275, y: 160) getat_ce2a48_sub root.Std_k98ojb.List.GetAt {}\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 200) query_filter_9f8a2c root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist[index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n\n        ifexpression_875761.then -> output_5bbcd7.set(true)\n        ifexpression_875761.else -> continue_a96db6\n        query_filter_9f8a2c.result -> for_d26972.items\n        main_list_ec88cd -> for_d26972.items\n        getter_b280eb.value -> index_check.expression\n        index_check.value -> ifexpression_875761.gen_0\n        for_d26972.onItem -> query_filter_9f8a2c.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        instance(x: 10, y: -50) ifexpression_index_check root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < sublist.length\"\n        }\n        index_check -> ifexpression_index_check.gen_0\n        0 -> getter_b280eb.value\n        for_d26972.index -> setter_38e107.new_value\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"outer_list\") property(List) outer_list_ec88cd\n        in(x: -485, y: 165, name: \"inner_list\") property(List) inner_list_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_5bbcd7\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_d26972\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || (outer[index:index+len] == inner)\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_5bbcd7\n        ifexpression_875761.value -> output_d26972\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        outer_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_5bbcd7\n        for_d26972.item -> setter_9d4f1c.new_value\n        outer_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 500, y: -200) filter_q7o96c root.Std_k98ojb.Query.Filter {\n            where: \"outer[index:index+len] == inner\"\n        }\n        list_slice_instance = List.Slice\n        list_slice_instance.start = index\n        list_slice_instance.end = index + len\n        outer_list_ec88cd -> list_slice_instance.list\n        list_slice_instance.slice -> filter_q7o96c.input\n        inner_list_a96db6 -> filter_q7o96c.filter\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_5bbcd7\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_d26972\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || main_list[index + len] == sublist[index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_5bbcd7\n        ifexpression_875761.value -> output_d26972\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_5bbcd7\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_numbers_ai -> find_missing_node.sorted_numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -453) std_if_node root.Std_k98ojb.If {}\n\n        sorted_numbers_ai -> for_node.items\n        for_node.on_item -> std_if_node.input\n\n        instance(x: 426, y: -588) math_expression_node_1 root.Std_k98ojb.Math.Expression {}\n        instance(x: 426, y: -729) math_expression_node_2 root.Std_k98ojb.Math.Expression {}\n\n        for_node.index -> math_expression_node_1.index\n        sorted_numbers_ai -> math_expression_node_1.sorted_numbers\n\n        std_if_node.then -> math_expression_node_2.trigger\n\n        math_expression_node_1.expression = \"it - index\"\n        math_expression_node_2.expression = \"index + 1\"\n\n        instance(x: 426, y: -864) set_property_node root.Std_k98ojb.SetProperty {}\n        instance(x: 426, y: -1005) std_if_else_node root.Std_k98ojb.IfElse {}\n\n        math_expression_node_1.result -> std_if_node.value\n        std_if_node.else_ -> set_property_node.trigger\n\n        std_if_else_node.input -> std_if_node.output\n        std_if_else_node.then -> math_expression_node_2.result\n        std_if_else_node.else_ -> for_node.index\n\n        set_property_node.property = \"missing_number\"\n        set_property_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_list_ai -> for_node.items\n        for_node.trigger -> trigger_input\n        for_node.reset -> reset_input\n        for_node.next -> next_input\n\n        instance(x: 426, y: -423) if_node root.Std_k98ojb.If {}\n        for_node.on_item -> if_node.input\n        index_ai -> if_node.left\n        math_expr_node -> if_node.right\n        \n        instance(x: 426, y: -519) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression = \"it + 1\"\n        }\n        for_node.item -> math_expr_node.it\n\n        instance(x: 426, y: -615) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        if_node.value -> not_equal_node.left\n        math_expr_node.result -> not_equal_node.right\n\n        instance(x: 426, y: -711) set_trigger node {\n            trigger = missing_number_ai\n        }\n        not_equal_node.true -> set_trigger.trigger\n\n        index_ai -> for_node.index\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n    instance(x: 0, y: 0) trigger_input {}\n    instance(x: 0, y: 0) reset_input {}\n    instance(x: 0, y: 0) next_input {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> trigger_ai.trigger\n        for_node.reset -> reset_ai.trigger\n\n        instance(x: 426, y: -393) std_if_node root.Std_k98ojb.If {}\n        for_node.index -> std_if_node.input\n        std_if_node.then -> then_ai.trigger\n        std_if_node.else_ -> else_ai.trigger\n\n        instance(x: 426, y: -453) math_sub_node root.Std_k98ojb.Math.Sub {}\n        for_node.index -> math_sub_node.first\n        for_node.item -> math_sub_node.second\n        math_sub_node.result -> result_ai.result\n\n        instance(x: 426, y: -513) std_if_expression_node root.Std_k98ojb.IfExpression {}\n        result_ai.result -> std_if_expression_node.expression\n        std_if_expression_node.value -> missing_ai\n\n        trigger_ai = instance(x: 159, y: -303) std_trigger_node root.Http_q7o96c.Trigger {}\n        reset_ai = instance(x: 426, y: -573) std_reset_node root.Std_k98ojb.Reset {}\n\n        then_ai = instance(x: 159, y: -393) std_then_node root.Http_q7o96c.Then {}\n        else_ai = instance(x: 426, y: -603) std_else_node root.Http_q7o96c.Else {}\n        result_ai = instance(x: 159, y: -453) std_result_node root.Http_q7o96c.Result {}\n\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_numbers_ai -> for_node.items\n        for_node.trigger -> trigger\n        for_node.done -> done\n\n        var(index: 0, name: \"expected_num\") property(Number) expected_num_var\n\n        instance(x: 426, y: -453) math_expression_node root.Std_k98ojb.Math.Expression {}\n        math_expression_node.expression = \"index + 1\"\n        index_var -> math_expression_node.index\n        math_expression_node.result -> expected_num_var.value\n\n        instance(x: 426, y: -579) std_if_node root.Std_k98ojb.If {}\n        logic_not_equal_node.left -> current_item_var.value\n        logic_not_equal_node.right -> expected_num_var.value\n        logic_not_equal_node.output -> std_if_node.input\n        for_node.item -> current_item_var.value\n\n        instance(x: 426, y: -705) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        \n        std_if_node.then -> missing_number_then_trigger\n        std_if_node.else_ -> continue_loop_trigger\n\n        instance(x: 426, y: -831) trigger_node root.Http_q7o96c.Trigger {}\n        expected_num_var.value -> trigger_node.payload\n        trigger_node.trigger -> missing_number_ai\n\n        instance(x: 426, y: -957) trigger_node root.Http_q7o96c.Trigger {}\n        trigger_node.trigger -> for_node.next\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_list_ai -> for_node.items\n        for_node.on_item {\n            in(index: 0, x: -248, y: -135, name: \"item\") property(Number) item_ai\n            out(x: 159, y: -135, name: \"next_trigger\") trigger NextTrigger_ae\n\n            instance(x: 426, y: -219) if_node root.Std_k98ojb.If {}\n            in(x: -248, y: -135, name: \"input\") property(Bool) input_ai\n            out(then: 159, y: -135, name: \"then_trigger\") trigger ThenTrigger_ae\n            item_ai -> if_node.input\n\n            instance(x: 426, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {}\n            in(expression: \"item + 1\", x: -248, y: -171, name: \"expression\") property(String) expression_ai\n            in(first: 0, x: -248, y: -207, name: \"first\") property(Number) first_ai\n            item_ai -> math_expr_node.first\n            math_expr_node.result -> if_node.then\n\n            instance(x: 426, y: -387) list_contains_node root.Std_k98ojb.List.Contains {}\n            in(item: 0, x: -248, y: -303, name: \"item\") property(Number) item_ai\n            sorted_list_ai -> list_contains_node.list\n            math_expr_node.result -> list_contains_node.item\n\n            instance(x: 426, y: -471) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            in(left: 0, x: -248, y: -387, name: \"left\") property(Number) left_ai\n            in(right: 0, x: -248, y: -423, name: \"right\") property(Number) right_ai\n            list_contains_node.contains -> logic_not_equal_node.left\n            math_expr_node.result -> logic_not_equal_node.right\n\n            instance(x: 426, y: -555) if_expression_node root.Std_k98ojb.IfExpression {}\n            in(expression: \"left\", x: -248, y: -471, name: \"expression\") property(String) expression_ai\n            list_contains_node.contains -> if_expression_node.expression\n            logic_not_equal_node.result -> if_expression_node.then\n\n            if_expression_node.value -> input_ai\n            then_trigger_ae -> next_trigger_ae\n        }\n        for_node.done {\n            instance(x: 426, y: -639) math_expr_node root.Std_k98ojb.Math.Expression {}\n            in(expression: \"index + 1\", x: -248, y: -675, name: \"expression\") property(String) expression_ai\n            in(first: 0, x: -248, y: -711, name: \"first\") property(Number) first_ai\n            for_node.index -> math_expr_node.first\n\n            instance(x: 426, y: -795) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            sorted_list_ai -> list_get_at_node.list\n            math_expr_node.result -> list_get_at_node.index\n\n            if_expression_node.value -> missing_number_ai\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> trigger_input\n        \n        var(prev: Number) prev_num = 0\n        var(current: Number) current_num = 0\n        var(missing: Number) missing_num = 0\n\n        instance(x: 426, y: -423) if_node root.Std_k98ojb.If {}\n        for_node.index -> if_node.input\n        for_node.item -> current_num\n        \n        Math_k98ojb.Math.Sub {\n            first: current_num\n            second: prev_num\n            result: diff\n        }\n        \n        instance(x: 426, y: -519) if_expression_node root.Std_k98ojb.IfExpression {}\n        expression(diff: \"it > 1\") -> if_expression_node.expression\n        \n        if_expression_node.value -> missing_flag\n\n        Logic_k98ojb.Logic.Equal {\n            left: missing_flag\n            right: true\n            value: is_missing\n        }\n\n        instance(x: 426, y: -615) math_expr_node root.Std_k98ojb.Math.Expression {}\n        expression(\"prev + 1\") -> math_expr_node.expression\n\n        Logic_k98ojb.Logic.And {\n            left: is_missing\n            right: missing_num == 0\n            value: set_missing\n        }\n\n        instance(x: 426, y: -711) if_set_missing_node root.Std_k98ojb.If {}\n        set_missing -> if_set_missing_node.input\n        math_expr_node.result -> missing_num\n\n        for_node.on_item -> next_input\n        if_node.then -> prev_num = current_num\n        \n        for_node.done -> done_output\n        missing_num -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n    \n    input(trigger_input: \"Start\") {\n        type: \"trigger\"\n    }\n    \n    output(done_output: \"Done\") {\n        type: \"trigger\"\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_list_ai -> find_missing_node.sorted_list\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a list.\") find_missing {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_list_ai -> for_node.items\n\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n        for_node.on_item -> if_node.input\n        for_node.index -> if_node.value.index\n        for_node.item -> if_node.value.item\n\n        instance(x: 426, y: -588) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"index + 1\"\n        }\n        for_node.index -> math_expr_node.index\n\n        instance(x: 426, y: -723) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        math_expr_node.result -> not_equal_node.left\n        for_node.item -> not_equal_node.right\n\n        instance(x: 426, y: -858) set_missing_num_node root.main.set_missing_number {}\n        if_node.then -> set_missing_num_node.trigger\n        not_equal_node.output -> set_missing_num_node.index\n\n        instance(x: 426, y: -993) math_expr_node_2 root.Std_k98ojb.Math.Expression {\n            expression: \"index\"\n        }\n        set_missing_num_node.index -> math_expr_node_2.index\n\n        math_expr_node_2.result -> missing_number_ai\n    }\n\n    func(doc: \"sets the missing number.\") set_missing_number {\n        in(x: -426, y: -248, name: \"trigger\") trigger()\n        in(x: 159, y: -219, name: \"index\") property(Number) index_ai\n\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"index\"\n        }\n        index_ai -> math_expr_node.index\n\n        math_expr_node.result -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        \n        instance(x: 426, y: -403) if_node root.Std_k98ojb.If {}\n        for_node.index -> if_node.input\n        MathExpressionNode_1.result -> if_node.value\n\n        func(doc: \"math expression to check missing number\") MathExpressionNode_1 {\n            in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n            in(x: 159, y: -219, name: \"item\") property(Number) item_ai\n            \n            instance(x: 426, y: -303) math_expression_node root.Std_k98ojb.Math.Expression {}\n            math_expression_node.expression = \"it.index + 1 != it.item\"\n            \n            index_ai -> math_expression_node.index\n            for_node.item -> math_expression_node.item\n            math_expression_node.result -> if_node.value\n        }\n\n        instance(x: 426, y: -503) then_trigger_node root.Std_k98ojb.Trigger {}\n        if_node.then -> then_trigger_node.trigger\n\n        instance(x: 426, y: -603) get_at_node root.Std_k98ojb.List.GetAt {}\n        for_node.index -> get_at_node.index\n        numbers_ai -> get_at_node.list\n        \n        get_at_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_numbers_ai -> for_node.items\n        for_node.trigger -> trigger\n        for_node.reset -> reset\n\n        instance(x: 426, y: -453) if_expression_node root.Std_k98ojb.IfExpression {\n            expression: \"index == 0 || item != index + sorted_numbers[0] - 1\"\n        }\n        for_node.item -> if_expression_node.item\n        for_node.index -> if_expression_node.index\n        sorted_numbers_ai -> if_expression_node.sorted_numbers\n\n        instance(x: 426, y: -588) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"index + sorted_numbers[0]\"\n        }\n        if_expression_node.value -> math_expr_node.value\n        sorted_numbers_ai -> math_expr_node.sorted_numbers\n        for_node.index -> math_expr_node.index\n\n        instance(x: 426, y: -723) std_if_node root.Std_k98ojb.If {}\n        if_expression_node.value -> std_if_node.input\n        math_expr_node.result -> std_if_node.then.trigger\n        for_node.next -> std_if_node.else.trigger\n\n        instance(x: 426, y: -858) trigger_output_node TriggerOutput_0 {}\n        std_if_node.then -> trigger_output_node.trigger\n        trigger_output_node.output -> missing_number_ai\n\n        instance(x: 426, y: -993) trigger_output_node TriggerOutput_1 {}\n        for_node.done -> trigger_output_node.trigger\n        trigger_output_node.output -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n\n        instance(x: 726, y: -303) if_node root.Std_k98ojb.If {}\n        for_node.index -> if_node.input\n        for_node.item -> if_node.value\n\n        instance(x: 1026, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"it + 1\"\n        }\n        for_node.item -> math_expr_node.it\n\n        instance(x: 1326, y: -303) list_contains_node root.Std_k98ojb.List.Contains {}\n        numbers_ai -> list_contains_node.list\n        math_expr_node.result -> list_contains_node.item\n\n        instance(x: 1626, y: -303) if_else_node root.Std_k98ojb.If {}\n        list_contains_node.value -> if_else_node.input\n\n        instance(x: 1926, y: -303) number_1_node root.Std_k98ojb.Number {\n            value: 1\n        }\n        for_node.index -> number_1_node.value\n        number_1_node.value -> if_else_node.else_trigger\n\n        math_expr_node.result -> if_else_node.then_trigger\n        if_else_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_4f7d5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_d9a3e8 root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_e6b3f1 root.Std_k98ojb.Strings.Join {}\n        characters_4f7d5c.output -> filter_d9a3e8.items\n        \"it != ' '\" -> filter_d9a3e8.where\n        \"it != ','\" -> filter_d9a3e8.and\n        \"it != '.'\" -> filter_d9a3e8.and\n        filter_d9a3e8.result -> join_e6b3f1.items\n        \":\" -> join_e6b3f1.separator\n        input_0 -> characters_4f7d5c.input\n        join_e6b3f1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_d2a9e8 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_5c6d9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) if_expression_d4a7e8 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 530, y: -1) join_f3c8b2 root.Std_k98ojb.Strings.Join {}\n        characters_5c6d9f.output -> if_expression_d4a7e8.input\n        \"it == ' '\" -> if_expression_d4a7e8.expression\n        \":\" -> if_expression_d4a7e8.then\n        \"it\" -> if_expression_d4a7e8.else_\n        if_expression_d4a7e8.value -> join_f3c8b2.input\n        \",\" -> join_f3c8b2.delimiter\n        input_0 -> characters_5c6d9f.input\n        join_f3c8b2.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_7a1e8b root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_7f3d4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) ifexpression_8e5a6f root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 530, y: -2) join_9d1b7e root.Std_k98ojb.Strings.Join {}\n        characters_7f3d4c.output -> ifexpression_8e5a6f.input\n        \"item == ' ' || item == ',' || item == '.' ? ':' : item\" -> ifexpression_8e5a6f.expression\n        input_0 -> characters_7f3d4c.input\n        ifexpression_8e5a6f.value -> join_9d1b7e.list\n        \":\" -> join_9d1b7e.separator\n        join_9d1b7e.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_a3c4f8 root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_d8f9e3 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_6a7c4d root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_b5f4a1 root.Std_k98ojb.Strings.Join {}\n\n        input_0 -> characters_d8f9e3.input\n        characters_d8f9e3.characters -> filter_6a7c4d.items\n\n        func(predicate: \"Replaces spaces, commas, or dots with a colon.\") replace_chars {\n            in(x: 0, y: -2) property(String) it\n            out(x: 0, y: 2) property(String) result\n\n            instance(x: 0, y: 1) if_7f8e9c root.Std_k98ojb.Logic.Equal {}\n            instance(x: 265, y: 0) if_5d3a4b root.Std_k98ojb.Logic.Equal {}\n            instance(x: 530, y: -2) if_3b6d2a root.Std_k98ojb.Logic.Equal {}\n\n            it -> if_7f8e9c.left\n            \" \" -> if_7f8e9c.right\n            if_7f8e9c.result -> if_5d3a4b.input\n\n            it -> if_5d3a4b.left\n            \",\" -> if_5d3a4b.right\n            if_5d3a4b.result -> if_3b6d2a.input\n\n            it -> if_3b6d2a.left\n            \".\" -> if_3b6d2a.right\n\n            instance(x: 0, y: -1) string_literal_1 root.Std_k98ojb.Strings.Literal {}\n            \":\" -> string_literal_1.value\n            string_literal_1.output -> replace_chars.result\n\n            instance(x: 265, y: -2) string_literal_2 root.Std_k98ojb.Strings.Literal {}\n            it -> string_literal_2.input\n            string_literal_2.output -> replace_chars.result\n\n            if_7f8e9c.result -> replace_chars.result\n            if_5d3a4b.result -> replace_chars.result\n            if_3b6d2a.result -> replace_chars.result\n        }\n\n        filter_6a7c4d.predicate <- replace_chars\n        filter_6a7c4d.output -> join_b5f4a1.items\n        \":\" -> join_b5f4a1.separator\n        join_b5f4a1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_f8b3e2 root.main.replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_ae4f3d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_9a5b7c root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_d8c6ef root.Std_k98ojb.Strings.Join {}\n        characters_ae4f3d.output -> filter_9a5b7c.items\n        \"it != ' ' && it != ',' && it != '.'\" -> filter_9a5b7c.where\n        input_0 -> characters_ae4f3d.input\n        \":\" -> join_d8c6ef.separator\n        filter_9a5b7c.result -> join_d8c6ef.items\n        join_d8c6ef.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e2f3g root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_c9b4f5 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 80) for_6e7a8c root.Std_k98ojb.Loop.For {}\n        instance(x: 265, y: 158) ifExpression_bf2d3a root.Std_k98ojb.Logic.IfExpression {}\n        characters_c9b4f5.output -> for_6e7a8c.items\n        for_6e7a8c.on_item -> ifExpression_bf2d3a.input\n        \"item\" -> ifExpression_bf2d3a.a\n        \" \" -> ifExpression_bf2d3a.b\n        \":\" -> ifExpression_bf2d3a.c\n        \",\" -> ifExpression_bf2d3a.d\n        \".\" -> ifExpression_bf2d3a.e\n        input_0 -> characters_c9b4f5.input\n        for_6e7a8c.done -> result_0\n        ifExpression_bf2d3a.value -> for_6e7a8c.item\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_d1b9f5 root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_7f9b6a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) replace_3c4e8d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) join_5a3f9e root.Std_k98ojb.Strings.Join {}\n        characters_7f9b6a.output -> for_each_f1b3ed.input\n        input_0 -> characters_7f9b6a.input\n        \" ,.\" -> replace_3c4e8d.replace\n        \":\" -> replace_3c4e8d.with\n        for_each_f1b3ed.item -> replace_3c4e8d.input\n        join_5a3f9e.delimiter -> \":\"\n        for_each_f1b3ed.output -> join_5a3f9e.items\n        join_5a3f9e.result -> result_0\n\n        instance(x: 265, y: 51) ForEach_c8d4e6 root.Std_k98ojb.Iteration.ForEach {\n            on item: for_each_f1b3ed\n        }\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_7c9a2f root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_c4f8d9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_d5e3a6 root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_1b7c4a root.Std_k98ojb.Strings.Join {}\n        characters_c4f8d9.output -> filter_d5e3a6.items\n        \"it == ' ' || it == ',' || it == '.'\" -> filter_d5e3a6.where\n        input_0 -> characters_c4f8d9.input\n        join_1b7c4a.delimiter <- \":\"\n        filter_d5e3a6.output -> join_1b7c4a.items\n        join_1b7c4a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_a9f8d2 root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_ae5f8d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 70) for_d9c4a3 root.Std_k98ojb.Loops.For {}\n        instance(x: 265, y: 70) if_2a6d1f root.Std_k98ojb.Control.If {}\n\n        input_0 -> characters_ae5f8d.input\n        characters_ae5f8d.characters -> for_d9c4a3.items\n\n        for_d9c4a3.onItem -> if_2a6d1f.input\n        for_d9c4a3.item -> if_2a6d1f.value\n\n        instance(x: 265, y: 140) concat_b0b8e7 root.Std_k98ojb.Strings.Concat {}\n        instance(x: 530, y: 70) setitem_5f3b1e root.Std_k98ojb.Lists.SetItem {}\n\n        if_2a6d1f.then -> concat_b0b8e7.input\n        \":\" -> concat_b0b8e7.value\n\n        if_2a6d1f.else -> concat_b0b8e7.input\n        for_d9c4a3.item -> concat_b0b8e7.value\n\n        concat_b0b8e7.output -> setitem_5f3b1e.item\n        for_d9c4a3.index -> setitem_5f3b1e.index\n        [] -> setitem_5f3b1e.list\n\n        instance(x: 530, y: 140) join_e2d8d6 root.Std_k98ojb.Strings.Join {}\n        setitem_5f3b1e.output -> join_e2d8d6.items\n        \"\" -> join_e2d8d6.separator\n\n        join_e2d8d6.output -> result_0\n\n        instance(x: 265, y: 210) or_9a4c7d root.Std_k98ojb.Logic.Or {}\n        for_d9c4a3.item -> or_9a4c7d.left\n        \" \" -> or_9a4c7d.right\n        for_d9c4a3.item -> or_9a4c7d.value\n\n        instance(x: 265, y: 280) or_f1b8f2 root.Std_k98ojb.Logic.Or {}\n        or_9a4c7d.output -> or_f1b8f2.left\n        \",\" -> or_f1b8f2.right\n        or_9a4c7d.output -> or_f1b8f2.value\n\n        instance(x: 265, y: 350) or_3e6f0a root.Std_k98ojb.Logic.Or {}\n        or_f1b8f2.output -> or_3e6f0a.left\n        \".\" -> or_3e6f0a.right\n        or_f1b8f2.output -> or_3e6f0a.value\n\n        or_3e6f0a.output -> if_2a6d1f.condition\n    }\n\n    instance(x: 81, y: 52) ReplaceSpecialChars_c5c7d9 root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) characters_9e5c8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) filter_3f7d4e root.Std_k98ojb.Query.Filter {}\n        instance(x: 530, y: -2) join_6b8a1f root.Std_k98ojb.Strings.Join {}\n        characters_9e5c8a.output -> filter_3f7d4e.items\n        \"it != ' '\" -> filter_3f7d4e.where\n        input_0 -> characters_9e5c8a.input\n        filter_3f7d4e.filtered -> join_6b8a1f.list\n        \":\" -> join_6b8a1f.separator\n        join_6b8a1f.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_d7d4e5 root.main.text_replace_space_comma_dot {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") are_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 2123, y: -53) equal_2e5c0d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1926, y: -155) if_d9a8c7 root.Std_k98ojb.Std.If {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_eb8a1e root.Std_k98ojb.Strings.Substring {}\n            element_5f51f7 -> substr_eb8a1e.string\n            0 -> substr_eb8a1e.startIndex\n            1 -> substr_eb8a1e.length\n            substr_eb8a1e.output -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> List.Length.length\n        List.Length.length -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        map_6030c9.output_list -> equal_2e5c0d.list\n        equal_2e5c0d.list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_2e5c0d.element\n        0 -> equal_2e5c0d.gen_1\n        equal_2e5c0d.result -> if_d9a8c7.predicate\n        if_07b8c7.then -> if_d9a8c7.execute\n        if_d9a8c7.else -> continue_8ba06b\n        if_d9a8c7.then -> equal_2e5c0d.next\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) are_characters_same_f0be66 root.main.are_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") are_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_6e1d3f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n != i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_6e1d3f.input\n        characters_6e1d3f.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_4b2d1c root.Std_k98ojb.Math.Expression {\n                expression: \"(element == n)\"\n            }\n            element_5f51f7 -> expression_4b2d1c.gen_0\n            input_f5c03d -> expression_4b2d1c.gen_1\n            expression_4b2d1c.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) are_all_characters_same_5d4a1e root.main.are_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_6f3d1a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(ch == firstChar)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_6f3d1a.input\n        characters_6f3d1a.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_3c6e8d root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> eq_3c6e8d.left\n            input_f5c03d -> eq_3c6e8d.right\n            eq_3c6e8d.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> if_e19a62.predicate\n        if_e19a62.else -> for_8cb3f6.next\n    }\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_5a4f2e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_1d7c6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(c == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) getat_0e1f5d root.Std_k98ojb.List.GetAt {}\n\n        input_f5c03d -> characters_5a4f2e.input\n        characters_5a4f2e.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) getat_2c8a1d root.Std_k98ojb.List.GetAt {}\n            0 -> getat_2c8a1d.index\n            characters_5a4f2e.characters -> getat_2c8a1d.list\n\n            instance(x: -20, y: 17) equal_9b7a3a root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_9b7a3a.left\n            getat_2c8a1d.item -> equal_9b7a3a.right\n\n            equal_9b7a3a.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        getat_0e1f5d.list -> equal_1d7c6f.left\n        characters_5a4f2e.characters -> equal_1d7c6f.right\n        equal_1d7c6f.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        equal_1d7c6f.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        0 -> getat_0e1f5d.index\n        characters_5a4f2e.characters -> getat_0e1f5d.list\n        if_e19a62.else -> for_8cb3f6.next\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_characters_same_f0be66 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") are_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(ch == first_char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {}\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n            element_5f51f7 -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        expression_9fba8c.gen_1 -> for_8cb3f6.index\n        Strings.Characters.characters -> expression_9fba8c.gen_0\n        List.GetAt.item -> expression_b720d7.gen_0\n        List.GetAt.list -> expression_b720d7.gen_1\n\n        0 -> List.GetAt.index\n        for_8cb3f6.item -> List.GetAt.element\n        List.GetAt.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n    \n\n    instance(x: -189, y: 222) are_all_characters_same_0d1e5c root.main.are_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1233, y: -54) strings_characters_7d0c1e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1765, y: -53) if_f6b9c2 root.Std_k98ojb.Std.If {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_7d0c1e.input\n        strings_characters_7d0c1e.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) strings_characters_9b6a8c root.Std_k98ojb.Strings.Characters {}\n            element_5f51f7 -> strings_characters_9b6a8c.input\n            strings_characters_9b6a8c.characters.0 -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> strings_characters_7d0c1e.input\n        strings_characters_7d0c1e.characters.0 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_f0be66 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) filter_3e7d5f root.Std_k98ojb.Query.Filter {\n            where: \"it != first_character\"\n        }\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) characters_d6f9e2 root.Std_k98ojb.Strings.Characters {}\n\n        1 -> characters_d6f9e2.input\n        input_f5c03d -> characters_d6f9e2.input\n        characters_d6f9e2.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) firstitem_1e4c8b root.Std_k98ojb.List.FirstItem {}\n            element_5f51f7 -> firstitem_1e4c8b.list\n            firstitem_1e4c8b.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        filter_3e7d5f.list -> if_e19a62.input\n        if_e19a62.value -> out_f3db9f\n        if_e19a62.else -> continue_8ba06b\n        characters_d6f9e2.characters -> if_07b8c7.then\n        map_6030c9.output_list -> filter_3e7d5f.list\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        1 -> if_07b8c7.else\n        if_07b8c7.value -> characters_d6f9e2.characters\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_5d9e2c root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1120, y: -400) equal_1d3c5e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1812, y: -500) all_equal_f7a6f9 root.Std_k98ojb.List.AllEqual {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        for_8cb3f6.item -> equal_1d3c5e.left\n        map_6030c9.output_list.0 -> equal_1d3c5e.right\n        equal_1d3c5e.result -> all_equal_f7a6f9.predicate\n        Strings.Characters.characters -> all_equal_f7a6f9.items\n        all_equal_f7a6f9.result -> out_f3db9f\n\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.else -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_characters_same_f0be66 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") are_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_d6a1d2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(ch == firstChar)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_d6a1d2.input\n        characters_d6a1d2.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) if_f9b1a4 root.Std_k98ojb.Std.If {}\n            func() {\n                in(x: -76, y: 46, name: \"firstChar\") property(String) firstChar_5f51f7\n                out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n                instance(x: 106, y: 17) if_1e3c8a root.Std_k98ojb.Std.If {}\n                firstChar_5f51f7 -> expression_b720d7.gen_0\n                element_5f51f7 -> expression_b720d7.gen_1\n                expression_b720d7.result -> if_1e3c8a.predicate\n                if_1e3c8a.then -> out_d0fd24\n                if_1e3c8a.else -> func() {\n                    in(x: -76, y: 46, name: \"firstChar\") property(String) firstChar_5f51f7\n                    out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n                    instance(x: 106, y: 17) if_1e3c8a root.Std_k98ojb.Std.If {}\n                    firstChar_5f51f7 -> expression_b720d7.gen_0\n                    element_5f51f7 -> expression_b720d7.gen_1\n                    expression_b720d7.result -> if_1e3c8a.predicate\n                    if_1e3c8a.then -> out_d0fd24\n                }.execute\n            }.execute -> if_f9b1a4.execute\n\n            element_5f51f7 -> if_f9b1a4.value\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        add_b4554f.result -> expression_9fba8c.gen_0\n\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) are_characters_same_c5e2d0 root.main.are_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> Strings_Characters_0e3c2a.input\n        Strings_Characters_0e3c2a.characters -> generaterange_038fce.from\n        1 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n            element_5f51f7 -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        List_FirstItem_4e5a8b.list -> expression_b720d7.gen_0\n        Strings_Characters_0e3c2a.characters -> List_FirstItem_4e5a8b.list\n\n        lessthanorequal_f11fda.left -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> for_8cb3f6.next\n\n        add_b4554f.first -> for_8cb3f6.index\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n\n        if_e19a62.then -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) filter_61b38d root.Std_k98ojb.Query.Filter {\n            where: \"'0' <= it && it <= '9'\"\n        }\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_adfa16.input\n        characters_adfa16.characters -> filter_61b38d.items\n\n        filter_61b38d.on_item -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n\n        1 -> add_88bb8a.first\n        add_88bb8a.second -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> characters_adfa16.input\n        characters_adfa16.characters -> length_61b38d.list\n\n        length_61b38d.length -> add_88bb8a.first\n        0 -> add_88bb8a.second\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> count_digits_96023e.s_6b655b\n        s_6b655b -> strings_characters_3c4d1f.input\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 80, y: -127) ifexpression_f8e9a5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_digit\"\n        }\n        strings_characters_3c4d1f.characters -> modulo_adfa16.value\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> div_547f34.first\n        10 -> div_547f34.second\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_f8e9a5.gen_0\n        instance(x: -202, y: -127) equals_4c1a3d root.Std_k98ojb.Logic.Equal {}\n        48 -> equals_4c1a3d.left\n        floor_61b38d.output -> equals_4c1a3d.right\n        equals_4c1a3d.result -> ifexpression_f8e9a5.is_digit\n        ifexpression_f8e9a5.then -> add_88bb8a.execute\n        ifexpression_f8e9a5.else -> count_digits_96023e.next_char\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> strings_characters_3d7de6.input\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        floor_61b38d.input -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        strings_characters_3d7de6.characters -> iteration_find_3d7de6.items\n        instance(x: 656, y: -330) iteration_find_3d7de6 root.Std_k98ojb.Iteration.Find {\n            predicate: \"it >= '0' && it <= '9'\"\n        }\n        iteration_find_3d7de6.item -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> strings_characters_abc123.characters\n        strings_characters_abc123.characters[0] -> is_digit_check_1\n        is_digit_check_1 -> ifexpression_isdigit.execute\n        ifexpression_isdigit.then -> add_88bb8a.second\n        1 -> ifexpression_isdigit.else\n        strings_characters_abc123.characters.slice(1, -1) -> count_digits_96023e.s_6b655b\n    }\n\n    instance(x: 97, y: -127) is_digit_check_1 root.Std_k98ojb.Std.IfExpression {\n        expression: \"char >= '0' && char <= '9'\"\n    }\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n    instance(x: 97, y: -127) strings_characters_abc123 root.Std_k98ojb.Strings.Characters {}\n    instance(x: 97, y: -127) ifexpression_isdigit root.Std_k98ojb.Std.IfExpression {\n        expression: \"char >= '0' && char <= '9'\"\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n\n        count_digits_96023e.in(x: -436, y: -213, name: \"char\") property(String) char_f3b2c5\n        count_digits_96023e.out(x: 1169, y: -269, name: \"next_char\") trigger() next_char_e1f4d7\n\n        instance(x: 97, y: -127) is_digit_check root.Std_k98ojb.Std.IfExpression {\n            expression: \"char >= '0' && char <= '9'\"\n        }\n\n        count_digits_96023e.in(x: -436, y: -213, name: \"next_index\") property(Number) next_index_f3b2c5\n        instance(x: 97, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        10 -> div_547f34.second\n\n        count_digits_96023e.in(x: -436, y: -213, name: \"length\") property(Number) length_f3b2c5\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        1 -> add_88bb8a.first\n\n        count_digits_96023e.in(x: -436, y: -213, name: \"index\") property(Number) index_f3b2c5\n        instance(x: 656, y: -330) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        10 -> modulo_adfa16.divisor\n\n        count_digits_96023e.in(x: -436, y: -213, name: \"char_index\") property(Number) char_index_f3b2c5\n        instance(x: 97, y: -249) floor_61b38d root.Std_k98ojb.Math.Floor {}\n\n        length_f3b2c5 -> div_547f34.first\n        div_547f34.result -> count_digits_96023e.length_6b655b\n\n        index_f3b2c5 -> modulo_adfa16.input\n        modulo_adfa16.output -> count_digits_96023e.char_index_f3b2c5\n\n        length_f3b2c5 -> add_88bb8a.second\n        add_88bb8a.result -> count_digits_96023e.next_index_f3b2c5\n\n        index_f3b2c5 -> floor_61b38d.input\n        floor_61b38d.output -> count_digits_96023e.index_f3b2c5\n\n        count_digits_96023e.execute_cdac2a -> count_digits_96023e.next_index_f3b2c5\n        count_digits_96023e.next_char_e1f4d7 -> count_digits_96023e.char_index_f3b2c5\n        index_f3b2c5 -> is_digit_check.gen_0\n\n        input_string_6b655b -> count_digits_96023e.input_string\n        count_digits_96023e.index_f3b2c5 -> count_digits_96023e.in(x: -436, y: -213, name: \"index\") property(Number) index_f3b2c5\n\n        is_digit_check.then -> count_digits_96023e.next_char_e1f4d7\n        is_digit_check.else -> count_digits_96023e.execute_cdac2a\n\n        count_digits_96023e.index_f3b2c5 -> input_string_6b655b[index_f3b2c5] -> count_digits_96023e.char_f3b2c5\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_digit_check_a16f9c root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) string_length_bf8c9d root.Std_k98ojb.Strings.Characters {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n\n        execute_cdac2a -> setter_41e4ad.execute\n\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        input_string_6b655b -> string_length_bf8c9d.input\n        string_length_bf8c9d.characters -> count_digits_96023e.iteration_index\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n\n        is_digit_check_a16f9c.expression: \"input_string[index] >= '0' && input_string[index] <= '9'\"\n        \n        is_digit_check_a16f9c.then -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        count_digits_96023e.iteration_index -> is_digit_check_a16f9c.index\n\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        characters_adfa16.input -> count_digits_96023e.s_6b655b\n        count_digits_96023e.continue_d9efd7 -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_adfa16.input\n        count_digits_96023e.characters -> for_characters_8c0b1f.items\n        0 -> for_characters_8c0b1f.index\n\n        instance(x: -202, y: -236) for_characters_8c0b1f root.Std_k98ojb.Std.For {\n            on item: trigger() on_item_b5a7e3\n        }\n        instance(x: 97, y: -249) is_digit_547f34 root.main.is_digit {}\n        instance(x: 99, y: -127) add_if_true_a6d9c8 root.Std_k98ojb.Math.Add {}\n\n        for_characters_8c0b1f.items -> characters_adfa16.characters\n        for_characters_8c0b1f.next -> on_item_b5a7e3\n        on_item_b5a7e3 -> is_digit_547f34.execute_cdac2a\n        is_digit_547f34.continue_d9efd7 -> add_if_true_a6d9c8.execute_cdac2a\n        1 -> add_if_true_a6d9c8.first\n        0 -> add_if_true_a6d9c8.second\n        add_if_true_a6d9c8.result -> setter_41e4ad.new_value\n        for_characters_8c0b1f.done -> continue_d9efd7\n\n        func(doc: \"checks if a character is a digit.\") is_digit {\n            in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n            in(x: -436, y: -213, name: \"c\") property(String) c_6b655b\n\n            out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n            out(x: 1169, y: -269, name: \"output\") property(Boolean) output_732a8a\n\n            instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n                expression: \"'0' <= c && c <= '9'\"\n            }\n            instance(x: 395, y: -378) is_digit_96023e root.main.is_digit {}\n            \n            c_6b655b -> ifexpression_3d7de6.gen_0\n            execute_cdac2a -> ifexpression_3d7de6.execute\n            ifexpression_3d7de6.then -> output_732a8a.set(true)\n            ifexpression_3d7de6.else -> output_732a8a.set(false)\n            output_732a8a -> continue_d9efd7\n        }\n\n        getter_38583a.value -> output_732a8a\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_str\") property(String) input_str_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_str == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.input_str_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        instance(x: 150, y: -100) characters_c2d1e6 root.Std_k98ojb.Strings.Characters {\n            input: count_digits_96023e.input_str_6b655b\n        }\n        instance(x: 350, y: -200) filter_d3f8a7 root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        characters_c2d1e6.characters -> filter_d3f8a7.items\n        filter_d3f8a7.item -> count_digits_96023e.input_str_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        characters_adfa16.input -> count_digits_96023e.characters_input\n        count_digits_96023e.continue_d9efd7 -> setter_41e4ad.execute\n        setter_41e4ad.new_value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_adfa16.input\n        count_digits_96023e.characters_output -> ifexpression_3d7de6.gen_0\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Creates a function that finds the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_powers {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 430, y: 132) data_4e1a9f  = 3\n        instance(x: 412, y: 2) div_5d7b8c root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: -25) expression_f9e1f6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -53) mul_2c7d0a root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 109) data_b9f8e6  = 3\n        instance(x: 303, y: -52) div_5a4f1a root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: -79) expression_e7c8d2 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -107) mul_5a6f3c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 85) data_b7e0d9  = 3\n        instance(x: 303, y: -106) div_2c8a1f root.Std_k98ojb.Math.Div {}\n\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n\n        expression_f9e1f6.result -> mul_2c7d0a.second\n        n_3a3116 -> mul_2c7d0a.first\n        n_3a3116 -> expression_f9e1f6.gen_0\n        div_5d7b8c.result -> sum_365f7b\n\n        data_4e1a9f -> div_5d7b8c.second\n        mul_2c7d0a.result -> div_5d7b8c.first\n\n        expression_e7c8d2.result -> mul_5a6f3c.second\n        n_3a3116 -> mul_5a6f3c.first\n        n_3a3116 -> expression_e7c8d2.gen_0\n        div_2c8a1f.result -> sum_365f7b\n\n        data_b9f8e6 -> div_5a4f1a.second\n        mul_f892a4.result -> div_5a4f1a.first\n\n        data_b7e0d9 -> div_2c8a1f.second\n        mul_2c7d0a.result -> div_2c8a1f.first\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of the fourth powers of the first n odd natural numbers.\") power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -20) div_1f8c9e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -19) data_5a7c4f  = 3\n        mul_f892a4.result -> div_1f8c9e.first\n        data_5a7c4f -> div_1f8c9e.second\n        instance(x: 303, y: -44) mul_2d0f7b root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_2d0f7b.first\n        div_64046c.result -> mul_2d0f7b.second\n        instance(x: 303, y: -67) div_5e8a4c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -66) data_f3c1ea  = 3\n        mul_2d0f7b.result -> div_5e8a4c.first\n        data_f3c1ea -> div_5e8a4c.second\n        instance(x: 303, y: -91) add_6f9c7f root.Std_k98ojb.Math.Add {}\n        div_64046c.result -> add_6f9c7f.first\n        div_1f8c9e.result -> add_6f9c7f.second\n        div_5e8a4c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) power_sum_9dcc3d root.main.power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -26) div_5f8b1e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -27) data_cde0dc  = 3\n        mul_f892a4.result -> div_5f8b1e.first\n        data_cde0dc -> div_5f8b1e.second\n        instance(x: 23, y: -54) mul_b2c6d7 root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_b2c6d7.first\n        div_5f8b1e.result -> mul_b2c6d7.second\n        mul_b2c6d7.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 400, y: -10) pow_instance root.Std_k98ojb.Math.Expression {\n            expression: \"result*result\"\n        }\n        div_64046c.result -> pow_instance.gen_0\n        pow_instance.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"8*n*n*n*n-4*n*n+1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -22) div_64046c_1 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_1  = 3\n        data_cde0dc_1 -> div_64046c_1.second\n        mul_f892a4.result -> div_64046c_1.first\n\n        instance(x: 303, y: -45) div_64046c_2 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_2  = 3\n        data_cde0dc_2 -> div_64046c_2.second\n        div_64046c_1.result -> div_64046c_2.first\n\n        instance(x: 303, y: -68) mul_f892a4_1 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc_3  = 3\n        data_cde0dc_3 -> mul_f892a4_1.second\n        div_64046c_2.result -> mul_f892a4_1.first\n\n        instance(x: 303, y: -91) div_64046c_3 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc_4  = 3\n        data_cde0dc_4 -> div_64046c_3.second\n        mul_f892a4_1.result -> div_64046c_3.first\n\n        div_64046c_3.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of the fourth powers of the first n odd natural numbers.\") sum_of_fourth_powers {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 403, y: -1) pow_8e5f9b root.Std_k98ojb.Math.Expression {\n            expression: \"result*result\"\n        }\n        div_64046c.result -> pow_8e5f9b.gen_0\n        pow_8e5f9b.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_of_fourth_powers_9dcc3d root.main.sum_of_fourth_powers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -26) div_64046c_copy root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c_copy.second\n        div_64046c.result -> div_64046c_copy.first\n        instance(x: 23, y: -52) mul_f892a4_copy root.Std_k98ojb.Math.Mul {}\n        div_64046c_copy.result -> mul_f892a4_copy.first\n        div_64046c.result -> mul_f892a4_copy.second\n        mul_f892a4_copy.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_ae3d2f root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Creates a function that finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -22) div_5c8e9f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        div_64046c.result -> div_5c8e9f.first\n        data_cde0dc -> div_5c8e9f.second\n        instance(x: 23, y: -25) mul_1d6a7b root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_1d6a7b.first\n        div_64046c.result -> mul_1d6a7b.second\n        instance(x: 23, y: -49) mul_8f0e9f root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_8f0e9f.first\n        div_5c8e9f.result -> mul_8f0e9f.second\n        instance(x: 23, y: -74) mul_7f4a1b root.Std_k98ojb.Math.Mul {}\n        mul_1d6a7b.result -> mul_7f4a1b.first\n        div_5c8e9f.result -> mul_7f4a1b.second\n        instance(x: 303, y: -97) div_3a0a2c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        mul_8f0e9f.result -> div_3a0a2c.first\n        data_cde0dc -> div_3a0a2c.second\n        instance(x: 23, y: -120) mul_4b1d7c root.Std_k98ojb.Math.Mul {}\n        mul_7f4a1b.result -> mul_4b1d7c.first\n        div_3a0a2c.result -> mul_4b1d7c.second\n        mul_4b1d7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_f9e6a8 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 23, y: -1) mul_5b9f8c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_f7e4b3  = 3\n        instance(x: 303, y: 2) div_6d0a2f root.Std_k98ojb.Math.Div {}\n        data_f7e4b3 -> div_6d0a2f.second\n        mul_5b9f8c.result -> div_6d0a2f.first\n        div_64046c.result -> mul_5b9f8c.second\n        n_3a3116 -> mul_5b9f8c.first\n\n        instance(x: 303, y: 2) div_b1e4d7 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9c0e1c  = 3\n        instance(x: 23, y: -1) mul_e6a5f4 root.Std_k98ojb.Math.Mul {}\n        div_b1e4d7.result -> mul_e6a5f4.second\n        div_6d0a2f.result -> mul_e6a5f4.first\n        n_3a3116 -> mul_e6a5f4.first\n\n        data_instance(x: 330, y: 133) data_b8b9c7  = 3\n        instance(x: 303, y: 2) div_1e8d9f root.Std_k98ojb.Math.Div {}\n        data_b8b9c7 -> div_1e8d9f.second\n        mul_e6a5f4.result -> div_1e8d9f.first\n\n        div_1e8d9f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_2a3c0b root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e7f9d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_5c1a3b\n\n        instance(x: 94, y: -105) multiply_6a4f0e root.Std_k98ojb.Math.Mul {}\n        size_8e7f9d -> multiply_6a4f0e.first\n        size_8e7f9d -> multiply_6a4f0e.second\n        multiply_6a4f0e.result -> surfaceArea_5c1a3b\n\n        instance(x: 94, y: -145) multiply_2b7e9f root.Std_k98ojb.Math.Mul {}\n        6 -> multiply_2b7e9f.first\n        multiply_6a4f0e.result -> multiply_2b7e9f.second\n        multiply_2b7e9f.result -> surfaceArea_5c1a3b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_8d3a7f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7f8d3a\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_1e4c0f root.Std_k98ojb.Math.Mul {}\n        size_7f8d3a -> mul_1e4c0f.first\n        size_7f8d3a -> mul_1e4c0f.second\n        func() {\n            in(x: -121, y: -37, name: \"result\") property(Number) result_5e2b9d\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_ea3c6f root.Std_k98ojb.Math.Mul {}\n            6 -> mul_ea3c6f.first\n            result_5e2b9d -> mul_ea3c6f.second\n            mul_ea3c6f.result -> _7dd980\n        } -> mul_1e4c0f.on_result\n        mul_1e4c0f.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_f2b5d3 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_9e5f8a\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) math_expression_e2d3b6 root.Std_k98ojb.Math.Expression {}\n        size_9e5f8a -> math_expression_e2d3b6.x\n        6 * x * x -> math_expression_e2d3b6.expression\n        math_expression_e2d3b6.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_1f4a8e root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e3a6f\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_1b9d4c root.Std_k98ojb.Math.Mul {}\n        size_8e3a6f -> mul_1b9d4c.first\n        size_8e3a6f -> mul_1b9d4c.second\n        mul_1b9d4c.result -> result_cbb7bd\n\n        instance(x: 94, y: -105) mul_2a5c0c root.Std_k98ojb.Math.Mul {}\n        mul_1b9d4c.result -> mul_2a5c0c.first\n        6 -> mul_2a5c0c.second\n\n    }\n\n    \n\n    instance(x: -92, y: 45) find_cube_surface_area_b9ff6b root.main.find_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5e4a3f\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f9b7d1\n\n        instance(x: 94, y: -105) mul_6c2b0e root.Std_k98ojb.Math.Mul {}\n        size_5e4a3f -> mul_6c2b0e.first\n        6 -> mul_6c2b0e.second\n        func() {\n            in(x: -121, y: -37, name: \"\") property(Number) _1b9d8c\n\n            out(x: 333, y: -50, name: \"result\") property(Number) result_3f5a4c\n\n            instance(x: 92, y: -22) mul_b2e6f7 root.Std_k98ojb.Math.Mul {}\n            _1b9d8c -> mul_b2e6f7.first\n            _1b9d8c -> mul_b2e6f7.second\n            mul_b2e6f7.result -> result_3f5a4c\n        } -> mul_6c2b0e.handler\n        mul_6c2b0e.result -> surfaceArea_f9b7d1\n    }\n\n    \n\n    instance(x: -92, y: 45) find_surface_area_a8d3b2 root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e7f6d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) math_expr_f2330d root.Std_k98ojb.Math.Expression {}\n        size_8e7f6d -> math_expr_f2330d.a\n        6 -> math_expr_f2330d.b\n        func() {\n            in(x: -121, y: -37, name: \"a\") property(Number) a_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            a_8ee839 -> mul_584bfd.first\n            math_expr_f2330d.b -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> math_expr_f2330d.handler\n        func() {\n            in(x: -121, y: 17, name: \"a\") property(Number) a_8ee839\n\n            out(x: 333, y: 0, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -2) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            a_8ee839 -> pow_584bfd.x\n            2 -> pow_584bfd.y\n            pow_584bfd.result -> _7dd980\n        } -> math_expr_f2330d.c\n        math_expr_f2330d.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e6f7a\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_3d9c1b\n\n        instance(x: 94, y: -105) mul_2a4b5f root.Std_k98ojb.Math.Mul {}\n        size_8e6f7a -> mul_2a4b5f.first\n        size_8e6f7a -> mul_2a4b5f.second\n        mul_2a4b5f.result -> surfaceArea_3d9c1b\n\n        instance(x: 94, y: -145) mul_1f9a3e root.Std_k98ojb.Math.Mul {}\n        mul_2a4b5f.result -> mul_1f9a3e.first\n        6 -> mul_1f9a3e.second\n        mul_1f9a3e.result -> surfaceArea_3d9c1b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_7c8f5b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e3f9c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7a5d2b\n\n        instance(x: 94, y: -105) mul_d1e4f6 root.Std_k98ojb.Math.Mul {}\n        size_8e3f9c -> mul_d1e4f6.first\n        6 -> mul_d1e4f6.second\n        mul_d1e4f6.result -> surface_area_7a5d2b\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_a3b9c0 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1e8a5d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_e4b9f7\n\n        instance(x: 94, y: -105) mul_f3c0d6 root.Std_k98ojb.Math.Mul {}\n        size_1e8a5d -> mul_f3c0d6.first\n        size_1e8a5d -> mul_f3c0d6.second\n        mul_f3c0d6.result -> surface_area_e4b9f7\n\n        instance(x: 94, y: -144) mul_d2b1c2 root.Std_k98ojb.Math.Mul {}\n        size_1e8a5d -> mul_d2b1c2.first\n        size_1e8a5d -> mul_d2b1c2.second\n        mul_d2b1c2.result -> surface_area_e4b9f7\n\n        instance(x: 94, y: -183) mul_b3a0ad root.Std_k98ojb.Math.Mul {}\n        size_1e8a5d -> mul_b3a0ad.first\n        mul_f3c0d6.result -> mul_b3a0ad.second\n        mul_b3a0ad.result -> surface_area_e4b9f7\n\n        instance(x: 94, y: -222) math_expr_1e2c8a root.Std_k98ojb.Math.Expression {}\n        \"6 * size^2\" -> math_expr_1e2c8a.expression\n        size_1e8a5d -> math_expr_1e2c8a.size\n        math_expr_1e2c8a.result -> surface_area_e4b9f7\n    }\n\n    \n\n    instance(x: -92, y: 45) find_cube_surface_area_3b6d0c root.main.find_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c5d9f\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f4a8b2\n\n        instance(x: 94, y: -105) multiply_1e7f6a root.Std_k98ojb.Math.Mul {}\n        size_3c5d9f -> multiply_1e7f6a.first\n        6 -> multiply_1e7f6a.second\n        multiply_1e7f6a.result -> surfaceArea_f4a8b2\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_3d9c0f root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -453) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 678, y: -378) sub_node root.Std_k98ojb.Math.Sub {}\n\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -483) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -483) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    property(Number) max_value_ai\n    property(Number) min_value_ai\n\n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n        \n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -519) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_value_node root.main.diff_largest_smallest {}\n\n    \n    instance(x: 426, y: -423) min_value_node root.main.diff_largest_smallest {}\n\n    \n    instance(x: 426, y: -519) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_of_list {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        max_node.max -> x1_ai\n\n        items_ai -> min_node.items\n        min_node.min -> x2_ai\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        x1_ai -> sub_node.first\n        x2_ai -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    in(x: -426, y: -248, name: \"x1\") property(Number) x1_ai\n    in(x: -426, y: -359, name: \"x2\") property(Number) x2_ai\n\n    instance(x: 426, y: -303) range_of_list_node root.main.range_of_list {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -393) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -483) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -453) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 726, y: -423) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> expression_7b3b7b.num\n        expression_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n        instance(x: 772, y: 200) falseNode root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> falseNode.input\n        falseNode.else -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) ifNode root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> ifNode.input\n        ifNode.then -> (instance(x: 340, y: 77) trueOutput Bool { value: true }) -> isEven_ai\n        ifNode.else -> (instance(x: 340, y: 77) falseOutput Bool { value: false }) -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        instance(x: 1050, y: 76) equal_check_e1e1f9 root.Std_k98ojb.Logic.Equal {\n            left: modulo_7b3b7b.result\n            right: 0\n        }\n        equal_check_e1e1f9.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> expression_7b3b7b.num\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) check_even_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        check_even_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % 2 == 0 ? true : false\"\n        }\n        num_ai -> if_7b3b7b.num\n        if_7b3b7b.value -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            divisor: 2\n        }\n        number_ai -> modulo_7b3b7b.value\n        Std_k98ojb.Logic.Equal {\n            left: modulo_7b3b7b.result\n            right: 0\n        } -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 100, y: 50) find_first_repeat_a1b2c3 root.Std_k98ojb.Iteration.Find {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> find_first_repeat_a1b2c3.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_x1y1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_z9w8v7\n\n            instance(x: 89, y: 29) contains_3c2b1a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_6e5d4c root.Std_k98ojb.List.Slice {}\n\n            char_x1y1 -> contains_3c2b1a.item\n            characters_7g8h9i.characters -> slice_6e5d4c.list\n\n            find_first_repeat_a1b2c3.index -> slice_6e5d4c.start\n            -1 -> slice_6e5d4c.end\n\n            contains_3c2b1a.result -> bool_z9w8v7\n        } -> find_first_repeat_a1b2c3.predicate\n\n        find_first_repeat_a1b2c3.item -> char_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        string_1a2b3c -> characters_7g8h9i.input\n        instance(x: 150, y: -50) for_jk0l1m root.Std_k98ojb.For {}\n        characters_7g8h9i.characters -> for_jk0l1m.items\n\n        instance(x: 300, y: -100) contains_nopqrs root.Std_k98ojb.List.Contains {}\n        for_jk0l1m.item -> contains_nopqrs.item\n        instance(x: 450, y: -150) list_tuvwx root.Std_k98ojb.List.Slice {}\n        characters_7g8h9i.characters -> list_tuvwx.list\n        for_jk0l1m.index -> list_tuvwx.start\n\n        contains_nopqrs.result -> char_4d5e6f\n        for_jk0l1m.next -> for_jk0l1m.next\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_abcd root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) output_character_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        input_string_1a2b3c -> characters_7g8h9i.input\n        \n        instance(x: 200, y: 50) find_repeated_char_jk1l2m root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_n3o4p5\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_q6r7s8\n\n            instance(x: 89, y: 29) contains_9t0u1v root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(String) item_w2x3y4\n                current_char_n3o4p5 -> contains_9t0u1v.item\n                find_repeated_char_jk1l2m.seen_chars -> contains_9t0u1v.list\n            }\n            contains_9t0u1v.result -> is_repeated_q6r7s8\n\n            instance(x: 310, y: 35) add_seen_char_z5a6b7 root.Std_k98ojb.List.GetAt {}\n            func() {\n                in(x: -113, y: 34, name: \"index\") property(Number) index_c8d9e0\n                current_char_n3o4p5 -> add_seen_char_z5a6b7.item\n                find_repeated_char_jk1l2m.seen_chars -> add_seen_char_z5a6b7.list\n                0 -> add_seen_char_z5a6b7.index\n            }\n        } -> find_repeated_char_jk1l2m.predicate\n\n        instance(x: 400, y: 100) list_builder_8f9g0h root.Std_k98ojb.List {}\n        characters_7g8h9i.characters -> list_builder_8f9g0h.items\n        list_builder_8f9g0h.items -> find_repeated_char_jk1l2m.items\n\n        instance(x: 600, y: 150) seen_chars_i1j2k3 root.Std_k98ojb.List {}\n        list_builder_8f9g0h.items -> seen_chars_i1j2k3.items\n        seen_chars_i1j2k3.items -> find_repeated_char_jk1l2m.seen_chars\n\n        find_repeated_char_jk1l2m.item -> output_character_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) character_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_char_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3n4o5p\n\n            instance(x: 89, y: 29) characters_abcd root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_qrstu root.Std_k98ojb.List.Contains {}\n\n            input_string_1a2b3c -> characters_abcd.input\n            characters_abcd.characters -> list_chars_vwxyz\n\n            list_chars_vwxyz -> find_repeated_char_7g8h9i.items\n            char_jk1l2m -> contains_qrstu.item\n            list_chars_vwxyz -> contains_qrstu.list\n\n            contains_qrstu.result -> bool_3n4o5p\n        } -> find_repeated_char_7g8h9i.predicate\n        characters_abcd.characters -> find_repeated_char_7g8h9i.items\n        find_repeated_char_7g8h9i.item -> character_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1c2d4a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) repeated_char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 100, y: 50) for_loop_1088d5 root.Std_k98ojb.Std.For {}\n        instance(x: 200, y: 100) contains_check_807ffd root.Std_k98ojb.List.Contains {}\n\n        input_string_1c2d4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_loop_1088d5.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) current_char_9f6850\n\n            instance(x: 310, y: 35) list_builder_1a2b3c root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) contains_check_4e5f6g root.Std_k98ojb.List.Contains {}\n\n            for_loop_1088d5.item -> current_char_9f6850\n            list_builder_1a2b3c.start -> 0\n            list_builder_1a2b3c.end -> -1\n            characters_6d05b0.characters -> list_builder_1a2b3c.list\n\n            current_char_9f6850 -> contains_check_4e5f6g.item\n            list_builder_1a2b3c.result -> contains_check_4e5f6g.list\n\n            contains_check_4e5f6g.result -> if_expression_7h8i9j.condition\n        } -> for_loop_1088d5.on_item\n\n        instance(x: 300, y: 150) std_if_abc123 root.Std_k98ojb.Std.If {}\n        current_char_9f6850 -> std_if_abc123.input\n        contains_check_4e5f6g.result -> std_if_abc123.value\n\n        func() {\n            in(x: -113, y: 34, name: \"then\") property(Void) then_trigger_dfg456\n            in(x: -113, y: 34, name: \"else\") property(Void) else_trigger_hij789\n\n            current_char_9f6850 -> repeated_char_3bc2ae\n        } -> std_if_abc123.then\n\n        func() {\n            in(x: -113, y: 34, name: \"then\") property(Void) then_trigger_dfg456\n            in(x: -113, y: 34, name: \"else\") property(Void) else_trigger_hij789\n        } -> std_if_abc123.else\n\n        for_loop_1088d5.done -> end_of_loop_klmnop\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_5d3a2f\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_8b4c9e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_3f7a1d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_6b4c2e root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_9f8d3b root.Std_k98ojb.List.Slice {}\n            slice_9f8d3b.start -> -1\n            string_5d3a2f -> slice_9f8d3b.list\n            contains_6b4c2e.item -> char_3f7a1d\n            contains_6b4c2e.list -> slice_9f8d3b.result\n            slice_9f8d3b.end -> -1\n            contains_6b4c2e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 89, y: 29) characters_5b8c3d root.Std_k98ojb.Strings.Characters {}\n        string_5d3a2f -> characters_5b8c3d.input\n        characters_5b8c3d.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_8b4c9e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1f8d2a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_807ffd root.Std_k98ojb.List.Slice {}\n\n            string_1f8d2a -> characters_0c9e3a.input\n            characters_0c9e3a.characters -> list_abed4a\n\n            list_abed4a -> slice_807ffd.list\n            0 -> slice_807ffd.start\n            -1 -> slice_807ffd.end\n\n            slice_807ffd.slice -> contains_1088d5.list\n            char_9f6850 -> contains_1088d5.item\n            contains_1088d5.contains -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    instance(x: -55, y: 529) characters_0c9e3a root.Std_k98ojb.Strings.Characters {}\n    instance(x: -55, y: 300) list_abed4a property(List)\n\n    instance(x: -55, y: 530) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_d4e5f6\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 150, y: 50) for_loop_jk0l1m root.Std_k98ojb.Std.For {}\n        instance(x: 300, y: 100) contains_nopqrs root.Std_k98ojb.List.Contains {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> for_loop_jk0l1m.items\n\n        instance(x: 450, y: 150) set_a_b_c_d root.Std_k98ojb.Sets {}\n        for_loop_jk0l1m.item -> set_a_b_c_d.add\n        for_loop_jk0l1m.index -> set_a_b_c_d.index\n\n        contains_nopqrs.list -> set_a_b_c_d.items\n        for_loop_jk0l1m.item -> contains_nopqrs.item\n\n        instance(x: 600, y: 200) if_expression_tuvwx root.Std_k98ojb.Std.IfExpression {}\n        contains_nopqrs.result -> if_expression_tuvwx.expression\n\n        func() {\n            in(x: -113, y: 34, name: \"then\") property(Char) then_abc123\n            in(x: -113, y: 54, name: \"else\") property(Char) else_def456\n\n            out(x: 515, y: 44, name: \"result\") property(Char) result_xyz789\n\n            if_expression_tuvwx.then -> then_abc123\n            if_expression_tuvwx.else -> else_def456\n            for_loop_jk0l1m.item -> if_expression_tuvwx.value\n            then_abc123 -> result_xyz789\n        } -> char_d4e5f6\n\n        instance(x: 750, y: 250) std_if_yz0123 root.Std_k98ojb.Std.If {}\n        contains_nopqrs.result -> std_if_yz0123.input\n        if_expression_tuvwx.value -> std_if_yz0123.then\n        for_loop_jk0l1m.next -> std_if_yz0123.else\n\n        instance(x: 900, y: 300) end_trigger_456789 root.Std_k98ojb.Std.Trigger {}\n        std_if_yz0123.then -> end_trigger_456789.trigger\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_a1b2c3 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_3c2d8f\n\n        out(x: 593, y: -1, name: \"character\") property(String) repeated_char_ae4b9f\n\n        instance(x: 0, y: 0) characters_7a5b6d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 150, y: 50) find_repeated_8c2f1e root.Std_k98ojb.Iteration.Find {}\n        \n        input_string_3c2d8f -> characters_7a5b6d.input\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) found_repeated_bf09a7\n\n            instance(x: 89, y: 29) contains_c3d2e1 root.Std_k98ojb.List.Contains {}\n            \n            current_char_9f6850 -> contains_c3d2e1.item\n            find_repeated_8c2f1e.seen_chars -> contains_c3d2e1.list\n\n            contains_c3d2e1.result -> found_repeated_bf09a7\n            \n        } -> find_repeated_8c2f1e.predicate\n        \n        characters_7a5b6d.characters -> find_repeated_8c2f1e.items\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) seen_char_9f6850\n\n            instance(x: 89, y: 29) append_7a5b6d root.Std_k98ojb.List.Append {}\n            \n            seen_char_9f6850 -> append_7a5b6d.item\n            find_repeated_8c2f1e.seen_chars -> append_7a5b6d.list\n            \n        } -> find_repeated_8c2f1e.on_item\n\n        find_repeated_8c2f1e.item -> repeated_char_ae4b9f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_5d3a1e\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_8b4c2f\n\n        instance(x: 0, y: 0) characters_9f7a6b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 60) for_3d1e8a root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 120) set_contains_4c2f8e root.Std_k98ojb.List.Contains {}\n\n        input_5d3a1e -> characters_9f7a6b.input\n        characters_9f7a6b.characters -> for_3d1e8a.items\n\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Char) item_1c2b4f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7d9e3f\n\n            instance(x: 89, y: 29) set_contains_4c2f8e root.Std_k98ojb.List.Contains {}\n            item_1c2b4f -> set_contains_4c2f8e.item\n            for_3d1e8a.seen -> set_contains_4c2f8e.list\n\n            set_contains_4c2f8e.result -> bool_7d9e3f\n        } -> for_3d1e8a.on_item\n\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Char) item_1c2b4f\n\n            out(x: 515, y: 44, name: \"list\") property(List) list_6f3d9e\n\n            instance(x: 89, y: 29) List_k98ojb.List root.Std_k98ojb.List {}\n            item_1c2b4f -> List_k98ojb.List.item\n            for_3d1e8a.seen -> List_k98ojb.List.list\n\n            List_k98ojb.List.result -> list_6f3d9e\n        } -> for_3d1e8a.next\n\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Char) item_1c2b4f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7d9e3f\n\n            instance(x: 89, y: 29) Logic_k98ojb.Logic root.Std_k98ojb.Logic {}\n            item_1c2b4f -> Logic_k98ojb.Logic.left\n            for_3d1e8a.seen -> Logic_k98ojb.Logic.right\n            Logic_k98ojb.Logic.result -> bool_7d9e3f\n        } -> for_3d1e8a.trigger\n\n        func() {\n            out(x: 515, y: 44, name: \"list\") property(List) list_d4c2f8 {}\n\n            List_k98ojb.List.list -> list_d4c2f8\n        } -> for_3d1e8a.reset\n\n        for_3d1e8a.item -> char_8b4c2f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) sort_node Std_k98ojb.List.Sort {}\n        items_ai -> sort_node.list\n\n        instance(x: 426, y: -453) slice_node Std_k98ojb.List.Slice {}\n        sort_node.sorted_list -> slice_node.list\n        property(value: 1) start_ai -> slice_node.start\n        property(value: -1) end_ai -> slice_node.end\n\n        instance(x: 426, y: -588) list_min_node Std_k98ojb.List.Min {}\n        slice_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> sort_node.items\n        instance(x: 426, y: -453) slice_node root.Std_k98ojb.List.Slice {}\n        sort_node.sorted -> slice_node.list\n        slice_node.start = 1\n        slice_node.end = -1\n        instance(x: 426, y: -588) list_min_node root.Std_k98ojb.List.Min {}\n        slice_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> slice_sorted_items\n\n        instance(x: 678, y: -303) list_slice_node root.Std_k98ojb.List.Slice {}\n        slice_sorted_items -> list_slice_node.list\n        instance(x: 426, y: -483) number_two root.Std_k98ojb.Number {}\n        number_two.value = 2\n        number_two -> list_slice_node.start\n        instance(x: 678, y: -423) number_minus_one root.Std_k98ojb.Number {}\n        number_minus_one.value = -1\n        number_minus_one -> list_slice_node.end\n        list_slice_node.slice -> slice_result\n\n        instance(x: 678, y: -603) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_result -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    property(List) slice_sorted_items\n    property(List) slice_result\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -453) slice_list_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_list_node.list\n        instance(x: 426, y: -588) get_second_item_node root.Std_k98ojb.List.GetAt {}\n        slice_list_node.slice(start: 1, end: -1) -> get_second_item_node.index\n        get_second_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_items_ai\n        \n        instance(x: 426, y: -423) slice_list_node root.Std_k98ojb.List.Slice {}\n        sorted_items_ai -> slice_list_node.list\n        slice_list_node.start = 1\n        slice_list_node.end = -1\n        slice_list_node.slice -> sliced_items_ai\n\n        instance(x: 426, y: -519) list_min_node root.Std_k98ojb.List.Min {}\n        sliced_items_ai -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sorted_items_ai property(List)\n    instance(x: 426, y: -423) sliced_items_ai property(List)\n\n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list\n\n        instance(x: 426, y: -403) list_slice_node Std_k98ojb.List.Slice {}\n        sorted_list -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        list_slice_node.slice -> sliced_list\n\n        instance(x: 426, y: -503) list_min_node Std_k98ojb.List.Min {}\n        sliced_list -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> slice_input_node.items\n        \n        instance(x: 426, y: -423) slice_input_node Std_k98ojb.List.Slice {}\n        slice_input_node.start = 1\n        slice_input_node.end = -1\n        slice_input_node.items -> min_node.items\n\n        instance(x: 426, y: -519) min_node Std_k98ojb.List.Min {}\n        min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.sorted -> sorted_list_ai\n\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list_ai -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        list_slice_node.slice -> sliced_list_ai\n\n        instance(x: 426, y: -588) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        sliced_list_ai -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sorted_list_ai property(List)\n    instance(x: 426, y: -453) sliced_list_ai property(List)\n\n    \n    instance(x: 426, y: -303) sort_node root.main.second_smallest_num.List.Sort {}\n    instance(x: 426, y: -453) slice_node root.main.second_smallest_num.List.Slice {}\n    instance(x: 426, y: -588) first_item_node root.main.second_smallest_num.List.FirstItem {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -423) slice_list_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_list_node.list\n        property(Number)(x: 159, y: -348) start_index {}\n        start_index.value = 1\n        property(Number)(x: 159, y: -378) end_index {}\n        end_index.value = -1\n        slice_list_node.slice -> second_smallest_num_node.items\n\n        instance(x: 426, y: -498) list_min_node root.Std_k98ojb.List.Min {}\n        second_smallest_num_node.items -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 726, y: -303) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        instance(x: 1026, y: -303) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.slice -> list_first_item_node.items\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    }
]