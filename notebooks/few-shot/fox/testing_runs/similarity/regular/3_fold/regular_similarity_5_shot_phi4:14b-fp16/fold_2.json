[
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 7268,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -193, y: -103, name: \"list1\") property(List) list1_9a2f8e\n        in(x: -201, y: 17, name: \"list2\") property(List) list2_4b0c6d\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2f8e -> intersection_4e8c54.left\n        list2_4b0c6d -> intersection_4e8c54.right\n        instance(x: 245, y: -27) notempty_5f7b3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersection -> notempty_5f7b3f.list\n        notempty_5f7b3f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -193, y: -154, name: \"list1\") property(List) list1_3a0f8e\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_7c9b6d\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f8e -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_7c9b6d\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -299, y: -214, name: \"list1\") property(List) list1_2f3e6d\n        in(x: -309, y: -435, name: \"list2\") property(List) list2_7a9b0c\n\n        out(x: 1265, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -303, y: -205, name: \"intersection\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_2f3e6d -> intersection_c7c7e6.left\n        list2_7a9b0c -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> contains_32727d.list\n        0 -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -289, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -297, y: 34, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: 49, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -193, y: -86, name: \"list1\") property(List) list1_2a3f9e\n        in(x: -181, y: 18, name: \"list2\") property(List) list2_4c6b5d\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_2a3f9e -> intersection_4e8c54.left\n        list2_4c6b5d -> intersection_4e8c54.right\n        instance(x: 245, y: -54) notempty_c0f7c8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersection -> notempty_c0f7c8.list\n        notempty_c0f7c8.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -290, y: -86, name: \"list1\") property(List) list1_4e9b2f\n        in(x: -298, y: 31, name: \"list2\") property(List) list2_5a0c3d\n\n        out(x: 558, y: 13, name: \"output\") property(Bool) output_7b8f4e\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: -95) notempty_1a0d5f root.Std_k98ojb.List.NotEmpty {}\n        list1_4e9b2f -> intersection_c7c7e6.left\n        list2_5a0c3d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1a0d5f.list\n        notempty_1a0d5f.isEmpty -> output_7b8f4e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -177, y: -111, name: \"list1\") property(List) list1_9e8f2d\n        in(x: -183, y: 39, name: \"list2\") property(List) list2_5b7a3c\n\n        out(x: 1020, y: 12, name: \"output\") property(Bool) output_6b1d4e\n\n        instance(x: 450, y: -11) intersection_c9f8ba root.Std_k98ojb.Sets.Intersection {}\n        list1_9e8f2d -> intersection_c9f8ba.left\n        list2_5b7a3c -> intersection_c9f8ba.right\n        instance(x: 741, y: -4) notempty_6a0d4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9f8ba.intersection -> notempty_6a0d4c.list\n        notempty_6a0d4c.isEmpty -> output_6b1d4e\n    }\n\n    \n\n    instance(x: 53, y: -68) intersection_e7e5a2 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -255, y: -86, name: \"list1\") property(List) list1_4e9b5f\n        in(x: -273, y: 30, name: \"list2\") property(List) list2_7c0a6d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_4a8f5d root.Std_k98ojb.Math.GreaterThan {}\n        list1_4e9b5f -> intersection_c7c7e6.left\n        list2_7c0a6d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        0 -> greaterthan_4a8f5d.left\n        length_8166b0.length -> greaterthan_4a8f5d.right\n        greaterthan_4a8f5d.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -185, y: -186, name: \"list1\") property(List) list1_3a9b2f\n        in(x: -195, y: 31, name: \"list2\") property(List) list2_5e8c6d\n\n        out(x: 1057, y: -177, name: \"output\") property(Bool) output_4f1f0a\n\n        instance(x: 101, y: -176) intersection_9b3f9c root.Std_k98ojb.Sets.Intersection {}\n        list1_3a9b2f -> intersection_9b3f9c.left\n        list2_5e8c6d -> intersection_9b3f9c.right\n        instance(x: 507, y: -177) notempty_4e7c0c root.Std_k98ojb.List.NotEmpty {}\n        intersection_9b3f9c.intersection -> notempty_4e7c0c.list\n        notempty_4e7c0c.isEmpty -> output_4f1f0a\n    }\n\n    \n\n    instance(x: 12, y: -67) intersection_8d5f6c root.main.intersection {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c7097f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c7097f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: 1, name: \"list\") property(List) list_4e9a2f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4e9a2f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4e9a2f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"list1\") property(List) list1_5f8b9e\n        in(x: -284, y: 130, name: \"list2\") property(List) list2_6a4c0d\n\n        out(x: 557, y: 95, name: \"output\") property(Bool) output_3a1b5f\n\n        instance(x: -92, y: 94) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 93) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 92) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_5f8b9e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_6a4c0d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list1_5f8b9e -> equal_f89569.right\n        equal_f89569.result -> output_3a1b5f\n    }\n\n    \n\n    instance(x: -84, y: 219) is_sublist_2c6d4 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_5e9f8d\n        in(x: -485, y: -215, name: \"mainList\") property(List) main_list_7c1b0a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_2a4c3f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6d9e2f\n\n        instance(x: 752, y: 93) ifexpression_7b1a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7b1a5f.else -> continue_2a4c3f\n        ifexpression_7b1a5f.value -> output_6d9e2f\n        ifexpression_7b1a5f.then -> setter_9d4f1c.execute\n        main_list_7c1b0a -> for_d26972.items\n        for_d26972.item -> ifexpression_7b1a5f.gen_2\n        for_d26972.index -> ifexpression_7b1a5f.gen_0\n        getter_b280eb.value -> ifexpression_7b1a5f.gen_1\n        for_d26972.onItem -> ifexpression_7b1a5f.execute\n        for_d26972.done -> continue_2a4c3f\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7c1b0a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sub_list_5e9f8d -> for_d26972.items\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_5b7a2f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 5, name: \"subList\") property(List) sub_list_1e8f2d\n        in(x: -303, y: -165, name: \"mainList\") property(List) main_list_6a7c4b\n\n        out(x: 1090, y: -105, name: \"output\") property(Bool) output_5f9f1e\n\n        instance(x: -100, y: -107, name: \"find sublist in main list\") find_2d8c3a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 79, name: \"_index\") property(Number) _index_769593\n            in(x: -23, y: -25, name: \"current\") property(List) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> find_2d8c3a.predicate\n        func() {\n            in(x: -30, y: 79, name: \"_index\") property(Number) _index_769593\n            in(x: -23, y: -25, name: \"current\") property(List) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> find_2d8c3a.handler\n        instance(x: 0, y: -110) slice_7f9e5f root.Std_k98ojb.List.Slice {}\n        main_list_6a7c4b -> find_2d8c3a.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            current_81298e -> modulo_c76d2b.value\n        } -> slice_7f9e5f.start\n        sub_list_1e8f2d -> slice_7f9e5f.end\n        find_2d8c3a.item -> slice_7f9e5f.list\n        instance(x: 0, y: -4) equal_6b7e7f root.Std_k98ojb.Logic.Equal {}\n        sub_list_1e8f2d -> equal_6b7e7f.left\n        slice_7f9e5f.slice -> equal_6b7e7f.right\n        equal_6b7e7f.result -> output_5f9f1e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_3a8d2c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_1e8f0d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_7a3b5c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7a3b5c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7a3b5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_1e8f0d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_5e9f1d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_3a2c8b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_3a2c8b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_3a2c8b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_5e9f1d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 30, name: \"list1\") property(List) list1_2a3b4f\n        in(x: -444, y: -134, name: \"list2\") property(List) list2_9c5e6d\n\n        out(x: 1187, y: -125, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -293, y: -124, name: \"is sublist\") filter_4b1f0a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -118) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -13, name: \"current\") property(List) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_9c7b2a root.Std_k98ojb.List.Contains {}\n            list2_9c5e6d -> contains_9c7b2a.list\n            current_81298e -> contains_9c7b2a.item\n        } -> filter_4b1f0a.handler\n        instance(x: 246, y: -125, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) contains_9c7b2a root.Std_k98ojb.List.Contains {}\n            list2_9c5e6d -> contains_9c7b2a.list\n            current_81298e -> contains_9c7b2a.item\n        } -> map_c73e3b.handler\n        filter_4b1f0a.output_list -> map_c73e3b.items\n        instance(x: 1058, y: -119) not_75283f root.Std_k98ojb.Logic.Not {}\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n        list1_2a3b4f -> filter_4b1f0a.items\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_3e9f5d\n        in(x: -485, y: -115, name: \"mainList\") property(List) main_list_7a4b1c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7a4b1c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7a4b1c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_3e9f5d -> getat_ce2a48.valueAtIndex\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 30, name: \"list1\") property(List) list1_2a3b8f\n        in(x: -450, y: -145, name: \"list2\") property(List) list2_7c6e0d\n\n        out(x: 1215, y: -15, name: \"output\") property(Bool) output_9f4a1f\n\n        instance(x: -278, y: -20, name: \"filter sublist\") filter_3b8a2d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -17) contains_5e0c6c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_9f8d7a\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1c2e6b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_5b0f4f\n\n            instance(x: 226, y: 56) contains_7d8a9f root.Std_k98ojb.List.Contains {}\n            list2_7c6e0d -> contains_7d8a9f.list\n            current_9f8d7a -> contains_7d8a9f.item\n            contains_7d8a9f.is_contained -> output_5b0f4f\n        } -> filter_3b8a2d.handler\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_1e6c4f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_8a3d9f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_1e6c4f\n\n            instance(x: 74, y: -23) length_5b0f4f root.Std_k98ojb.List.Length {}\n            current_8a3d9f -> length_5b0f4f.list\n            length_5b0f4f.length -> bool_1e6c4f\n        } -> map_1e6c4f.handler\n        filter_3b8a2d.output_list -> map_1e6c4f.items\n        map_1e6c4f.output_list -> contains_5e0c6c.list\n        true -> contains_5e0c6c.item\n        contains_5e0c6c.is_contained -> output_9f4a1f\n        instance(x: -303, y: 30) getat_3b8a2d root.Std_k98ojb.List.GetAt {}\n        list1_2a3b8f -> getat_3b8a2d.list\n        func() {\n            in(x: -0, y: -121, name: \"new_value\") property(Number) _index_5b0f4f\n\n            out(x: 679, y: -313, name: \"continue\") trigger() continue_1e6c4f\n\n            instance(x: -275, y: -35) getat_7d8a9f root.Std_k98ojb.List.GetAt {}\n            list1_2a3b8f -> getat_7d8a9f.list\n            _index_5b0f4f -> getat_7d8a9f.index\n            instance(x: 321, y: -20) for_5e0c6c root.Std_k98ojb.Std.For {}\n            list2_7c6e0d -> for_5e0c6c.items\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_1e6c4f\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_7d8a9f\n\n                instance(x: 226, y: 56) equal_5b0f4f root.Std_k98ojb.Logic.Equal {}\n                getat_7d8a9f.itemAtIndex -> equal_5b0f4f.left\n                current_1e6c4f -> equal_5b0f4f.right\n                equal_5b0f4f.result -> output_7d8a9f\n            } -> for_5e0c6c.onItem\n            getat_3b8a2d.itemAtIndex -> for_5e0c6c.index\n            for_5e0c6c.done -> continue_1e6c4f\n        } -> getat_3b8a2d.handler\n        0 -> getat_3b8a2d.index\n        instance(x: -275, y: 30) getat_7d8a9f root.Std_k98ojb.List.GetAt {}\n        list1_2a3b8f -> getat_7d8a9f.list\n        func() {\n            in(x: -0, y: -121, name: \"new_value\") property(Number) _index_5b0f4f\n\n            out(x: 679, y: -313, name: \"continue\") trigger() continue_1e6c4f\n\n            instance(x: -275, y: -35) getat_7d8a9f root.Std_k98ojb.List.GetAt {}\n            list1_2a3b8f -> getat_7d8a9f.list\n            _index_5b0f4f -> getat_7d8a9f.index\n            instance(x: 321, y: -20) for_5e0c6c root.Std_k98ojb.Std.For {}\n            list2_7c6e0d -> for_5e0c6c.items\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_1e6c4f\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_7d8a9f\n\n                instance(x: 226, y: 56) equal_5b0f4f root.Std_k98ojb.Logic.Equal {}\n                getat_7d8a9f.itemAtIndex -> equal_5b0f4f.left\n                current_1e6c4f -> equal_5b0f4f.right\n                equal_5b0f4f.result -> output_7d8a9f\n            } -> for_5e0c6c.onItem\n            getat_3b8a2d.itemAtIndex -> for_5e0c6c.index\n            for_5e0c6c.done -> continue_1e6c4f\n        } -> getat_7d8a9f.handler\n        0 -> getat_7d8a9f.index\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_5b0f4f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_3a2f8d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_7e6b9c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7e6b9c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7e6b9c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_3a2f8d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"subList\") property(List) sub_list_1e8b3f\n        in(x: -485, y: 155, name: \"mainList\") property(List) main_list_2c9a7d\n\n        out(x: 1227, y: 140, name: \"output\") property(Bool) output_6e0f1f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_2c9a7d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sub_list_1e8b3f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f9c5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 71, name: \"index\") property(Number) index_8c1e6d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b2f3a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_9b2f3a.result -> notequal_807ffd.left\n            index_8c1e6d -> sub_9b2f3a.first\n            elem_9f6850 -> sub_9b2f3a.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4b8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_8c1e6d\n\n            instance(x: 89, y: 29) list_length_5b2a7f root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) minus_3c9b4f root.Std_k98ojb.Math.Sub {}\n            instance(x: 311, y: 71) plus_1e0d6e root.Std_k98ojb.Math.Add {}\n            list_length_5b2a7f.length -> minus_3c9b4f.first\n            1 -> minus_3c9b4f.second\n            index_8c1e6d -> plus_1e0d6e.first\n            minus_3c9b4f.result -> plus_1e0d6e.second\n            list_length_5b2a7f.length -> plus_1e0d6e.second\n        } -> find_6d05b0.index_handler\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"context\") property(Number) context_7c3e8d\n\n            instance(x: 89, y: 29) list_length_5b2a7f root.Std_k98ojb.List.Length {}\n            list_length_5b2a7f.length -> context_7c3e8d\n        } -> find_6d05b0.context_handler\n        find_6d05b0.item -> missing_number_7f9c5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f9e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c2d5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 68, name: \"index\") property(Number) index_7c1e6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b0f2d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_9b0f2d.result -> notequal_807ffd.left\n            index_7c1e6a -> sub_9b0f2d.first\n            elem_9f6850 -> sub_9b0f2d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a8f9e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_7c1e6a\n\n            instance(x: 89, y: 29) list_length_3b5d8f root.Std_k98ojb.List.Length {}\n            elem_9f6850 -> list_length_3b5d8f.list\n            list_length_3b5d8f.length -> index_7c1e6a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_7c2d5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_1f9b8a\n\n        out(x: 592, y: -1, name: \"missing\") property(Number) missing_3e6c7d\n\n        instance(x: 0, y: 0) find_5c4f2e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: -40, name: \"index\") property(Number) index_1e8c5d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: -56) add_7e3c4f root.Std_k98ojb.Math.Add {}\n            index_1e8c5d -> add_7e3c4f.first\n            1 -> add_7e3c4f.second\n            add_7e3c4f.result -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5c4f2e.predicate\n        list_1f9b8a -> find_5c4f2e.items\n        add_7e3c4f.result -> missing_3e6c7d\n        find_5c4f2e.index -> index_1e8c5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9a0b3f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8b6a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 107, name: \"index\") property(Number) index_3c7e1a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2f9d6b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2f9d6b.result -> notequal_807ffd.left\n            index_3c7e1a -> sub_2f9d6b.first\n            elem_9f6850 -> sub_2f9d6b.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8b6a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_3c7e1a\n\n            instance(x: 89, y: 29) list_length_5d6b2e root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) minus_4f9f8c root.Std_k98ojb.Math.Sub {}\n            elem_9f6850 -> minus_4f9f8c.first\n            list_length_5d6b2e.length -> minus_4f9f8c.second\n            minus_4f9f8c.result -> index_3c7e1a\n        } -> find_6d05b0.indexer\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1f9e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c6b5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 64, name: \"index\") property(Number) index_7c8a2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 311, y: 65) sub_2a3f9c root.Std_k98ojb.Math.Sub {}\n            1 -> sub_2a3f9c.second\n            index_7c8a2e -> sub_2a3f9c.first\n            sub_2a3f9c.result -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1f9e -> find_6d05b0.items\n        find_6d05b0.index -> index_7c8a2e\n        sub_2a3f9c.result -> missing_number_7c6b5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1c4f5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 64, name: \"index\") property(Number) index_ae8c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ae8c6a -> add_1088d5.first\n            1 -> add_1088d5.second\n            elem_9f6850 -> notequal_807ffd.left\n            add_1088d5.result -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.index -> missing_number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f5b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 85, name: \"index\") property(Number) index_1e7c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e7c5a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f5b8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_1e7c5a\n\n            instance(x: 89, y: 29) count_6b8d3f root.Std_k98ojb.Count {}\n            elem_9f6850 -> count_6b8d3f.count\n            count_6b8d3f.count -> index_1e7c5a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f8d5a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 63, name: \"index\") property(Number) index_7c8a1e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 312, y: 63) add_7f1e6c root.Std_k98ojb.Math.Add {}\n            index_7c8a1e -> add_7f1e6c.first\n            1 -> add_7f1e6c.second\n            add_7f1e6c.result -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d5a -> find_6d05b0.items\n        find_6d05b0.index -> index_7c8a1e\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f3b6a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7e9c8d\n\n        instance(x: 0, y: 0) find_5a4f2f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1b3e9c\n            in(x: -114, y: 116, name: \"index\") property(Number) index_7f0d4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e5f8ef\n\n            instance(x: 89, y: 29) sub_1e3c9b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7a4d6c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7a4d6c.right\n            sub_1e3c9b.result -> notequal_7a4d6c.left\n            index_7f0d4a -> sub_1e3c9b.first\n            elem_1b3e9c -> sub_1e3c9b.second\n            notequal_7a4d6c.result -> bool_e5f8ef\n        } -> find_5a4f2f.predicate\n        list_1f3b6a -> find_5a4f2f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9e0d8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7b3a5c\n\n            instance(x: 89, y: 29) sub_1f4b2a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_8d9e6f root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_8d9e6f.right\n            sub_1f4b2a.result -> notequal_8d9e6f.left\n            index_7f0d4a -> sub_1f4b2a.first\n            elem_9e0d8c -> sub_1f4b2a.second\n            notequal_8d9e6f.result -> bool_7b3a5c\n        } -> find_5a4f2f.index_predicate\n        find_5a4f2f.item -> missing_number_7e9c8d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1e6b0f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f2e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_6b9d7c\n\n        instance(x: 0, y: 0) find_5e4c8e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_3a1f9d\n            in(x: -112, y: 115, name: \"index\") property(Number) index_6c2e7b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5c8b0f\n\n            instance(x: 89, y: 29) sub_1a9d3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7e2b6c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7e2b6c.right\n            sub_1a9d3f.result -> notequal_7e2b6c.left\n            index_6c2e7b -> sub_1a9d3f.first\n            elem_3a1f9d -> sub_1a9d3f.second\n            notequal_7e2b6c.result -> bool_5c8b0f\n        } -> find_5e4c8e.predicate\n        list_3a8f2e -> find_5e4c8e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1d7b6e\n            in(x: -112, y: 115, name: \"index\") property(Number) index_3a2f9c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4b8d0f\n\n            instance(x: 89, y: 29) sub_2a9d5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_8e2b7c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_8e2b7c.right\n            sub_2a9d5f.result -> notequal_8e2b7c.left\n            index_3a2f9c -> sub_2a9d5f.first\n            elem_1d7b6e -> sub_2a9d5f.second\n            notequal_8e2b7c.result -> bool_4b8d0f\n        } -> find_5e4c8e.index_predicate\n        find_5e4c8e.item -> missing_number_6b9d7c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_7e9f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a4d3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6f5c1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7e9f5c.input\n        \" \" -> replace_7e9f5c.search\n        \":\" -> replace_7e9f5c.replace\n        replace_7e9f5c.output -> replace_8a4d3c.input\n        \",\" -> replace_8a4d3c.search\n        \":\" -> replace_8a4d3c.replace\n        replace_8a4d3c.output -> replace_6f5c1c.input\n        \".\" -> replace_6f5c1c.search\n        \":\" -> replace_6f5c1c.replace\n        replace_6f5c1c.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -150, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3c7f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a6d5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8f8b1c root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3c7f9e.input\n        \" \" -> replace_3c7f9e.search\n        \":\" -> replace_3c7f9e.replace\n        replace_3c7f9e.output -> replace_4a6d5c.input\n        \",\" -> replace_4a6d5c.search\n        \":\" -> replace_4a6d5c.replace\n        replace_4a6d5c.output -> replace_8f8b1c.input\n        \".\" -> replace_8f8b1c.search\n        \":\" -> replace_8f8b1c.replace\n        replace_8f8b1c.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a8f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e6d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4e5b1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a8f5c.input\n        \" \" -> replace_3a8f5c.search\n        \":\" -> replace_3a8f5c.replace\n        replace_3a8f5c.output -> replace_9e6d7f.input\n        \",\" -> replace_9e6d7f.search\n        \":\" -> replace_9e6d7f.replace\n        replace_9e6d7f.output -> replace_4e5b1f.input\n        \".\" -> replace_4e5b1f.search\n        \":\" -> replace_4e5b1f.replace\n        replace_4e5b1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3e9c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7a5d6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f4f1da root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e9c8f.input\n        \" \" -> replace_3e9c8f.search\n        \":\" -> replace_3e9c8f.replace\n        replace_3e9c8f.output -> replace_7a5d6c.input\n        \",\" -> replace_7a5d6c.search\n        \":\" -> replace_7a5d6c.replace\n        replace_7a5d6c.output -> replace_f4f1da.input\n        \".\" -> replace_f4f1da.search\n        \":\" -> replace_f4f1da.replace\n        replace_f4f1da.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -149, y: 0, name: \"input\") property(String) input_2a1f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3b5c4d\n\n        instance(x: 0, y: 1) replace_7f6c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e2a8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_3d5b4f root.Std_k98ojb.Strings.Replace {}\n        input_2a1f9e -> replace_7f6c8f.input\n        \" \" -> replace_7f6c8f.search\n        \":\" -> replace_7f6c8f.replace\n        replace_7f6c8f.output -> replace_9e2a8a.input\n        \",\" -> replace_9e2a8a.search\n        \":\" -> replace_9e2a8a.replace\n        replace_9e2a8a.output -> replace_3d5b4f.input\n        \".\" -> replace_3d5b4f.search\n        \":\" -> replace_3d5b4f.replace\n        replace_3d5b4f.output -> output_3b5c4d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_2f1b6a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e9c3d\n\n        instance(x: 0, y: 1) replace_4b8d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a9f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_5c3e1d root.Std_k98ojb.Strings.Replace {}\n        input_2f1b6a -> replace_4b8d7f.input\n        \" \" -> replace_4b8d7f.search\n        \":\" -> replace_4b8d7f.replace\n        replace_4b8d7f.output -> replace_6a9f2f.input\n        \",\" -> replace_6a9f2f.search\n        \":\" -> replace_6a9f2f.replace\n        replace_6a9f2f.output -> replace_5c3e1d.input\n        \".\" -> replace_5c3e1d.search\n        \":\" -> replace_5c3e1d.replace\n        replace_5c3e1d.output -> output_5e9c3d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_8a0b2f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a7f9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d6e4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8c9e1d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a7f9c.input\n        \" \" -> replace_3a7f9c.search\n        \":\" -> replace_3a7f9c.replace\n        replace_3a7f9c.output -> replace_5d6e4c.input\n        \",\" -> replace_5d6e4c.search\n        \":\" -> replace_5d6e4c.replace\n        replace_5d6e4c.output -> replace_8c9e1d.input\n        \".\" -> replace_8c9e1d.search\n        \":\" -> replace_8c9e1d.replace\n        replace_8c9e1d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_3b1a9f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8d6c\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_0c5e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_1a2e3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: 48) replace_2d4e5f root.Std_k98ojb.Strings.Replace {}\n        input_3b1a9f -> replace_spaces_commas_dots.input\n        \" \" -> replace_0c5e4f.search\n        \":\" -> replace_0c5e4f.replace\n        replace_spaces_commas_dots.output -> replace_1a2e3f.input\n        \",\" -> replace_1a2e3f.search\n        \":\" -> replace_1a2e3f.replace\n        replace_1a2e3f.output -> replace_2d4e5f.input\n        \".\" -> replace_2d4e5f.search\n        \":\" -> replace_2d4e5f.replace\n        replace_2d4e5f.output -> output_7e8d6c\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_1\n\n        instance(x: 0, y: 1) replace_7f3b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5e4a9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e6b1c root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_7f3b8c.input\n        \" \" -> replace_7f3b8c.search\n        \":\" -> replace_7f3b8c.replace\n        replace_7f3b8c.output -> replace_5e4a9d.input\n        \",\" -> replace_5e4a9d.search\n        \":\" -> replace_5e4a9d.replace\n        replace_5e4a9d.output -> replace_6e6b1c.input\n        \".\" -> replace_6e6b1c.search\n        \":\" -> replace_6e6b1c.replace\n        replace_6e6b1c.output -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -128, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 520, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_7e9f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f6f7f1 root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_7e9f5c.input\n        \" \" -> replace_7e9f5c.search\n        \":\" -> replace_7e9f5c.replace\n        replace_7e9f5c.output -> replace_3a8d4f.input\n        \",\" -> replace_3a8d4f.search\n        \":\" -> replace_3a8d4f.replace\n        replace_3a8d4f.output -> replace_f6f7f1.input\n        \".\" -> replace_f6f7f1.search\n        \":\" -> replace_f6f7f1.replace\n        replace_f6f7f1.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 6, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1050, y: 14, name: \"output\") property(Bool) output_7c2a5b\n\n        instance(x: -194, y: 10) characters_3e6b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: 12) length_9f0d8f root.Std_k98ojb.List.Length {}\n        instance(x: 480, y: 13) getat_ea1e7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 694, y: 14) equal_5a2c6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 903, y: 15) reduce_0f8d3c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -23, y: -16, name: \"acc\") property(String) acc_1a2e7c\n                in(x: -12, y: 47, name: \"current\") property(String) current_9f0d8f\n\n                out(x: 705, y: 49, name: \"output\") property(String) output_efbc78\n\n                instance(x: 226, y: 56) equal_c76d2b root.Std_k98ojb.Logic.Equal {}\n                acc_1a2e7c -> equal_c76d2b.left\n                current_9f0d8f -> equal_c76d2b.right\n                equal_c76d2b.result -> output_efbc78\n            }\n        }\n        instance(x: 1106, y: 16) not_75283f root.Std_k98ojb.Logic.Not {}\n        input_8f1e9d -> characters_3e6b4c.input\n        characters_3e6b4c.characters -> length_9f0d8f.list\n        characters_3e6b4c.characters -> getat_ea1e7c.list\n        0 -> getat_ea1e7c.index\n        getat_ea1e7c.itemAtIndex -> equal_5a2c6c.left\n        input_8f1e9d -> equal_5a2c6c.right\n        length_9f0d8f.length -> reduce_0f8d3c.list\n        characters_3e6b4c.characters -> reduce_0f8d3c.items\n        1 -> reduce_0f8d3c.initial_value\n        equal_5a2c6c.result -> reduce_0f8d3c.accumulated\n        reduce_0f8d3c.output -> not_75283f.input\n        not_75283f.result -> output_7c2a5b\n    }\n\n    \n\n    instance(x: -123, y: 110) is_same_1e6e9d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 0, name: \"input\") property(String) input_9e8f3d\n\n        out(x: 1014, y: 5, name: \"output\") property(Bool) output_7a2b6c\n\n        instance(x: -184, y: 1) characters_9f0b0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 346, y: 3) length_8e5d4f root.Std_k98ojb.List.Length {}\n        instance(x: 554, y: 2) getat_7c6a1f root.Std_k98ojb.List.GetAt {}\n        instance(x: 765, y: -9) equal_f0a3ad root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1004, y: 11) for_8e5d2f root.Std_k98ojb.Std.For {}\n        characters_9f0b0f.characters -> length_8e5d4f.list\n        input_9e8f3d -> characters_9f0b0f.input\n        length_8e5d4f.length -> for_8e5d2f.items\n        func() {\n            in(x: -23, y: 26, name: \"index\") property(Number) index_7c6a1f\n\n            out(x: 707, y: 14, name: \"out\") property(String) out_0b075e\n\n            instance(x: 226, y: 21) getat_c9d5ea root.Std_k98ojb.List.GetAt {}\n            input_9e8f3d -> getat_c9d5ea.input\n            index_7c6a1f -> getat_c9d5ea.index\n            getat_c9d5ea.itemAtIndex -> out_0b075e\n        } -> for_8e5d2f.handler\n        func() {\n            in(x: -23, y: 26, name: \"index\") property(Number) index_7c6a1f\n\n            out(x: 707, y: 14, name: \"out\") property(String) out_0b075e\n\n            instance(x: 226, y: 21) getat_c9d5ea root.Std_k98ojb.List.GetAt {}\n            input_9e8f3d -> getat_c9d5ea.input\n            index_7c6a1f -> getat_c9d5ea.index\n            getat_c9d5ea.itemAtIndex -> out_0b075e\n        } -> for_8e5d2f.handler\n        0 -> getat_7c6a1f.index\n        characters_9f0b0f.characters -> getat_7c6a1f.list\n        func() {\n            in(x: -23, y: 26, name: \"index\") property(Number) index_7c6a1f\n\n            out(x: 707, y: 14, name: \"out\") property(String) out_0b075e\n\n            instance(x: 226, y: 21) getat_c9d5ea root.Std_k98ojb.List.GetAt {}\n            input_9e8f3d -> getat_c9d5ea.input\n            index_7c6a1f -> getat_c9d5ea.index\n            getat_c9d5ea.itemAtIndex -> out_0b075e\n        } -> for_8e5d2f.handler\n        for_8e5d2f.item -> equal_f0a3ad.left\n        getat_7c6a1f.itemAtIndex -> equal_f0a3ad.right\n        equal_f0a3ad.result -> output_7a2b6c\n    }\n\n    \n\n    instance(x: -55, y: 66) is_same_9e8f3d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1a9d3f\n\n        out(x: 557, y: 11, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 6) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 5) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 4) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_1a9d3f -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_1a9d3f -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 0, name: \"input\") property(String) input_1f2e9d\n\n        out(x: 1066, y: 5, name: \"output\") property(Bool) output_8b3c7a\n\n        instance(x: -120, y: 4) characters_d8b0ef root.Std_k98ojb.Strings.Characters {}\n        instance(x: 391, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 604, y: 5) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 840, y: -7) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1030, y: 1) if_07b8c7 root.Std_k98ojb.Std.If {}\n        characters_d8b0ef.characters -> length_6e87f2.list\n        input_1f2e9d -> characters_d8b0ef.input\n        length_6e87f2.length -> lessthanorequal_f11fda.right\n        1 -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        characters_d8b0ef.characters -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> if_07b8c7.value\n        length_6e87f2.length -> getat_ce2a48.index\n        characters_d8b0ef.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> if_07b8c7.gen_1\n        if_07b8c7.else -> output_8b3c7a\n        if_07b8c7.then -> output_8b3c7a\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_9e8f1d\n\n        out(x: 1073, y: 12, name: \"output\") property(Bool) output_eb6c7a\n\n        instance(x: -137, y: 10) characters_c4a0cc root.Std_k98ojb.Strings.Characters {}\n        instance(x: 347, y: 11) length_1e9f8d root.Std_k98ojb.List.Length {}\n        instance(x: 549, y: 12) getat_3c7b5c root.Std_k98ojb.List.GetAt {}\n        instance(x: 736, y: -10) equal_2a0d6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 924, y: 11) filter_8e9f1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1067, y: 12) length_3e4f5f root.Std_k98ojb.List.Length {}\n        characters_c4a0cc.characters -> getat_3c7b5c.list\n        input_9e8f1d -> characters_c4a0cc.input\n        0 -> getat_3c7b5c.index\n        getat_3c7b5c.itemAtIndex -> equal_2a0d6c.left\n        input_9e8f1d -> equal_2a0d6c.right\n        length_1e9f8d.list -> filter_8e9f1f.items\n        characters_c4a0cc.characters -> length_1e9f8d.list\n        func() {\n            in(x: -22, y: 37, name: \"current\") property(Any) current_5b7c3e\n\n            out(x: 577, y: 49, name: \"output\") property(Bool) output_6a0f2d\n\n            instance(x: 176, y: 46) equal_f9f1d8 root.Std_k98ojb.Logic.Equal {}\n            current_5b7c3e -> equal_f9f1d8.left\n            input_9e8f1d -> equal_f9f1d8.right\n            equal_f9f1d8.result -> output_6a0f2d\n        } -> filter_8e9f1f.handler\n        length_3e4f5f.list -> equal_2a0d6c.left\n        1 -> equal_2a0d6c.right\n        filter_8e9f1f.output_list -> length_3e4f5f.list\n        equal_2a0d6c.result -> output_eb6c7a\n    }\n\n    \n\n    instance(x: -24, y: 85) is_same_9e6f2f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 0, name: \"input\") property(String) input_8f3a4e\n\n        out(x: 1055, y: 10, name: \"output\") property(Bool) output_7b1d6c\n\n        instance(x: -88, y: 11) characters_2f9d0a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 240, y: 12) length_8e5c3c root.Std_k98ojb.List.Length {}\n        instance(x: 453, y: 13) getat_7e4b6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 677, y: 14) equal_9d0a1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 896, y: 15) reduce_3c2a8f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1097, y: -12) ifexpression_5e4f6d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 488, y: 40, name: \"getter_1c9a2f\") getter_1c9a2f = previous\n        setter(x: 834, y: -55, name: \"setter_e5b8e7\") setter_e5b8e7 = previous\n        instance(x: 1120, y: -12) if_3d4f6c root.Std_k98ojb.Std.If {}\n        getter(x: 0, y: -40, name: \"getter_e5b8e7\") getter_e5b8e7 = previous\n\n        input_8f3a4e -> characters_2f9d0a.input\n        characters_2f3d0a.characters -> length_8e5c3c.list\n        length_8e5c3c.length -> getat_7e4b6f.index\n        1 -> getat_7e4b6f.index\n        characters_2f9d0a.characters -> reduce_3c2a8f.items\n        getter_e5b8e7.value -> ifexpression_5e4f6d.gen_1\n        getat_7e4b6f.itemAtIndex -> ifexpression_5e4f6d.gen_2\n        reduce_3c2a8f.index -> ifexpression_5e4f6d.gen_0\n        getter_1c9a2f.value -> equal_9d0a1f.left\n        getat_7e4b6f.itemAtIndex -> equal_9d0a1f.right\n        equal_9d0a1f.result -> ifexpression_5e4f6d.predicate\n        reduce_3c2a8f.onItem -> ifexpression_5e4f6d.execute\n        ifexpression_5e4f6d.value -> setter_e5b8e7.new_value\n        ifexpression_5e4f6d.then -> setter_e5b8e7.execute\n        reduce_3c2a8f.done -> output_7b1d6c\n        ifexpression_5e4f6d.else -> if_3d4f6c.execute\n        if_3d4f6c.predicate -> output_7b1d6c\n        if_3d4f6c.then -> output_7b1d6c\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 10, name: \"input\") property(String) input_8e9f0d\n\n        out(x: 1075, y: 12, name: \"output\") property(Bool) output_1a3c7b\n\n        instance(x: -76, y: 11, name: \"characters\") characters_d4d2ed root.Std_k98ojb.Strings.Characters {}\n        instance(x: 238, y: 13) length_9e5f0c root.Std_k98ojb.List.Length {}\n        instance(x: 456, y: -1) getat_ea8b7f root.Std_k98ojb.List.GetAt {}\n        instance(x: 686, y: 11) lessthanorequal_4d9e3f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 901, y: -1) equal_5c8a6f root.Std_k98ojb.Logic.Equal {}\n        characters_d4d2ed.characters -> length_9e5f0c.list\n        input_8e9f0d -> characters_d4d2ed.input\n        length_9e5f0c.length -> lessthanorequal_4d9e3f.right\n        1 -> lessthanorequal_4d9e3f.left\n        equal_5c8a6f.result -> output_1a3c7b\n        characters_d4d2ed.characters -> getat_ea8b7f.list\n        getat_ea8b7f.itemAtIndex -> equal_5c8a6f.right\n        0 -> getat_ea8b7f.index\n        input_8e9e0d -> equal_5c8a6f.left\n        lessthanorequal_4d9e3f.result -> getat_ea8b7f.execute\n    }\n\n    \n\n    instance(x: 16, y: -55) is_same_1c2f6f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_8f3e1d\n\n        out(x: 560, y: 111, name: \"output\") property(Bool) output_9b7c2a\n\n        instance(x: -92, y: 10) characters_5a0e6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 110) length_1d4c8f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 109) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        characters_5a0e6f.characters -> length_1d4c8f.list\n        input_8f3e1d -> characters_5a0e6f.input\n        list_9c7b7e -> for_d26972.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        length_1d4c8f.length -> for_d26972.count\n        list_9c7b7e -> for_d26972.items\n        for_d26972.item -> equal_f89569.left\n        getter_b280eb.value -> equal_f89569.right\n        for_d26972.onItem -> setter_9d4f1c.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        equal_f89569.result -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_8b2a0e root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 10, name: \"input\") property(String) input_8f0a3e\n\n        out(x: 1065, y: 11, name: \"output\") property(Bool) output_9c2b1d\n\n        instance(x: -82, y: 7) characters_6f4c7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 238, y: 8) length_5a3e0f root.Std_k98ojb.List.Length {}\n        instance(x: 453, y: 9) getat_1d2f5f root.Std_k98ojb.List.GetAt {}\n        instance(x: 674, y: -7) equal_f6c4ea root.Std_k98ojb.Logic.Equal {}\n        instance(x: 893, y: 11) lessthanorequal_8a3e1d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1105, y: 9) ifexpression_6f0c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 492, y: 38, name: \"getter_1d4a2e\") getter_1d4a2e = previous\n        setter(x: 712, y: -76, name: \"setter_8f3c7b\") setter_8f3c7b = previous\n        instance(x: 328, y: -14) for_9c5a6f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -95, name: \"setter_8f3c7b\") setter_1d4e2e = previous\n        ifexpression_6f0c7c.else -> output_9c2b1d\n        ifexpression_6f0c7c.value -> output_9c2b1d\n        ifexpression_6f0c7c.then -> setter_8f3c7b.execute\n        characters_6f4c7c.characters -> for_9c5a6f.items\n        for_9c5a6f.item -> ifexpression_6f0c7c.gen_2\n        for_9c5a6f.index -> ifexpression_6f0c7c.gen_0\n        getter_1d4a2e.value -> ifexpression_6f0c7c.gen_1\n        for_9c5a6f.onItem -> ifexpression_6f0c7c.execute\n        for_9c5a6f.done -> output_9c2b1d\n        for_9c5a6f.item -> setter_8f3c7b.new_value\n        characters_6f4c7c.characters -> getat_1d2f5f.list\n        0 -> getat_1d2f5f.index\n        getat_1d2f5f.itemAtIndex -> setter_1d4e2e.new_value\n        length_5a3e0f.length -> lessthanorequal_8a3e1d.left\n        1 -> lessthanorequal_8a3e1d.right\n        lessthanorequal_8a3e1d.result -> for_9c5a6f.reset\n        setter_1d4e2e.continue -> for_9c5a6f.next\n        equal_f6c4ea.left -> ifexpression_6f0c7c.gen_1\n        equal_f6c4ea.right -> ifexpression_6f0c7c.gen_2\n    }\n\n    \n\n    instance(x: 48, y: -55) is_same_8e3d9a root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -296, y: 30, name: \"input\") property(String) input_9e6a3f\n\n        out(x: 1024, y: 50, name: \"output\") property(Bool) output_7c1b8d\n\n        instance(x: -95, y: 31) characters_c5f0cd root.Std_k98ojb.Strings.Characters {}\n        instance(x: 246, y: 48) length_9a2e3f root.Std_k98ojb.List.Length {}\n        instance(x: 467, y: 50) lessthanorequal_7c6d8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 685, y: 49) ifexpression_1a5e9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 358, y: 126, name: \"getter_8c6d7f\") getter_8c6d7f = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1a5e9f.else -> output_7c1b8d\n        ifexpression_1a5e9f.value -> output_7c1b8d\n        ifexpression_1a5e9f.then -> for_d26972.next\n        characters_c5f0cd.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_1a5e9f.gen_2\n        for_d26972.index -> ifexpression_1a5e9f.gen_0\n        getter_8c6d7f.value -> ifexpression_1a5e9f.gen_1\n        for_d26972.onItem -> ifexpression_1a5e9f.execute\n        for_d26972.done -> output_7c1b8d\n        input_9e6a3f -> characters_c5f0cd.input\n        length_9a2e3f.list -> lessthanorequal_7c6d8c.left\n        1 -> lessthanorequal_7c6d8c.right\n        lessthanorequal_7c6d8c.result -> for_d26972.reset\n        characters_c5f0cd.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_8c6d7f.value\n    }\n\n    \n\n    instance(x: -1, y: 56) is_same_9b5e3c root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a8c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9e7d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9e7d4f.items\n        count_1f2a8c.count -> filter_9e7d4f.execute\n        filter_9e7d4f.output_list -> count_1f2a8c.value\n        count_1f2a8c.reset -> characters_node.trigger\n        count_1f2a8c.done -> output_ai\n    }\n    \n\n    instance(x: 0, y: -30) filter_9e7d4f root.main.count_digits.Iteration.Filter {\n        handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n    }\n\n    \n    instance(x: -30, y: 0) characters_node root.main.count_digits.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_1f2a8c root.main.count_digits.Std_k98ojb.Count {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f4e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -20) filter_3c5d6f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3c5d6f.items\n        count_1a2f4e.count -> filter_3c5d6f.execute\n        filter_3c5d6f.output_list -> count_1a2f4e.reset\n        count_1a2f4e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -20) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -45, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a6c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -46) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e25a9.list\n        count_1f2a6c.count -> filter_3e25a9.on_item\n        filter_3e25a9.result -> count_1f2a6c.value\n        instance(x: 0, y: -92) ifexpression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_1f2a6c.count -> ifexpression_node.gen_0\n        instance(x: 0, y: -138) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1f2a6c.count -> math_expr_node.gen_0\n        instance(x: 0, y: -184) math_expr_node_3e25a9 root.Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        ifexpression_node.then -> math_expr_node_3e25a9.execute\n        ifexpression_node.else -> math_expr_node.execute\n        math_expr_node.result -> output_ai\n        math_expr_node_3e25a9.result -> output_ai\n    }\n\n    \n    instance(x: 0, y: -138) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a6f2c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -15) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1a6f2c.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1a6f2c.value\n        instance(x: 0, y: -30) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_1a6f2c.count -> ifexpression_3d7de6.gen_0\n        0 -> ifexpression_3d7de6.gen_1\n        instance(x: -15, y: -45) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1a6f2c.count -> math_expr_node.gen_0\n        ifexpression_3d7de6.then -> math_expr_node.execute\n        ifexpression_3d7de6.else -> count_1a6f2c.reset\n        math_expr_node.result -> output_ai\n    }\n    \n\n    instance(x: 264, y: -464) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f4e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -40) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1a2f4e.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1a2f4e.value\n        count_1a2f4e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2c6a root.Std_k98ojb.Count {}\n        instance(x: 0, y: -50) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1f2c6a.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1f2c6a.value\n        instance(x: 0, y: -100) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == characters.Length()\"\n        }\n        count_1f2c6a.count -> ifexpression_3d7de6.gen_0\n        characters_node.characters -> ifexpression_3d7de6.gen_1\n        instance(x: 0, y: -150) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1f2c6a.count -> math_expr_node.gen_0\n        instance(x: 0, y: -200) math_expr_node_3e25a9 root.Std_k98ojb.Math.Expression {\n            expression: \"characters.Length()\"\n        }\n        characters_node.characters -> math_expr_node_3e25a9.gen_0\n        ifexpression_3d7de6.then -> math_expr_node.execute\n        ifexpression_3d7de6.else -> math_expr_node_3e25a9.execute\n        math_expr_node.result -> output_ai\n        math_expr_node_3e25a9.result -> output_ai\n    }\n    \n\n    instance(x: 0, y: -250) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f9c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -40) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> count_1a2f9c.count\n        characters_node.characters -> filter_3e25a9.list\n        filter_3e25a9.result -> count_1a2f9c.reset\n        count_1a2f9c.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_2f1c9a root.Std_k98ojb.Count {}\n        instance(x: 0, y: -16) filter_3e7d6f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e7d6f.items\n        count_2f1c9a.count -> filter_3e7d6f.execute\n        filter_3e7d6f.output_list -> count_2f1c9a.value\n        instance(x: 0, y: -32) ifexpression_4b5f8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_2f1c9a.count -> ifexpression_4b5f8c.gen_0\n        instance(x: 0, y: -48) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_2f1c9a.count -> math_expr_node.gen_0\n        instance(x: 0, y: -64) math_expr_node_2 root.Std_k98ojb.Math.Expression {\n            expression: \"0\"\n        }\n        ifexpression_4b5f8c.then -> math_expr_node_2.execute\n        ifexpression_4b5f8c.else -> math_expr_node.execute\n        math_expr_node.result -> output_ai\n        math_expr_node_2.result -> output_ai\n    }\n\n    \n    instance(x: 0, y: -80) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_2a3c8e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -15) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_2a3c8e.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_2a3c8e.value\n        count_2a3c8e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -15) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -10, y: 20) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 30, y: 20) count_1f8a4c root.Std_k98ojb.Std.Count {}\n        instance(x: 70, y: 20) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> characters_node.input\n        characters_node.characters -> count_1f8a4c.trigger\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_1f8a4c.count\n        count_1f8a4c.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e5a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e5a8c.first\n        data_cde0dc -> pow_9e5a8c.second\n        pow_9e5a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c0e.x\n        data_cde0dc -> pow_9a8c0e.y\n        pow_9a8c0e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3a8e9c.x\n        data_cde0dc -> pow_3a8e9c.y\n        pow_3a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a9c3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a9c3e.x\n        data_cde0dc -> pow_5a9c3e.y\n        pow_5a9c3e.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a0c8e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a0c8e.x\n        data_cde0dc -> pow_9a0c8e.y\n        pow_9a0c8e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8e9c.x\n        data_cde0dc -> pow_5a8e9c.y\n        pow_5a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8c9e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8c9e.x\n        data_cde0dc -> pow_5a8c9e.y\n        pow_5a8c9e.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8e9c.x\n        data_cde0dc -> pow_5a8e9c.y\n        pow_5a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3a0c5e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3a0c5e.x\n        data_cde0dc -> pow_3a0c5e.y\n        pow_3a0c5e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c3e.x\n        data_cde0dc -> pow_9a8c3e.y\n        pow_9a8c3e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -103, y: 54, name: \"size\") property(Number) size_8f1b5e\n\n        out(x: 46, y: 158, name: \"surfaceArea\") property(Number) surfaceArea_7c3a0d\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f1b5e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surfaceArea_7c3a0d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 25, name: \"size\") property(Number) size_1a3f8e\n\n        out(x: 656, y: 120, name: \"surface_area\") property(Number) surface_area_9b2c6d\n\n        instance(x: 94, y: -105) mul_7a0b4f root.Std_k98ojb.Math.Mul {}\n        size_1a3f8e -> mul_7a0b4f.first\n        6 -> mul_7a0b4f.second\n        instance(x: 92, y: -22) mul_9c5d2d root.Std_k98ojb.Math.Mul {}\n        mul_7a0b4f.result -> mul_9c5d2d.first\n        size_1a3f8e -> mul_9c5d2d.second\n        mul_9c5d2d.result -> surface_area_9b2c6d\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_7f0d4f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 45, name: \"size\") property(Number) size_1f0b5e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f6d3c8 root.Std_k98ojb.Math.Mul {}\n        size_1f0b5e -> mul_f6d3c8.first\n        6 -> mul_f6d3c8.second\n        instance(x: 92, y: -22) mul_2a4b7c root.Std_k98ojb.Math.Mul {}\n        mul_f6d3c8.result -> mul_2a4b7c.first\n        size_1f0b5e -> mul_2a4b7c.second\n        mul_2a4b7c.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -102, y: 22, name: \"size\") property(Number) size_1f3e9d\n\n        out(x: 1066, y: 20, name: \"surface_area\") property(Number) surface_area_7b4a8c\n\n        instance(x: 10, y: -19) mul_5a0c2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 327, y: 133) data_cde0dc  = 6\n        size_1f3e9d -> mul_5a0c2f.first\n        data_cde0dc -> mul_5a0c2f.second\n        mul_5a0c2f.result -> surface_area_7b4a8c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -101, y: 43, name: \"size\") property(Number) size_1a3f9e\n\n        out(x: 1062, y: 42, name: \"surface_area\") property(Number) surface_area_8b0c7d\n\n        instance(x: 30, y: -12) mul_f5a4aa root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3f9e -> mul_f5a4aa.first\n        data_cde0dc -> mul_f5a4aa.second\n        mul_f5a4aa.result -> surface_area_8b0c7d\n    }\n\n    \n\n    instance(x: -11, y: 20) surface_area_of_cube_9f1e2d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -106, y: 20, name: \"size\") property(Number) size_1a8f5e\n\n        out(x: 1092, y: 23, name: \"surfaceArea\") property(Number) surfaceArea_9c0b4d\n\n        instance(x: 104, y: -13) mul_7b3f6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a8f5e -> mul_7b3f6f.first\n        data_cde0dc -> mul_7b3f6f.second\n        mul_7b3f6f.result -> surfaceArea_9c0b4d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_1a8e5d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_1a9f0e\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: 105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_1a9f0e -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: 22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f2330d.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: -45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -106, y: 53, name: \"size\") property(Number) size_1a8f5e\n\n        out(x: 1084, y: 7, name: \"surface_area\") property(Number) surface_area_9c6b0d\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_1a8f5e -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_9c6b0d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_7a3e51 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -102, y: 55, name: \"size\") property(Number) size_1a3b5f\n\n        out(x: 1148, y: 7, name: \"surface_area\") property(Number) surface_area_2e4d9c\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3b5f -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_2e4d9c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_8a3b7f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -100, y: 53, name: \"size\") property(Number) size_9e3b6f\n\n        out(x: 1018, y: 52, name: \"surface_area\") property(Number) surface_area_5a1c7d\n\n        instance(x: 10, y: -12) mul_4f2c0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 316, y: 133) data_cde0dc  = 6\n        size_9e3b6f -> mul_4f2c0f.first\n        data_cde0dc -> mul_4f2c0f.second\n        mul_4f2c0f.result -> surface_area_5a1c7d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 13, name: \"list\") property(List) list_4a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3f8e\n        min_list_4d4556.list -> list_4a3f8e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 27, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_1a8f9e -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_1a8f9e -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -333, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> max_f3b46d.list\n        list_542a51 -> min_870503.list\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_1e9b8f\n        min_list_4d4556.list -> list_1e9b8f\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_1a8f0e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_1a8f0e -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_1a8f0e -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -426, y: 438, name: \"list\") property(List) list_4e8b9f\n\n        out(x: 159, y: 427, name: \"difference\") property(Number) difference_5c0a1d\n\n        instance(x: 426, y: 303) sub_6f2b7f root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358) max_8e9c3f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_1a5d0f root.Std_k98ojb.List.Min {}\n        instance(x: -318, y: 521) sub_6f2b7f_2 root.Std_k98ojb.Math.Sub {}\n        list_4e8b9f -> max_8e9c3f.list\n        list_4e8b9f -> min_1a5d0f.list\n        max_8e9c3f.max -> sub_6f2b7f.first\n        min_1a5d0f.min -> sub_6f2b7f.second\n        sub_6f2b7f.result -> difference_5c0a1d\n    }\n\n    \n\n    instance(x: 426, y: 303) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_2b5d7c\n\n        instance(x: 201, y: 62) sub_3c8e4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_6f9a0d root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_7a5b1f root.Std_k98ojb.List.Min {}\n        list_1a9f0e -> max_6f9a0d.list\n        list_1a9f0e -> min_7a5b1f.list\n        max_6f9a0d.max -> sub_3c8e4e.first\n        min_7a5b1f.min -> sub_3c8e4e.second\n        sub_3c8e4e.result -> output_2b5d7c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_9f6e0c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -26, y: 20, name: \"list\") property(List) list_1a8f3e\n\n        out(x: 444, y: 29, name: \"difference\") property(Number) difference_5c7d6b\n\n        instance(x: 202, y: 27) sub_9f2c4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -250, y: 155) max_1a8e0f root.Std_k98ojb.List.Max {}\n        instance(x: -251, y: -52) min_5d3b7c root.Std_k98ojb.List.Min {}\n        list_1a8f3e -> max_1a8e0f.list\n        list_1a8f3e -> min_5d3b7c.list\n        max_1a8e0f.max -> sub_9f2c4f.first\n        min_5d3b7c.min -> sub_9f2c4f.second\n        sub_9f2c4f.result -> difference_5c7d6b\n    }\n\n    \n\n    instance(x: 47, y: -1) diff_max_min_f8e0a9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a8b3f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5e7c2d\n\n        instance(x: 201, y: 62) sub_4f0b6c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a8c9c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_7d3e2c root.Std_k98ojb.List.Min {}\n        sub_4f0b6c.result -> output_5e7c2d\n        max_1a8c9c.max -> sub_4f0b6c.first\n        min_7d3e2c.min -> sub_4f0b6c.second\n        list_1a8b3f -> max_1a8c9c.list\n        list_1a8b3f -> min_7d3e2c.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 26, name: \"list\") property(List) list_0a9b2f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_6c9a3f root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_4d0b1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        list_0a9b2f -> max_6c9a3f.list\n        list_0a9b2f -> min_4d0b1f.list\n        max_6c9a3f.max -> sub_852f2e.first\n        min_4d0b1f.min -> sub_852f2e.second\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a1d5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9e3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a1d5c.value\n        2 -> modulo_7a1d5c.divisor\n        modulo_7a1d5c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9e3f2f.left\n        0 -> equal_9e3f2f.right\n        equal_9e3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e5d4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f3d5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c0a.value\n        2 -> modulo_7e1c0a.divisor\n        modulo_7e1c0a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f3d5f.left\n        0 -> equal_9f3d5f.right\n        equal_9f3d5f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e5d2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 355, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e6d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_0a3f4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        input_f5c03d -> modulo_1e6d7c.value\n        2 -> modulo_1e6d7c.divisor\n        modulo_1e6d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_0a3f4c.right\n        modulo_1e6d7c.result -> equal_0a3f4c.left\n        equal_0a3f4c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        0 -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_e19a62.value\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e7c2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_1f3a5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e7c2d.value\n        2 -> modulo_0e7c2d.divisor\n        modulo_0e7c2d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_1f3a5f.left\n        0 -> equal_1f3a5f.right\n        equal_1f3a5f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5d4e1c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e5c1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9a4f2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e5c1d.value\n        2 -> modulo_7e5c1d.divisor\n        modulo_7e5c1d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9a4f2c.left\n        0 -> equal_9a4f2c.right\n        equal_9a4f2c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_3a9f4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1d7c.value\n        2 -> modulo_0e1d7c.divisor\n        modulo_0e1d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_3a9f4f.left\n        0 -> equal_3a9f4f.right\n        equal_3a9f4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1c7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2f5a6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1c7d.value\n        2 -> modulo_0e1c7d.divisor\n        modulo_0e1c7d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_2f5a6f.right\n        expression_b720d7.result -> equal_2f5a6f.left\n        if_07b8c7.then -> equal_2f5a6f.execute\n        equal_2f5a6f.result -> if_e19a62.predicate\n        1 -> add_b4554f.first\n        add_b4554f.second -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        equal_2f5a6f.value -> out_f3db9f\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d1a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_3f5a9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1d7c.value\n        2 -> modulo_0e1d7c.divisor\n        modulo_0e1d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_3f5a9f.left\n        0 -> equal_3f5a9f.right\n        equal_3f5a9f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e1d7c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e5c6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_0f9d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1e5c6a.value\n        2 -> modulo_1e5c6a.divisor\n        modulo_1e5c6a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_0f9d4f.left\n        0 -> equal_0f9d4f.right\n        equal_0f9d4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1d4e2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_5a3f6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c2d.value\n        2 -> modulo_7e1c2d.divisor\n        modulo_7e1c2d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_5a3f6f.left\n        0 -> equal_5a3f6f.right\n        equal_5a3f6f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e6d4c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -274, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a7c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: -60) filter_2e5b8c root.Std_k98ojb.Iteration.Filter {}\n        characters_3a7c4f.output -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        characters_3a7c4f.output -> filter_2e5b8c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_2e5b8c.handler\n        find_6d05b0.item -> output_0\n        filter_2e5b8c.output_list -> find_6d05b0.items\n        input_0 -> characters_3a7c4f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"seen\") List_1c9f7e root.Std_k98ojb.List.Empty {}\n        input_0 -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            seen_0 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6b9\n        } -> find_6d05b0.predicate\n        instance(x: 532, y: 147) add_3c8f2e root.Std_k98ojb.List.Add {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            seen_0 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> add_3c8f2e.execute\n        seen_0 -> add_3c8f2e.list\n        current_afd5b1 -> add_3c8f2e.item\n        add_3c8f2e.listWithItem -> seen_0\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a7b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4f8d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 490, y: -1) contains_2c9b0c root.Std_k98ojb.List.Contains {}\n        characters_5a7b3c.output -> find_4f8d6e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) list_1e8b2c root.Std_k98ojb.List.Slice {}\n            contains_2c9b0c.list -> list_1e8b2c.list\n            elem_9f6850 -> list_1e8b2c.start\n            -1 -> list_1e8b2c.end\n            list_1e8b2c.output -> contains_2c9b0c.list\n            contains_2c9b0c.item -> bool_af09a7\n        } -> find_4f8d6e.predicate\n        input_0 -> characters_5a7b3c.input\n        find_4f8d6e.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"unique chars\") Set_c88d35 {}\n        input_0 -> find_7e1char.finder\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        input_0 -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        find_7e1ce0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a3b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8e6c4d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_9e1c7f root.Std_k98ojb.Iteration.Filter {}\n        characters_5a3b7f.output -> find_8e6c4d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b5e8c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_2b5e8c.input\n            elem_9f6850 -> contains_2b5e8c.contains\n            contains_2b5e8c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_8e6c4d.predicate\n        instance(x: 795, y: -3) characters_5a3b7f_1 root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b5e8c_1 root.Std_k98ojb.Strings.Contains {}\n            input_0 -> characters_5a3b7f_1.input\n            contains_2b5e8c_1.result -> bool_af09a7\n            elem_9f6850 -> contains_2b5e8c_1.contains\n        } -> filter_9e1c7f.handler\n        characters_5a3b7f_1.output -> filter_9e1c7f.items\n        find_8e6c4d.item -> output_0\n        filter_9e1c7f.output_list -> find_8e6c4d.items\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_7e5f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"unique chars\") Set_1a2d4f root.Std_k98ojb.Sets.Set {}\n        input_0 -> find_7e5f8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8f3c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2a8f3c.input\n            unique_chars_0 -> contains_2a8f3c.contains\n            contains_2a8f3c.result -> bool_1eb6e9\n        } -> find_7e5f8c.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8f3c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2a8f3c.input\n            unique_chars_0 -> contains_2a8f3c.contains\n            not_0 -> bool_1eb6e9\n            contains_2a8f3c.result -> not_0.input\n        } -> Set_1a2d4f.add\n        find_7e5f8c.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -450) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -459) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -450) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -432) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -440) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    }
]