[
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 11044,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 10, name: \"list1\") property(List) list1_3e8f9a\n        in(x: -162, y: -124, name: \"list2\") property(List) list2_eb7d5c\n\n        out(x: 505, y: -49, name: \"output\") property(Bool) output_4f6c0e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_c1a3da root.Std_k98ojb.Sets.Intersection {}\n        list1_3e8f9a -> intersection_c1a3da.left\n        list2_eb7d5c -> intersection_c1a3da.right\n        instance(x: 679, y: -49) notempty_4a6f0f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c1a3da.intersection -> notempty_4a6f0f.list\n        notempty_4a6f0f.isEmpty -> output_4f6c0e\n    }\n\n    \n\n    instance(x: -138, y: 45) has_common_element_9d7b5c root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 18, name: \"list1\") property(List) list1_3a0f9e\n        in(x: -163, y: -123, name: \"list2\") property(List) list2_7b8c4d\n\n        out(x: 558, y: -109, name: \"output\") property(Bool) output_6a5c1e\n\n        instance(x: 132, y: -131) intersection_c0f9a3 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f9e -> intersection_c0f9a3.left\n        list2_7b8c4d -> intersection_c0f9a3.right\n        instance(x: 361, y: -110) notempty_5a9b6c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c0f9a3.intersect -> notempty_5a9b6c.list\n        notempty_5a9b6c.isEmpty -> output_6a5c1e\n    }\n\n    \n\n    instance(x: 94, y: -67) intersection_e7d4ea root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: 18, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        instance(x: 360, y: -95) notempty_f89569 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> notempty_f89569.list\n        notempty_f89569.isEmpty -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_9e6f8a\n        in(x: -162, y: -121, name: \"list2\") property(List) list2_7b3d0c\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_5f4a1e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_8c9a6 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e6f8a -> intersection_8c9a6.left\n        list2_7b3d0c -> intersection_8c9a6.right\n        instance(x: 188, y: -50) notempty_5e8a8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_8c9a6.intersect -> notempty_5e8a8.list\n        notempty_5e8a8.isEmpty -> output_5f4a1e\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_e7d3b2 root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 18, name: \"list1\") property(List) list1_4e9f8a\n        in(x: -164, y: -120, name: \"list2\") property(List) list2_e5b3c0\n\n        out(x: 504, y: -48, name: \"output\") property(Bool) output_6d0c7e\n\n        instance(x: 223, y: -46, name: \"intersection\") intersection_d1f9a8 root.Std_k98ojb.Sets.Intersection {}\n        list1_4e9f8a -> intersection_d1f9a8.left\n        list2_e5b3c0 -> intersection_d1f9a8.right\n        instance(x: 487, y: -48) notempty_6d7a9f root.Std_k98ojb.List.NotEmpty {}\n        intersection_d1f9a8.intersect -> notempty_6d7a9f.list\n        notempty_6d7a9f.isEmpty -> output_6d0c7e\n    }\n\n    \n\n    instance(x: -139, y: 60) intersection_e5b2a4 root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_3e9b5f\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_a6a8d7\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_4c9b0f\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_5e1f0f root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9b5f -> intersection_5e1f0f.left\n        list2_a6a8d7 -> intersection_5e1f0f.right\n        instance(x: 188, y: -50) notempty_4c9c4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_5e1f0f.intersect -> notempty_4c9c4c.list\n        notempty_4c9c4c.isEmpty -> output_4c9b0f\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_8d7a2c root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -179, y: 17, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -163, y: -128, name: \"list2\") property(List) list2_6c7d5b\n\n        out(x: 786, y: -109, name: \"output\") property(Bool) output_3e4a0f\n\n        instance(x: 133, y: -131) intersection_c9e8ec root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f2a -> intersection_c9e8ec.left\n        list2_6c7d5b -> intersection_c9e8ec.right\n        instance(x: 362, y: -108) notempty_3b0c9c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9e8ec.intersect -> notempty_3b0c9c.list\n        notempty_3b0c9c.isEmpty -> output_3e4a0f\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_7d1c5e root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_3e9b8a\n        in(x: -182, y: -121, name: \"list2\") property(List) list2_7c0f4d\n\n        out(x: 504, y: -50, name: \"output\") property(Bool) output_5b6a8e\n\n        instance(x: 222, y: -48, name: \"intersection\") intersection_1e9c3f root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9b8a -> intersection_1e9c3f.left\n        list2_7c0f4d -> intersection_1e9c3f.right\n        instance(x: -11, y: 9) notempty_5b6a1d root.Std_k98ojb.List.NotEmpty {}\n        intersection_1e9c3f.intersect -> notempty_5b6a1d.list\n        notempty_5b6a1d.isEmpty -> output_5b6a8e\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -173, y: 19, name: \"list1\") property(List) list1_2e3f8a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7b9d4c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_5a1c0e\n\n        instance(x: 133, y: -131) intersection_3f8c9c root.Std_k98ojb.Sets.Intersection {}\n        list1_2e3f8a -> intersection_3f8c9c.left\n        list2_7b9d4c -> intersection_3f8c9c.right\n        instance(x: 245, y: -54) notempty_e5f0a6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f8c9c.intersect -> notempty_e5f0a6.list\n        notempty_e5f0a6.isEmpty -> output_5a1c0e\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_7b2d4f root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -171, y: 17, name: \"list1\") property(List) list1_8e6b0a\n        in(x: -157, y: -123, name: \"list2\") property(List) list2_7f3c9d\n\n        out(x: 504, y: -52, name: \"output\") property(Bool) output_4f1b5e\n\n        instance(x: 221, y: -49, name: \"intersection\") intersection_ea6b8e root.Std_k98ojb.Sets.Intersection {}\n        list1_8e6b0a -> intersection_ea6b8e.left\n        list2_7f3c9d -> intersection_ea6b8e.right\n        instance(x: 448, y: -50) notempty_4a5f1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_ea6b8e.intersect -> notempty_4a5f1c.list\n        notempty_4a5f1c.isEmpty -> output_4f1b5e\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_b0d3ab root.main.intersection {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 339, y: 31, name: \"getter_8a3f9d\") getter_8a3f9d = previous\n        setter(x: 686, y: -252, name: \"setter_7c0b4e\") setter_7c0b4e = previous\n        instance(x: 323, y: -62) for_d1e5aa root.Std_k98ojb.Std.For {}\n        setter(x: -2, y: -163, name: \"setter_7c0b4e\") setter_3a8d6f = previous\n        instance(x: -277, y: -77) getat_e9f1ba root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b2c.else -> continue_5b8b6c\n        ifexpression_7e7b2c.value -> output_eb7d1c\n        ifexpression_7e7b2c.then -> setter_7c0b4e.execute\n        list_0a8f9e -> for_d1e5aa.items\n        for_d1e5aa.item -> ifexpression_7e7b2c.gen_2\n        for_d1e5aa.index -> ifexpression_7e7b2c.gen_0\n        getter_8a3f9d.value -> ifexpression_7e7b2c.gen_1\n        for_d1e5aa.onItem -> ifexpression_7e7b2c.execute\n        for_d1e5aa.done -> continue_5b8b6c\n        for_d1e5aa.item -> setter_7c0b4e.new_value\n        list_0a8f9e -> getat_e9f1ba.list\n        0 -> getat_e9f1ba.index\n        getat_e9f1ba.itemAtIndex -> setter_3a8d6f.new_value\n        execute_5c2b4c -> setter_3a8d6f.execute\n        setter_3a8d6f.continue -> for_d1e5aa.reset\n        setter_7c0b4e.continue -> for_d1e5aa.next\n    }\n\n    \n\n    instance(x: -34, y: 57) is_consecutive_9e2d1f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 3, name: \"list\") property(List) list_1f8a9e\n\n        out(x: 1025, y: 0, name: \"output\") property(Bool) output_7b2c8d\n\n        instance(x: 106, y: -12) sort_4e6b3c root.Std_k98ojb.List.Sort {}\n        instance(x: 400, y: 10) for_9f1a5f root.Std_k98ojb.Std.For {}\n        instance(x: 740, y: 0) sub_7d2c8c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1023, y: -13) if_e6e4ec root.Std_k98ojb.Std.If {}\n        sort_4e6b3c.list -> for_9f1a5f.items\n        func() {\n            in(x: -114, y: 41, name: \"current\") property(Number) current_7d8a0e\n\n            out(x: 695, y: 32, name: \"bool\") property(Bool) bool_3b2c9f\n\n            instance(x: 107, y: 29) sub_e6f1dd root.Std_k98ojb.Math.Sub {}\n            current_7d8a0e -> sub_e6f1dd.first\n            for_9f1a5f.index -> sub_e6f1dd.second\n            sub_e6f1dd.result -> bool_3b2c9f\n        } -> if_e6e4ec.predicate\n        for_9f1a5f.onItem -> if_e6e4ec.execute\n        list_1f8a9e -> sort_4e6b3c.list\n        0 -> sub_7d2c8c.first\n        for_9f1a5f.index -> sub_7d2c8c.second\n        sub_7d2c8c.result -> if_e6e4ec.then\n        true -> if_e6e4ec.else\n        if_e6e4ec.value -> output_7b2c8d\n        for_9f1a5f.done -> output_7b2c8d\n    }\n\n    \n\n    instance(x: -56, y: 179) is_consecutive_3e0d9c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 0, name: \"list\") property(List) list_1f9d5e\n\n        out(x: 1003, y: 29, name: \"output\") property(Bool) output_eb7c4a\n\n        instance(x: 108, y: 8) sort_6b2c0f root.Std_k98ojb.List.Sort {}\n        instance(x: 434, y: -1) for_5e9d3c root.Std_k98ojb.Std.For {}\n        instance(x: 736, y: 30) if_4a7c7f root.Std_k98ojb.Std.If {}\n        instance(x: 1000, y: 28) sub_6a8c1c root.Std_k98ojb.Math.Sub {}\n        list_1f9d5e -> sort_6b2c0f.list\n        sort_6b2c0f.sortedList -> for_5e9d3c.items\n        func() {\n            in(x: -192, y: 49, name: \"current\") property(Number) current_7a8a4e\n\n            out(x: 705, y: 50, name: \"bool\") property(Bool) bool_6f0b5d\n\n            instance(x: 226, y: 55) sub_9c2b1f root.Std_k98ojb.Math.Sub {}\n            current_7a8a4e -> sub_9c2b1f.first\n            for_5e9d3c.index -> sub_9c2b1f.second\n            sub_9c2b1f.result -> bool_6f0b5d\n        } -> if_4a7c7f.predicate\n        for_5e9d3c.item -> if_4a7c7f.gen_0\n        for_5e9d3c.index -> sub_6a8c1c.first\n        1 -> sub_6a8c1c.second\n        sub_6a8c1c.result -> if_4a7c7f.gen_1\n        if_4a7c7f.else -> output_eb7c4a\n        for_5e9d3c.onItem -> if_4a7c7f.execute\n        for_5e9d3c.done -> output_eb7c4a\n    }\n\n    \n\n    instance(x: -62, y: 111) is_consecutive_2a8c0f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e8a3f\n\n        out(x: 1225, y: 2, name: \"output\") property(Bool) output_7c6d4b\n\n        instance(x: 0, y: -15) for_8f1c5f root.Std_k98ojb.Std.For {}\n        instance(x: 333, y: 12) lessthan_9e3a4c root.Std_k98ojb.Math.LessThan {}\n        instance(x: 565, y: 13) and_2d0f8f root.Std_k98ojb.Logic.And {}\n        instance(x: 785, y: -1) if_5b6c7f root.Std_k98ojb.Std.If {}\n        instance(x: 1049, y: -15) not_3a4e1f root.Std_k98ojb.Logic.Not {}\n        list_9e8a3f -> for_8f1c5f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_8f1c5f.handler\n        for_8f1c5f.item -> lessthan_9e3a4c.left\n        for_8f1c5f.index -> lessthan_9e3a4c.right\n        and_2d0f8f.result -> if_5b6c7f.predicate\n        lessthan_9e3a4c.result -> and_2d0f8f.left\n        for_8f1c5f.onItem -> if_5b6c7f.execute\n        not_3a4e1f.result -> output_7c6d4b\n        if_5b6c7f.else -> not_3a4e1f.input\n        if_5b6c7f.value -> output_7c6d4b\n        for_8f1c5f.done -> not_3a4e1f.execute\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_2c856f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 4, name: \"list\") property(List) list_1f0a8e\n\n        out(x: 1229, y: 5, name: \"output\") property(Bool) output_e6b2c7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1f0a8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f0a8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f3b7a6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 5, name: \"list\") property(List) list_1f8a0e\n\n        out(x: 1129, y: 7, name: \"output\") property(Bool) output_3c6b4d\n\n        instance(x: 102, y: -20) sort_2b5f5f root.Std_k98ojb.List.Sort {}\n        instance(x: 442, y: 8) for_1a7e9c root.Std_k98ojb.Std.For {}\n        instance(x: 778, y: 11) sub_6d3f0c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1052, y: -10) lessthanorequal_8f5a4e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1297, y: 9) if_1d3c6f root.Std_k98ojb.Std.If {}\n        list_1f8a0e -> sort_2b5f5f.list\n        sort_2b5f5f.sortedList -> for_1a7e9c.items\n        func() {\n            in(x: -122, y: 34, name: \"current\") property(Number) current_3f6d8f\n\n            out(x: 706, y: 44, name: \"bool\") property(Bool) bool_4b1a5e\n\n            instance(x: 112, y: 39) sub_9c7b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 355, y: 45) lessthanorequal_e6d0f8 root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_1a7e9c.index -> sub_9c7b2c.first\n            1 -> sub_9c7b2c.second\n            sub_9c7b2c.result -> lessthanorequal_e6d0f8.left\n            current_3f6d8f -> lessthanorequal_e6d0f8.right\n            lessthanorequal_e6d0f8.result -> bool_4b1a5e\n        } -> if_1d3c6f.predicate\n        for_1a7e9c.item -> sub_6d3f0c.first\n        1 -> sub_6d3f0c.second\n        sub_6d3f0c.result -> lessthanorequal_8f5a4e.left\n        for_1a7e9c.index -> lessthanorequal_8f5a4e.right\n        lessthanorequal_8f5a4e.result -> if_1d3c6f.predicate\n        for_1a7e9c.onItem -> if_1d3c6f.execute\n        if_1d3c6f.else -> output_3c6b4d\n        if_1d3c6f.then -> for_1a7e9c.next\n        for_1a7e9c.done -> output_3c6b4d\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_5e2b0f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 1, name: \"list\") property(List) list_9a3f0e\n\n        out(x: 1066, y: 8, name: \"output\") property(Bool) output_5c7d4b\n\n        instance(x: 0, y: -12) sort_2b1a2f root.Std_k98ojb.List.Sort {}\n        instance(x: 321, y: 15) for_9e3f6c root.Std_k98ojb.Std.For {}\n        instance(x: 642, y: 16) sub_7d5c4c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1000, y: -12) if_2a1c9f root.Std_k98ojb.Std.If {}\n        sort_2b1a2f.list -> for_9e3f6c.items\n        func() {\n            in(x: -113, y: 54, name: \"current\") property(Number) current_7d8f0c\n\n            out(x: 515, y: 64, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 49) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 55) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_7d8f0c -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> for_9e3f6c.handler\n        for_9e3f6c.item -> sub_7d5c4c.first\n        for_9e3f6c.index -> sub_7d5c4c.second\n        1 -> sub_7d5c4c.second\n        sub_7d5c4c.result -> if_2a1c9f.predicate\n        for_9e3f6c.onItem -> if_2a1c9f.execute\n        if_2a1c9f.else -> output_5c7d4b\n        true -> if_2a1c9f.then\n        list_9a3f0e -> sort_2b1a2f.list\n    }\n\n    \n\n    instance(x: -56, y: 529) is_consecutive_8b6b8f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 5, name: \"list\") property(List) list_1a3f0e\n\n        out(x: 1066, y: 4, name: \"output\") property(Bool) output_9c7b7d\n\n        instance(x: 0, y: -11) sort_8f5a3f root.Std_k98ojb.List.Sort {}\n        instance(x: 352, y: 24) for_1e2f6f root.Std_k98ojb.Std.For {}\n        instance(x: 1034, y: 26) sub_7d9c7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1048, y: -71) if_5a0c3c root.Std_k98ojb.Std.If {}\n        sort_8f5a3f.list -> for_1e2f6f.items\n        func() {\n            in(x: -114, y: 39, name: \"current\") property(Number) current_e9d4ec\n\n            out(x: 705, y: 50, name: \"bool\") property(Bool) bool_7b3c1e\n\n            instance(x: 74, y: 45) sub_2a5f8f root.Std_k98ojb.Math.Sub {}\n            instance(x: 295, y: 47) equal_f0d9ce root.Std_k98ojb.Logic.Equal {}\n            current_e9d4ec -> sub_2a5f8f.first\n            for_1e2f6f.index -> sub_2a5f8f.second\n            sub_2a5f8f.result -> equal_f0d9ce.left\n            1 -> equal_f0d9ce.right\n            equal_f0d9ce.result -> bool_7b3c1e\n        } -> if_5a0c3c.predicate\n        for_1e2f6f.item -> sub_7d9c7c.first\n        for_1e2f6f.index -> sub_7d9c7c.second\n        sort_8f5a3f.list -> list_1a3f0e\n        if_5a0c3c.else -> output_9c7b7d\n        if_5a0c3c.then -> for_1e2f6f.next\n        for_1e2f6f.onItem -> if_5a0c3c.execute\n        for_1e2f6f.done -> output_9c7b7d\n    }\n\n    \n\n    instance(x: -67, y: 177) is_consecutive_f8f4d1 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1f8d5e\n\n        out(x: 1023, y: 7, name: \"output\") property(Bool) output_6a2b9c\n\n        instance(x: 104, y: -11) sort_b4a0ef root.Std_k98ojb.List.Sort {}\n        instance(x: 360, y: 5) for_8f1e7d root.Std_k98ojb.Std.For {}\n        instance(x: 686, y: 2) sub_9c3b6f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1000, y: -4) lessthanorequal_ea1b5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1268, y: 2) if_7d9e3f root.Std_k98ojb.Std.If {}\n        sort_b4a0ef.list -> for_8f1e7d.items\n        func() {\n            in(x: -111, y: 46, name: \"current\") property(Number) current_5c2e9f\n\n            out(x: 505, y: 37, name: \"bool\") property(Bool) bool_6a8b3e\n\n            instance(x: 74, y: 41) sub_1d0c4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 303, y: 39) lessthanorequal_9f7b1c root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_8f1e7d.index -> sub_1d0c4c.first\n            1 -> sub_1d0c4c.second\n            current_5c2e9f -> lessthanorequal_9f7b1c.left\n            sub_1d0c4c.result -> lessthanorequal_9f7b1c.right\n            lessthanorequal_9f7b1c.result -> bool_6a8b3e\n        } -> for_8f1e7d.handler\n        for_8f1e7d.onItem -> if_7d9e3f.execute\n        for_8f1e7d.item -> sub_9c3b6f.first\n        for_8f1e7d.index -> sub_9c3b6f.second\n        list_1f8d5e -> sort_b4a0ef.list\n        sub_9c3b6f.result -> lessthanorequal_ea1b5c.left\n        1 -> lessthanorequal_ea1b5c.right\n        lessthanorequal_ea1b5c.result -> if_7d9e3f.predicate\n        for_8f1e7d.done -> if_7d9e3f.else\n        if_7d9e3f.value -> output_6a2b9c\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_5c4f8c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 4, name: \"list\") property(List) list_9e8a0f\n\n        out(x: 1115, y: 1, name: \"output\") property(Bool) output_6b7c3d\n\n        instance(x: 0, y: -15) for_1a2c8f root.Std_k98ojb.Std.For {}\n        instance(x: 340, y: 4) lessthanorequal_9e5a0f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 627, y: -14) if_1d7c3f root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: 6) sub_4f8b1e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1300, y: -13) equal_5a9d8f root.Std_k98ojb.Logic.Equal {}\n        list_9e8a0f -> for_1a2c8f.items\n        func() {\n            in(x: -192, y: -26, name: \"current\") property(Number) current_7b3c5f\n\n            out(x: 698, y: -15, name: \"bool\") property(Bool) bool_9e1a6d\n\n            instance(x: 112, y: -30) modulo_4f8b1e root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: -27) notequal_7c5a3f root.Std_k98ojb.Logic.NotEqual {}\n            current_7b3c5f -> modulo_4f8b1e.value\n            2 -> modulo_4f8b1e.divisor\n            modulo_4f8b1e.result -> notequal_7c5a3f.left\n            0 -> notequal_7c5a3f.right\n            notequal_7c5a3f.result -> bool_9e1a6d\n        } -> for_1a2c8f.handler\n        for_1a2c8f.item -> lessthanorequal_9e5a0f.left\n        for_1a2c8f.index -> lessthanorequal_9e5a0f.right\n        lessthanorequal_9e5a0f.result -> if_1d7c3f.predicate\n        for_1a2c8f.onItem -> if_1d7c3f.execute\n        func() {\n            in(x: -192, y: 16, name: \"current\") property(Number) current_7b3c5f\n\n            out(x: 698, y: 6, name: \"bool\") property(Bool) bool_9e1a6d\n\n            instance(x: 112, y: 11) modulo_4f8b1e root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 18) notequal_7c5a3f root.Std_k98ojb.Logic.NotEqual {}\n            current_7b3c5f -> modulo_4f8b1e.value\n            2 -> modulo_4f8b1e.divisor\n            modulo_4f8b1e.result -> notequal_7c5a3f.left\n            0 -> notequal_7c5a3f.right\n            notequal_7c5a3f.result -> bool_9e1a6d\n        } -> sub_4f8b1e.handler\n        for_1a2c8f.item -> sub_4f8b1e.first\n        for_1a2c8f.index -> sub_4f8b1e.second\n        sub_4f8b1e.result -> equal_5a9d8f.left\n        1 -> equal_5a9d8f.right\n        equal_5a9d8f.result -> if_1d7c3f.value\n        if_1d7c3f.else -> output_6b7c3d\n        for_1a2c8f.done -> output_6b7c3d\n    }\n\n    \n\n    instance(x: -56, y: 64) is_consecutive_f5e9f4 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"sublist\") property(List) sublist_3f9a8e\n        in(x: -285, y: -160, name: \"list\") property(List) list_1c7b4d\n\n        out(x: 1115, y: -97, name: \"output\") property(Bool) output_2a6f9c\n\n        instance(x: -94, y: -157, name: \"length of sublist\") length_8e3c0e root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -156) contains_1d7b1f root.Std_k98ojb.List.Contains {}\n        instance(x: 360, y: -155) equal_f6a4c9 root.Std_k98ojb.Logic.Equal {}\n        sublist_3f9a8e -> length_8e3c0e.list\n        list_1c7b4d -> contains_1d7b1f.list\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(List) current_2c5c9a\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3e6d0b\n\n            instance(x: 226, y: 56) slice_1f8b7a root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) length_9c5a4c root.Std_k98ojb.List.Length {}\n            instance(x: 684, y: 52) equal_2d0e3c root.Std_k98ojb.Logic.Equal {}\n            current_2c5c9a -> slice_1f8b7a.list\n            length_8e3c0e.length -> slice_1f8b7a.start\n            -1 -> slice_1f8b7a.end\n            slice_1f8b7a.slice -> equal_2d0e3c.left\n            sublist_3f9a8e -> equal_2d0e3c.right\n            length_9c5a4c.length -> equal_2d0e3c.context\n            equal_2d0e3c.result -> output_3e6d0b\n        } -> contains_1d7b1f.handler\n        contains_1d7b1f.is_contained -> equal_f6a4c9.left\n        true -> equal_f6a4c9.right\n        equal_f6a4c9.result -> output_2a6f9c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7e5b0d root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 15, name: \"sublist\") property(List) sublist_1a8f9e\n        in(x: -284, y: -166, name: \"list\") property(List) list_2b7c0d\n\n        out(x: 1005, y: -120, name: \"output\") property(Bool) output_e4a6ee\n\n        instance(x: -79, y: -167, name: \"is sublist\") filter_1f8e1c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 246, y: -119) contains_7d9b5c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -192, y: -23, name: \"current\") property(List) current_1e0a3f\n\n            out(x: 705, y: -2, name: \"output\") property(Bool) output_e9d7c6\n\n            instance(x: 226, y: 10) map_4b5c8c root.Std_k98ojb.Iteration.Map {}\n            instance(x: 463, y: 3) contains_0e2f9a root.Std_k98ojb.List.Contains {}\n            sublist_1a8f9e -> map_4b5c8c.items\n            func() {\n                in(x: -121, y: 54, name: \"x\") property(Any) x_7d3a0\n\n                out(x: 333, y: 41, name: \"\") property(List) _1f2e9c\n\n                instance(x: 92, y: 68) slice_8b6b4 root.Std_k98ojb.List.Slice {}\n                func() {\n                    in(x: -192, y: 84, name: \"current\") property(Number) current_a5d7a1\n\n                    out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2f0e8c\n\n                    instance(x: 112, y: 80) modulo_6b3b4 root.Std_k98ojb.Math.Modulo {}\n                    instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                    current_a5d7a1 -> modulo_6b3b4.value\n                    2 -> modulo_6b3b4.divisor\n                    modulo_6b3b4.result -> equal_a54bdc.left\n                    0 -> equal_a54bdc.right\n                    equal_a54bdc.result -> bool_2f0e8c\n                } -> slice_8b6b4.predicate\n                x_7d3a0 -> slice_8b6b4.list\n                0 -> slice_8b6b4.start\n                -1 -> slice_8b6b4.end\n                slice_8b6b4.slice -> _1f2e9c\n            } -> map_4b5c8c.handler\n            map_4b5c8c.output_list -> contains_0e2f9a.list\n            current_1e0a3f -> contains_0e2f9a.item\n            contains_0e2f9a.is_contained -> output_e9d7c6\n        } -> filter_1f8e1c.handler\n        list_2b7c0d -> filter_1f8e1c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_a5d7a1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2f0e8c\n\n            instance(x: 112, y: 80) modulo_6b3b4 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_a5d7a1 -> modulo_6b3b4.value\n            2 -> modulo_6b3b4.divisor\n            modulo_6b3b4.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_2f0e8c\n        } -> contains_7d9b5c.predicate\n        filter_1f8e1c.output_list -> contains_7d9b5c.list\n        contains_7d9b5c.is_contained -> output_e4a6ee\n    }\n\n    \n\n    instance(x: -79, y: 11) is_sublist_f2b3d0 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 30, name: \"sublist\") property(List) sublist_1f9a3b\n        in(x: -300, y: -170, name: \"list\") property(List) list_5c7e8d\n\n        out(x: 1050, y: -125, name: \"output\") property(Bool) output_2c6b4f\n\n        instance(x: -90, y: -175, name: \"is sublist\") filter_1a9f9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 246, y: -127) contains_5d0e3c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -22, name: \"current\") property(List) current_1f8a9f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_1f8a9f -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_1a9f9f.handler\n        list_5c7e8d -> filter_1a9f9f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_5d0e3c.handler\n        filter_1a9f9f.output_list -> contains_5d0e3c.list\n        sublist_1f9a3b -> contains_5d0e3c.item\n        contains_5d0e3c.is_contained -> output_2c6b4f\n    }\n\n    \n\n    instance(x: -292, y: 59) is_sublist_f7b8c9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -277, y: -248, name: \"main_list\") property(List) main_list_ai\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        sublist_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -297, y: -5, name: \"list\") property(List) list_ec88cd\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        sublist_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 15, name: \"sublist\") property(List) sublist_1a9f0e\n        in(x: -305, y: -145, name: \"list\") property(List) list_5c7d6b\n\n        out(x: 1003, y: -10, name: \"output\") property(Bool) output_e8f2ee\n\n        instance(x: -55, y: -144, name: \"sublist length\") length_1e9a0f root.Std_k98ojb.List.Length {}\n        instance(x: 210, y: -143, name: \"list length\") length_5d3c6b root.Std_k98ojb.List.Length {}\n        instance(x: 530, y: -144) sub_7b8e9a root.Std_k98ojb.Math.Sub {}\n        instance(x: 730, y: -142) greaterthan_e1f0a4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 940, y: -143) ifexpression_5d3c6b root.Std_k98ojb.Std.IfExpression {\n            expression: \"listLength > sublistLength\"\n        }\n        instance(x: 1140, y: -144) for_1e9a0f root.Std_k98ojb.Std.For {}\n        instance(x: 1360, y: -143) slice_5d3c6b root.Std_k98ojb.List.Slice {}\n        instance(x: 1580, y: -142) contains_7b8e9a root.Std_k98ojb.List.Contains {}\n        sublist_1a9f0e -> length_1e9a0f.list\n        list_5c7d6b -> length_5d3c6b.list\n        length_1e9a0f.length -> sub_7b8e9a.first\n        1 -> sub_7b8e9a.second\n        sub_7b8e9a.result -> sublistLength\n        length_5d3c6b.length -> greaterthan_e1f0a4.left\n        sublistLength -> greaterthan_e1f0a4.right\n        greaterthan_e1f0a4.result -> ifexpression_5d3c6b.gen_0\n        list_5c7d6b -> for_1e9a0f.items\n        ifexpression_5d3c6b.value -> output_e8f2ee\n        for_1e9a0f.index -> slice_5d3c6b.start\n        sublistLength -> slice_5d3c6b.end\n        list_5c7d6b -> slice_5d3c6b.list\n        slice_5d3c6b.slice -> contains_7b8e9a.list\n        sublist_1a9f0e -> contains_7b8e9a.item\n        contains_7b8e9a.is_contained -> ifexpression_5d3c6b.gen_1\n        for_1e9a0f.onItem -> slice_5d3c6b.execute\n    }\n\n    \n\n    instance(x: 100, y: -20) is_sublist_f4f7c8 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"sublist\") property(List) sublist_1a8f2e\n        in(x: -286, y: -220, name: \"list\") property(List) list_3b9d7c\n\n        out(x: 1265, y: -205, name: \"output\") property(Bool) output_6a4a0d\n\n        instance(x: -96, y: -206, name: \"sublist length\") length_8e2f1c root.Std_k98ojb.List.Length {}\n        instance(x: 147, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_1a8f2e -> length_8e2f1c.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_3b1c7a root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) contains_2f9d6e root.Std_k98ojb.List.Contains {}\n            list_3b9d7c -> slice_3b1c7a.list\n            length_8e2f1c.length -> slice_3b1c7a.end\n            0 -> slice_3b1c7a.start\n            slice_3b1c7a.slice -> contains_2f9d6e.list\n            current_81298e -> contains_2f9d6e.item\n        } -> contains_32727d.handler\n        list_3b9d7c -> contains_32727d.list\n        length_8e2f1c.length -> contains_32727d.min_length\n        sublist_1a8f2e -> contains_32727d.sublist\n        contains_32727d.result -> output_6a4a0d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a9c7b5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 15, name: \"sublist\") property(List) sublist_1a9f0e\n        in(x: -306, y: -160, name: \"list\") property(List) list_7c8d3b\n\n        out(x: 1005, y: -135, name: \"output\") property(Bool) output_6a2b3c\n\n        instance(x: -75, y: -159, name: \"is sublist\") filter_1e4f0c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: 5, name: \"current\") property(List) current_9d8a3f\n\n            out(x: 702, y: -6, name: \"output\") property(Bool) output_7c0e4b\n\n            instance(x: 226, y: -2) contains_1f0f5c root.Std_k98ojb.List.Contains {}\n            sublist_1a9f0e -> contains_1f0f5c.list\n            current_9d8a3f -> contains_1f0f5c.item\n            contains_1f0f5c.is_contained -> output_7c0e4b\n        } -> filter_1e4f0c.handler\n        list_7c8d3b -> filter_1e4f0c.items\n        func() {\n            in(x: -30, y: 5, name: \"current\") property(List) current_9d8a3f\n\n            out(x: 702, y: -6, name: \"output\") property(Bool) output_7c0e4b\n\n            instance(x: 226, y: -2) contains_1f0f5c root.Std_k98ojb.List.Contains {}\n            sublist_1a9f0e -> contains_1f0f5c.list\n            current_9d8a3f -> contains_1f0f5c.item\n            contains_1f0f5c.is_contained -> output_7c0e4b\n        } -> filter_1e4f0c.handler\n        list_7c8d3b -> filter_1e4f0c.items\n        filter_1e4f0c.output_list -> output_6a2b3c\n    }\n\n    \n\n    instance(x: -75, y: 5) is_sublist_f9e8a9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 30, name: \"sublist\") property(List) sublist_1a8d5f\n        in(x: -277, y: -140, name: \"list\") property(List) list_2b9c4e\n\n        out(x: 1040, y: -109, name: \"output\") property(Bool) output_3e7b7e\n\n        instance(x: 100, y: -6) contains_5a8d1f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_2c0f3\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1a8d5\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_eb7c9\n\n            instance(x: 226, y: 56) slice_2f0e3 root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) contains_5a8d1f root.Std_k98ojb.List.Contains {}\n            list_2b9c4e -> slice_2f0e3.list\n            _index_1a8d5 -> slice_2f0e3.start\n            slice_2f0e3.slice -> contains_5a8d1f.list\n            sublist_1a8d5f -> contains_5a8d1f.item\n        } -> contains_5a8d1f.handler\n        list_2b9c4e -> contains_5a8d1f.list\n        contains_5a8d1f.is_contained -> output_3e7b7e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_6b0d8 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 35, name: \"sublist\") property(List) sublist_3a8d6f\n        in(x: -295, y: -166, name: \"list\") property(List) list_7c9b5e\n\n        out(x: 1261, y: -131, name: \"output\") property(Bool) output_2e4c0e\n\n        instance(x: -83, y: -165, name: \"sublist length\") length_3f8a6d root.Std_k98ojb.List.Length {}\n        instance(x: 186, y: -133) contains_7e9f1c root.Std_k98ojb.List.Contains {}\n        instance(x: 1000, y: -130) and_4f2f5c root.Std_k98ojb.Logic.And {}\n        sublist_3a8d6f -> length_3f8a6d.list\n        list_7c9b5e -> contains_7e9f1c.list\n        sublist_3a8d6f -> contains_7e9f1c.item\n        and_4f2f5c.result -> output_2e4c0e\n        length_3f8a6d.length -> contains_7e9f1c.startIndex\n        contains_7e9f1c.is_contained -> and_4f2f5c.left\n        list_7c9b5e.Length() >= sublist_3a8d6f.Length() -> and_4f2f5c.right\n    }\n\n    \n\n    instance(x: -85, y: 29) is_sublist_1c0f9c root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1226, y: 29, name: \"continue\") trigger() continue_e2c4ee\n        out(x: 1213, y: 148, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: -5, y: -120) for_9b7d8f root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_4c6c3d\") getter_4c6c3d = index\n        setter(x: 780, y: -125, name: \"setter_5a9f7e\") setter_5a9f7e = index\n        instance(x: 465, y: 5) ifexpression_1b8b1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_9b7d8f.items\n        execute_5c7d8b -> setter_5a9f7e.execute\n        0 -> setter_5a9f7e.new_value\n        getter_4c6c3d.value -> output_1e0a1f\n        for_9b7d8f.done -> continue_e2c4ee\n        setter_5a9f7e.continue -> for_9b7d8f.reset\n        for_9b7d8f.onItem -> ifexpression_1b8b1e.execute\n        for_9b7d8f.index -> ifexpression_1b8b1e.gen_0\n        for_9b7d8f.item -> ifexpression_1b8b1e.gen_1\n        ifexpression_1b8b1e.then -> setter_5a9f7e.execute\n        for_9b7d8f.index -> setter_5a9f7e.new_value\n        ifexpression_1b8b1e.else -> for_9b7d8f.next\n        setter_5a9f7e.continue -> continue_e2c4ee\n    }\n\n    \n\n    instance(x: -206, y: 12) find_missing_6f3b0e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e8f9d\n        in(x: -283, y: -225, name: \"execute\") trigger() execute_7a1c5b\n\n        out(x: 594, y: -223, name: \"continue\") trigger() continue_e2b4ec\n        out(x: 595, y: 0, name: \"output\") property(Number) output_9f3e6d\n\n        instance(x: 0, y: 0) for_7a1c5b root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 160, name: \"getter_8f4c2f\") getter_8f4c2f = index\n        setter(x: 678, y: -312, name: \"setter_7e5a6d\") setter_7e5a6d = index\n        instance(x: 321, y: -20) ifexpression_9b3c0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: -275, y: -35, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -0, y: -121) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_9b3c0e.else -> continue_e2b4ec\n        ifexpression_9b3c0e.then -> setter_7e5a6d.execute\n        list_3e8f9d -> for_7a1c5b.items\n        for_7a1c5b.item -> ifexpression_9b3c0e.gen_2\n        for_7a1c5b.index -> ifexpression_9b3c0e.gen_0\n        getter_b280eb.value -> ifexpression_9b3c0e.gen_1\n        for_7a1c5b.onItem -> ifexpression_9b3c0e.execute\n        for_7a1c5b.done -> continue_e2b4ec\n        for_7a1c5b.item -> setter_7e5a6d.new_value\n        list_3e8f9d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_7a1c5b -> setter_9d4f1c.execute\n        getter_8f4c2f.value -> output_9f3e6d\n        setter_9d4f1c.continue -> for_7a1c5b.reset\n        setter_7e5a6d.continue -> for_7a1c5b.next\n    }\n\n    \n\n    instance(x: -35, y: 126) find_missing_8c3d2e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9e6f1d\n        in(x: -281, y: -226, name: \"execute\") trigger() execute_ea7c8b\n\n        out(x: 1065, y: -228, name: \"continue\") trigger() continue_3c0f4f\n        out(x: 1056, y: 26, name: \"output\") property(Number) output_9d1e2f\n\n        instance(x: 0, y: 0) for_7b5a3d root.Std_k98ojb.Std.For {}\n        getter(x: -133, y: 60, name: \"getter_e6c4ea\") getter_e6c4ea = index\n        setter(x: 780, y: -123, name: \"setter_9f1e2a\") setter_9f1e2a = index\n        instance(x: 550, y: -105) ifexpression_a8b7d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9f1e2a\") getter_3c6c9e = index\n        setter(x: -188, y: -246, name: \"setter_e6c4ea\") setter_e6c4ea = index\n        list_7b5a3d -> for_7b5a3d.items\n        execute_ea7c8b -> setter_e6c4ea.execute\n        0 -> setter_e6c4ea.new_value\n        getter_e6c4ea.value -> output_9d1e2f\n        for_7b5a3d.done -> continue_3c0f4f\n        setter_e6c4ea.continue -> for_7b5a3d.reset\n        for_7b5a3d.onItem -> ifexpression_a8b7d5.execute\n        getter_3c6c9e.value -> ifexpression_a8b7d5.gen_0\n        for_7b5a3d.item -> ifexpression_a8b7d5.gen_1\n        ifexpression_a8b7d5.then -> setter_9f1e2a.execute\n        for_7b5a3d.index -> setter_9f1e2a.new_value\n        ifexpression_a8b7d5.else -> for_7b5a3d.next\n        setter_9f1e2a.continue -> continue_3c0f4f\n    }\n\n    \n\n    instance(x: -202, y: 14) find_missing_6f9d5e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9e8b5f\n        in(x: -284, y: -225, name: \"execute\") trigger() execute_1a3d4c\n\n        out(x: 1017, y: -229, name: \"continue\") trigger() continue_e2a0ea\n        out(x: 1026, y: 148, name: \"output\") property(Number) output_9e8b5f\n\n        instance(x: 0, y: 0) for_1c7d9c root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_6a3f2f\") getter_6a3f2f = index\n        setter(x: 780, y: -125, name: \"setter_7e5d4c\") setter_7e5d4c = index\n        instance(x: 465, y: 5) ifexpression_9b1e8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_9e8b5f -> for_1c7d9c.items\n        execute_1a3d4c -> setter_7e5d4c.execute\n        0 -> setter_7e5d4c.new_value\n        getter_6a3f2f.value -> output_9e8b5f\n        for_1c7d9c.done -> continue_e2a0ea\n        setter_7e5d4c.continue -> for_1c7d9c.reset\n        for_1c7d9c.onItem -> ifexpression_9b1e8c.execute\n        for_1c7d9c.index -> ifexpression_9b1e8c.gen_0\n        for_1c7d9c.item -> ifexpression_9b1e8c.gen_1\n        ifexpression_9b1e8c.then -> setter_7e5d4c.execute\n        for_1c7d9c.index -> setter_7e5d4c.new_value\n        ifexpression_9b1e8c.else -> continue_e2a0ea\n        ifexpression_9b1e8c.value -> output_9e8b5f\n    }\n\n    \n\n    instance(x: -204, y: 3) find_missing_6d7f4f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_9f5b8e\n        in(x: -281, y: -221, name: \"execute\") trigger() execute_7c1d6a\n\n        out(x: 1213, y: 13, name: \"continue\") trigger() continue_e4b0cf\n        out(x: 1182, y: 157, name: \"output\") property(Number) output_5f8e1f\n\n        instance(x: -6, y: -120, name: \"for\") for_7a9d3c root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_2e4d0f\") getter_2e4d0f = index\n        instance(x: 340, y: -10) ifexpression_e1a7cc root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e1a7cc.else -> continue_e4b0cf\n        getter_2e4d0f.value -> output_5f8e1f\n        ifexpression_e1a7cc.then -> setter_9d4f1c.execute\n        list_9f5b8e -> for_7a9d3c.items\n        for_7a9d3c.item -> ifexpression_e1a7cc.gen_2\n        for_7a9d3c.index -> ifexpression_e1a7cc.gen_0\n        getter_2e4d0f.value -> ifexpression_e1a7cc.gen_1\n        for_7a9d3c.onItem -> ifexpression_e1a7cc.execute\n        for_7a9d3c.done -> continue_e4b0cf\n        for_7a9d3c.item -> setter_9d4f1c.new_value\n        list_9f5b8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_7c1d6a -> for_7a9d3c.trigger\n    }\n\n    \n\n    instance(x: -14, y: 129) find_missing_5e0b1c root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_ea7d3c\n\n        out(x: 1024, y: -223, name: \"continue\") trigger() continue_5a8f6f\n        out(x: 1012, y: 137, name: \"output\") property(Number) output_9e1b0f\n\n        instance(x: 0, y: 0) for_7d4c0f root.Std_k98ojb.Std.For {}\n        getter(x: -140, y: 150, name: \"getter_8a2c3d\") getter_8a2c3d = index\n        setter(x: 755, y: -159, name: \"setter_e1e9f7\") setter_e1e9f7 = index\n        instance(x: 0, y: 0) ifexpression_6b5e4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -160, y: -40, name: \"getter_8a2c3d\") getter_d7d9bf = previous\n        setter(x: 680, y: -305, name: \"setter_e1e9f7\") setter_6b5e4f = previous\n        instance(x: -280, y: -35) getat_c0a8c2 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6b5e4f.else -> continue_5a8f6f\n        ifexpression_6b5e4f.then -> setter_e1e9f7.execute\n        list_9f0b2e -> for_7d4c0f.items\n        for_7d4c0f.item -> ifexpression_6b5e4f.gen_2\n        for_7d4c0f.index -> ifexpression_6b5e4f.gen_0\n        getter_d7d9bf.value -> ifexpression_6b5e4f.gen_1\n        for_7d4c0f.onItem -> ifexpression_6b5e4f.execute\n        for_7d4c0f.done -> continue_5a8f6f\n        for_7d4c0f.item -> setter_e1e9f7.new_value\n        list_9f0b2e -> getat_c0a8c2.list\n        0 -> getat_c0a8c2.index\n        getter_8a2c3d.value -> output_9e1b0f\n        execute_ea7d3c -> setter_6b5e4f.execute\n        getat_c0a8c2.itemAtIndex -> setter_6b5e4f.new_value\n        1 -> setter_6b5e4f.new_value\n        getter_8a2c3d.value -> for_7d4c0f.reset\n        setter_e1e9f7.continue -> for_7d4c0f.next\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_6e6bfd root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1e3f9a\n        in(x: -282, y: -246, name: \"execute\") trigger() execute_5b7d6c\n\n        out(x: 592, y: 0, name: \"continue\") trigger() continue_8e2b1e\n        out(x: 594, y: 154, name: \"output\") property(Number) output_9a3f9a\n\n        instance(x: -11, y: -121, name: \"missing\") setter_7c6d0c = missing\n        instance(x: 340, y: 60) for_1e4b8e root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_ea9f2f\") getter_ea9f2f = missing\n        setter(x: 780, y: -125, name: \"setter_7c6d0c\") setter_7c6d0c = missing\n        instance(x: 551, y: -105) equal_1e3f9b root.Std_k98ojb.Logic.Equal {}\n        list_1e3f9a -> for_1e4b8e.items\n        execute_5b7d6c -> setter_7c6d0c.execute\n        1 -> setter_7c6d0c.new_value\n        getter_ea9f2f.value -> output_9a3f9a\n        for_1e4b8e.done -> continue_8e2b1e\n        setter_7c6d0c.continue -> for_1e4b8e.reset\n        for_1e4b8e.onItem -> equal_1e3f9b.execute\n        for_1e4b8e.index -> equal_1e3f9b.left\n        for_1e4b8e.item -> equal_1e3f9b.right\n        equal_1e3f9b.result -> setter_7c6d0c.execute\n        setter_7c6d0c.continue -> for_1e4b8e.next\n    }\n\n    \n\n    instance(x: -11, y: 159) find_missing_2a5c6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -293, y: -230, name: \"execute\") trigger() execute_7a8c5d\n\n        out(x: 1116, y: -232, name: \"continue\") trigger() continue_1b4a5e\n        out(x: 1109, y: 0, name: \"output\") property(Number) output_3f3b5e\n\n        instance(x: 0, y: 0) for_2d8c6f root.Std_k98ojb.Std.For {}\n        getter(x: -12, y: 160, name: \"getter_ea1d7e\") getter_ea1d7e = index\n        setter(x: 728, y: -157, name: \"setter_3a9c6f\") setter_3a9c6f = index\n        instance(x: 551, y: -104) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 757, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        setter(x: -186, y: -245, name: \"setter_6a6081\") setter_6a6081 = index\n        list_9f0b2e -> for_2d8c6f.items\n        execute_7a8c5d -> setter_6a6081.execute\n        0 -> setter_6a6081.new_value\n        getter_ea1d7e.value -> output_3f3b5e\n        for_2d8c6f.done -> continue_1b4a5e\n        setter_6a6081.continue -> for_2d8c6f.reset\n        for_2d8c6f.onItem -> if_7c284f.execute\n        equal_aabb6e.result -> if_7c284f.predicate\n        list_9f0b2e -> equal_aabb6e.left\n        for_2d8c6f.item -> equal_aabb6e.right\n        if_7c284f.else -> setter_3a9c6f.execute\n        for_2d8c6f.index -> setter_3a9c6f.new_value\n        if_7c284f.then -> for_2d8c6f.next\n        setter_3a9c6f.continue -> continue_1b4a5e\n    }\n\n    \n\n    instance(x: -203, y: 11) find_missing_0f0c7f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9f6a1e\n        in(x: -290, y: -224, name: \"execute\") trigger() execute_7b2d3c\n\n        out(x: 1024, y: -225, name: \"continue\") trigger() continue_8f5b9f\n        out(x: 1016, y: 0, name: \"output\") property(Number) output_e1e1a7\n\n        instance(x: 0, y: 0) for_2c4d3e root.Std_k98ojb.Std.For {}\n        getter(x: -145, y: 0, name: \"getter_9f6a1e\") getter_9f6a1e = index\n        setter(x: 0, y: -224, name: \"setter_7c8d4e\") setter_7c8d4e = index\n        instance(x: 341, y: 60) ifexpression_eb5b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        getter(x: 702, y: 0, name: \"getter_9f6a1e\") getter_3d7e4e = index\n        setter(x: 952, y: -224, name: \"setter_7c8d4e\") setter_5b7f9e = index\n        instance(x: 551, y: -225) add_2a1f1e root.Std_k98ojb.Math.Add {}\n        list_2c4d3e.onItem -> ifexpression_eb5b2c.execute\n        for_2c4d3e.items -> list_2c4d3e.list\n        execute_7b2d3c -> setter_7c8d4e.execute\n        0 -> setter_7c8d4e.new_value\n        getter_9f6a1e.value -> ifexpression_eb5b2c.gen_0\n        for_2c4d3e.item -> ifexpression_eb5b2c.gen_1\n        ifexpression_eb5b2c.then -> setter_5b7f9e.execute\n        getter_3d7e4e.value -> output_e1e1a7\n        add_2a1f1e.result -> setter_5b7f9e.new_value\n        for_2c4d3e.index -> add_2a1f1e.first\n        1 -> add_2a1f1e.second\n        ifexpression_eb5b2c.else -> for_2c4d3e.next\n        setter_7c8d4e.continue -> for_2c4d3e.reset\n        setter_5b7f9e.continue -> for_2c4d3e.next\n        for_2c4d3e.done -> continue_8f5b9f\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f6a0a1 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_1e9b3f\n        in(x: -278, y: -240, name: \"execute\") trigger() execute_7c8a5d\n\n        out(x: 1016, y: -242, name: \"continue\") trigger() continue_e2c4ef\n        out(x: 1009, y: 26, name: \"output\") property(Number) output_1b3e9f\n\n        instance(x: 0, y: 0) for_7a5d6d root.Std_k98ojb.Std.For {}\n        getter(x: -2, y: 130, name: \"getter_8c1b7f\") getter_8c1b7f = index\n        setter(x: 640, y: -230, name: \"setter_ea9e5d\") setter_ea9e5d = index\n        instance(x: 434, y: -10) ifexpression_a6f0ec root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 321, y: 140, name: \"getter_9e8d7c\") getter_9e8d7c = previous\n        setter(x: -2, y: -122, name: \"setter_ea9e5d\") setter_1f3b0f = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_a6f0ec.then -> continue_e2c4ef\n        ifexpression_a6f0ec.else -> setter_ea9e5d.execute\n        list_1e9b3f -> for_7a5d6d.items\n        execute_7c8a5d -> setter_1f3b0f.execute\n        0 -> setter_1f3b0f.new_value\n        getter_8c1b7f.value -> output_1b3e9f\n        for_7a5d6d.done -> continue_e2c4ef\n        list_1e9b3f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_1f3b0f.new_value\n        for_7a5d6d.onItem -> ifexpression_a6f0ec.execute\n        getter_9e8d7c.value -> ifexpression_a6f0ec.gen_1\n        for_7a5d6d.index -> ifexpression_a6f0ec.gen_0\n        for_7a5d6d.item -> ifexpression_a6f0ec.gen_2\n        setter_ea9e5d.continue -> for_7a5d6d.next\n        setter_ea9e5d.new_value -> getter_8c1b7f.value\n        setter_ea9e5d.continue -> for_7a5d6d.reset\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_2b4d3e root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 18, name: \"input\") property(String) input_9e3f1d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8c7a5b\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_06d2e5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) ifexpression_4aeea6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == ' ' || x == ',' || x == '.'\"\n        }\n        list_instance(x: 92, y: -22) data_cc1b1b  = [\":\", \" \", \",\", \".\"]\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        input_9e3f1d -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            ifexpression_4aeea6.execute -> replace_06d2e5.execute\n            map_f2330d.index -> slice_3f3ee6.start\n            map_f2330d.index -> sub_f133b2.first\n            1 -> sub_f133b2.second\n            sub_f133b2.result -> slice_3f3ee6.end\n            data_cc1b1b -> slice_3f3ee6.list\n            slice_3f3ee6.slice -> replace_06d2e5.search\n            x_8ee839 -> ifexpression_4aeea6.gen_0\n            input_9e3e1d -> ifexpression_4aeea6.gen_1\n            data_cc1b1b -> length_4b8927.list\n            length_4b8927.length -> replace_06d2e5.replace\n            replace_06d2e5.output -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_8c7a5b\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_1f3d9e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 0, name: \"input\") property(String) input_9f1a8e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5c7b4d\n\n        instance(x: 0, y: 0) replace_6d1f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_9e8a3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_e7c2d4 root.Std_k98ojb.Strings.Replace {}\n        input_9f1a8e -> replace_6d1f1f.input\n        \" \" -> replace_6d1f1f.search\n        \":\" -> replace_6d1f1f.replace\n        replace_6d1f1f.output -> replace_9e8a3f.input\n        \",\" -> replace_9e8a3f.search\n        \":\" -> replace_9e8a3f.replace\n        replace_9e8a3f.output -> replace_e7c2d4.input\n        \".\" -> replace_e7c2d4.search\n        \":\" -> replace_e7c2d4.replace\n        replace_e7c2d4.output -> output_5c7b4d\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_b9f6e1 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 0, name: \"input\") property(String) input_9b1d4f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8e7c6a\n\n        instance(x: 94, y: -105) replace_5a3a0c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) replace_1f4d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: 8) replace_6e7b7f root.Std_k98ojb.Strings.Replace {}\n        input_9b1d4f -> replace_5a3a0c.input\n        \" \" -> replace_5a3a0c.search\n        \":\" -> replace_5a3a0c.replace\n        replace_5a3a0c.output -> replace_1f4d9f.input\n        \",\" -> replace_1f4d9f.search\n        \":\" -> replace_1f4d9f.replace\n        replace_1f4d9f.output -> replace_6e7b7f.input\n        \".\" -> replace_6e7b7f.search\n        \":\" -> replace_6e7b7f.replace\n        replace_6e7b7f.output -> output_8e7c6a\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_1d0b4f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1d3f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c7a4b\n\n        instance(x: 0, y: 1) replace_8c6b8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_d3e7d2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_ea4f5f root.Std_k98ojb.Strings.Replace {}\n        input_1d3f9e -> replace_8c6b8f.input\n        \" \" -> replace_8c6b8f.search\n        \":\" -> replace_8c6b8f.replace\n        replace_8c6b8f.output -> replace_d3e7d2.input\n        \",\" -> replace_d3e7d2.search\n        \":\" -> replace_d3e7d2.replace\n        replace_d3e7d2.output -> replace_ea4f5f.input\n        \".\" -> replace_ea4f5f.search\n        \":\" -> replace_ea4f5f.replace\n        replace_ea4f5f.output -> output_5c7a4b\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_b8d0a1 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 0, name: \"input\") property(String) input_8f1a9e\n\n        out(x: 504, y: -2, name: \"output\") property(String) output_7b4c3d\n\n        instance(x: 0, y: 0) replace_5e1a6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8f9c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d4d3ba root.Std_k98ojb.Strings.Replace {}\n        input_8f1a9e -> replace_5e1a6e.input\n        \" \" -> replace_5e1a6e.search\n        \":\" -> replace_5e1a6e.replace\n        replace_5e1a6e.output -> replace_8f9c2f.input\n        \",\" -> replace_8f9c2f.search\n        \":\" -> replace_8f9c2f.replace\n        replace_8f9c2f.output -> replace_d4d3ba.input\n        \".\" -> replace_d4d3ba.search\n        \":\" -> replace_d4d3ba.replace\n        replace_d4d3ba.output -> output_7b4c3d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_bf1a8e root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -232, y: 0, name: \"string\") property(String) string_9e8b3f\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_7c1d6a\n\n        instance(x: 0, y: 1) replace_5c1e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3e9d8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2a7c9d root.Std_k98ojb.Strings.Replace {}\n        string_9e8b3f -> replace_5c1e4f.input\n        \" \" -> replace_5c1e4f.search\n        \":\" -> replace_5c1e4f.replace\n        replace_5c1e4f.output -> replace_3e9d8e.input\n        \",\" -> replace_3e9d8e.search\n        \":\" -> replace_3e9d8e.replace\n        replace_3e9d8e.output -> replace_2a7c9d.input\n        \".\" -> replace_2a7c9d.search\n        \":\" -> replace_2a7c9d.replace\n        replace_2a7c9d.output -> result_7c1d6a\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_spaces_commas_dots_3f0e5b root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 0, name: \"input\") property(String) input_8f1a3d\n\n        out(x: 504, y: -2, name: \"output\") property(String) output_9e4b7c\n\n        instance(x: 94, y: 0) replace_5f6c7d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: 0) replace_8a1b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 348, y: 0) replace_3e4c8b root.Std_k98ojb.Strings.Replace {}\n        input_8f1a3d -> replace_5f6c7d.input\n        \" \" -> replace_5f6c7d.search\n        \":\" -> replace_5f6c7d.replace\n        replace_5f6c7d.output -> replace_8a1b2f.input\n        \",\" -> replace_8a1b2f.search\n        \":\" -> replace_8a1b2f.replace\n        replace_8a1b2f.output -> replace_3e4c8b.input\n        \".\" -> replace_3e4c8b.search\n        \":\" -> replace_3e4c8b.replace\n        replace_3e4c8b.output -> output_9e4b7c\n    }\n\n    \n\n    instance(x: -139, y: 45) replace_ba5d2f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -199, y: 0, name: \"input\") property(String) input_8e9b3f\n\n        out(x: 506, y: -2, name: \"output\") property(String) output_7c1d4a\n\n        instance(x: 0, y: 0) replace_spaces root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_dots root.Std_k98ojb.Strings.Replace {}\n        input_8e9b3f -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots.input\n        \".\" -> replace_dots.search\n        \":\" -> replace_dots.replace\n        replace_dots.output -> output_7c1d4a\n    }\n\n    \n\n    instance(x: -85, y: 30, name: \"replace_spaces_commas_dots\") replace_spaces_commas_dots_9f2e5b root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a7c9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6f5d8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2b4f1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a7c9e.input\n        \" \" -> replace_3a7c9e.search\n        \":\" -> replace_3a7c9e.replace\n        replace_3a7c9e.output -> replace_6f5d8c.input\n        \",\" -> replace_6f5d8c.search\n        \":\" -> replace_6f5d8c.replace\n        replace_6f5d8c.output -> replace_2b4f1c.input\n        \".\" -> replace_2b4f1c.search\n        \":\" -> replace_2b4f1c.replace\n        replace_2b4f1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) Replace_3e5a6d root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -200, y: 0, name: \"input\") property(String) input_8f1e4a\n\n        out(x: 600, y: 0, name: \"output\") property(String) output_7b9d5c\n\n        instance(x: 0, y: 0) replace_2d3d6a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1f4e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_5c7c9c root.Std_k98ojb.Strings.Replace {}\n        input_8f1e4a -> replace_2d3d6a.input\n        \" \" -> replace_2d3d6a.search\n        \":\" -> replace_2d3d6a.replace\n        replace_2d3d6a.output -> replace_1f4e8f.input\n        \",\" -> replace_1f4e8f.search\n        \":\" -> replace_1f4e8f.replace\n        replace_1f4e8f.output -> replace_5c7c9c.input\n        \".\" -> replace_5c7c9c.search\n        \":\" -> replace_5c7c9c.replace\n        replace_5c7c9c.output -> output_7b9d5c\n    }\n\n    \n\n    instance(x: -140, y: 0, name: \"replace\") replace_3e2f1a root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 555, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_4b1e7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: -3) length_8f9a4f root.Std_k98ojb.List.Length {}\n        instance(x: 479, y: 5) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 702, y: 1) equal_7c7e3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 919, y: -4) for_9a5b8c root.Std_k98ojb.Std.For {}\n        instance(x: 1152, y: 0) ifexpression_c6d1f9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 434, y: 17, name: \"getter_8c3e5a\") getter_8c3e5a = previous\n        setter(x: 779, y: -45, name: \"setter_e9b1f7\") setter_e9b1f7 = previous\n        instance(x: 422, y: -20) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        getter(x: -3, y: -29, name: \"getter_e9b1f7\") getter_e9b1f7 = previous\n        setter(x: 15, y: -61, name: \"setter_8c3e5a\") setter_8c3e5a = previous\n        ifexpression_c6d1f9.else -> for_9a5b8c.next\n        ifexpression_c6d1f9.value -> output_5c7d6b\n        ifexpression_c6d1f9.then -> setter_e9b1f7.execute\n        characters_4b1e7c.characters -> for_9a5b8c.items\n        for_9a5b8c.item -> getat_6d0f2f.list\n        0 -> getat_6d0f2f.index\n        getat_6d0f2f.itemAtIndex -> equal_7c7e3c.left\n        getter_e9b1f7.value -> equal_7c7e3c.right\n        for_9a5b8c.onItem -> ifexpression_c6d1f9.execute\n        for_9a5b8c.done -> for_9a5b8c.next\n        characters_4b1e7c.characters -> length_8f9a4f.list\n        for_9a5b8c.index -> getat_6d0f2f.index\n        for_9a5b8c.index -> ifexpression_c6d1f9.gen_0\n        getter_8c3e5a.value -> ifexpression_c6d1f9.gen_1\n        equal_7c7e3c.result -> ifexpression_c6d1f9.gen_2\n        for_9a5b8c.item -> setter_e9b1f7.new_value\n        getat_6d0f2f.list -> getter_8c3e5a.list\n        string_3f8a9e -> characters_4b1e7c.input\n        ifexpression_c6d1f9.then -> setter_8c3e5a.execute\n        for_9a5b8c.item -> getat_6d0f2f.list\n        getter_e9b1f7.value -> setter_8c3e5a.new_value\n        getat_6d0f2f.itemAtIndex -> setter_8c3e5a.new_value\n    }\n\n    \n\n    instance(x: 30, y: -19) check_same_4c1d6f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 555, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3c5a9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) setintersection_4d6e8f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 490, y: 2) length_0f7a1c root.Std_k98ojb.List.Length {}\n        characters_3c5a9f.characters -> setintersection_4d6e8f.left\n        characters_3c5a9f.characters -> setintersection_4d6e8f.right\n        1 -> length_0f7a1c.list\n        setintersection_4d6e8f.intersect -> length_0f7a1c.list\n        string_1 -> characters_3c5a9f.input\n        length_0f7a1c.length -> output_1\n    }\n\n    \n\n    instance(x: -11, y: 54) is_same_f6e8b4 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -285, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 553, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_7c8a4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -3) setintersection_e9e5d6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 480, y: 1) length_0c2c7c root.Std_k98ojb.List.Length {}\n        characters_7c8a4f.characters -> setintersection_e9e5d6.left\n        characters_7c8a4f.characters -> setintersection_e9e5d6.right\n        length_0c2c7c.length -> setintersection_e9e5d6.intersection -> output_1\n        string_1 -> characters_7c8a4f.input\n    }\n\n    \n\n    instance(x: -67, y: 52) check_same_f21f44 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 557, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_2e5c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: -1) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 487, y: 0) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 700, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_1 -> characters_2e5c9f.input\n        characters_2e5c9f.characters -> intersection_c7c7e6.left\n        characters_2e5c9f.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        equal_f89569.result -> output_1\n    }\n\n    \n\n    instance(x: -63, y: 54) is_same_5a8d4f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_3a8f9e\n\n        out(x: 558, y: 1, name: \"output\") property(Bool) output_5b7d6c\n\n        instance(x: 0, y: 0) characters_4f9c1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: -2) length_3a8e4f root.Std_k98ojb.List.Length {}\n        instance(x: 477, y: 0) getat_5d7f2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 692, y: 1) equal_6c9b4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 906, y: -3) reduce_8e7a0c root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        characters_4f9c1c.characters -> length_3a8e4f.list\n        string_3a8f9e -> characters_4f9c1c.input\n        0 -> getat_5d7f2f.index\n        characters_4f9c1c.characters -> getat_5d7f2f.list\n        length_3a8e4f.length -> getat_5d7f2f.index\n        equal_6c9b4c.left -> reduce_8e7a0c.accumulated\n        equal_6c9b4c.right -> reduce_8e7a0c.value\n        getat_5d7f2f.itemAtIndex -> equal_6c9b4c.left\n        characters_4f9c1c.characters -> equal_6c9b4c.right\n        1 -> length_3a8e4f.list\n        reduce_8e7a0c.result -> output_5b7d6c\n    }\n\n    \n\n    instance(x: -12, y: 10) is_same_1c2b8f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_3f8d6a\n\n        out(x: 530, y: -1, name: \"output\") property(Bool) output_b9e5b7\n\n        instance(x: 0, y: 0) characters_2c7b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) length_6f1a3d root.Std_k98ojb.List.Length {}\n        instance(x: -5, y: 0) getat_4e9c6c root.Std_k98ojb.List.GetAt {}\n        instance(x: 266, y: 50) equal_8a7d9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 265, y: -51) for_5f1c0f root.Std_k98ojb.Std.For {}\n        characters_2c7b8c.characters -> length_6f1a3d.list\n        string_3f8d6a -> characters_2c7b8c.input\n        1 -> getat_4e9c6c.index\n        characters_2c7b8c.characters -> getat_4e9c6c.list\n        for_5f1c0f.items -> length_6f1a3d.list\n        equal_8a7d9c.result -> output_b9e5b7\n        getat_4e9c6c.itemAtIndex -> equal_8a7d9c.left\n        characters_2c7b8c.characters -> for_5f1c0f.items\n        for_5f1c0f.index -> getat_4e9c6c.index\n        for_5f1c0f.onItem -> equal_8a7d9c.execute\n        0 -> equal_8a7d9c.right\n        for_5f1c0f.done -> output_b9e5b7\n    }\n\n    \n\n    instance(x: -56, y: 52) check_same_f3c6d2 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_2c8b9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) setintersection_5e7a3d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 530, y: -1) length_4b6a9c root.Std_k98ojb.List.Length {}\n        characters_2c8b9f.output -> setintersection_5e7a3d.left\n        characters_2c8b9f.output -> setintersection_5e7a3d.right\n        1 -> length_4b6a9c.list\n        setintersection_5e7a3d.intersect -> length_4b6a9c.list\n        length_4b6a9c.length -> output_0\n    }\n\n    \n\n    instance(x: -11, y: 51) is_same_f8f2f1 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_3f8d9a\n\n        out(x: 558, y: 1, name: \"output\") property(Bool) output_7c2b4e\n\n        instance(x: 0, y: 0) characters_6c5b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 267, y: -1) length_9a8d3f root.Std_k98ojb.List.Length {}\n        instance(x: 482, y: 2) equal_7e9b9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 698, y: 0) filter_5c4c6c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_5c4c6c.handler\n        instance(x: 916, y: -1) length_3b7e2f root.Std_k98ojb.List.Length {}\n        characters_6c5b4c.characters -> equal_7e9b9f.left\n        characters_6c5b4c.characters -> filter_5c4c6c.items\n        0 -> length_9a8d3f.list\n        characters_6c5b4c.characters -> length_9a8d3f.list\n        equal_7e9b9f.right -> length_3b7e2f.list\n        filter_5c4c6c.output_list -> length_3b7e2f.list\n        length_9a8d3f.length -> equal_7e9b9f.left\n        1 -> equal_7e9b9f.right\n        equal_7e9b9f.result -> output_7c2b4e\n    }\n\n    \n\n    instance(x: -57, y: 529) check_same_6a8d3f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3c7b9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) set_intersection_4a5e8d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 530, y: -2) length_1f6b9c root.Std_k98ojb.List.Length {}\n        characters_3c7b9f.characters -> set_intersection_4a5e8d.left\n        characters_3c7b9f.characters -> set_intersection_4a5e8d.right\n        1 -> length_1f6b9c.list\n        set_intersection_4a5e8d.intersect -> length_1f6b9c.list\n        string_1 -> characters_3c7b9f.input\n        length_1f6b9c.length -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_5e8a0d root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -288, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_7b9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        characters_7b9f8c.characters -> contains_d42dce.list\n        input_1 -> characters_7b9f8c.input\n        \"z\" -> contains_d42dce.contains\n        characters_7b9f8c.characters -> firstitem_3078c6.list\n        contains_d42dce.result -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e5c8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e5c8d.second\n        expression_2d6da6.result -> pow_9e5c8d.first\n        n_3a3116 -> mul_f892a4.first\n        pow_9e5c8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c9e2d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9e2d.y\n        data_cde0dc -> pow_4c9e2d.x\n        expression_2d6da6.result -> pow_4c9e2d.value\n        n_3a3116 -> mul_f892a4.first\n        pow_4c9e2d.result -> mul_f892a4.second\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e5c8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e5c8d.second\n        expression_2d6da6.result -> pow_9e5c8d.first\n        n_3a3116 -> mul_f892a4.first\n        pow_9e5c8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c0e9d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c0e9d.second\n        expression_2d6da6.result -> pow_4c0e9d.first\n        data_cde0dc -> sum_365f7b\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4c0e9d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c0d5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c0d5e.y\n        data_cde0dc -> pow_4c0d5e.x\n        expression_2d6da6.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4c0d5e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8c2d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e8c2d.second\n        expression_2d6da6.result -> pow_9e8c2d.first\n        data_cde0dc -> sum_365f7b\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9e8c2d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 10, name: \"size\") property(Number) size_8a0f9e\n\n        out(x: 1066, y: 12, name: \"surface_area\") property(Number) surface_area_b3c1d4\n\n        instance(x: 16, y: -7) mul_5b2a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 332, y: 55) data_8f0e6c  = 6\n        instance(x: 14, y: 53) pow_1d9a9c root.Std_k98ojb.Math.Pow {}\n        mul_5b2a4.result -> surface_area_b3c1d4\n        size_8a0f9e -> mul_5b2a4.first\n        data_8f0e6c -> mul_5b2a4.second\n        size_8a0f9e -> pow_1d9a9c.x\n        2 -> pow_1d9a9c.y\n        pow_1d9a9c.result -> mul_5b2a4.first\n    }\n\n    \n\n    instance(x: -6, y: -16) surface_area_cube_8f3e7 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_2f3a8d\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_1c7b5e\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_9f4a5f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8d0c2d\n\n        instance(x: 80, y: -417) ifexpression_eb1e3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9f8a5c root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1e3d4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6f0f7f root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_5a9c8e\") setter_5a9c8e = sum\n        getter(x: 902, y: -314, name: \"getter_3d0f1d\") getter_3d0f1d = sum\n        instance(x: -202, y: -236) floor_6b7b4 root.Std_k98ojb.Math.Floor {}\n        10 -> mul_1e3d4f.second\n        mul_1e3d4f.result -> add_6f0f7f.first\n        6 -> add_6f0f7f.second\n        add_6f0f7f.result -> setter_5a9c8e.new_value\n        0 -> setter_5a9c8e.new_value\n        setter_5a9c8e.continue -> ifexpression_eb1e3.execute\n        ifexpression_eb1e3.then -> continue_9f4a5f\n        execute_2f3a8d -> setter_5a9c8e.execute\n        ifexpression_eb1e3.else -> surface_area_cube_9f8a5c.execute_2f3a8d\n        surface_area_cube_9f8a5c.continue_9f4a5f -> getter_3d0f1d.execute\n        surface_area_cube_9f8a5c.output_8d0c2d -> add_6f0f7f.first\n        surface_area_cube_9f8a5c.side_length_1c7b5e -> mul_1e3d4f.first\n        setter_5a9c8e.continue -> continue_9f4a5f\n        getter_3d0f1d.value -> output_8d0c2d\n        side_length_1c7b5e -> floor_6b7b4.input\n        floor_6b7b4.output -> surface_area_cube_9f8a5c.side_length_1c7b5e\n        floor_6b7b4.output -> ifexpression_eb1e3.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_b2f1d root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -108, y: 0, name: \"size\") property(Number) size_1a3f8e\n\n        out(x: 104, y: 10, name: \"surface_area\") property(Number) surface_area_b2c7b4\n\n        instance(x: 6, y: 5) mul_1d0f9c root.Std_k98ojb.Math.Mul {}\n        instance(x: -8, y: 22) pow_3a2e7c root.Std_k98ojb.Math.Pow {}\n        instance(x: 34, y: 15) mul_6b4a5f root.Std_k98ojb.Math.Mul {}\n        size_1a3f8e -> pow_3a2e7c.x\n        2 -> pow_3a2e7c.y\n        pow_3a2e7c.result -> mul_1d0f9c.first\n        6 -> mul_1d0f9c.second\n        mul_1d0f9c.result -> mul_6b4a5f.first\n        size_1a3f8e -> mul_6b4a5f.second\n        mul_6b4a5f.result -> surface_area_b2c7b4\n    }\n\n    \n\n    instance(x: 10, y: -26) surface_area_cube_0d7b9f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_1a8d9f\n\n        out(x: 39, y: 0, name: \"surface_area\") property(Number) surface_area_3e7b6c\n\n        instance(x: 15, y: 0) mul_4a2a1 root.Std_k98ojb.Math.Mul {}\n        side_1a8d9f -> mul_4a2a1.first\n        side_1a8d9f -> mul_4a2a1.second\n        instance(x: -5, y: 0) mul_7e3c1 root.Std_k98ojb.Math.Mul {}\n        mul_4a2a1.result -> mul_7e3c1.first\n        6 -> mul_7e3c1.second\n        mul_7e3c1.result -> surface_area_3e7b6c\n    }\n\n    \n\n    instance(x: -33, y: 0) surface_area_cube_8f9d4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9f6a8e\n\n        out(x: 50, y: 0, name: \"surface_area\") property(Number) surface_area_7c2d5b\n\n        instance(x: 20, y: -1) mul_4f1b1f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 80, y: 30) data_ea3e8c  = 6\n        instance(x: 0, y: 29) pow_b9d5a2 root.Std_k98ojb.Math.Pow {}\n        size_9f6a8e -> mul_4f1b1f.first\n        mul_4f1b1f.result -> pow_b9d5a2.x\n        data_ea3e8c -> pow_b9d5a2.y\n        2 -> pow_b9d5a2.y\n        pow_b9d5a2.result -> mul_4f1b1f.second\n        mul_4f1b1f.result -> surface_area_7c2d5b\n    }\n\n    \n\n    instance(x: -100, y: 0) surface_area_cube_3e6b9f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 1, name: \"size\") property(Number) size_9e6f5a\n\n        out(x: 1018, y: 3, name: \"surface_area\") property(Number) surface_area_7b0c2d\n\n        instance(x: 14, y: -11) mul_1b4f6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 333, y: 56) data_9e5a3d  = 6\n        instance(x: 16, y: 51) pow_e8c7ed root.Std_k98ojb.Math.Pow {}\n        size_9e6f5a -> mul_1b4f6f.first\n        pow_e8c7ed.result -> mul_1b4f6f.second\n        data_9e5a3d -> mul_1b4f6f.second\n        size_9e6f5a -> pow_e8c7ed.x\n        2 -> pow_e8c7ed.y\n        mul_1b4f6f.result -> surface_area_7b0c2d\n    }\n\n    \n\n    instance(x: -18, y: -17) surface_area_cube_9e5a3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6f8a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7b3c4d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_1e5c2f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_0a8a0f\n\n        instance(x: 80, y: -417) ifexpression_7b6d4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9c1e5a root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f8d3f4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_7b0c2f root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_1e5a8d\") setter_1e5a8d = sum\n        getter(x: 902, y: -314, name: \"getter_3c9f6a\") getter_3c9f6a = sum\n        instance(x: -202, y: -236) floor_7b2f0a root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f8d3f4.second\n        mul_f8d3f4.result -> add_7b0c2f.first\n        6 -> add_7b0c2f.second\n        add_7b0c2f.result -> setter_1e5a8d.new_value\n        0 -> setter_1e5a8d.new_value\n        setter_1e5a8d.continue -> ifexpression_7b6d4f.execute\n        ifexpression_7b6d4f.then -> continue_1e5c2f\n        execute_9e6f8a -> setter_1e5a8d.execute\n        ifexpression_7b6d4f.else -> surface_area_cube_9c1e5a.execute_9e6f8a\n        surface_area_cube_9c1e5a.continue_1e5c2f -> getter_3c9f6a.execute\n        surface_area_cube_9c1e5a.output_0a8a0f -> setter_1e5a8d.new_value\n        floor_7b2f0a.input -> ifexpression_7b6d4f.gen_0\n        floor_7b2f0a.input -> mul_f8d3f4.first\n        floor_7b2f0a.output -> surface_area_cube_9c1e5a.side_length_7b3c4d\n        getter_3c9f6a.value -> output_0a8a0f\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_2a7d9c root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 57, name: \"side\") property(Number) side_1f9a5e\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_3c8b6d\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_1f9a5e -> mul_f892a4.first\n        side_1f9a5e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_3c8b6d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_7f8c1c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_1f9d5e\n\n        out(x: 46, y: 0, name: \"surface_area\") property(Number) surface_area_3a8c4b\n\n        instance(x: 15, y: -1) mul_2e6c7c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_2e6c7c.result -> div_64046c.first\n        expression_2d6da6.result -> mul_2e6c7c.second\n        side_1f9d5e -> mul_2e6c7c.first\n        side_1f9d5e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_3a8c4b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9f5a3e\n\n        out(x: 150, y: 0, name: \"surface_area\") property(Number) surface_area_1b7d8c\n\n        instance(x: 0, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_9f5a3e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_1b7d8c\n    }\n\n    \n\n    instance(x: -100, y: 0, name: \"surface_area_cube\") expression_2f4f8f root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 157, name: \"list\") property(List) list_9a3f1e\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7b8d6c\n\n        instance(x: 201, y: 126) sub_5e2a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f9f3aa root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_1a8c6e root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_9f7d5c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_e1e6a8 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f9f3aa.max -> firstitem_1a8c6e.list\n        minlist_9f7d5c.min -> firstitem_e1e6a8.list\n        list_9a3f1e -> maxlist_f9f3aa.list\n        list_9a3f1e -> minlist_9f7d5c.list\n        firstitem_1a8c6e.item -> sub_5e2a0c.first\n        firstitem_e1e6a8.item -> sub_5e2a0c.second\n        sub_5e2a0c.result -> output_7b8d6c\n    }\n\n    \n\n    instance(x: -66, y: 10) diff_max_min_9f3c1f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 156, name: \"list\") property(List) list_0d3b9f\n\n        out(x: 593, y: 147, name: \"output\") property(Number) output_ea1c7e\n\n        instance(x: 0, y: 0) sub_6a5a2c root.Std_k98ojb.Math.Sub {}\n        instance(x: -279, y: -8) max_3f4d3f root.Std_k98ojb.List.Max {}\n        instance(x: -280, y: 178) min_1e9d7f root.Std_k98ojb.List.Min {}\n        list_0d3b9f -> max_3f4d3f.list\n        list_0d3b9f -> min_1e9d7f.list\n        max_3f4d3f.max -> sub_6a5a2c.first\n        min_1e9d7f.min -> sub_6a5a2c.second\n        sub_6a5a2c.result -> output_ea1c7e\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_2c856f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 155, name: \"list\") property(List) list_0d9b5f\n\n        out(x: 446, y: 146, name: \"output\") property(Number) output_e6a7c4\n\n        instance(x: 184, y: 148) sub_3e8f2f root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 155) max_1d9f0c root.Std_k98ojb.List.Max {}\n        instance(x: -108, y: -5) min_d7a4da root.Std_k98ojb.List.Min {}\n        list_0d9b5f -> max_1d9f0c.list\n        list_0d9b5f -> min_d7a4da.list\n        max_1d9f0c.max -> sub_3e8f2f.first\n        min_d7a4da.min -> sub_3e8f2f.second\n        sub_3e8f2f.result -> output_e6a7c4\n    }\n\n    \n\n    instance(x: -54, y: 178) diff_max_min_1d9b5f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 166, name: \"list\") property(List) list_0f3e9d\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_9d1a4f root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_6c8e2c root.Std_k98ojb.List.Min {}\n        list_0f3e9d -> max_9d1a4f.list\n        list_0f3e9d -> min_6c8e2c.list\n        max_9d1a4f.max -> sub_852f2e.first\n        min_6c8e2c.min -> sub_852f2e.second\n        sub_852f2e.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 165, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_9f7759 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_f9110a root.Std_k98ojb.List.Min {}\n        list_09fcba -> max_9f7759.list\n        list_09fcba -> min_f9110a.list\n        max_9f7759.max -> sub_7e1ce0.first\n        min_f9110a.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -318, y: 521, name: \"Max list\") max_4f3a9d root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_1e6f8c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_4f3a9d.max -> sub_852f2e.first\n        min_1e6f8c.min -> sub_852f2e.second\n        list_0b075e -> max_4f3a9d.list\n        list_0b075e -> min_1e6f8c.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f3b5e\n\n        out(x: 592, y: 7, name: \"output\") property(Number) output_ea9d8c\n\n        instance(x: 0, y: 0) sub_2a6c1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -277, y: -107, name: \"Max value\") max_f3e5aa root.Std_k98ojb.List.Max {}\n        instance(x: -276, y: 110, name: \"Min value\") min_7c8a1f root.Std_k98ojb.List.Min {}\n        list_1f3b5e -> sub_2a6c1f.second\n        max_f3e5aa.max -> sub_2a6c1f.first\n        min_7c8a1f.min -> sub_2a6c1f.second\n        list_1f3b5e -> max_f3e5aa.list\n        list_1f3b5e -> min_7c8a1f.list\n        sub_2a6c1f.result -> output_ea9d8c\n    }\n\n    \n\n    instance(x: -54, y: 0) diff_max_min_4b2f7f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -318, y: 521, name: \"Max list\") max_4f3a9d root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_f6e7ec root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_4f3a9d.list -> list_0b075e\n        min_f6e7ec.list -> list_0b075e\n        max_4f3a9d.max -> sub_852f2e.first\n        min_f6e7ec.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 0, name: \"list\") property(List) list_1f9d5e\n\n        out(x: 550, y: 27, name: \"output\") property(Number) output_7b2a6c\n\n        instance(x: 186, y: 22) sub_4b8f3f root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 0, name: \"Max value\") max_f1d5e9 root.Std_k98ojb.List.Max {}\n        instance(x: -108, y: -145, name: \"Min value\") min_3f7c8a root.Std_k98ojb.List.Min {}\n        list_1f9d5e -> max_f1d5e9.list\n        list_1f9d5e -> min_3f7c8a.list\n        max_f1d5e9.max -> sub_4b8f3f.first\n        min_3f7c8a.min -> sub_4b8f3f.second\n        sub_4b8f3f.result -> output_7b2a6c\n    }\n\n    \n\n    instance(x: -67, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 165, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f5f8d9 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_0b1361 root.Std_k98ojb.List.Min {}\n        list_09fcba -> max_f5f8d9.list\n        list_09fcba -> min_0b1361.list\n        max_f5f8d9.max -> sub_7e1ce0.first\n        min_0b1361.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 20, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_9b7a6c\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -106, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_5e8f1d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_9b7a6c\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9e6d5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 30, name: \"input\") property(Number) input_1a8f0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb9c6d\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f4c7ec\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5a3f0e\n\n        instance(x: -104, y: -110) ifexpression_eb9d8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1a8f0e\") getter_1a8f0e = output\n        setter(x: 116, y: -268, name: \"setter_f4c7ec\") setter_f4c7ec = output\n        input_1a8f0e -> ifexpression_eb9d8c.gen_0\n        execute_eb9c6d -> ifexpression_eb9d8c.execute\n        getter_1a8f0e.value -> output_f4c7ec\n        ifexpression_eb9d8c.then -> setter_f4c7ec.execute\n        true -> setter_f4c7ec.new_value\n        ifexpression_eb9d8c.else -> continue_5a3f0e\n        false -> setter_f4c7ec.new_value\n        setter_f4c7ec.continue -> continue_5a3f0e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_9d8b1c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 0, name: \"input\") property(Number) input_1f9a3e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_e5b7c4\n\n        out(x: 516, y: -114, name: \"continue\") trigger() continue_8d6c2f\n        out(x: 446, y: 64, name: \"output\") property(Bool) output_1e9a3e\n\n        instance(x: -106, y: -115) ifexpression_5b0c4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -145, y: 63, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 117, y: -271, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1f9a3e -> ifexpression_5b0c4e.gen_0\n        execute_e5b7c4 -> ifexpression_5b0c4e.execute\n        getter_9cceb3.value -> output_1e9a3e\n        ifexpression_5b0c4e.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_5b0c4e.else -> continue_8d6c2f\n        false -> setter_1cedb2.new_value\n        setter_1cedb2.continue -> continue_8d6c2f\n    }\n\n    \n\n    instance(x: -173, y: 44) is_even_f0be66 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_1f3e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1216, y: 5, name: \"output\") property(Bool) output_9a3e1b\n\n        instance(x: 1060, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_685c8f\n        ifexpression_875761.value -> output_9a3e1b\n        ifexpression_875761.then -> setter_1cedb2.execute\n        input_1f3e9d -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        execute_12bf99 -> getat_ce2a48.execute\n        0 -> getat_ce2a48.index\n        list_a7c5b8 -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_1cedb2.new_value\n        true -> setter_1cedb2.new_value\n        ifexpression_875761.execute -> setter_1cedb2.execute\n    }\n\n    \n\n    instance(x: -291, y: 177) is_even_f53d27 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 1, name: \"input\") property(Number) input_9f8a0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_5c2d6b\n\n        out(x: 1234, y: -113, name: \"continue\") trigger() continue_1a3f8c\n        out(x: 1227, y: 127, name: \"output\") property(Bool) output_e9e0aa\n\n        instance(x: 1056, y: 124) ifexpression_4b2d6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9f8a0e -> ifexpression_4b2d6f.gen_0\n        ifexpression_4b2d6f.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_4b2d6f.else -> continue_1a3f8c\n        false -> setter_1cedb2.new_value\n        getter_9cceb3.value -> output_e9e0aa\n        execute_5c2d6b -> ifexpression_4b2d6f.execute\n        setter_1cedb2.continue -> continue_1a3f8c\n    }\n\n    \n\n    instance(x: -292, y: 10) is_even_7a4e9d root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 2, name: \"input\") property(Number) input_1a0f3e\n        in(x: -452, y: -114, name: \"execute\") trigger() execute_eb9d6c\n\n        out(x: 544, y: 75, name: \"output\") property(Bool) output_f4f7ba\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5e8a1f\n\n        instance(x: -82, y: 74) ifexpression_eb0d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a0f3e -> ifexpression_eb0d6c.gen_0\n        2 -> ifexpression_eb0d6c.gen_1\n        execute_eb9d6c -> ifexpression_eb0d6c.execute\n        ifexpression_eb0d6c.value -> output_f4f7ba\n        ifexpression_eb0d6c.then -> continue_5e8a1f\n        ifexpression_eb0d6c.else -> continue_5e8a1f\n    }\n\n    \n\n    instance(x: -83, y: 3) is_even_2f9d4c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 17, name: \"input\") property(Number) input_1f3a9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_e5b8d7\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f6c2ba\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9e1a4f\n\n        instance(x: -105, y: -110) ifexpression_7b8d5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1f3a9e -> ifexpression_7b8d5e.gen_0\n        ifexpression_7b8d5e.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_7b8d5e.else -> setter_1cedb2.execute\n        false -> setter_1cedb2.new_value\n        getter_9cceb3.value -> output_f6c2ba\n        execute_e5b9d7 -> ifexpression_7b8d5e.execute\n        setter_1cedb2.continue -> continue_9e1a4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_0c7c6c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 10, name: \"input\") property(Number) input_1a0f3e\n        in(x: -451, y: -116, name: \"execute\") trigger() execute_7b2c9d\n\n        out(x: 1228, y: 11, name: \"output\") property(Bool) output_5f4a1d\n        out(x: 1216, y: -115, name: \"continue\") trigger() continue_3e9c8f\n\n        instance(x: 0, y: 0) modulo_f2b9a7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 346, y: 5) equal_4d6b5f root.Std_k98ojb.Logic.Equal {}\n        input_1a0f3e -> modulo_f2b9a7.value\n        2 -> modulo_f2b9a7.divisor\n        modulo_f2b9a7.result -> equal_4d6b5f.left\n        0 -> equal_4d6b5f.right\n        execute_7b2c9d -> modulo_f2b9a7.execute\n        equal_4d6b5f.result -> output_5f4a1d\n        equal_4d6b5f.value -> continue_3e9c8f\n    }\n\n    \n\n    instance(x: -56, y: 55) is_even_0e2c7c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 166, name: \"input\") property(Number) input_1e8a3f\n        in(x: -485, y: 30, name: \"execute\") trigger() execute_90aaec\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        ifexpression_875761.value -> output_5bbcd7\n        execute_90aaec -> ifexpression_875761.execute\n        ifexpression_875761.then -> continue_a96db6\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_fc79d5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 12, name: \"input\") property(Number) input_9e8a3f\n        in(x: -452, y: -112, name: \"execute\") trigger() execute_eb0c7d\n\n        out(x: 1224, y: 5, name: \"continue\") trigger() continue_6f2f1b\n        out(x: 1213, y: 137, name: \"output\") property(Bool) output_8a9e3f\n\n        instance(x: -92, y: 138) ifexpression_e7c5d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9a8e1f\") getter_9a8e1f = output\n        setter(x: 679, y: -313, name: \"setter_3b7c6d\") setter_3b7c6d = output\n        instance(x: 321, y: -20) for_2e4b1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3b7c6d\") setter_9a8e1f = output\n        input_9e8a3f -> ifexpression_e7c5d4.gen_0\n        2 -> ifexpression_e7c5d4.gen_1\n        getter_9a8e1f.value -> output_8a9e3f\n        ifexpression_e7c5d4.then -> setter_3b7c6d.execute\n        true -> setter_3b7c6d.new_value\n        ifexpression_e7c5d4.else -> continue_6f2f1b\n        execute_eb0c7d -> setter_9a8e1f.execute\n        false -> setter_9a8e1f.new_value\n        setter_3b7c6d.continue -> for_2e4b1f.next\n        setter_9a8e1f.continue -> for_2e4b1f.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_5a9f0c root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_3f9c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``second occurrence_45e806`` root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> ``second occurrence_45e806``.input\n            find_3f9c8d.index + 1 -> ``second occurrence_45e806``.contains\n            ``second occurrence_45e806``.result -> bool_1eb6e9\n        } -> find_3f9c8d.predicate\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first occurrence_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_45e806`` root.Std_k98ojb.Strings.Contains {}\n            input_0 -> ``first occurrence_45e806``.input\n            current_afd5b1 -> ``first occurrence_45e806``.contains\n            ``first occurrence_45e806``.result -> bool_1eb6e9\n        } -> contains_d42dce.predicate\n        find_3f9c8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 551, y: -105) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_1e5b3c root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_0d9f2f root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> slice_1e5b3c.list\n            elem_9f6850 -> slice_1e5b3c.start\n            -1 -> slice_1e5b3c.end\n            slice_1e5b3c.slice -> contains_807ffd.input\n            elem_9f6850 -> contains_807ffd.contains\n            contains_807ffd.result -> notequal_0d9f2f.left\n            true -> notequal_0d9f2f.right\n            notequal_0d9f2f.result -> bool_af09a7\n        } -> find_1088d5.predicate\n        if_7c284f.execute -> output_0\n        find_1088d5.item -> if_7c284f.else\n        input_0 -> characters_6d05b0.input\n        find_1088d5.item -> if_7c284f.then\n        if_7c284f.predicate -> output_0\n    }\n\n    \n\n    instance(x: 777, y: 760) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e9b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4f8d3a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") ``first occurrence_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_2`` root.Std_k98ojb.Iteration.Find {}\n        characters_5e9b7c.characters -> find_4f8d3a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a2c7f root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_1``.item -> contains_3a2c7f.contains\n            current_afd5b1 -> contains_3a2c7f.input\n            contains_3a2c7f.result -> bool_1eb6e9\n        } -> find_4f8d3a.predicate\n        characters_5e9b7c.characters -> ``first occurrence_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a2c7f root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_1``.item -> contains_3a2c7f.contains\n            current_afd5b1 -> contains_3a2c7f.input\n            contains_3a2c7f.result -> bool_1eb6e9\n        } -> ``first occurrence_2``.predicate\n        characters_5e9b7c.characters -> ``first occurrence_2``.items\n        find_4f8d3a.item -> output_0\n        ``first occurrence_1``.item -> ``first occurrence_2``.predicate\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_6e6bfd root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5a6c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"index\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"indexOf(it, input)\"\n        }\n        instance(x: 62, y: -226, name: \"is repeated\") gt_2d44da root.Std_k98ojb.Math.GreaterThan {}\n        characters_3e4b7f.characters -> find_5a6c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            input_1 -> expression_634b7e.gen_0\n            current_afd5b1 -> expression_634b7e.gen_1\n            expression_634b7e.result -> gt_2d44da.left\n            0 -> gt_2d44da.right\n            gt_2d44da.result -> bool_1eb6e9\n        } -> find_5a6c8d.predicate\n        find_5a6c8d.item -> output_0\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_d42dce root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"unique\") filter_0b1361 root.Std_k98ojb.Query.Filter {\n            where: \"!contains(unique, it)\"\n        }\n        input_09fcba -> characters_d42dce.input\n        characters_d42dce.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            filter_0b1361.result -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_d42dce.characters -> filter_0b1361.list\n        find_7e1ce0.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6c9a8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -75) ifexpression_2a4b1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in seen\"\n        }\n        instance(x: 515, y: -44) add_5f9c6d root.Std_k98ojb.List.Add {}\n        characters_5e3b7f.characters -> find_6c9a8d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1b6d3c root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            elem_9f6850 -> contains_1b6d3c.item\n            find_6c9a8d.seen -> contains_1b6d3c.list\n            contains_1b6d3c.result -> notequal_807ffd.left\n            true -> notequal_807ffd.right\n            notequal_807ffd.result -> ifexpression_2a4b1e.gen_0\n            ifexpression_2a4b1e.then -> bool_af09a7\n        } -> find_6c9a8d.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1b6d3c root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            elem_9f6850 -> contains_1b6d3c.item\n            find_6c9a8d.seen -> contains_1b6d3c.list\n            contains_1b6d3c.result -> notequal_807ffd.left\n            true -> notequal_807ffd.right\n            notequal_807ffd.result -> ifexpression_2a4b1e.gen_0\n            ifexpression_2a4b1e.else -> bool_af09a7\n        } -> find_6c9a8d.handler\n        input_0 -> characters_5e3b7f.input\n        find_6c9a8d.item -> output_0\n        find_6c9a8d.seen -> add_5f9c6d.list\n        find_6c9a8d.item -> add_5f9c6d.item\n        add_5f9c6d.listWithItem -> find_6c9a8d.seen\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_1e3b4f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7c284f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") ``first occurrence_634b7e`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``second occurrence_d42dce`` root.Std_k98ojb.Iteration.Find {}\n        characters_2e1444.output -> find_7c284f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            ``first occurrence_634b7e``.item -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            true -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7c284f.predicate\n        characters_2e1444.output -> ``first occurrence_634b7e``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.input\n            ``first occurrence_634b7e``.item -> contains_45e806.contains\n            contains_45e806.result -> equal_148aeb.left\n            true -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``second occurrence_d42dce``.predicate\n        characters_2e1444.output -> ``second occurrence_d42dce``.items\n        find_7c284f.item -> output_0\n        input_0 -> characters_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7f5c6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"index\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"indexOf(it)\"\n        }\n        instance(x: 62, y: -226, name: \"is repeated\") notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n        characters_2e1444.output -> find_7f5c6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) indexof_45e806 root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 415, y: 86) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> indexof_45e806.input\n            input_0 -> indexof_45e806.string\n            indexof_45e806.index -> expression_634b7e.gen_0\n            0 -> greaterthan_a54bdc.left\n            expression_634b7e.result -> greaterthan_a54bdc.right\n            greaterthan_a54bdc.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7f5c6d.predicate\n        find_7f5c6d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3c8d7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5e6a9c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"count\") count_2e1d8f root.Std_k98ojb.Std.Count {}\n        data_instance(x: 394, y: -339) data_3c713b  = [chars]\n        characters_3c8d7f.output -> find_5d6a9c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> contains_45e806.input\n            data_3c713b.chars -> contains_45e806.contains\n            count_2e1d8f.count -> greaterthan_a54bdc.left\n            1 -> greaterthan_a54bdc.right\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_5d6a9c.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            data_3c713b.chars -> contains_45e806.contains\n            count_2e1d8f.count -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            contains_45e806.result -> bool_1eb6e9\n        } -> count_2e1d8f.trigger\n        find_5d6a9c.item -> output_0\n        input_1 -> characters_3c8d7f.input\n        data_3c713b.chars -> count_2e1d8f.reset\n        find_5d6a9c.onItem -> count_2e1d8f.count\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_d42dce root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"unique\") filter_0b1361 root.Std_k98ojb.Query.Filter {\n            where: \"!contains(unique, it)\"\n        }\n        input_09fcba -> characters_d42dce.input\n        characters_d42dce.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            filter_0b1361.result -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_d42dce.characters -> filter_0b1361.list\n        find_7e1ce0.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_8a1f9e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_5c7d6b\n\n        instance(x: -105, y: -110) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        list_8a1f9e -> min_c3e343.items\n        min_c3e343.min -> list_remove_node.index\n        list_8a1f9e -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_5c7d6b\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_3e7c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> getter_9cceb3.value\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.listWithItem -> list_remove_node.list\n        getter_9cceb3.value -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node.items\n        instance(x: 426, y: -303) list_min2_node root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min2_node.items\n        list_min2_node.min -> second_min_3e7c8f\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 0, name: \"list\") property(List) list_9e6f1a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_8b7c4d\n\n        instance(x: -105, y: -110) find_5c2b0c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_1f9e8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7c2d4b\n\n            instance(x: 89, y: 29) min_5b0b6f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_8e1a9c root.Std_k98ojb.Logic.NotEqual {}\n            list_9e6f1a -> min_5b0b6f.list\n            elem_1f9e8a -> min_5b0b6f.list\n            min_5b0b6f.min -> notequal_8e1a9c.left\n            0 -> notequal_8e1a9c.right\n            notequal_8e1a9c.result -> bool_7c2d4b\n        } -> find_5c2b0c.predicate\n        list_9e6f1a -> find_5c2b0c.items\n        instance(x: -105, y: 120) find_3e9f1f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_8d7a2a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1e3f0c\n\n            instance(x: 89, y: 29) min_4b5f9f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_e7d6a8 root.Std_k98ojb.Logic.NotEqual {}\n            find_5c2b0c.item -> min_4b5f9f.list\n            elem_8d7a2a -> min_4b5f9f.list\n            min_4b5f9f.min -> notequal_e7d6a8.left\n            0 -> notequal_e7d6a8.right\n            notequal_e7d6a8.result -> bool_1e3f0c\n        } -> find_3e9f1f.predicate\n        list_9e6f1a -> find_3e9f1f.items\n        find_3e9f1f.item -> second_min_8b7c4d\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8a2e\n\n        out(x: 593, y: 1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 115, name: \"index\") property(Number) index_7c3a8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            instance(x: 310, y: 114) greaterthan_7a1b6c root.Std_k98ojb.Math.GreaterThan {}\n            index_7c3a8e -> greaterthan_7a1b6c.left\n            0 -> greaterthan_7a1b6c.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8a2e -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 127) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 46, y: 358, name: \"second_min\") property(Number) second_min_a7b6c1\n\n        instance(x: -105, y: 137) find_2d0c8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 247, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 257, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 232) min_2b3c5e root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 238) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -10, y: 247) find_1a9f7d root.Std_k98ojb.Iteration.Find {}\n            list_9e3f8a -> min_2b3c5e.list\n            elem_9f6850 -> min_2b3c5e.list\n            min_2b3c5e.min -> find_1a9f7d.items\n            func() {\n                in(x: -192, y: 342, name: \"current\") property(Number) current_afd5b1\n\n                out(x: 698, y: 343, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 328) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                current_afd5b1 -> equal_a54bdc.left\n                min_2b3c5e.min -> equal_a54bdc.right\n                equal_a54bdc.result -> bool_1eb6e9\n            } -> find_1a9f7d.predicate\n            find_1a9f7d.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2d0c8c.predicate\n        list_9e3f8a -> find_2d0c8c.items\n        find_2d0c8c.item -> second_min_a7b6c1\n    }\n\n    \n\n    instance(x: -174, y: 268) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9f2a3e\n\n        out(x: 158, y: 159, name: \"second_min\") property(Number) second_min_a8c7b1\n\n        instance(x: -105, y: -110) min_c5d6d4 root.Std_k98ojb.List.Min {}\n        instance(x: -103, y: 112) filter_9a2f0e root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        instance(x: -105, y: 112) min_7c8d4e root.Std_k98ojb.List.Min {}\n        list_9f2a3e -> min_c5d6d4.items\n        min_c5d6d4.min -> filter_9a2f0e.list\n        filter_9a2f0e.result -> min_7c8d4e.items\n        min_7c8d4e.min -> second_min_a8c7b1\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7c1f9e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> getter_9cceb3.value\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.listWithItem -> list_remove_node.list\n        getter_9cceb3.value -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node.items\n        instance(x: 426, y: -303) list_min2_node root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min2_node.items\n        list_min2_node.min -> second_min_7c1f9e\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 1, name: \"list\") property(List) list_9f6a3e\n\n        out(x: 159, y: 80, name: \"second_min\") property(Number) second_min_7c2b5d\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a3e -> min_node.items\n        min_node.min -> list_remove_node.index\n        list_9f6a3e -> list_remove_node.list\n        list_remove_node.listWithoutItem -> find_6d05b0.items\n        find_6d05b0.item -> second_min_7c2b5d\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f5a6e\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_1b8c1d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_1b8c1d.predicate\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b, c]\n        a_f37c19 -> data_9a9c70.a\n        b_ca79ac -> data_9a9c70.b\n        c_a89f71 -> data_9a9c70.c\n        list_9f5a6e -> find_1b8c1d.items\n        min_c3e343.min -> number_3f2f0a\n        data_9a9c70 -> min_c3e343.items\n        instance(x: -341, y: 59) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != first\"\n        }\n        list_9f5a6e -> filter_7b3b7b.list\n        find_1b8c1d.item -> filter_7b3b7b.first\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        filter_7b3b7b.result -> firstitem_870503.list\n        firstitem_870503.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 358, name: \"second_min\") property(Number) second_min_f9110a\n\n        instance(x: -105, y: 137) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 247, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 257, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 231) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 241) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -24, y: 261) min_c3e343 root.Std_k98ojb.List.Min {}\n            list_9f7759 -> min_c3e343.items\n            0 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            modulo_1088d5.result -> notequal_807ffd.left\n            min_c3e343.min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.item -> second_min_f9110a\n    }\n\n    \n\n    instance(x: -174, y: 568) second_smallest_d6e930 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 11044,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 10, name: \"list1\") property(List) list1_3e8f9a\n        in(x: -162, y: -124, name: \"list2\") property(List) list2_eb7d5c\n\n        out(x: 505, y: -49, name: \"output\") property(Bool) output_4f6c0e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_c1a3da root.Std_k98ojb.Sets.Intersection {}\n        list1_3e8f9a -> intersection_c1a3da.left\n        list2_eb7d5c -> intersection_c1a3da.right\n        instance(x: 679, y: -49) notempty_4a6f0f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c1a3da.intersection -> notempty_4a6f0f.list\n        notempty_4a6f0f.isEmpty -> output_4f6c0e\n    }\n\n    \n\n    instance(x: -138, y: 45) has_common_element_9d7b5c root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 17, name: \"list1\") property(List) list1_3e8b9f\n        in(x: -163, y: -120, name: \"list2\") property(List) list2_7c6d5a\n\n        out(x: 555, y: -95, name: \"output\") property(Bool) output_4a0f3e\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3e8b9f -> intersection_c7c7e6.left\n        list2_7c6d5a -> intersection_c7c7e6.right\n        instance(x: 360, y: -95) notempty_0c4a5f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_0c4a5f.list\n        notempty_0c4a5f.isEmpty -> output_4a0f3e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_9d1b8c root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 20, name: \"list1\") property(List) list1_8a2f5e\n        in(x: -165, y: -105, name: \"list2\") property(List) list2_9c0b4d\n\n        out(x: 584, y: -89, name: \"output\") property(Bool) output_7a1f3e\n\n        instance(x: 132, y: -127) intersection_8b6a8c root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f5e -> intersection_8b6a8c.left\n        list2_9c0b4d -> intersection_8b6a8c.right\n        instance(x: 360, y: -95) notempty_7e3f0c root.Std_k98ojb.List.NotEmpty {}\n        intersection_8b6a8c.intersection -> notempty_7e3f0c.list\n        notempty_7e3f0c.isEmpty -> output_7a1f3e\n    }\n\n    \n\n    instance(x: -91, y: 60) has_common_element_e9d4d2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -172, y: 19, name: \"list1\") property(List) list1_4a8f5e\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_9c0b6d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_3f7b4a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_5e1c8e root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8f5e -> intersection_5e1c8e.left\n        list2_9c0b6d -> intersection_5e1c8e.right\n        instance(x: 487, y: -49) notempty_3a7b1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_5e1c8e.intersection -> notempty_3a7b1c.list\n        notempty_3a7b1c.isEmpty -> output_3f7b4a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_c9d0e2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_9a3b2f\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7c8d4e\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_e6f1a9\n\n        instance(x: 133, y: -131) intersection_5b0c8e root.Std_k98ojb.Sets.Intersection {}\n        list1_9a3b2f -> intersection_5b0c8e.left\n        list2_7c8d4e -> intersection_5b0c8e.right\n        instance(x: 245, y: -54) notempty_c6e9a8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_5b0c8e.intersect -> notempty_c6e9a8.list\n        notempty_c6e9a8.isEmpty -> output_e6f1a9\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_3d7b4f root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 12, name: \"list1\") property(List) list1_9e3f0a\n        in(x: -177, y: -117, name: \"list2\") property(List) list2_eb7c8d\n\n        out(x: 562, y: -94, name: \"output\") property(Bool) output_4a5f6f\n\n        instance(x: 154, y: -99, name: \"intersection\") intersection_9e1f3f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f0a -> intersection_9e1f3f.left\n        list2_eb7c8d -> intersection_9e1f3f.right\n        instance(x: 461, y: -95) notempty_5a4b7f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9e1f3f.intersection -> notempty_5a4b7f.list\n        notempty_5a4b7f.isEmpty -> output_4a5f6f\n    }\n\n    \n\n    instance(x: -138, y: 60) has_common_element_8c0d1e root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_8e9b0f\n        in(x: -164, y: -123, name: \"list2\") property(List) list2_7c6d5a\n\n        out(x: 584, y: -97, name: \"output\") property(Bool) output_e3b4ec\n\n        instance(x: 145, y: -106) intersection_c1e9f8 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9b0f -> intersection_c1e9f8.left\n        list2_7c6d5a -> intersection_c1e9f8.right\n        instance(x: 361, y: -97) notempty_3a4c5f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c1e9f8.intersection -> notempty_3a4c5f.list\n        notempty_3a4c5f.isEmpty -> output_e3b4ec\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_7d6b2f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 19, name: \"list1\") property(List) list1_9e3f8a\n        in(x: -163, y: -120, name: \"list2\") property(List) list2_7b0d4c\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_6c5b9e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_3a1f8c root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f8a -> intersection_3a1f8c.left\n        list2_7b0d4c -> intersection_3a1f8c.right\n        instance(x: 188, y: -50) notempty_5a7c1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_3a1f8c.intersect -> notempty_5a7c1c.list\n        notempty_5a7c1c.isEmpty -> output_6c5b9e\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -277, y: 167, name: \"list1\") property(List) list1_8a2b5e\n        in(x: -281, y: 293, name: \"list2\") property(List) list2_7c0f9d\n\n        out(x: 801, y: 145, name: \"output\") property(Bool) output_4a3f6f\n\n        instance(x: 532, y: 147) intersection_5b1e1d root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2b5e -> intersection_5b1e1d.left\n        list2_7c0f9d -> intersection_5b1e1d.right\n        instance(x: 1056, y: 147) notempty_4e3f5f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5b1e1d.intersect -> notempty_4e3f5f.list\n        notempty_4e3f5f.isEmpty -> output_4a3f6f\n    }\n\n    \n\n    instance(x: -291, y: 177) intersection_9c8f2c root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -179, y: 10, name: \"list1\") property(List) list1_3e9f0a\n        in(x: -177, y: -125, name: \"list2\") property(List) list2_eb8d7c\n\n        out(x: 560, y: -97, name: \"output\") property(Bool) output_4f6f5e\n\n        instance(x: 144, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9f0a -> intersection_c7c7e6.left\n        list2_eb8d7c -> intersection_c7c7e6.right\n        instance(x: 361, y: -95) notempty_4f9b1f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersect -> notempty_4f9b1f.list\n        notempty_4f9b1f.isEmpty -> output_4f6f5e\n    }\n\n    \n\n    instance(x: -85, y: 60) intersection_ba2d8c root.main.intersection {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 339, y: 31, name: \"getter_8a3f9d\") getter_8a3f9d = previous\n        setter(x: 686, y: -252, name: \"setter_7c0b4e\") setter_7c0b4e = previous\n        instance(x: 323, y: -62) for_d1e5aa root.Std_k98ojb.Std.For {}\n        setter(x: -2, y: -163, name: \"setter_7c0b4e\") setter_3a8d6f = previous\n        instance(x: -277, y: -77) getat_e9f1ba root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b2c.else -> continue_5b8b6c\n        ifexpression_7e7b2c.value -> output_eb7d1c\n        ifexpression_7e7b2c.then -> setter_7c0b4e.execute\n        list_0a8f9e -> for_d1e5aa.items\n        for_d1e5aa.item -> ifexpression_7e7b2c.gen_2\n        for_d1e5aa.index -> ifexpression_7e7b2c.gen_0\n        getter_8a3f9d.value -> ifexpression_7e7b2c.gen_1\n        for_d1e5aa.onItem -> ifexpression_7e7b2c.execute\n        for_d1e5aa.done -> continue_5b8b6c\n        for_d1e5aa.item -> setter_7c0b4e.new_value\n        list_0a8f9e -> getat_e9f1ba.list\n        0 -> getat_e9f1ba.index\n        getat_e9f1ba.itemAtIndex -> setter_3a8d6f.new_value\n        execute_5c2b4c -> setter_3a8d6f.execute\n        setter_3a8d6f.continue -> for_d1e5aa.reset\n        setter_7c0b4e.continue -> for_d1e5aa.next\n    }\n\n    \n\n    instance(x: -34, y: 57) is_consecutive_9e2d1f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_1f8a0e\n\n        out(x: 1056, y: 4, name: \"output\") property(Bool) output_7c2d9b\n\n        instance(x: 1045, y: -15) ifexpression_3e9c1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: 334, y: 88, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: 679, y: -245) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 321, y: -53) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -0, y: -155) setter_9d4f1c root.Std_k98ojb.Setting.Setter {\n            new_value: \"current\"\n        }\n        instance(x: -275, y: -70) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_3e9c1.else -> not_75283f.input\n        ifexpression_3e9c1.value -> output_7c2d9b\n        list_1f8a0e -> for_d26972.items\n        for_d26972.item -> ifexpression_3e9c1.gen_2\n        for_d26972.index -> ifexpression_3e9c1.gen_0\n        getter_b280eb.value -> ifexpression_3e9c1.gen_1\n        for_d26972.onItem -> ifexpression_3e9c1.execute\n        for_d26972.done -> not_75283f.continue\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f8a0e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.old_value\n    }\n\n    \n\n    instance(x: -84, y: 159) is_consecutive_3b8e5 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 5, name: \"list\") property(List) list_9e3a8f\n\n        out(x: 1116, y: 1, name: \"output\") property(Bool) output_7c0b4d\n\n        instance(x: 1042, y: -12) ifexpression_5f8f2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: 1029, y: 93) filter_7e6d4a root.Std_k98ojb.Query.Filter {}\n        getter(x: 335, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5f8f2c.else -> filter_7e6d4a.execute\n        ifexpression_5f8f2c.value -> output_7c0b4d\n        ifexpression_5f8f2c.then -> setter_9d4f1c.execute\n        list_9e3a8f -> for_d26972.items\n        for_d26972.item -> ifexpression_5f8f2c.gen_2\n        for_d26972.index -> ifexpression_5f8f2c.gen_0\n        getter_b280eb.value -> ifexpression_5f8f2c.gen_1\n        for_d26972.onItem -> ifexpression_5f8f2c.execute\n        for_d26972.done -> filter_7e6d4a.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_9e3a8f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a3b5f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9a1f3e\n\n        out(x: 1025, y: 7, name: \"output\") property(Bool) output_8c2d6b\n\n        instance(x: 106, y: -4) sort_e1b0ce root.Std_k98ojb.List.Sort {}\n        instance(x: 417, y: 12) map_9e5f3a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 724, y: 11) filter_8c2d7c root.Std_k98ojb.Query.Filter {\n            where: \"it[1] - it[0] == 1\"\n        }\n        instance(x: 1016, y: 12) length_5a9e3f root.Std_k98ojb.List.Length {}\n        sort_e1b0ce.list -> map_9e5f3a.items\n        func() {\n            in(x: -121, y: 40, name: \"current\") property(Number) current_7d6c2f\n\n            out(x: 389, y: 29, name: \"\") property(List) _1b0e8d9\n\n            instance(x: 91, y: 27) slice_5a4f3f root.Std_k98ojb.List.Slice {}\n            current_7d6c2f -> slice_5a4f3f.start\n            2 -> slice_5a4f3f.end\n            list_9a1f3e -> slice_5a4f3f.list\n            slice_5a4f3f.slice -> _1b0e8d9\n        } -> map_9e5f3a.handler\n        map_9e5f3a.output_list -> filter_8c2d7c.list\n        length_5a9e3f.length -> output_8c2d6b\n        list_9a1f3e -> length_5a9e3f.list\n        filter_8c2d7c.result -> length_5a9e3f.list\n    }\n\n    \n\n    instance(x: -67, y: 159) is_consecutive_0f4b9f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 1, name: \"list\") property(List) list_9e6f3a\n\n        out(x: 1020, y: 2, name: \"output\") property(Bool) output_8b7d4c\n\n        instance(x: 106, y: -5) sort_1e3c7f root.Std_k98ojb.List.Sort {}\n        instance(x: 428, y: 11) for_9a2c8f root.Std_k98ojb.Std.For {}\n        instance(x: 768, y: 10) sub_4d0f6f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1011, y: -5) if_7e3a4c root.Std_k98ojb.Std.If {}\n        sort_1e3c7f.list -> for_9a2c8f.items\n        func() {\n            in(x: -113, y: 39, name: \"current\") property(Number) current_e6d5ad\n\n            out(x: 515, y: 49, name: \"bool\") property(Bool) bool_1e7b9a\n\n            instance(x: 112, y: 34) modulo_4c8f2f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 40) equal_3d5c0f root.Std_k98ojb.Logic.Equal {}\n            current_e6d5ad -> modulo_4c8f2f.value\n            1 -> modulo_4c8f2f.divisor\n            modulo_4c8f2f.result -> equal_3d5c0f.left\n            0 -> equal_3d5c0f.right\n            equal_3d5c0f.result -> bool_1e7b9a\n        } -> for_9a2c8f.handler\n        for_9a2c8f.item -> sub_4d0f6f.first\n        for_9a2c8f.index -> sub_4d0f6f.second\n        1 -> if_7e3a4c.then.execute\n        false -> if_7e3a4c.else.execute\n        sub_4d0f6f.result -> if_7e3a4c.predicate\n        for_9a2c8f.onItem -> if_7e3a4c.execute\n        if_7e3a4c.value -> output_8b7d4c\n        list_9e6f3a -> sort_1e3c7f.list\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_5f0f1f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 1, name: \"list\") property(List) list_8e9f0a\n\n        out(x: 1115, y: 3, name: \"output\") property(Bool) output_eb7c6d\n\n        instance(x: 106, y: -12) sort_4e1f1f root.Std_k98ojb.List.Sort {}\n        instance(x: 428, y: 0) for_8b2a3c root.Std_k98ojb.Std.For {}\n        instance(x: 1016, y: 9) lessthanorequal_e5d7e4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1051, y: -76) if_0f2a8c root.Std_k98ojb.Std.If {}\n        sort_4e1f1f.sorted -> for_8b2a3c.items\n        func() {\n            in(x: -121, y: 46, name: \"current\") property(Number) current_9d5b0f\n\n            out(x: 704, y: 27, name: \"\") property(Bool) _1e7b6f8\n\n            instance(x: 112, y: 22) add_ea4c3c root.Std_k98ojb.Math.Add {}\n            current_9d5b0f -> add_ea4c3c.first\n            1 -> add_ea4c3c.second\n            for_8b2a3c.index -> lessthanorequal_e5d7e4.left\n            add_ea4c3c.result -> lessthanorequal_e5d7e4.right\n            lessthanorequal_e5d7e4.result -> if_0f2a8c.predicate\n            for_8b2a3c.onItem -> if_0f2a8c.execute\n            if_0f2a8c.else -> output_eb7c6d\n            if_0f2a8c.value -> output_eb7c6d\n        } -> for_8b2a3c.handler\n        list_8e9f0a -> sort_4e1f1f.list\n    }\n\n    \n\n    instance(x: -67, y: 117) is_consecutive_5e9f9c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 4, name: \"list\") property(List) list_1a8f3e\n\n        out(x: 1069, y: 13, name: \"output\") property(Bool) output_7c2d5b\n\n        instance(x: 1050, y: -6) filter_1b4c7c root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 1079, y: 74) sort_8a2f3d root.Std_k98ojb.List.Sort {}\n        instance(x: 1056, y: -115) for_5c7e4f root.Std_k98ojb.Std.For {}\n        instance(x: 1060, y: -196) expression_1f9b3c root.Std_k98ojb.Math.Expression {\n            expression: \"current + 1 == next\"\n        }\n        instance(x: 1052, y: -293) if_8a4e5d root.Std_k98ojb.Std.If {}\n        instance(x: 1060, y: -408) and_7f3c6f root.Std_k98ojb.Logic.And {}\n        list_1a8f3e -> filter_1b4c7c.list\n        filter_1b4c7c.result -> sort_8a2f3d.list\n        sort_8a2f3d.sortedList -> for_5c7e4f.items\n        func() {\n            in(x: -121, y: -141, name: \"current\") property(Number) current_1b0f9c\n\n            out(x: 698, y: -131, name: \"bool\") property(Bool) bool_3a2d7e\n\n            instance(x: 107, y: -128) add_5b4c9f root.Std_k98ojb.Math.Add {}\n            current_1b0f9c -> add_5b4c9f.first\n            1 -> add_5b4c9f.second\n            add_5b4c9f.result -> expression_1f9b3c.gen_0\n            for_5c7e4f.item -> expression_1f9b3c.gen_1\n            expression_1f9b3c.result -> bool_3a2d7e\n        } -> for_5c7e4f.handler\n        for_5c7e4f.onItem -> if_8a4e5d.execute\n        for_5c7e4f.index -> and_7f3c6f.left\n        0 -> and_7f3c6f.right\n        bool_3a2d7e -> and_7f3c6f.left\n        if_8a4e5d.else -> output_7c2d5b\n        for_5c7e4f.done -> output_7c2d5b\n        and_7f3c6f.result -> if_8a4e5d.predicate\n    }\n\n    \n\n    instance(x: -84, y: 60) is_consecutive_1a9b2f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 3, name: \"list\") property(List) list_1f8d9e\n\n        out(x: 1050, y: 2, name: \"output\") property(Bool) output_7a4b7c\n\n        instance(x: 0, y: -11) sort_6b5c3c root.Std_k98ojb.List.Sort {}\n        instance(x: 288, y: 12) for_1e8f9d root.Std_k98ojb.Std.For {}\n        instance(x: 688, y: 2) sub_4a7c9f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1020, y: -11) lessthanorequal_6e1b8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1003, y: 12) if_7c2d5a root.Std_k98ojb.Std.If {}\n        sort_6b5c3c.list -> for_1e8f9d.items\n        func() {\n            in(x: -112, y: 41, name: \"current\") property(Number) current_0c4b7c\n\n            out(x: 516, y: 32, name: \"bool\") property(Bool) bool_5a3e6f\n\n            instance(x: 87, y: 37) sub_1d8a2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 322, y: 34) lessthanorequal_7a4b0c root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_1e8f9d.index -> sub_1d8a2c.first\n            1 -> sub_1d8a2c.second\n            sub_1d8a2c.result -> lessthanorequal_7a4b0c.left\n            current_0c4b7c -> lessthanorequal_7a4b0c.right\n            lessthanorequal_7a4b0c.result -> bool_5a3e6f\n        } -> if_7c2d5a.predicate\n        for_1e8f9d.item -> sub_4a7c9f.first\n        1 -> sub_4a7c9f.second\n        sort_6b5c3c.list -> sub_4a7c9f.left\n        for_1e8f9d.index -> sub_4a7c9f.right\n        sub_4a7c9f.result -> lessthanorequal_6e1b8f.left\n        if_7c2d5a.value -> output_7a4b7c\n        for_1e8f9d.onItem -> if_7c2d5a.execute\n        list_1f8d9e -> sort_6b5c3c.list\n        lessthanorequal_6e1b8f.result -> if_7c2d5a.predicate\n        0 -> lessthanorequal_6e1b8f.right\n        for_1e8f9d.done -> output_7a4b7c\n    }\n\n    \n\n    instance(x: -56, y: 177) is_consecutive_f1f3c2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 1, name: \"list\") property(List) list_0a3d9f\n\n        out(x: 1228, y: 5, name: \"output\") property(Bool) output_6b2c7e\n\n        instance(x: 772, y: 76) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_0a3d9f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_0a3d9f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a4dad root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_9a1f0e\n\n        out(x: 1056, y: 7, name: \"output\") property(Bool) output_eb8d3c\n\n        instance(x: 1064, y: -15) ifexpression_2e5f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 346, y: 32, name: \"getter_9a8d4c\") getter_9a8d4c = previous\n        setter(x: 683, y: -277, name: \"setter_6b0f5e\") setter_6b0f5e = previous\n        instance(x: 323, y: -62) for_7f1f3c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -171, name: \"setter_6b0f5e\") setter_9d4a8f = previous\n        instance(x: -276, y: -77) getat_7a1c2f root.Std_k98ojb.List.GetAt {}\n        ifexpression_2e5f7f.else -> continue_3f6c0f\n        ifexpression_2e5f7f.value -> output_eb8d3c\n        ifexpression_2e5f7f.then -> setter_6b0f5e.execute\n        list_9a1f0e -> for_7f1f3c.items\n        for_7f1f3c.item -> ifexpression_2e5f7f.gen_2\n        for_7f1f3c.index -> ifexpression_2e5f7f.gen_0\n        getter_9a8d4c.value -> ifexpression_2e5f7f.gen_1\n        for_7f1f3c.onItem -> ifexpression_2e5f7f.execute\n        for_7f1f3c.done -> continue_3f6c0f\n        for_7f1f3c.item -> setter_6b0f5e.new_value\n        list_9a1f0e -> getat_7a1c2f.list\n        0 -> getat_7a1c2f.index\n        getat_7a1c2f.itemAtIndex -> setter_9d4a8f.new_value\n        execute_5b3e6e -> setter_9d4a8f.execute\n        setter_9d4a8f.continue -> for_7f1f3c.reset\n        setter_6b0f5e.continue -> for_7f1f3c.next\n    }\n\n    \n\n    instance(x: -83, y: 59) is_consecutive_f2a9a9 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"sublist\") property(List) sublist_3f9a8e\n        in(x: -285, y: -160, name: \"list\") property(List) list_1c7b4d\n\n        out(x: 1115, y: -97, name: \"output\") property(Bool) output_2a6f9c\n\n        instance(x: -94, y: -157, name: \"length of sublist\") length_8e3c0e root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -156) contains_1d7b1f root.Std_k98ojb.List.Contains {}\n        instance(x: 360, y: -155) equal_f6a4c9 root.Std_k98ojb.Logic.Equal {}\n        sublist_3f9a8e -> length_8e3c0e.list\n        list_1c7b4d -> contains_1d7b1f.list\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(List) current_2c5c9a\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3e6d0b\n\n            instance(x: 226, y: 56) slice_1f8b7a root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) length_9c5a4c root.Std_k98ojb.List.Length {}\n            instance(x: 684, y: 52) equal_2d0e3c root.Std_k98ojb.Logic.Equal {}\n            current_2c5c9a -> slice_1f8b7a.list\n            length_8e3c0e.length -> slice_1f8b7a.start\n            -1 -> slice_1f8b7a.end\n            slice_1f8b7a.slice -> equal_2d0e3c.left\n            sublist_3f9a8e -> equal_2d0e3c.right\n            length_9c5a4c.length -> equal_2d0e3c.context\n            equal_2d0e3c.result -> output_3e6d0b\n        } -> contains_1d7b1f.handler\n        contains_1d7b1f.is_contained -> equal_f6a4c9.left\n        true -> equal_f6a4c9.right\n        equal_f6a4c9.result -> output_2a6f9c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7e5b0d root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -265, y: 20, name: \"sublist\") property(List) sublist_1f8a0e\n        in(x: -264, y: -160, name: \"list\") property(List) list_3b9d5c\n\n        out(x: 1067, y: -119, name: \"output\") property(Bool) output_6a2f7f\n\n        instance(x: -14, y: -159, name: \"sublist length\") length_8e4c0c root.Std_k98ojb.List.Length {}\n        instance(x: 230, y: -160, name: \"list length\") length_c5d1a2 root.Std_k98ojb.List.Length {}\n        instance(x: 518, y: -159) slice_9f8e3c root.Std_k98ojb.List.Slice {}\n        instance(x: 808, y: -158) contains_6f0b7c root.Std_k98ojb.List.Contains {}\n        sublist_1f8a0e -> length_8e4c0c.list\n        list_3b9d5c -> length_c5d1a2.list\n        func() {\n            in(x: -31, y: 19, name: \"start\") property(Number) start_6c7f8c\n\n            out(x: 705, y: 20, name: \"\") property(List) _3b9e4a\n\n            instance(x: 224, y: 16) slice_2d1c0f root.Std_k98ojb.List.Slice {}\n            start_6c7f8c -> slice_2d1c0f.start\n            list_3b9d5c -> slice_2d1c0f.list\n            length_8e4c0c.length -> slice_2d1c0f.end\n            slice_2d1c0f.slice -> _3b9e4a\n        } -> contains_6f0b7c.handler\n        func() {\n            in(x: -31, y: 19, name: \"start\") property(Number) start_6c7f8c\n\n            out(x: 705, y: 20, name: \"\") property(List) _3b9e4a\n\n            instance(x: 224, y: 16) slice_2d1c0f root.Std_k98ojb.List.Slice {}\n            start_6c7f8c -> slice_2d1c0f.start\n            list_3b9d5c -> slice_2d1c0f.list\n            length_8e4c0c.length -> slice_2d1c0f.end\n            slice_2d1c0f.slice -> _3b9e4a\n        } -> slice_9f8e3c.handler\n        contains_6f0b7c.is_contained -> output_6a2f7f\n        length_c5d1a2.length -> slice_9f8e3c.index\n        sublist_1f8a0e -> slice_9f8e3c.list\n    }\n\n    \n\n    instance(x: 102, y: -11) is_sublist_6b4f7f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 0, name: \"sublist\") property(List) sublist_1f9d8a\n        in(x: -297, y: 145, name: \"list\") property(List) list_3b7e5c\n\n        out(x: 1042, y: 45, name: \"output\") property(Bool) output_6e0b4f\n\n        instance(x: 12, y: -8, name: \"check if sublist is in list\") contains_1a9d7c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -29, y: 55, name: \"list\") property(List) list_2f0e3\n            in(x: -27, y: 139, name: \"sublist\") property(List) sublist_1a7d6\n\n            out(x: 699, y: 84, name: \"output\") property(Bool) output_5c9b4\n\n            instance(x: 226, y: 91, name: \"check if list is a prefix of sublist\") contains_2f0e3 root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -29, y: 55, name: \"list\") property(List) list_2f0e3\n                in(x: -27, y: 139, name: \"sublist\") property(List) sublist_1a7d6\n\n                out(x: 699, y: 84, name: \"output\") property(Bool) output_5c9b4\n\n                instance(x: 226, y: 91, name: \"check if list is a prefix of sublist\") contains_2f0e3 root.Std_k98ojb.List.Contains {}\n                func() {\n                    in(x: -29, y: 55, name: \"list\") property(List) list_2f0e3\n                    in(x: -27, y: 139, name: \"sublist\") property(List) sublist_1a7d6\n\n                    out(x: 699, y: 84, name: \"output\") property(Bool) output_5c9b4\n\n                    instance(x: 226, y: 91, name: \"check if list is a prefix of sublist\") contains_2f0e3 root.Std_k98ojb.List.Contains {}\n                    func() {\n                        in(x: -29, y: 55, name: \"list\") property(List) list_2f0e3\n                        in(x: -27, y: 139, name: \"sublist\") property(List) sublist_1a7d6\n\n                        out(x: 699, y: 84, name: \"output\") property(Bool) output_5c9b4\n\n                        instance(x: 226, y: 91, name: \"check if list is a prefix of sublist\") contains_2f0e3 root.Std_k98ojb.List.Contains {}\n                        list_2f0e3 -> contains_2f0e3.list\n                        sublist_1a7d6 -> contains_2f0e3.item\n                        contains_2f0e3.is_contained -> output_5c9b4\n                    } -> contains_2f0e3.handler\n\n                    list_2f0e3 -> contains_2f0e3.list\n                    sublist_1a7d6 -> contains_2f0e3.item\n                    contains_2f0e3.is_contained -> output_5c9b4\n                } -> contains_2f0e3.handler\n\n                list_2f0e3 -> contains_2f0e3.list\n                sublist_1a7d6 -> contains_2f0e3.item\n                contains_2f0e3.is_contained -> output_5c9b4\n            } -> contains_2f0e3.handler\n\n            list_2f0e3 -> contains_2f0e3.list\n            sublist_1a7d6 -> contains_2f0e3.item\n            contains_2f0e3.is_contained -> output_5c9b4\n        } -> contains_2f0e3.handler\n\n        list_3b7e5c -> contains_1a9d7c.list\n        sublist_1f9d8a -> contains_1a9d7c.item\n        contains_1a9d7c.is_contained -> output_6e0b4f\n    }\n\n    \n\n    instance(x: 12, y: -8) is_sublist_node root.main.is_sublist {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 5, name: \"sublist\") property(List) sublist_3f8a1e\n        in(x: -283, y: -155, name: \"list\") property(List) list_7c9d6b\n\n        out(x: 1060, y: -120, name: \"output\") property(Bool) output_e5b4ba\n\n        instance(x: -92, y: -152, name: \"is sublist\") filter_1a8e2f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: 40, name: \"current\") property(List) current_7c9d6b\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_1a8e2f.handler\n        instance(x: 105, y: -121) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_3f8a1e -> contains_32727d.item\n        list_7c9d6b -> filter_1a8e2f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        filter_1a8e2f.output_list -> contains_32727d.list\n        contains_32727d.is_contained -> output_e5b4ba\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7c9d6b root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_1f9a0e\n        in(x: -280, y: -169, name: \"list\") property(List) list_7c6b3d\n\n        out(x: 1065, y: -145, name: \"output\") property(Bool) output_e2f8ec\n\n        instance(x: -90, y: -146, name: \"sublist length\") length_9a0e4f root.Std_k98ojb.List.Length {}\n        instance(x: 186, y: -148) contains_1d3c5f root.Std_k98ojb.List.Contains {}\n        instance(x: 490, y: -149) greaterthan_7f8c2e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 702, y: -147) for_d0a9f1 root.Std_k98ojb.Std.For {}\n        instance(x: 1023, y: -148) sub_5d6b2f root.Std_k98ojb.List.Slice {}\n        sublist_1f9a0e -> length_9a0e4f.list\n        list_7c6b3d -> contains_1d3c5f.list\n        sublist_1f9a0e -> contains_1d3c5f.item\n        greaterthan_7f8c2e.result -> for_d0a9f1.reset\n        length_9a0b4f.length -> greaterthan_7f8c2e.left\n        list_7c6b3d -> length_9a0b4f.list\n        0 -> greaterthan_7f8c2e.right\n        contains_1d3c5f.is_contained -> for_d0a9f1.trigger\n        sublist_1f9a0e -> sub_5d6b2f.list\n        for_d0a9f1.index -> sub_5d6b2f.start\n        length_9a0b4f.length -> sub_5d6b2f.end\n        list_7c6b3d -> contains_1d3c5f.list\n        sub_5d6b2f.slice -> contains_1d3c5f.item\n        for_d0a9f1.done -> output_e2f8ec\n    }\n\n    \n\n    instance(x: -85, y: 10) is_sublist_7e4d4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 10, name: \"sublist\") property(List) sublist_2f1a8e\n        in(x: -303, y: -166, name: \"list\") property(List) list_3c7b9d\n\n        out(x: 1015, y: -93, name: \"output\") property(Bool) output_e0a6ea\n\n        instance(x: -91, y: -167, name: \"find sublist in list\") find_1e2f4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 5, name: \"current\") property(List) current_9a7c8d\n\n            out(x: 706, y: 14, name: \"\") property(Bool) _0e6f1e\n\n            instance(x: 226, y: 11) contains_2b4c3f root.Std_k98ojb.List.Contains {}\n            sublist_2f1a8e -> contains_2b4c3f.list\n            current_9a7c8d -> contains_2b4c3f.item\n            contains_2b4c3f.is_contained -> _0e6f1e\n        } -> find_1e2f4f.predicate\n        list_3c7b9d -> find_1e2f4f.items\n        find_1e2f4f.item -> output_e0a6ea\n    }\n\n    \n\n    instance(x: -90, y: 55) is_sublist_5a8c6e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -265, y: 0, name: \"sublist\") property(List) sublist_1a8f6e\n        in(x: -266, y: -170, name: \"list\") property(List) list_2b7d5c\n\n        out(x: 1043, y: -110, name: \"output\") property(Bool) output_e9b4ba\n\n        instance(x: -10, y: -109) contains_6a8e0f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -31, y: 26, name: \"sublist\") property(List) sublist_1a8f6e\n            in(x: -32, y: -145, name: \"list\") property(List) list_2b7d5c\n\n            out(x: 1000, y: 15, name: \"\") property(List) _3b4a9f\n\n            instance(x: 246, y: -8) filter_f6e1ed root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n                in(x: -193, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_c76d2b.value\n                2 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_7836b4.left\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> output_efbc78\n            } -> filter_f6e1ed.handler\n            list_2b7d5c -> filter_f6e1ed.items\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n                instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_ad7b2a.value\n                2 -> modulo_ad7b2a.divisor\n                modulo_ad7b2a.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            } -> map_c73e3b.handler\n            filter_f6e1ed.output_list -> map_c73e3b.items\n            instance(x: 246, y: -23) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n                instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_ad7b2a.value\n                2 -> modulo_ad7b2a.divisor\n                modulo_ad7b2a.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            } -> map_c73e3b.handler\n            filter_f6e1ed.output_list -> map_c73e3b.items\n            instance(x: -31, y: -145) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n            sublist_1a8f6e -> zip_201051.left\n            _3b4a9f -> zip_201051.right\n            func() {\n                in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n                in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n                out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n                instance(x: -8, y: -53) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                list1_42bc6f -> equal_f89569.left\n                list2_1d86d4 -> equal_f89569.right\n                equal_f89569.result -> result_e245cb\n            } -> zip_201051.handler\n            instance(x: 246, y: -145) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n                in(x: -193, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_c76d2b.value\n                2 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_7836b4.left\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> output_efbc78\n            } -> filter_c91965.handler\n            list_2b7d5c -> filter_c91965.items\n        } -> contains_6a8e0f.list\n        sublist_1a8f6e -> contains_6a8e0f.item\n        contains_6a8e0f.is_contained -> output_e9b4ba\n    }\n\n    \n\n    instance(x: 104, y: -120) is_sublist_f5d7c2 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 15, name: \"sublist\") property(List) sublist_1f8d9a\n        in(x: -297, y: -166, name: \"list\") property(List) list_7e0c4b\n\n        out(x: 1053, y: -143, name: \"output\") property(Bool) output_6a5a7d\n\n        instance(x: -93, y: -163, name: \"length of sublist\") length_1f8b9a root.Std_k98ojb.List.Length {}\n        instance(x: 188, y: -144) contains_4e2c3f root.Std_k98ojb.List.Contains {}\n        instance(x: 472, y: -143) and_5d7b6f root.Std_k98ojb.Logic.And {}\n        sublist_1f8d9a -> length_1f8b9a.list\n        list_7e0c4b -> contains_4e2c3f.list\n        sublist_1f8d9a -> contains_4e2c3f.item\n        and_5d7b6f.result -> output_6a5a7d\n        length_1f8b9a.length -> and_5d7b6f.left\n        contains_4e2c3f.is_contained -> and_5d7b6f.right\n    }\n\n    \n\n    instance(x: -84, y: 29) is_sublist_0f3d8c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_2a0d9f\n        in(x: -279, y: -150, name: \"list\") property(List) list_1b3e8c\n\n        out(x: 1007, y: -120, name: \"output\") property(Bool) output_5a4f6f\n\n        instance(x: -78, y: -149, name: \"sublist length\") length_9e0d2f root.Std_k98ojb.List.Length {}\n        instance(x: 210, y: -120) contains_7c1f8c root.Std_k98ojb.List.Contains {}\n        instance(x: 410, y: -122) not_3a4a5f root.Std_k98ojb.Logic.Not {}\n        sublist_2a0d9f -> length_9e0d2f.list\n        func() {\n            in(x: -29, y: -25, name: \"current\") property(List) current_7c8b1f\n\n            out(x: 706, y: 49, name: \"output\") property(Bool) output_e5a9e3\n\n            instance(x: 226, y: 56) slice_4d6c2f root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_7b8a1f root.Std_k98ojb.Logic.Equal {}\n            list_1b3e8c -> slice_4d6c2f.list\n            current_7c8b1f -> slice_4d6c2f.start\n            length_9e0d2f.length -> slice_4d6c2f.end\n            slice_4d6c2f.slice -> equal_7b8a1f.left\n            sublist_2a0d9f -> equal_7b8a1f.right\n            equal_7b8a1f.result -> output_e5a9e3\n        } -> contains_7c1f8c.handler\n        list_1b3e8c -> contains_7c1f8c.list\n        not_3a4a5f.input -> contains_7c1f8c.is_contained\n        not_3a4a5f.result -> output_5a4f6f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_9b2d0e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 30, name: \"sublist\") property(List) sublist_0f9a1e\n        in(x: -285, y: -150, name: \"list\") property(List) list_5b8d6c\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_0f9a1e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_5b8d6c -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        sublist_0f9a1e -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a5d3c8 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1226, y: 29, name: \"continue\") trigger() continue_e2c4ee\n        out(x: 1213, y: 148, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: -5, y: -120) for_9b7d8f root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_4c6c3d\") getter_4c6c3d = index\n        setter(x: 780, y: -125, name: \"setter_5a9f7e\") setter_5a9f7e = index\n        instance(x: 465, y: 5) ifexpression_1b8b1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_9b7d8f.items\n        execute_5c7d8b -> setter_5a9f7e.execute\n        0 -> setter_5a9f7e.new_value\n        getter_4c6c3d.value -> output_1e0a1f\n        for_9b7d8f.done -> continue_e2c4ee\n        setter_5a9f7e.continue -> for_9b7d8f.reset\n        for_9b7d8f.onItem -> ifexpression_1b8b1e.execute\n        for_9b7d8f.index -> ifexpression_1b8b1e.gen_0\n        for_9b7d8f.item -> ifexpression_1b8b1e.gen_1\n        ifexpression_1b8b1e.then -> setter_5a9f7e.execute\n        for_9b7d8f.index -> setter_5a9f7e.new_value\n        ifexpression_1b8b1e.else -> for_9b7d8f.next\n        setter_5a9f7e.continue -> continue_e2c4ee\n    }\n\n    \n\n    instance(x: -206, y: 12) find_missing_6f3b0e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e3f6a\n        in(x: -279, y: -223, name: \"execute\") trigger() execute_5b8d4c\n\n        out(x: 1020, y: -225, name: \"continue\") trigger() continue_7f1b2e\n        out(x: 1013, y: 63, name: \"output\") property(Number) output_6a7c1e\n\n        instance(x: 0, y: 0) for_5d8a4c root.Std_k98ojb.Std.For {}\n        getter(x: -110, y: 68, name: \"getter_e9f3af\") getter_e9f3af = index\n        setter(x: 720, y: -159, name: \"setter_1e7d6a\") setter_1e7d6a = index\n        instance(x: 465, y: -5) ifexpression_8b2c4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        getter(x: 720, y: 68, name: \"getter_1e7d6a\") getter_3f9f1f = index\n        setter(x: -0, y: -120, name: \"setter_1e7d6a\") setter_5b8c2f = index\n        instance(x: 0, y: 0) math_add_node root.Std_k98ojb.Math.Add {}\n        list_9e3f6a -> for_5d8a4c.items\n        execute_5b8d4c -> setter_5b8c2f.execute\n        1 -> setter_5b8c2f.new_value\n        getter_e9f3af.value -> output_6a7c1e\n        for_5d8a4c.done -> continue_7f1b2e\n        setter_5b8c2f.continue -> for_5d8a4c.reset\n        for_5d8a4c.onItem -> ifexpression_8b2c4c.execute\n        getter_3f9f1f.value -> ifexpression_8b2c4c.gen_0\n        for_5d8a4c.item -> ifexpression_8b2c4c.gen_1\n        ifexpression_8b2c4c.then -> setter_1e7d6a.execute\n        math_add_node.result -> setter_1e7d6a.new_value\n        0 -> math_add_node.first\n        for_5d8a4c.index -> math_add_node.second\n        ifexpression_8b2c4c.else -> for_5d8a4c.next\n        setter_1e7d6a.continue -> continue_7f1b2e\n    }\n\n    \n\n    instance(x: -198, y: 12) find_missing_9f3f0f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 1, name: \"list\") property(List) list_3e8b9f\n        in(x: -282, y: -240, name: \"execute\") trigger() execute_ea7d4c\n\n        out(x: 1040, y: -243, name: \"continue\") trigger() continue_5c1b6f\n        out(x: 1032, y: 18, name: \"output\") property(Number) output_3e8b9f\n\n        instance(x: 0, y: 0) for_4d9a9d root.Std_k98ojb.Std.For {}\n        getter(x: -1, y: 160, name: \"getter_7c6c5e\") getter_7c6c5e = index\n        setter(x: 676, y: -247, name: \"setter_8a3d9f\") setter_8a3d9f = index\n        instance(x: 465, y: -1) ifexpression_4b2b0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_3e8b9f -> for_4d9a9d.items\n        execute_ea7d4c -> setter_8a3d9f.execute\n        1 -> setter_8a3d9f.new_value\n        getter_7c6c5e.value -> output_3e8b9f\n        for_4d9a9d.done -> continue_5c1b6f\n        setter_8a3d9f.continue -> for_4d9a9d.reset\n        for_4d9a9d.onItem -> ifexpression_4b2b0f.execute\n        getter_7c6c5e.value -> ifexpression_4b2b0f.gen_1\n        for_4d9a9d.item -> ifexpression_4b2b0f.gen_0\n        ifexpression_4b2b0f.then -> setter_8a3d9f.execute\n        for_4d9a9d.index -> setter_8a3d9f.new_value\n        ifexpression_4b2b0f.else -> for_4d9a9d.next\n        setter_8a3d9f.continue -> continue_5c1b6f\n    }\n\n    \n\n    instance(x: -14, y: 63) find_missing_7e7c1f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1a3f8e\n        in(x: -282, y: -226, name: \"execute\") trigger() execute_9b2c5d\n\n        out(x: 1016, y: -230, name: \"continue\") trigger() continue_4a0b3e\n        out(x: 1007, y: 74, name: \"output\") property(Number) output_8f1b6f\n\n        instance(x: 0, y: 0) for_9c5d0f root.Std_k98ojb.Std.For {}\n        getter(x: -2, y: 80, name: \"getter_ea7e4e\") getter_ea7e4e = index\n        setter(x: 728, y: -156, name: \"setter_9c1d5f\") setter_9c1d5f = index\n        instance(x: 493, y: -105) ifexpression_a8b3ae root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_2bbadf -> for_9ed60a.items\n        elem_94ca57 -> ifexpression_6c15d4.gen_0\n        for_9ed60a.item -> ifexpression_6c15d4.gen_1\n        -1 -> setter_6a6081.new_value\n        execute_076885 -> setter_6a6081.execute\n        getter_cc0721.value -> index_fc05e7\n        for_9ed60a.done -> continue_9f5f84\n        setter_6a6081.continue -> for_9ed60a.reset\n        for_9ed60a.onItem -> ifexpression_6c15d4.execute\n        ifexpression_6c15d4.then -> setter_60cfcd.execute\n        for_9ed60a.index -> setter_60cfcd.new_value\n        setter_60cfcd.continue -> for_9ed60a.next\n        ifexpression_6c15d4.else -> for_9ed60a.next\n\n        instance(x: 0, y: 0) if_1f3e7b root.Std_k98ojb.Std.If {}\n        getter_ea7e4e.value -> if_1f3e7b.predicate\n        list_1a3f8e -> for_9c5d0f.items\n        execute_9b2c5d -> for_9c5d0f.trigger\n        1 -> setter_9c1d5f.new_value\n        if_1f3e7b.then -> setter_9c1d5f.execute\n        getter_ea7e4e.value -> output_8f1b6f\n        for_9c5d0f.onItem -> ifexpression_a8b3ae.execute\n        index + 1 -> ifexpression_a8b3ae.gen_0\n        for_9c5d0f.item -> ifexpression_a8b3ae.gen_1\n        ifexpression_a8b3ae.then -> continue_4a0b3e\n        ifexpression_a8b3ae.else -> setter_9c1d5f.execute\n        for_9c5d0f.index -> setter_9c1d5f.new_value\n        for_9c5d0f.done -> continue_4a0b3e\n    }\n\n    \n\n    instance(x: -211, y: 7) find_missing_8f6a2e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_9f8b3e\n        in(x: -296, y: -225, name: \"execute\") trigger() execute_1c7a0d\n\n        out(x: 1045, y: -223, name: \"continue\") trigger() continue_6f2a9e\n        out(x: 1038, y: 157, name: \"output\") property(Number) output_e4b3ef\n\n        instance(x: 0, y: 0) for_7d1c5f root.Std_k98ojb.Std.For {}\n        getter(x: -110, y: 166, name: \"getter_9a8e2f\") getter_9a8e2f = index\n        setter(x: 780, y: -125, name: \"setter_60cfcd\") setter_60cfcd = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_9f8b3e -> for_7d1c5f.items\n        execute_1c7a0d -> setter_60cfcd.execute\n        0 -> setter_60cfcd.new_value\n        getter_9a8e2f.value -> output_e4b3ef\n        for_7d1c5f.done -> continue_6f2a9e\n        setter_60cfcd.continue -> for_7d1c5f.reset\n        for_7d1c5f.onItem -> ifexpression_6c15d4.execute\n        for_7d1c5f.index -> ifexpression_6c15d4.gen_0\n        for_7d1c5f.item -> ifexpression_6c15d4.gen_1\n        1 -> ifexpression_6c15d4.gen_2\n        ifexpression_6c15d4.then -> setter_60cfcd.execute\n        ifexpression_6c15d4.else -> for_7d1c5f.next\n        for_7d1c5f.index -> setter_60cfcd.new_value\n        setter_60cfcd.continue -> continue_6f2a9e\n    }\n\n    \n\n    instance(x: -202, y: 8) find_missing_4b3b8c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 1, name: \"list\") property(List) list_5e9f8d\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_ea7c6b\n\n        out(x: 1213, y: -221, name: \"continue\") trigger() continue_4a1b2e\n        out(x: 1199, y: 155, name: \"output\") property(Number) output_5d8f1f\n\n        instance(x: 0, y: 0) for_3c7b8f root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_9a6e4c\") getter_9a6e4c = index\n        setter(x: -0, y: -0, name: \"setter_7d5f8c\") setter_7d5f8c = index\n        instance(x: 551, y: -120) ifexpression_3b2b1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9a6e4c\") getter_5d7c8c = index\n        instance(x: 704, y: -120) if_3b2b1f root.Std_k98ojb.Std.If {}\n        setter(x: 955, y: -120, name: \"setter_7d5f8c\") setter_9a6e4c = index\n        list_5e9f8d -> for_3c7b8f.items\n        execute_ea7c6b -> setter_7d5f8c.execute\n        0 -> setter_7d5f8c.new_value\n        getter_9a6e4c.value -> output_5d8f1f\n        for_3c7b8f.done -> continue_4a1b2e\n        setter_7d5f8c.continue -> for_3c7b8f.reset\n        for_3c7b8f.onItem -> ifexpression_3b2b1f.execute\n        getter_5d7c8c.value -> ifexpression_3b2b1f.gen_0\n        for_3c7b8f.item -> ifexpression_3b2b1f.gen_1\n        ifexpression_3b2b1f.then -> setter_9a6e4c.execute\n        for_3c7b8f.index -> setter_9a6e4c.new_value\n        ifexpression_3b2b1f.else -> for_3c7b8f.next\n        ifexpression_3b2b1f.value -> if_3b2b1f.predicate\n        if_3b2b1f.then -> continue_4a1b2e\n        if_3b2b1f.else -> setter_9a6e4c.continue\n    }\n\n    \n\n    instance(x: -11, y: 128) find_missing_7d5f8c root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 2, name: \"list\") property(List) list_9f6b1e\n        in(x: -279, y: -240, name: \"execute\") trigger() execute_ea7d8c\n\n        out(x: 1050, y: -239, name: \"continue\") trigger() continue_3f5e4e\n        out(x: 1041, y: 13, name: \"output\") property(Number) output_6b2b5f\n\n        instance(x: 0, y: 0) for_7c9a8d root.Std_k98ojb.Std.For {}\n        getter(x: -110, y: 130, name: \"getter_e1e3ea\") getter_e1e3ea = index\n        setter(x: 630, y: -249, name: \"setter_6f7c5a\") setter_6f7c5a = index\n        instance(x: 360, y: -20) ifexpression_9b2d0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 336, y: 159, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        ifexpression_9b2d0e.else -> continue_3f5e4e\n        getter_e1e3ea.value -> output_6b2b5f\n        list_9f6b1e -> for_7c9a8d.items\n        execute_ea7d8c -> setter_6f7c5a.execute\n        0 -> setter_6f7c5a.new_value\n        for_7c9a8d.done -> continue_3f5e4e\n        ifexpression_9b2d0e.then -> setter_9d4f1c.execute\n        for_7c9a8d.onItem -> ifexpression_9b2d0e.execute\n        for_7c9a8d.index -> ifexpression_9b2d0e.gen_0\n        getter_b280eb.value -> ifexpression_9b2d0e.gen_1\n        for_7c9a8d.item -> ifexpression_9b2d0e.gen_2\n        setter_6f7c5a.continue -> for_7c9a8d.reset\n        setter_9d4f1c.new_value -> for_7c9a8d.next\n        setter_9d4f1c.continue -> for_7c9a8d.next\n    }\n\n    \n\n    instance(x: -6, y: 117) find_missing_2e3b0f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 1, name: \"list\") property(List) list_9e3b8f\n        in(x: -280, y: -223, name: \"execute\") trigger() execute_7a2c5d\n\n        out(x: 1116, y: -225, name: \"continue\") trigger() continue_1a0c9f\n        out(x: 1123, y: 51, name: \"output\") property(Number) output_8e9b4e\n\n        instance(x: 0, y: 0) for_7d6c2e root.Std_k98ojb.Std.For {}\n        getter(x: -111, y: 59, name: \"getter_1f3a5f\") getter_1f3a5f = index\n        setter(x: 778, y: -125, name: \"setter_7c0e2d\") setter_7c0e2d = index\n        instance(x: 461, y: -6) ifexpression_e9b4ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        getter(x: 504, y: 166, name: \"getter_1f3a5f\") getter_8e7c0d = index\n        setter(x: -186, y: -246, name: \"setter_6a6081\") setter_4b9b8c = index\n        list_9e3b8f -> for_7d6c2e.items\n        execute_7a2c5d -> setter_4b9b8c.execute\n        0 -> setter_4b9b8c.new_value\n        getter_1f3a5f.value -> output_8e9b4e\n        for_7d6c2e.done -> continue_1a0c9f\n        setter_4b9b8c.continue -> for_7d6c2e.reset\n        for_7d6c2e.onItem -> ifexpression_e9b4ed.execute\n        getter_8e7c0d.value -> index\n        1 + index -> ifexpression_e9b4ed.gen_0\n        for_7d6c2e.item -> ifexpression_e9b4ed.gen_1\n        ifexpression_e9b4ed.else -> setter_7c0e2d.execute\n        for_7d6c2e.index -> setter_7c0e2d.new_value\n        ifexpression_e9b4ed.then -> continue_1a0c9f\n        setter_7c0e2d.continue -> continue_1a0c9f\n    }\n\n    \n\n    instance(x: -198, y: 8) find_missing_5a3b9c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 1, name: \"list\") property(List) list_5f3e8d\n        in(x: -310, y: -240, name: \"execute\") trigger() execute_9b2a7c\n\n        out(x: 1016, y: -244, name: \"continue\") trigger() continue_1f0f4e\n        out(x: 1008, y: 50, name: \"output\") property(Number) output_3d5f3e\n\n        instance(x: 0, y: 0) for_7a9c2b root.Std_k98ojb.Std.For {}\n        getter(x: -1, y: 130, name: \"getter_8b6f4e\") getter_8b6f4e = index\n        setter(x: 640, y: -157, name: \"setter_7a9c2b\") setter_7a9c2b = index\n        instance(x: 451, y: -80) ifexpression_e5d0ab root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_5f3e8d -> for_7a7c2b.items\n        execute_9b2a7c -> for_7a7c2b.trigger\n        -1 -> setter_7a9c2b.new_value\n        getter_8b6f4e.value -> output_3d5f3e\n        for_7a7c2b.done -> continue_1f0f4e\n        setter_7a9c2b.continue -> continue_1f0f4e\n        for_7a7c2b.onItem -> ifexpression_e5d0ab.execute\n        getter_8b6f4e.value -> ifexpression_e5d0ab.gen_0\n        for_7a7c2b.item -> ifexpression_e5d0ab.gen_1\n        ifexpression_e5d0ab.then -> setter_7a9c2b.execute\n        for_7a7c2b.index -> setter_7a9c2b.new_value\n        ifexpression_e5d0ab.else -> for_7a7c2b.next\n    }\n\n    \n\n    instance(x: -1, y: 76) find_missing_3f8e6c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3b9e\n        in(x: -282, y: -246, name: \"execute\") trigger() execute_7c2f6d\n\n        out(x: 595, y: 0, name: \"continue\") trigger() continue_8a5f8f\n        out(x: 594, y: 150, name: \"output\") property(Number) output_eb1e9f\n\n        instance(x: -0, y: -120, name: \"previous\") setter_3c2d6f = previous\n        instance(x: 321, y: -20, name: \"loop\") for_8a7b4d root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_9e1f5f\") getter_9e1f5f = previous\n        instance(x: 752, y: 93) ifexpression_6c2a4d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        setter(x: 679, y: -313, name: \"setter_9e5f8f\") setter_9e5f8f = previous\n        instance(x: 780, y: -125, name: \"missing\") setter_6a6081 = missing\n        ifexpression_6c2a4d.else -> continue_8a5f8f\n        getter_9e1f5f.value -> ifexpression_6c2a4d.gen_1\n        for_8a7b4d.index -> ifexpression_6c2a4d.gen_0\n        list_2bbadf -> for_8a7b4d.items\n        for_8a7b4d.onItem -> ifexpression_6c2a4d.execute\n        for_8a7b4d.done -> continue_8a5f8f\n        ifexpression_6c2a4d.then -> setter_9e5f8f.execute\n        for_8a7b4d.item -> ifexpression_6c2a4d.gen_2\n        for_8a7b4d.item -> setter_9e5f8f.new_value\n        execute_076885 -> previous_6a6081.execute\n        0 -> missing_6a6081.new_value\n        ifexpression_6c2a4d.then -> missing_6a6081.execute\n        ifexpression_6c2a4d.value -> missing_6a6081.new_value\n        setter_9e5f8f.continue -> for_8a7b4d.next\n        previous_6a6081.continue -> for_8a7b4d.reset\n        missing_6a6081.continue -> continue_8a5f8f\n        missing_6a6081.value -> output_eb1e9f\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_6e6bfd root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 18, name: \"input\") property(String) input_9e3f1d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8c7a5b\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_06d2e5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) ifexpression_4aeea6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == ' ' || x == ',' || x == '.'\"\n        }\n        list_instance(x: 92, y: -22) data_cc1b1b  = [\":\", \" \", \",\", \".\"]\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        input_9e3f1d -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            ifexpression_4aeea6.execute -> replace_06d2e5.execute\n            map_f2330d.index -> slice_3f3ee6.start\n            map_f2330d.index -> sub_f133b2.first\n            1 -> sub_f133b2.second\n            sub_f133b2.result -> slice_3f3ee6.end\n            data_cc1b1b -> slice_3f3ee6.list\n            slice_3f3ee6.slice -> replace_06d2e5.search\n            x_8ee839 -> ifexpression_4aeea6.gen_0\n            input_9e3e1d -> ifexpression_4aeea6.gen_1\n            data_cc1b1b -> length_4b8927.list\n            length_4b8927.length -> replace_06d2e5.replace\n            replace_06d2e5.output -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_8c7a5b\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_1f3d9e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -199, y: 0, name: \"input\") property(String) input_1d8b9f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5c3e6a\n\n        instance(x: 0, y: 0) replace_4a7f0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_9d8b9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_5c3e6a root.Std_k98ojb.Strings.Replace {}\n        input_1d8b9f -> replace_4a7f0f.input\n        \" \" -> replace_4a7f0f.search\n        \":\" -> replace_4a7f0f.replace\n        replace_4a7f0f.output -> replace_9d8b9f.input\n        \",\" -> replace_9d8b9f.search\n        \":\" -> replace_9d8b9f.replace\n        replace_9d8b9f.output -> replace_5c3e6a.input\n        \".\" -> replace_5c3e6a.search\n        \":\" -> replace_5c3e6a.replace\n        replace_5c3e6a.output -> output_5c3e6a\n    }\n\n    \n\n    instance(x: -137, y: 45) replace_spaces_commas_dots_9f1b4d root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -232, y: 0, name: \"string\") property(String) string_1f2b8a\n\n        out(x: 540, y: -2, name: \"result\") property(String) result_3e7d6c\n\n        instance(x: 0, y: 1) replace_5a9b4e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8f3f1c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d6d7ed root.Std_k98ojb.Strings.Replace {}\n        string_1f2b8a -> replace_5a9b4e.input\n        \" \" -> replace_5a9b4e.search\n        \":\" -> replace_5a9b4e.replace\n        replace_5a9b4e.output -> replace_8f3f1c.input\n        \",\" -> replace_8f3f1c.search\n        \":\" -> replace_8f3f1c.replace\n        replace_8f3f1c.output -> replace_d6d7ed.input\n        \".\" -> replace_d6d7ed.search\n        \":\" -> replace_d6d7ed.replace\n        replace_d6d7ed.output -> result_3e7d6c\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_spaces_commas_dots_9f8b1a root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5f9c7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a3d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d6e2ca root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5f9c7e.input\n        \" \" -> replace_5f9c7e.search\n        \":\" -> replace_5f9c7e.replace\n        replace_5f9c7e.output -> replace_8a3d4f.input\n        \",\" -> replace_8a3d4f.search\n        \":\" -> replace_8a3d4f.replace\n        replace_8a3d4f.output -> replace_d6e2ca.input\n        \".\" -> replace_d6e2ca.search\n        \":\" -> replace_d6e2ca.replace\n        replace_d6e2ca.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9c8d7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1f2d6e\n\n        out(x: 500, y: 0, name: \"output\") property(String) output_7a3c4b\n\n        instance(x: 94, y: 0) replace_5e9c0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 0) replace_2d8b1e root.Std_k98ojb.Strings.Replace {}\n        input_1f2d6e -> replace_5e9c0f.input\n        \" \" -> replace_5e9c0f.search\n        \":\" -> replace_5e9c0f.replace\n        replace_5e9c0f.output -> replace_2d8b1e.input\n        \",\" -> replace_2d8b1e.search\n        \":\" -> replace_2d8b1e.replace\n        \".\" -> replace_2d8b1e.search\n        \":\" -> replace_2d8b1e.replace\n        replace_2d8b1e.output -> output_7a3c4b\n    }\n\n    \n\n    instance(x: -80, y: 45) replace_9f6c0e root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 94, y: 1) replace_3e6b9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -71) replace_7a5d8f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e6b9c.input\n        \" \" -> replace_3e6b9c.search\n        \":\" -> replace_3e6b9c.replace\n        replace_3e6b9c.output -> replace_7a5d8f.input\n        \",\" -> replace_7a5d8f.search\n        \":\" -> replace_7a5d8f.replace\n        \".\" -> replace_7a5d8f.search\n        \":\" -> replace_7a5d8f.replace\n        replace_7a5d8f.output -> output_0\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_1e9b2c root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 0, name: \"input\") property(String) input_8f1e9a\n\n        out(x: 529, y: -2, name: \"output\") property(String) output_5c7d6b\n\n        instance(x: 0, y: 1) replace_4c9f8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a3c7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_5d2b1d root.Std_k98ojb.Strings.Replace {}\n        input_8f1e9a -> replace_4c9f8e.input\n        \" \" -> replace_4c9f8e.search\n        \":\" -> replace_4c9f8e.replace\n        replace_4c9f8e.output -> replace_3a3c7c.input\n        \",\" -> replace_3a3c7c.search\n        \":\" -> replace_3a3c7c.replace\n        replace_3a3c7c.output -> replace_5d2b1d.input\n        \".\" -> replace_5d2b1d.search\n        \":\" -> replace_5d2b1d.replace\n        replace_5d2b1d.output -> output_5c7d6b\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_spaces_commas_dots_9e3f0a root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -199, y: 0, name: \"input\") property(String) input_1f2b9a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8c5d\n\n        instance(x: 94, y: -105) replace_4a3a6d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 9) replace_1f8a2f root.Std_k98ojb.Strings.Replace {}\n        input_1f2b9a -> replace_4a3a6d.input\n        \" \" -> replace_4a3a6d.search\n        \":\" -> replace_4a3a6d.replace\n        replace_4a3a6d.output -> replace_1f8a2f.input\n        \",\" -> replace_1f8a2f.search\n        \":\" -> replace_1f8a2f.replace\n        \".\" -> replace_1f8a2f.search\n        \":\" -> replace_1f8a2f.replace\n        replace_1f8a2f.output -> output_7e8c5d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_6b9d4f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -232, y: 2, name: \"input\") property(String) input_1d0a9f\n\n        out(x: 532, y: 0, name: \"output\") property(String) output_7c3e8b\n\n        instance(x: 0, y: 1) replace_4e6f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d9a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_3c8c9c root.Std_k98ojb.Strings.Replace {}\n        input_1d0a9f -> replace_4e6f2f.input\n        \" \" -> replace_4e6f2f.search\n        \":\" -> replace_4e6f2f.replace\n        replace_4e6f2f.output -> replace_5d9a2f.input\n        \",\" -> replace_5d9a2f.search\n        \":\" -> replace_5d9a2f.replace\n        replace_5d9a2f.output -> replace_3c8c9c.input\n        \".\" -> replace_3c8c9c.search\n        \":\" -> replace_3c8c9c.replace\n        replace_3c8c9c.output -> output_7c3e8b\n    }\n\n    \n\n    instance(x: 101, y: -17) replace_1d0a9f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 2, name: \"input\") property(String) input_1f0a9e\n\n        out(x: 505, y: -68, name: \"output\") property(String) output_5c8d7b\n\n        instance(x: 94, y: -105) replace_3f4b2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) replace_9a0e6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 93, y: -1) replace_d8f7d5 root.Std_k98ojb.Strings.Replace {}\n        input_1f0a9e -> replace_3f4b2c.input\n        \" \" -> replace_3f4b2c.search\n        \":\" -> replace_3f4b2c.replace\n        replace_3f4b2c.output -> replace_9a0e6f.input\n        \",\" -> replace_9a0e6f.search\n        \":\" -> replace_9a0e6f.replace\n        replace_9a0e6f.output -> replace_d8f7d5.input\n        \".\" -> replace_d8f7d5.search\n        \":\" -> replace_d8f7d5.replace\n        replace_d8f7d5.output -> output_5c8d7b\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_1a3e4f root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 555, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_4b1e7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: -3) length_8f9a4f root.Std_k98ojb.List.Length {}\n        instance(x: 479, y: 5) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 702, y: 1) equal_7c7e3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 919, y: -4) for_9a5b8c root.Std_k98ojb.Std.For {}\n        instance(x: 1152, y: 0) ifexpression_c6d1f9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 434, y: 17, name: \"getter_8c3e5a\") getter_8c3e5a = previous\n        setter(x: 779, y: -45, name: \"setter_e9b1f7\") setter_e9b1f7 = previous\n        instance(x: 422, y: -20) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        getter(x: -3, y: -29, name: \"getter_e9b1f7\") getter_e9b1f7 = previous\n        setter(x: 15, y: -61, name: \"setter_8c3e5a\") setter_8c3e5a = previous\n        ifexpression_c6d1f9.else -> for_9a5b8c.next\n        ifexpression_c6d1f9.value -> output_5c7d6b\n        ifexpression_c6d1f9.then -> setter_e9b1f7.execute\n        characters_4b1e7c.characters -> for_9a5b8c.items\n        for_9a5b8c.item -> getat_6d0f2f.list\n        0 -> getat_6d0f2f.index\n        getat_6d0f2f.itemAtIndex -> equal_7c7e3c.left\n        getter_e9b1f7.value -> equal_7c7e3c.right\n        for_9a5b8c.onItem -> ifexpression_c6d1f9.execute\n        for_9a5b8c.done -> for_9a5b8c.next\n        characters_4b1e7c.characters -> length_8f9a4f.list\n        for_9a5b8c.index -> getat_6d0f2f.index\n        for_9a5b8c.index -> ifexpression_c6d1f9.gen_0\n        getter_8c3e5a.value -> ifexpression_c6d1f9.gen_1\n        equal_7c7e3c.result -> ifexpression_c6d1f9.gen_2\n        for_9a5b8c.item -> setter_e9b1f7.new_value\n        getat_6d0f2f.list -> getter_8c3e5a.list\n        string_3f8a9e -> characters_4b1e7c.input\n        ifexpression_c6d1f9.then -> setter_8c3e5a.execute\n        for_9a5b8c.item -> getat_6d0f2f.list\n        getter_e9b1f7.value -> setter_8c3e5a.new_value\n        getat_6d0f2f.itemAtIndex -> setter_8c3e5a.new_value\n    }\n\n    \n\n    instance(x: 30, y: -19) check_same_4c1d6f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c5e9d4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: -3) reduce_8a7c6f root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -76, y: 46, name: \"current\") property(String) current_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_1\n\n                out(x: 382, y: 19, name: \"out\") property(String) out_1\n\n                instance(x: 106, y: 17) equal_2e3b5c root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_2e3b5c.left\n                accumulator -> equal_2e3b5c.right\n                equal_2e3b5c.result -> out_1\n            }\n        }\n        instance(x: 0, y: -6) getat_c7a9d8 root.Std_k98ojb.List.GetAt {}\n        characters_c5e9d4.characters -> reduce_8a7c6f.items\n        string_1 -> characters_c5e9d4.input\n        reduce_8a7c6f.result -> output_1\n        getat_c7a9d8.list -> reduce_8a7c6f.initialValue\n        0 -> getat_c7a9d8.index\n    }\n\n    \n\n    instance(x: -11, y: 12) check_same_5b2e4e root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 555, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3a8c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 280, y: -1) length_5e6d7c root.Std_k98ojb.List.Length {}\n        instance(x: 500, y: 0) getat_4f3f1c root.Std_k98ojb.List.GetAt {}\n        instance(x: 750, y: 0) equal_9a2b1c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1000, y: -1) reduce_7e8d5f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        string_1 -> characters_3a8c9f.input\n        characters_3a8c9f.characters -> length_5e6d7c.list\n        0 -> getat_4f3f1c.index\n        characters_3a8c9f.characters -> getat_4f3f1c.list\n        characters_3a8c9f.characters -> reduce_7e8d5f.items\n        length_5e6d7c.length -> equal_9a2b1c.left\n        1 -> equal_9a2b1c.right\n        getat_4f3f1c.itemAtIndex -> reduce_7e8d5f.initialValue\n        equal_9a2b1c.result -> output_1\n        reduce_7e8d5f.output -> output_1\n    }\n\n    \n\n    instance(x: -10, y: 40) check_same_4d6d3c root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_3f9a6e\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_7c8d4b\n\n        instance(x: 0, y: 0) characters_c5a2f9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -318, y: 0) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 188, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_c5a2f9.characters -> length_6e87f2.list\n        string_3f9a6e -> characters_c5a2f9.input\n        length_6e87f2.length -> getat_ce2a48.index\n        1 -> equal_f89569.right\n        characters_c5a2f9.characters -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> equal_f89569.left\n        equal_f89569.result -> output_7c8d4b\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_1e6f0f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 593, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3e4f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        characters_3e4f9c.characters -> contains_d42dce.list\n        characters_3e4f9c.characters -> firstitem_870503.list\n        firstitem_870503.item -> contains_d42dce.contains\n        input_1 -> characters_3e4f9c.input\n        contains_d42dce.result -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_5e7f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) setintersection_9a4d3f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 500, y: -2) length_1a6f7e root.Std_k98ojb.List.Length {}\n        characters_5e7f8c.characters -> setintersection_9a4d3f.left\n        characters_5e7f8c.characters -> setintersection_9a4d3f.right\n        1 -> length_1a6f7e.list\n        setintersection_9a4d3f.intersect -> length_1a6f7e.list\n        string_0 -> characters_5e7f8c.input\n        length_1a6f7e.length -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_2b3d9f root.main.check_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_3a9d8e\n\n        out(x: 560, y: 1, name: \"output\") property(Bool) output_eb7f6c\n\n        instance(x: 0, y: 0) characters_2f4f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -3) length_5e1d8a root.Std_k98ojb.List.Length {}\n        instance(x: 490, y: 0) getat_e9a7ec root.Std_k98ojb.List.GetAt {}\n        instance(x: 707, y: 2) equal_6f4c3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 927, y: -1) for_d8d5e0 root.Std_k98ojb.Std.For {}\n        instance(x: 1149, y: 0) ifexpression_ba7c1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 633, y: 19, name: \"getter_8d5e2\") getter_8d5e2 = previous\n        setter(x: 1051, y: -29, name: \"setter_9f4c3\") setter_9f4c3 = previous\n        instance(x: 1267, y: 0) if_6a8b7c root.Std_k98ojb.Std.If {}\n        getter(x: -0, y: -21, name: \"getter_9f4c3\") getter_9f4c3 = previous\n        setter(x: 1051, y: -29, name: \"setter_ba7c1\") setter_ba7c1 = previous\n        instance(x: 1267, y: 0) if_6a8b7c root.Std_k98ojb.Std.If {}\n        getter(x: -0, y: -21, name: \"getter_ba7c1\") getter_ba7c1 = previous\n        setter(x: 1051, y: -29, name: \"setter_6a8b7\") setter_6a8b7 = previous\n\n        string_3a9d8e -> characters_2f4f8c.input\n        characters_2f4f8c.characters -> for_d8d5e0.items\n        length_5e1d8a.list -> getat_e9a7ec.list\n        0 -> getat_e9a7ec.index\n        getat_e9a7ec.itemAtIndex -> setter_9f4c3.new_value\n        characters_2f4f8c.characters -> equal_6f4c3c.left\n        for_d8d5e0.item -> equal_6f4c3c.right\n        getter_8d5e2.value -> equal_6f4c3c.gen_1\n        equal_6f4c3c.result -> ifexpression_ba7c1f.gen_2\n        for_d8d5e0.index -> ifexpression_ba7c1f.gen_0\n        getter_9f4c3.value -> ifexpression_ba7c1f.gen_1\n        ifexpression_ba7c1f.else -> setter_ba7c1.continue\n        ifexpression_ba7c1f.then -> setter_ba7c1.execute\n        for_d8d5e0.onItem -> ifexpression_ba7c1f.execute\n        ifexpression_ba7c1f.value -> getter_9f4c3.new_value\n        ifexpression_ba7c1f.value -> output_eb7f6c\n        for_d8d5e0.done -> setter_ba7c1.continue\n        for_d8d5e0.item -> setter_9f4c3.new_value\n        getter_9f4c3.value -> if_6a8b7c.predicate\n        if_6a8b7c.then -> setter_6a8b7.execute\n        if_6a8b7c.else -> for_d8d5e0.next\n        ifexpression_ba7c1f.value -> getter_6a8b7.new_value\n        if_6a8b7c.value -> output_eb7f6c\n        setter_9f4c3.continue -> for_d8d5e0.reset\n    }\n\n    \n\n    instance(x: 18, y: -10) check_same_2e4f7c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3c9d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) setintersection_5e6a4f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 529, y: 2) equal_0f7c7f root.Std_k98ojb.Logic.Equal {}\n        characters_3c9d8f.characters -> setintersection_5e6a4f.left\n        characters_3c9d8f.characters -> setintersection_5e6a4f.right\n        1 -> equal_0f7c7f.right\n        setintersection_5e6a4f.intersect -> equal_0f7c7f.left\n        string_1 -> characters_3c9d8f.input\n        equal_0f7c7f.result -> output_1\n    }\n\n    \n\n    instance(x: -11, y: 10) check_same_f5a6e4 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 1, name: \"string\") property(String) string_3f8d5a\n\n        out(x: 593, y: 0, name: \"output\") property(Bool) output_7c2e9b\n\n        instance(x: 0, y: 0) characters_4a1f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 265, y: 1) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3f8d5a -> characters_4a1f6f.input\n        characters_4a1f6f.characters -> contains_d42dce.list\n        getat_ce2a48.itemAtIndex -> equal_f89569.right\n        0 -> getat_ce2a48.index\n        characters_4a1f6f.characters -> getat_ce2a48.list\n        contains_d42dce.is_contained -> equal_f89569.left\n        equal_f89569.result -> output_7c2e9b\n    }\n\n    \n\n    instance(x: -53, y: 52) is_same_3e1b4f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 554, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 530, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_2e1444.output -> contains_d42dce.list\n        \"a\" -> contains_d42dce.item\n        input_0 -> characters_2e1444.input\n        characters_2e1444.output -> length_6e87f2.list\n        contains_d42dce.result -> is_same\n        length_6e87f2.length -> is_same\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.is_same {}\n\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d0c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9e7f.gen_0\n        pow_4c9e7f.result -> sum_365f7b\n        data_cde0dc -> pow_4c9e7f.second\n        expression_2d6da6.result -> pow_4c9e7f.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c0d4e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9c0d4e.second\n        expression_2d6da6.result -> pow_9c0d4e.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9c0d4e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4e8d0c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4e8d0c.second\n        expression_2d6da6.result -> pow_4e8d0c.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4e8d0c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 10, name: \"size\") property(Number) size_8a0f9e\n\n        out(x: 1066, y: 12, name: \"surface_area\") property(Number) surface_area_b3c1d4\n\n        instance(x: 16, y: -7) mul_5b2a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 332, y: 55) data_8f0e6c  = 6\n        instance(x: 14, y: 53) pow_1d9a9c root.Std_k98ojb.Math.Pow {}\n        mul_5b2a4.result -> surface_area_b3c1d4\n        size_8a0f9e -> mul_5b2a4.first\n        data_8f0e6c -> mul_5b2a4.second\n        size_8a0f9e -> pow_1d9a9c.x\n        2 -> pow_1d9a9c.y\n        pow_1d9a9c.result -> mul_5b2a4.first\n    }\n\n    \n\n    instance(x: -6, y: -16) surface_area_cube_8f3e7 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"size\") property(Number) size_1a9f5e\n\n        out(x: 600, y: 0, name: \"surface_area\") property(Number) surface_area_7b2d6c\n\n        instance(x: 100, y: -10) mul_4e8c1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 300, y: -20) mul_5f3a1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 500, y: -30) mul_6d7b2 root.Std_k98ojb.Math.Mul {}\n        size_1a9f5e -> mul_4e8c1.first\n        size_1a9f5e -> mul_4e8c1.second\n        mul_4e8c1.result -> mul_5f3a1.first\n        6 -> mul_5f3a1.second\n        mul_5f3a1.result -> surface_area_7b2d6c\n    }\n\n    \n\n    instance(x: -300, y: 0) surface_area_cube_8e9f7 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -108, y: 11, name: \"size\") property(Number) size_9f5e8a\n\n        out(x: 1042, y: 14, name: \"surface_area\") property(Number) surface_area_1b3c0d\n\n        instance(x: 16, y: -7) mul_4e6f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 19, y: 54) pow_2a5b8a root.Std_k98ojb.Math.Pow {}\n        instance(x: 20, y: 110) mul_1c9d7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: 167) mul_4e0c3c root.Std_k98ojb.Math.Mul {}\n        size_9f5e8a -> pow_2a5b8a.x\n        2 -> pow_2a5b8a.y\n        pow_2a5b8a.result -> mul_1c9d7f.first\n        6 -> mul_1c9d7f.second\n        mul_1c9d7f.result -> mul_4e0c3c.first\n        size_9f5e8a -> mul_4e0c3c.second\n        mul_4e0c3c.result -> surface_area_1b3c0d\n    }\n\n    \n\n    instance(x: 18, y: -16) surface_area_cube_7e6f2e root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"size\") property(Number) size_9e6f1a\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_7c8d3b\n\n        instance(x: -200, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_9e6f1a -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_7c8d3b\n    }\n\n    \n\n    instance(x: -100, y: 0) surface_area_cube_5a4b2c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_1f9d6e\n\n        out(x: 156, y: 63, name: \"surface_area\") property(Number) surface_area_7a8c5b\n\n        instance(x: 10, y: -3) mul_2f0e1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 9, y: 55) pow_e4d6b9 root.Std_k98ojb.Math.Pow {}\n        instance(x: 8, y: 115) mul_5a7c7f root.Std_k98ojb.Math.Mul {}\n        size_1f9d6e -> pow_e4d6b9.x\n        2 -> pow_e4d6b9.y\n        pow_e4d6b9.result -> mul_2f0e1c.first\n        6 -> mul_2f0e1c.second\n        mul_2f0e1c.result -> mul_5a7c7f.first\n        size_1f9d6e -> mul_5a7c7f.second\n        mul_5a7c7f.result -> surface_area_7a8c5b\n    }\n\n    \n\n    instance(x: 10, y: -3) surface_area_cube_2c0b9c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 11, name: \"size\") property(Number) size_8f1e9a\n\n        out(x: 1076, y: 14, name: \"surface_area\") property(Number) surface_area_b3c7d4\n\n        instance(x: 16, y: -10) mul_2b0b5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 333, y: 41) data_e9f8a1  = 6\n        instance(x: 13, y: 39) pow_7e3d0c root.Std_k98ojb.Math.Pow {}\n        size_8f1e9a -> mul_2b0b5c.first\n        data_e9f8a1 -> mul_2b0b5c.second\n        size_8f1e9a -> pow_7e3d0c.x\n        2 -> pow_7e3d0c.y\n        mul_2b0b5c.result -> surface_area_b3c7d4\n        pow_7e3d0c.result -> mul_2b0b5c.first\n    }\n\n    \n\n    instance(x: -10, y: 24) surface_area_cube_1a9f6f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 20, name: \"size\") property(Number) size_1a8f5e\n\n        out(x: 1160, y: 22, name: \"surface_area\") property(Number) surface_area_7b9d6c\n\n        instance(x: 18, y: -2) mul_f4e8f3 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 306, y: 76) data_ea5c0d  = 6\n        instance(x: 14, y: 74) pow_1a9c9f root.Std_k98ojb.Math.Pow {}\n        size_1a8f5e -> mul_f4e8f3.first\n        data_ea5c0d -> mul_f4e8f3.second\n        size_1a8f5e -> pow_1a9c9f.x\n        2 -> pow_1a9c9f.y\n        mul_f4e8f3.result -> surface_area_7b9d6c\n        pow_1a9c9f.result -> mul_f4e8f3.first\n    }\n\n    \n\n    instance(x: -12, y: 0) surface_area_cube_5c7c2f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -108, y: 10, name: \"size\") property(Number) size_1f0d9e\n\n        out(x: 1166, y: 11, name: \"surface_area\") property(Number) surface_area_7c8b5a\n\n        instance(x: 12, y: -3) mul_4b2b2a root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 310, y: 88) data_1f0d9e  = 6\n        instance(x: 13, y: 86) pow_5c7c0c root.Std_k98ojb.Math.Pow {}\n        size_1f0d9e -> mul_4b2b2a.first\n        data_1f0d9e -> mul_4b2b2a.second\n        size_1f0d9e -> pow_5c7c0c.x\n        2 -> pow_5c7c0c.y\n        pow_5c7c0c.result -> mul_4b2b2a.first\n        mul_4b2b2a.result -> surface_area_7c8b5a\n    }\n\n    \n\n    instance(x: -24, y: 22) surface_area_cube_9e1f6d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0d1e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a6cea7\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9f1e8c root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_2d7a6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_2d7a6f.first\n        side_length_a6cea7 -> mul_2d7a6f.second\n        mul_2d7a6f.result -> add_88bb8a.first\n        1 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_9f0d1e -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_9f1e8c.execute_9f0d1e\n        surface_area_cube_9f1e8c.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_9f1e8c.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        side_length_a6cea7 -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9f1e8c root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0d8e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_7c1a4e\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_adfa16.second\n        side_length_6b655b -> mul_adfa16.first\n        mul_adfa16.result -> add_88bb8a.first\n        2 -> mul_547f34.second\n        side_length_6b655b -> mul_547f34.first\n        mul_547f34.result -> surface_area_cube_96023e.side_length_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_7c1a4e\n        execute_9f0d8e -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_9f0d8e\n        surface_area_cube_96023e.continue_7c1a4e -> setter_375321.execute\n        surface_area_cube_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_7c1a4e\n        getter_38583a.value -> output_732a8a\n        side_length_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> mul_547f34.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 157, name: \"list\") property(List) list_9a3f1e\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7b8d6c\n\n        instance(x: 201, y: 126) sub_5e2a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f9f3aa root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_1a8c6e root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_9f7d5c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_e1e6a8 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f9f3aa.max -> firstitem_1a8c6e.list\n        minlist_9f7d5c.min -> firstitem_e1e6a8.list\n        list_9a3f1e -> maxlist_f9f3aa.list\n        list_9a3f1e -> minlist_9f7d5c.list\n        firstitem_1a8c6e.item -> sub_5e2a0c.first\n        firstitem_e1e6a8.item -> sub_5e2a0c.second\n        sub_5e2a0c.result -> output_7b8d6c\n    }\n\n    \n\n    instance(x: -66, y: 10) diff_max_min_9f3c1f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 154, name: \"list\") property(List) list_1a8f3e\n\n        out(x: 544, y: 145, name: \"output\") property(Number) output_7c2d5b\n\n        instance(x: 532, y: 147) sub_6a9f0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f3e8d1 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_9f5c6a root.Std_k98ojb.List.Min {}\n        list_1a8f3e -> max_f3e8d1\n        list_1a8f3e -> min_9f5c6a\n        max_f3e8d1.max -> sub_6a9f0c.first\n        min_9f5c6a.min -> sub_6a9f0c.second\n        sub_6a9f0c.result -> output_7c2d5b\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f4e3e8 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 158, name: \"list\") property(List) list_0f9d8e\n\n        out(x: 543, y: 137, name: \"output\") property(Number) output_eb7a6c\n\n        instance(x: 186, y: 135) sub_1b2c3e root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 155) max_4d9f0c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -75) min_d8a6ea root.Std_k98ojb.List.Min {}\n        list_0f9d8e -> max_4d9f0c.list\n        list_0f9d8e -> min_d8a6ea.list\n        max_4d9f0c.max -> sub_1b2c3e.first\n        min_d8a6ea.min -> sub_1b2c3e.second\n        sub_1b2c3e.result -> output_eb7a6c\n    }\n\n    \n\n    instance(x: 49, y: -64) diff_max_min_5f0d9e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9a2f1e\n\n        out(x: 550, y: 5, name: \"output\") property(Number) output_7b3c4d\n\n        instance(x: 0, y: 0) sub_8e7b1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -280, y: 146) max_2a9c5f root.Std_k98ojb.List.Max {}\n        instance(x: -279, y: -121) min_4d3c0c root.Std_k98ojb.List.Min {}\n        list_9a2f1e -> max_2a9c5f.list\n        list_9a2f1e -> min_4d3c0c.list\n        max_2a9c5f.max -> sub_8e7b1f.first\n        min_4d3c0c.min -> sub_8e7b1f.second\n        sub_8e7b1f.result -> output_7b3c4d\n    }\n\n    \n\n    instance(x: -57, y: 11) diff_max_min_e5a6ed root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 156, name: \"list\") property(List) list_0d9b3f\n\n        out(x: 547, y: 140, name: \"output\") property(Number) output_1e7c5a\n\n        instance(x: 198, y: 141) sub_6e8b4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -103, y: 156) max_3d0f9c root.Std_k98ojb.List.Max {}\n        instance(x: -102, y: 355) min_7a2b1f root.Std_k98ojb.List.Min {}\n        list_0d9b3f -> max_3d0f9c.list\n        list_0d9b3f -> min_7a2b1f.list\n        max_3d0f9c.max -> sub_6e8b4e.first\n        min_7a2b1f.min -> sub_6e8b4e.second\n        sub_6e8b4e.result -> output_1e7c5a\n    }\n\n    \n\n    instance(x: 49, y: 11) diff_max_min_3d0a8e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -318, y: 521, name: \"Max list\") max_f9f1d8 root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_7a2e4f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_f9f1d8.max -> sub_852f2e.first\n        min_7a2e4f.min -> sub_852f2e.second\n        list_0b075e -> max_f9f1d8.list\n        list_0b075e -> min_7a2e4f.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 157, name: \"list\") property(List) list_1f0b8e\n\n        out(x: 800, y: 147, name: \"output\") property(Number) output_ea2d7c\n\n        instance(x: 532, y: 147) sub_6c9a5c root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f1e3ef root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_7a8c6f root.Std_k98ojb.List.Min {}\n        list_1f0b8e -> max_f1e3ef.list\n        list_1f0b8e -> min_7a8c6f.list\n        max_f1e3ef.max -> sub_6c9a5c.first\n        min_7a8c6f.min -> sub_6c9a5c.second\n        sub_6c9a5c.result -> output_ea2d7c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_3b1e4f root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 154, name: \"list\") property(List) list_1a8b9f\n\n        out(x: 542, y: 145, name: \"output\") property(Number) output_5e7c0d\n\n        instance(x: 452, y: 147) sub_6f3a8c root.Std_k98ojb.Math.Sub {}\n        instance(x: -38, y: 26, name: \"Max value\") max_9b1bc3 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_d831ca root.Std_k98ojb.List.Min {}\n        list_1a8b9f -> max_9b1bc3.list\n        list_1a8b9f -> min_d831ca.list\n        max_9b1bc3.max -> sub_6f3a8c.first\n        min_d831ca.min -> sub_6f3a8c.second\n        sub_6f3a8c.result -> output_5e7c0d\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 158, name: \"list\") property(List) list_9a3b8f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_1c2d7e\n\n        instance(x: 188, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it == max(list)\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == min(list)\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.result -> firstitem_870503.list\n        list_9a3b8f -> maxlist_f3b46d.list\n        minlist_4d4556.result -> firstitem_3078c6.list\n        list_9a3b8f -> minlist_4d4556.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_1c2d7e\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_6a3f8e\n\n        out(x: 594, y: 1, name: \"output\") property(Number) output_e5b9d7\n\n        instance(x: 0, y: 0) sub_2c4a3c root.Std_k98ojb.Math.Sub {}\n        instance(x: -284, y: -116) max_6f8e2f root.Std_k98ojb.List.Max {}\n        instance(x: -283, y: 117) min_7d1d0c root.Std_k98ojb.List.Min {}\n        list_6a3f8e -> max_6f8e2f.list\n        list_6a3f8e -> min_7d1d0c.list\n        max_6f8e2f.max -> sub_2c4a3c.first\n        min_7d1d0c.min -> sub_2c4a3c.second\n        sub_2c4a3c.result -> output_e5b9d7\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_8e9f6e root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 20, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_9b7a6c\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -106, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_5e8f1d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_9b7a6c\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9e6d5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 10, name: \"input\") property(Number) input_1f0a5e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_9c8d6b\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_4a7c2f\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e0e5c\n\n        instance(x: -92, y: 62) modulo_6b8d8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_f7a3f9 root.Std_k98ojb.Logic.Equal {}\n        input_1f0a5e -> modulo_6b8d8c.value\n        2 -> modulo_6b8d8c.divisor\n        modulo_6b8d8c.result -> equal_f7a3f9.left\n        0 -> equal_f7a3f9.right\n        equal_f7a3f9.result -> output_1e0e5c\n        execute_9c8d6b -> continue_4a7c2f\n    }\n\n    \n\n    instance(x: -55, y: 529) is_even_7c1c8f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 10, name: \"input\") property(Number) input_9e6a8f\n        in(x: -460, y: -117, name: \"execute\") trigger() execute_eb7d5c\n\n        out(x: 1182, y: -115, name: \"continue\") trigger() continue_3b1b4f\n        out(x: 1190, y: 77, name: \"output\") property(Bool) output_f9a6e8\n\n        instance(x: 1075, y: 69) ifexpression_e2c7d8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_eb7d5c -> ifexpression_e2c7d8.execute\n        input_9e6a8f -> ifexpression_e2c7d8.gen_0\n        ifexpression_e2c7d8.value -> output_f9a6e8\n        ifexpression_e2c7d8.then -> continue_3b1b4f\n        ifexpression_e2c7d8.else -> continue_3b1b4f\n    }\n\n    \n\n    instance(x: -173, y: 11) is_even_5a9e1c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_9f1e6d\n        in(x: -465, y: -236, name: \"execute\") trigger() execute_7a3c4b\n\n        out(x: 1228, y: 2, name: \"output\") property(Bool) output_0a5f5e\n        out(x: 1219, y: 144, name: \"continue\") trigger() continue_1d6c1e\n\n        instance(x: -65, y: 4) modulo_8b3a7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 328, y: 2) equal_9f5b0c root.Std_k98ojb.Logic.Equal {}\n        input_9f1e6d -> modulo_8b3a7c.value\n        2 -> modulo_8b3a7c.divisor\n        modulo_8b3a7c.result -> equal_9f5b0c.left\n        0 -> equal_9f5b0c.right\n        equal_9f5b0c.result -> output_0a5f5e\n        execute_7a3c4b -> continue_1d6c1e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_f2f7a8 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_1f9a5e\n        in(x: -454, y: -121, name: \"execute\") trigger() execute_7c8b6d\n\n        out(x: 1204, y: -119, name: \"continue\") trigger() continue_3f2a9e\n        out(x: 1220, y: 64, name: \"output\") property(Bool) output_e1b5af\n\n        instance(x: 1046, y: 60) ifexpression_8d7c4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_7c8b6d -> ifexpression_8d7c4c.execute\n        input_1f9a5e -> ifexpression_8d7c4c.gen_0\n        ifexpression_8d7c4c.value -> output_e1b5af\n        ifexpression_8d7c4c.then -> continue_3f2a9e\n        ifexpression_8d7c4c.else -> continue_3f2a9e\n    }\n\n    \n\n    instance(x: -292, y: 11) is_even_1b6c5c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 1, name: \"input\") property(Number) input_3a9f8e\n        in(x: -454, y: -111, name: \"execute\") trigger() execute_e5b7c0\n\n        out(x: 549, y: -112, name: \"continue\") trigger() continue_f6d1ef\n        out(x: 545, y: 63, name: \"output\") property(Bool) output_9e3a4f\n\n        instance(x: -86, y: -110) ifexpression_8c7b5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -123, y: 52, name: \"getter_3e9a4d\") getter_3e9a4d = output\n        setter(x: 116, y: -268, name: \"setter_eb7f8c\") setter_eb7f8c = output\n        input_3a9f8e -> ifexpression_8c7b5f.gen_0\n        getter_3e9a4d.value -> output_9e3a4f\n        ifexpression_8c7b5f.then -> setter_eb7f8c.execute\n        true -> setter_eb7f8c.new_value\n        ifexpression_8c7b5f.else -> continue_f6d1ef\n        execute_e5b7c0 -> ifexpression_8c7b5f.execute\n        setter_eb7f8c.continue -> continue_f6d1ef\n    }\n\n    \n\n    instance(x: -85, y: 11) is_even_3a9e4f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 20, name: \"input\") property(Number) input_1a9f5e\n        in(x: -451, y: -116, name: \"execute\") trigger() execute_eb0d7c\n\n        out(x: 1208, y: 3, name: \"output\") property(Bool) output_6b4b9e\n        out(x: 1195, y: -114, name: \"continue\") trigger() continue_2a1f3e\n\n        instance(x: -93, y: 0) modulo_7c8d3f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 146, y: -4) equal_f9f5aa root.Std_k98ojb.Logic.Equal {}\n        input_1a9f5e -> modulo_7c8d3f.value\n        2 -> modulo_7c8d3f.divisor\n        modulo_7c8d3f.result -> equal_f9f5aa.left\n        0 -> equal_f9f5aa.right\n        equal_f9f5aa.result -> output_6b4b9e\n        execute_eb0d7c -> equal_f9f5aa.execute\n        equal_f9f5aa.continue -> continue_2a1f3e\n    }\n\n    \n\n    instance(x: -84, y: 60) is_even_8b1c6c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 11, name: \"input\") property(Number) input_1f0e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_7a3e1b\n\n        instance(x: -104, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_1f0e9d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_7a3e1b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9e3d6 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 1, name: \"input\") property(Number) input_8a9d3f\n        in(x: -451, y: -113, name: \"execute\") trigger() execute_7b0e5c\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a6c4f\n        out(x: 45, y: 158, name: \"output\") property(Bool) output_9d3a2f\n\n        instance(x: -104, y: -110) ifexpression_eb8e7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_8a9d3f -> ifexpression_eb8e7c.gen_0\n        execute_7b0e5c -> ifexpression_eb8e7c.execute\n        getter_9cceb3.value -> output_9d3a2f\n        ifexpression_eb8e7c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_eb8e7c.else -> continue_1a6c4f\n        false -> setter_1cedb2.new_value\n        setter_1cedb2.continue -> continue_1a6c4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9d7e8 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 17, name: \"input\") property(Number) input_8a9f0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1c7d3b\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_4a6f5f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_f8e9ef\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_8a9f0e -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_f8e9ef\n        getter_9cceb3.value -> output_4a6f5f\n        execute_1c7d99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_f8e9ef\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_0c9d3c root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_3f9c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``second occurrence_45e806`` root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> ``second occurrence_45e806``.input\n            find_3f9c8d.index + 1 -> ``second occurrence_45e806``.contains\n            ``second occurrence_45e806``.result -> bool_1eb6e9\n        } -> find_3f9c8d.predicate\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first occurrence_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_45e806`` root.Std_k98ojb.Strings.Contains {}\n            input_0 -> ``first occurrence_45e806``.input\n            current_afd5b1 -> ``first occurrence_45e806``.contains\n            ``first occurrence_45e806``.result -> bool_1eb6e9\n        } -> contains_d42dce.predicate\n        find_3f9c8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 1) characters_3e9d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7c4a6c root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: 394, y: -339) data_2e1c3c  = [seen]\n        instance(x: 46, y: -383, name: \"contains\") contains_5f9d7c root.Std_k98ojb.List.Contains {}\n        characters_3e9d8f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            contains_5f9d7c.list -> contains_5f9d7c.contains\n            data_2e1c3c.seen -> contains_5f9d7c.list\n            current_1 -> contains_5f9d7c.item\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 112, y: 80) add_5f9d7c root.Std_k98ojb.List.Add {}\n            contains_5f9d7c.list -> add_5f9d7c.list\n            current_1 -> add_5f9d7c.item\n            add_5f9d7c.listWithItem -> data_2e1c3c.seen\n        } -> find_6d05b0.onItem\n        input_1 -> characters_3e9d8f.input\n        find_6d05b0.item -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e9b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4c8a5d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") filter_1e9c6f root.Std_k98ojb.Query.Filter {\n            where: \"it not in set\"\n        }\n        instance(x: 62, y: -226, name: \"set\") list_7a8d5f root.Std_k98ojb.List {}\n        characters_3e9b7f.characters -> find_4c8a5d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f8c0a root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2f8c0a.input\n            list_7a8d5f -> contains_2f8c0a.contains\n            contains_2f8c0a.result -> bool_1eb6e9\n        } -> find_4c8a5d.predicate\n        characters_3e9b7f.characters -> filter_1e9c6f.list\n        list_7a8d5f -> filter_1e9c6f.set\n        input_0 -> characters_3e9b7f.input\n        find_4c8a5d.item -> output_0\n        filter_1e9c6f.result -> list_7a8d5f\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_2a9d7b root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b8f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e6d3a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") filter_2f4a8c root.Std_k98ojb.Query.Filter {\n            where: \"it not in set\"\n        }\n        instance(x: 62, y: -226, name: \"add to set\") add_d5e7d6 root.Std_k98ojb.List.Add {}\n        characters_5b8f9c.characters -> find_7e6d3a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``set``_0f7c8a root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> ``set``_0f7c8a.item\n            filter_2f4a8c.result -> ``set``_0f7c8a.list\n            ``set``_0f7c8a.contains -> bool_1eb6e9\n        } -> find_7e6d3a.predicate\n        characters_5b8f9c.characters -> filter_2f4a8c.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``set``_0f7c8a root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> ``set``_0f7c8a.item\n            filter_2f4a8c.result -> ``set``_0f7c8a.list\n            ``set``_0f7c8a.contains -> bool_1eb6e9\n        } -> add_d5e7d6.execute\n        find_7e6d3a.item -> output_0\n        characters_5b8f9c.characters -> add_d5e7d6.list\n        input_0 -> characters_5b8f9c.input\n        add_d5e7d6.listWithItem -> filter_2f4a8c.result\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 551, y: -105) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_2d42b5 root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_3f9e4c root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> slice_2d42b5.list\n            elem_9f6850 -> slice_2d42b5.start\n            -1 -> slice_2d42b5.end\n            slice_2d42b5.slice -> contains_807ffd.input\n            elem_9f6850 -> contains_807ffd.contains\n            contains_807ffd.result -> notequal_3f9e4c.left\n            0 -> notequal_3f9e4c.right\n            notequal_3f9e4c.result -> bool_af09a7\n        } -> find_1088d5.predicate\n        find_1088d5.item -> if_7c284f.execute\n        input_0 -> characters_6d05b0.input\n        find_1088d5.item -> output_0\n        if_7c284f.else -> output_0\n    }\n\n    \n\n    instance(x: 777, y: 760) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b7f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3a9e6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") ``first occurrence_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_2`` root.Std_k98ojb.Iteration.Find {}\n        characters_5b7f8c.characters -> find_3a9e6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f8c0a root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_1``.item -> contains_3f8c0a.input\n            current_afd5b1 -> contains_3f8c0a.contains\n            contains_3f8c0a.result -> bool_1eb6e9\n        } -> find_3a9e6d.predicate\n        characters_5b7f8c.characters -> ``first occurrence_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f8c0a root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_2``.item -> contains_3f8c0a.input\n            current_afd5b1 -> contains_3f8c0a.contains\n            contains_3f8c0a.result -> bool_1eb6e9\n        } -> ``first occurrence_2``.predicate\n        characters_5b7f8c.characters -> ``first occurrence_2``.items\n        find_3a9e6d.item -> output_0\n        ``first occurrence_1``.item -> ``first occurrence_2``.items\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_7c5b4f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 1) characters_5a8d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3c7e9c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") filter_2a8d4f root.Std_k98ojb.Query.Filter {\n            where: \"it not in set\"\n        }\n        instance(x: 62, y: -226, name: \"set\") add_7e1ce0 root.Std_k98ojb.List.Add {}\n        characters_5a8d4f.characters -> find_3c7e9c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            filter_2a8d4f.result -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_3c7e9c.predicate\n        characters_5a8d4f.characters -> add_7e1ce0.list\n        find_3c7e9c.item -> output_1\n        find_3c7e9c.item -> add_7e1ce0.item\n        add_7e1ce0.listWithItem -> filter_2a8d4f.list\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d42ce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -50) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_7d44ce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_a54bdc root.Std_k98ojb.Strings.Contains {}\n            characters_2e1444.output -> slice_45e806.list\n            current_afd5b1 -> slice_45e806.start\n            -1 -> slice_45e806.end\n            slice_45e806.slice -> contains_a54bdc.input\n            current_afd5b1 -> contains_a54bdc.contains\n            contains_a54bdc.result -> bool_1eb6e9\n        } -> find_7d44ce.predicate\n        find_7d44ce.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 515, y: 44) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.List.Contains {}\n        instance(x: 89, y: 29) slice_1e159f root.Std_k98ojb.List.Slice {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            slice_1e159f.slice -> contains_807ffd.list\n            characters_6d05b0.characters -> slice_1e159f.list\n            find_1088d5.index -> slice_1e159f.start\n            1 -> slice_1e159f.end\n            elem_9f6850 -> contains_807ffd.item\n            bool_af09a7 -> find_1088d5.predicate\n        }\n        find_1088d5.item -> output_0\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3d8f7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -1) ifexpression_6a9c7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list\"\n        }\n        characters_2e1444.output -> find_3d8f7c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_3d8f7c.predicate\n        instance(x: 795, y: -2) list_getat_4a0f2f root.Std_k98ojb.List.GetAt {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ifexpression_6a9c7f.execute\n        find_3d8f7c.index -> list_getat_4a0f2f.index\n        characters_2e1444.output -> list_getat_4a0f2f.list\n        ifexpression_6a9c7f.then -> output_0\n        list_getat_4a0f2f.itemAtIndex -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_8a1f9e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_5c7d6b\n\n        instance(x: -105, y: -110) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        list_8a1f9e -> min_c3e343.items\n        min_c3e343.min -> list_remove_node.index\n        list_8a1f9e -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_5c7d6b\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e3f6a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_8b2d5c\n\n        instance(x: -105, y: -110) min_7f1f0c root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_3a9e6e root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_9e3f6a -> min_7f1f0c.items\n        min_7f1f0c.min -> list_remove_3a9e6e.index\n        list_9e3f6a -> list_remove_3a9e6e.list\n        list_remove_3a9e6e.listWithoutItem -> min_c3e343.items\n        min_c3e343.min -> second_min_8b2d5c\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 0, name: \"list\") property(List) list_1e8a9f\n\n        out(x: 159, y: 81, name: \"second_min\") property(Number) second_min_a7c6b4\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 112) ifexpression_8e9a5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 224, name: \"getter_6d1f7f\") getter_6d1f7f = min\n        setter(x: 116, y: 0, name: \"setter_4c8e9b\") setter_4c8e9b = min\n        setter(x: 118, y: 128, name: \"setter_5a3c6d\") setter_5a3c6d = min\n        instance(x: -105, y: 224) ifexpression_e0f1ee root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 336, name: \"getter_8e7c9d\") getter_8e7c9d = min\n        setter(x: 116, y: 160, name: \"setter_5f3b6f\") setter_5f3b6f = min\n        setter(x: 118, y: 272, name: \"setter_1a4f8e\") setter_1a4f8e = min\n\n        instance(x: -426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: -426, y: -111) list_min_node_2 root.Std_k98ojb.List.Min {}\n        instance(x: -426, y: 113) list_min_node_3 root.Std_k98ojb.List.Min {}\n\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b]\n        data_instance(x: -609, y: -51) data_8e7f1d  = [a, b]\n        data_instance(x: -609, y: 161) data_e0b5ba  = [a, b]\n\n        list_1e8a9f -> list_min_node.items\n        list_1e8a9f -> list_min_node_2.items\n        list_1e8a9f -> list_min_node_3.items\n\n        list_min_node.min -> data_9a9c70.a\n        list_min_node_2.min -> data_8e7f1d.a\n        list_min_node_3.min -> data_e0b5ba.a\n\n        list_1e8a9f -> ifexpression_e38995.items\n        a -> ifexpression_e38995.gen_0\n        b -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> setter_1cedb2.new_value\n        getter_9cceb3.value -> setter_37db7f.new_value\n\n        list_min_node.min -> data_8e7f1d.b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        ifexpression_e38995.else -> setter_37db7f.execute\n\n        getter_6d1f7f.value -> setter_4c8e9b.new_value\n        getter_6d1f7f.value -> setter_5a3c6d.new_value\n\n        list_min_node.min -> data_e0b5ba.a\n        ifexpression_e38995.result -> data_e0b5ba.b\n        ifexpression_e0f1ee.then -> setter_4c8e9b.execute\n        ifexpression_e0f1ee.else -> setter_5a3c6d.execute\n\n        list_min_node.min -> data_9a9c70.b\n        list_min_node_2.min -> data_8e7f1d.a\n        ifexpression_8e9a5c.then -> setter_5f3b6f.execute\n        ifexpression_8e9a5c.else -> setter_1a4f8e.execute\n\n        getter_8e7c9d.value -> second_min_a7c6b4\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_7c2b4d\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_1e6f9a root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min_node_0c3d2f root.Std_k98ojb.List.Min {}\n        list_1a3f8e -> min_node.items\n        min_node.min -> list_remove_1e6f9a.index\n        list_1a3f8e -> list_remove_1e6f9a.list\n        list_remove_1e6f9a.listWithoutItem -> min_node_0c3d2f.items\n        min_node_0c3d2f.min -> second_min_7c2b4d\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_8a5a1e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8d6a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_a7e3b1\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b]\n        list_9f8d6a -> data_9a9c70.list\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [min, second_min]\n        list_9f8d6a -> data_9a9c70.list\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [second_min]\n        list_9f8d6a -> data_9a9c70.list\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [min]\n        list_9f8d6a -> data_9a9c70.list\n        a -> ifexpression_e38995.gen_0\n        b -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_a7e3b1\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        min_a7e3b1 -> list_min_node.items\n        list_min_node.min -> second_min_a7e3b1\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_d5c9a0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 160, y: 159, name: \"second_min\") property(Number) second_min_a5c3d7\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 2, name: \"list\") property(List) list_9f0a5e\n\n        out(x: 160, y: 17, name: \"second_min\") property(Number) second_min_a8c1d7\n\n        instance(x: -103, y: -111) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) filter_6a5f2c root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        instance(x: 425, y: -113) min_d8d9e4 root.Std_k98ojb.List.Min {}\n        list_9f0a5e -> min_c3e343.items\n        min_c3e343.min -> filter_6a5f2c.gen_1\n        list_9f0a5e -> filter_6a5f2c.list\n        filter_6a5f2c.result -> min_d8d9e4.items\n        min_d8d9e4.min -> second_min_a8c1d7\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_9e6a8f\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_7c2b5d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -305, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: 0) ifexpression_9a3e2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7d8f1f\") getter_7d8f1f = min\n        setter(x: 116, y: -268, name: \"setter_5e3b2c\") setter_5e3b2c = min\n        setter(x: 118, y: -56, name: \"setter_d0a9cf\") setter_d0a9cf = min\n        instance(x: -305, y: 78) list_min_node_7d8f1f root.Std_k98ojb.List.Min {}\n        data_instance(x: -105, y: -110) data_3e6c2c  = [min, second_min]\n        instance(x: -609, y: -363) data_9a9c70  = [a, b, c]\n        list_9e6a8f -> data_9a9c70.a\n        list_9e6a8f -> data_9a9c70.b\n        list_9e6a8f -> data_9a9c70.c\n        data_9a9c70 -> ifexpression_e38995.gen_0\n        data_9a9c70 -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_9e6a8f -> list_min_node.items\n        min -> list_min_node.items\n        list_min_node.min -> data_3e6c2c.min\n        data_3e6c2c.min -> ifexpression_9a3e2c.gen_0\n        data_3e6c2c.second_min -> ifexpression_9a3e2c.gen_1\n        getter_7d8f1f.value -> min\n        ifexpression_9a3e2c.then -> setter_5e3b2c.execute\n        a -> setter_5e3b2c.new_value\n        b -> setter_d0a9cf.new_value\n        ifexpression_9a3e2c.else -> setter_d0a9cf.execute\n        data_3e6c2c.second_min -> list_min_node_7d8f1f.items\n        list_9e6a8f -> list_min_node_7d8f1f.items\n        list_min_node_7d8f1f.min -> second_min_7c2b5d\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7f3b9e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> getter_9cceb3.value\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.listWithItem -> list_remove_node.list\n        getter_9cceb3.value -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node.items\n        instance(x: 426, y: -303) list_min2_node root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min2_node.items\n        list_min2_node.min -> second_min_7f3b9e\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7f3b8e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> getter_9cceb3.value\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.listWithItem -> list_remove_node.list\n        getter_9cceb3.value -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node.items\n        instance(x: 426, y: -303) list_min2_node root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min2_node.items\n        list_min2_node.min -> second_min_7f3b8e\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 11044,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 10, name: \"list1\") property(List) list1_3e8f9a\n        in(x: -162, y: -124, name: \"list2\") property(List) list2_eb7d5c\n\n        out(x: 505, y: -49, name: \"output\") property(Bool) output_4f6c0e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_c1a3da root.Std_k98ojb.Sets.Intersection {}\n        list1_3e8f9a -> intersection_c1a3da.left\n        list2_eb7d5c -> intersection_c1a3da.right\n        instance(x: 679, y: -49) notempty_4a6f0f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c1a3da.intersection -> notempty_4a6f0f.list\n        notempty_4a6f0f.isEmpty -> output_4f6c0e\n    }\n\n    \n\n    instance(x: -138, y: 45) has_common_element_9d7b5c root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -171, y: 20, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -169, y: -123, name: \"list2\") property(List) list2_eb0c7d\n\n        out(x: 555, y: -110, name: \"output\") property(Bool) output_4b3e6f\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_8e9f2a -> zip_201051.left\n        list2_eb0c7d -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_f89569.left\n            list2_1d86d4 -> equal_f89569.right\n            equal_f89569.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 360, y: -95) contains_32727d root.Std_k98ojb.List.Contains {}\n        zip_201051.zipped -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_4b3e6f\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: 168, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -281, y: 5, name: \"list2\") property(List) list2_7c6d3b\n\n        out(x: 802, y: 145, name: \"output\") property(Bool) output_4b1b0e\n\n        instance(x: 531, y: 147) intersection_5a8f1f root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f2a -> intersection_5a8f1f.left\n        list2_7c6d3b -> intersection_5a8f1f.right\n        instance(x: 699, y: 145) notempty_4a0b3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5a8f1f.intersection -> notempty_4a0b3f.list\n        notempty_4a0b3f.isEmpty -> output_4b1b0e\n    }\n\n    \n\n    instance(x: -293, y: 177) has_common_element_9d6c2e root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 15, name: \"list1\") property(List) list1_3a0b5f\n        in(x: -181, y: -130, name: \"list2\") property(List) list2_9e7c8d\n\n        out(x: 783, y: -109, name: \"output\") property(Bool) output_6e4f3a\n\n        instance(x: 133, y: -131) zip_1b5f9 root.Std_k98ojb.Iteration.Zip {}\n        list1_3a0b5f -> zip_1b5f9.left\n        list2_9e7c8d -> zip_1b5f9.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) item1_4e6a3c\n            in(x: -223, y: 18, name: \"item2\") property(Number) item2_8d7b5f\n\n            out(x: 245, y: -54, name: \"\") property(Bool) _0c9c8c\n\n            instance(x: -8, y: -53) equal_1e6a4 root.Std_k98ojb.Logic.Equal {}\n            item1_4e6a3c -> equal_1e6a4.left\n            item2_8d7b5f -> equal_1e6a4.right\n            equal_1e6a4.result -> _0c9c8c\n        } -> zip_1b5f9.handler\n        instance(x: 360, y: -95) contains_1b5f9 root.Std_k98ojb.List.Contains {}\n        zip_1b5f9.zipped -> contains_1b5f9.list\n        true -> contains_1b5f9.item\n        contains_1b5f9.is_contained -> output_6e4f3a\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_8d7b5f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_9a2b6f\n        in(x: -162, y: -121, name: \"list2\") property(List) list2_8e7c4d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_3c5b1a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_6f9c9d root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2b6f -> intersection_6f9c9d.left\n        list2_8e7c4d -> intersection_6f9c9d.right\n        instance(x: -11, y: 9) notempty_e3f0ef root.Std_k98ojb.List.NotEmpty {}\n        intersection_6f9c9d.intersection -> notempty_e3f0ef.list\n        notempty_e3f0ef.isEmpty -> output_3c5b1a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_c7e8d2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -277, y: 165, name: \"list1\") property(List) list1_8a9f2e\n        in(x: -278, y: -10, name: \"list2\") property(List) list2_e5b3d4\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_7c6e1f\n\n        instance(x: 532, y: 147) intersection_9a0e8f root.Std_k98ojb.Sets.Intersection {}\n        list1_8a9f2e -> intersection_9a0e8f.left\n        list2_e5b3d4 -> intersection_9a0e8f.right\n        instance(x: 106, y: 148) notempty_c7c6a8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a0e8f.intersect -> notempty_c7c6a8.list\n        notempty_c7c6a8.isEmpty -> output_7c6e1f\n    }\n\n    \n\n    instance(x: -291, y: 177) intersection_3d5b2 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 19, name: \"list1\") property(List) list1_8e6f9a\n        in(x: -173, y: -111, name: \"list2\") property(List) list2_5c7b4d\n\n        out(x: 782, y: -110, name: \"output\") property(Bool) output_3a0c8e\n\n        instance(x: 134, y: -131) intersection_1f9b8c root.Std_k98ojb.Sets.Intersection {}\n        list1_8e6f9a -> intersection_1f9b8c.left\n        list2_5c7b4d -> intersection_1f9b8c.right\n        instance(x: 360, y: -96) notempty_0e7b3c root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f9b8c.intersect -> notempty_0e7b3c.list\n        notempty_0e7b3c.isEmpty -> output_3a0c8e\n    }\n\n    \n\n    instance(x: 94, y: -122) intersection_4d5d6c root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -177, y: 16, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f2a -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_ac7dfb root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 15, name: \"list1\") property(List) list1_9e3b8a\n        in(x: -175, y: -121, name: \"list2\") property(List) list2_6c0d7f\n\n        out(x: 507, y: -51, name: \"output\") property(Bool) output_5e4c9e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_ea3b8e root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8a -> intersection_ea3b8e.left\n        list2_6c0d7f -> intersection_ea3b8e.right\n        instance(x: 460, y: -49) notempty_4e9c9e root.Std_k98ojb.List.NotEmpty {}\n        intersection_ea3b8e.intersection -> notempty_4e9c9e.list\n        notempty_4e9c9e.isEmpty -> output_5e4c9e\n    }\n\n    \n\n    instance(x: -138, y: 45) has_common_element_7d1f6f root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_20b99a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_06d2e5 root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection_06d2e5.left\n        list2_aa3106 -> intersection_06d2e5.right\n        instance(x: 679, y: -313) notempty_c9f7c8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_06d2e5.intersection -> notempty_c9f7c8.list\n        notempty_c9f7c8.isEmpty -> output_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 339, y: 31, name: \"getter_8a3f9d\") getter_8a3f9d = previous\n        setter(x: 686, y: -252, name: \"setter_7c0b4e\") setter_7c0b4e = previous\n        instance(x: 323, y: -62) for_d1e5aa root.Std_k98ojb.Std.For {}\n        setter(x: -2, y: -163, name: \"setter_7c0b4e\") setter_3a8d6f = previous\n        instance(x: -277, y: -77) getat_e9f1ba root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b2c.else -> continue_5b8b6c\n        ifexpression_7e7b2c.value -> output_eb7d1c\n        ifexpression_7e7b2c.then -> setter_7c0b4e.execute\n        list_0a8f9e -> for_d1e5aa.items\n        for_d1e5aa.item -> ifexpression_7e7b2c.gen_2\n        for_d1e5aa.index -> ifexpression_7e7b2c.gen_0\n        getter_8a3f9d.value -> ifexpression_7e7b2c.gen_1\n        for_d1e5aa.onItem -> ifexpression_7e7b2c.execute\n        for_d1e5aa.done -> continue_5b8b6c\n        for_d1e5aa.item -> setter_7c0b4e.new_value\n        list_0a8f9e -> getat_e9f1ba.list\n        0 -> getat_e9f1ba.index\n        getat_e9f1ba.itemAtIndex -> setter_3a8d6f.new_value\n        execute_5c2b4c -> setter_3a8d6f.execute\n        setter_3a8d6f.continue -> for_d1e5aa.reset\n        setter_7c0b4e.continue -> for_d1e5aa.next\n    }\n\n    \n\n    instance(x: -34, y: 57) is_consecutive_9e2d1f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 4, name: \"list\") property(List) list_9a3f1e\n\n        out(x: 1225, y: 11, name: \"output\") property(Bool) output_eb7c8d\n\n        instance(x: 0, y: 6) sort_1b2a3c root.Std_k98ojb.List.Sort {}\n        instance(x: -32, y: -12) for_5e4f9c root.Std_k98ojb.Std.For {}\n        instance(x: 1008, y: 7) sub_0d9a9f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1046, y: -11) equal_3b1b2d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1194, y: -12) and_5c7e8c root.Std_k98ojb.Logic.And {}\n        list_9a3f1e -> sort_1b2a3c.list\n        sort_1b2a3c.sortedList -> for_5e4f9c.items\n        func() {\n            in(x: -192, y: 24, name: \"current\") property(Number) current_7d8b6e\n\n            out(x: 704, y: 13, name: \"bool\") property(Bool) bool_3a1a2f\n\n            instance(x: 226, y: 20) sub_e5c9c4 root.Std_k98ojb.Math.Sub {}\n            current_7d8b6e -> sub_e5c9c4.first\n            for_5e4f9c.index -> sub_e5c9c4.second\n            sub_e5c9c4.result -> equal_3b1b2d.left\n            1 -> equal_3b1b2d.right\n            equal_3b1b2d.result -> bool_3a1a2f\n        } -> for_5e4f9c.handler\n        for_5e4f9c.onItem -> sub_0d9a9f.execute\n        for_5e4f9c.index -> sub_0d9a9f.first\n        1 -> sub_0d9a9f.second\n        sub_0d9a9f.result -> and_5c7e8c.left\n        true -> and_5c7e8c.right\n        for_5e4f9c.done -> output_eb7c8d\n        and_5c7e8c.result -> output_eb7c8d\n    }\n\n    \n\n    instance(x: -57, y: 111) is_consecutive_2a1f6c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 2, name: \"list\") property(List) list_3a0f9e\n\n        out(x: 1058, y: 5, name: \"output\") property(Bool) output_7b4d1c\n\n        instance(x: 768, y: 76) ifexpression_6f7b9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 350, y: 160, name: \"getter_3a8e2d\") getter_3a8e2d = previous\n        setter(x: 695, y: -313, name: \"setter_9f4c5b\") setter_9f4c5b = previous\n        instance(x: 322, y: -20) for_d1f7fa root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9f4c5b\") setter_3a8e2d = previous\n        instance(x: -275, y: -35) getat_ea6c1f root.Std_k98ojb.List.GetAt {}\n        ifexpression_6f7b9c.else -> continue_a96db6\n        ifexpression_6f7b9c.value -> output_5bbcd7\n        ifexpression_6f7b9c.then -> setter_9f4c5b.execute\n        list_3a0f9e -> for_d1f7fa.items\n        for_d1f7fa.item -> ifexpression_6f7b9c.gen_2\n        for_d1f7fa.index -> ifexpression_6f7b9c.gen_0\n        getter_3a8e2d.value -> ifexpression_6f7b9c.gen_1\n        for_d1f7fa.onItem -> ifexpression_6f7b9c.execute\n        for_d1f7fa.done -> continue_a96db6\n        for_d1f7fa.item -> setter_9f4c5b.new_value\n        list_3a0f9e -> getat_ea6c1f.list\n        0 -> getat_ea6c1f.index\n        getat_ea6c1f.itemAtIndex -> setter_3a8e2d.new_value\n        execute_90aaec -> setter_3a8e2d.execute\n        setter_3a8e2d.continue -> for_d1f7fa.reset\n        setter_9f4c5b.continue -> for_d1f7fa.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f6b0a5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_8a1f2e\n\n        out(x: 1119, y: 6, name: \"output\") property(Bool) output_5b7c0d\n\n        instance(x: 1064, y: -13) ifexpression_c3b9ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 546, y: 28, name: \"getter_8c2f7d\") getter_8c2f7d = previous\n        setter(x: 1023, y: -299, name: \"setter_9e0b5a\") setter_9e0b5a = previous\n        instance(x: 512, y: -20) for_1f4b9f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9e0b5a\") setter_2c8d7f = previous\n        instance(x: -276, y: -35) getat_6e1b3f root.Std_k98ojb.List.GetAt {}\n        ifexpression_c3b9ed.else -> continue_4e1f0f\n        ifexpression_c3b9ed.value -> output_5b7c0d\n        ifexpression_c3b9ed.then -> setter_9e0b5a.execute\n        list_8a1f2e -> for_1f4b9f.items\n        for_1f4b9f.item -> ifexpression_c3b9ed.gen_2\n        for_1f4b9f.index -> ifexpression_c3b9ed.gen_0\n        getter_8c2f7d.value -> ifexpression_c3b9ed.gen_1\n        for_1f4b9f.onItem -> ifexpression_c3b9ed.execute\n        for_1f4b9f.done -> continue_4e1f0f\n        for_1f4b9f.item -> setter_9e0b5a.new_value\n        list_8a1f2e -> getat_6e1b3f.list\n        0 -> getat_6e1b3f.index\n        getat_6e1b3f.itemAtIndex -> setter_2c8d7f.new_value\n        execute_4a9c7e -> setter_2c8d7f.execute\n        setter_2c8d7f.continue -> for_1f4b9f.reset\n        setter_9e0b5a.continue -> for_1f4b9f.next\n    }\n\n    \n\n    instance(x: -34, y: 57) is_consecutive_3b6f9f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 3, name: \"list\") property(List) list_1f9a0e\n\n        out(x: 1005, y: 2, name: \"output\") property(Bool) output_8c7b4d\n\n        instance(x: 0, y: -11) sort_b6e3da root.Std_k98ojb.List.Sort {}\n        instance(x: 352, y: 25) for_1f5a2d root.Std_k98ojb.Std.For {}\n        instance(x: 694, y: 24) sub_9c8c7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1016, y: -4) lessthanorequal_e0e1f5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1262, y: 24) if_3d8a9c root.Std_k98ojb.Std.If {}\n        sort_b6e3da.list -> for_1f5a2d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_1f5a2d.handler\n        list_1f9a0e -> sort_b6e3da.list\n        for_1f5a2d.onItem -> sub_9c8c7c.execute\n        for_1f5a2d.item -> sub_9c8c7c.first\n        for_1f5a2d.index -> sub_9c8c7c.second\n        1 -> sub_9c8c7c.second\n        sub_9c8c7c.result -> lessthanorequal_e0e1f5.left\n        1 -> lessthanorequal_e0e1f5.right\n        lessthanorequal_e0e1f5.result -> if_3d8a9c.predicate\n        for_1f5a2d.onItem -> if_3d8a9c.execute\n        if_3d8a9c.else -> output_8c7b4d\n        if_3d8a9c.then -> continue_6e0e7f\n        for_1f5a2d.done -> continue_6e0e7f\n        true -> output_8c7b4d\n    }\n\n    \n\n    instance(x: -64, y: 109) is_consecutive_3e9b9c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 5, name: \"list\") property(List) list_9a8f0e\n\n        out(x: 1056, y: 14, name: \"output\") property(Bool) output_e1b2d7\n\n        instance(x: 100, y: -10) sort_4c3b8f root.Std_k98ojb.List.Sort {}\n        instance(x: 430, y: 9) for_5e0a6c root.Std_k98ojb.Std.For {}\n        instance(x: 840, y: 13) sub_7d1c8f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1112, y: -10) lessthanorequal_e4a3e9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1296, y: 13) if_5d7c0f root.Std_k98ojb.Std.If {}\n        list_9a8f0e -> sort_4c3b8f.list\n        sort_4c3b8f.sortedList -> for_5e0a6c.items\n        func() {\n            in(x: -113, y: 42, name: \"current\") property(Number) current_e1d7ea\n\n            out(x: 515, y: 52, name: \"bool\") property(Bool) bool_9f8b2e\n\n            instance(x: 89, y: 37) modulo_3c0a4c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 43) notequal_7f6d1c root.Std_k98ojb.Logic.NotEqual {}\n            current_e1d7ea -> modulo_3c0a4c.value\n            2 -> modulo_3c0a4c.divisor\n            modulo_3c0a4c.result -> notequal_7f6d1c.left\n            0 -> notequal_7f6d1c.right\n            notequal_7f6d1c.result -> bool_9f8b2e\n        } -> for_5e0a6c.handler\n        for_5e0a6c.index -> sub_7d1c8f.first\n        1 -> sub_7d1c8f.second\n        sort_4c3b8f.sortedList -> sub_7d1c8f.second\n        for_5e0a6c.item -> sub_7d1c8f.first\n        sub_7d1c8f.result -> lessthanorequal_e4a3e9.left\n        1 -> lessthanorequal_e4a3e9.right\n        lessthanorequal_e4a3e9.result -> if_5d7c0f.predicate\n        for_5e0a6c.onItem -> if_5d7c0f.execute\n        if_5d7c0f.else -> output_e1b2d7\n        true -> if_5d7c0f.then\n        for_5e0a6c.done -> output_e1b2d7\n    }\n\n    \n\n    instance(x: -56, y: 59) is_consecutive_9b3d4c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 5, name: \"list\") property(List) list_1a9d8f\n\n        out(x: 1216, y: 4, name: \"output\") property(Bool) output_3c7b2e\n\n        instance(x: 1050, y: -10) ifexpression_5f1c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5f1c9f.else -> output_3c7b2e\n        ifexpression_5f1c9f.value -> output_3c7b2e\n        ifexpression_5f1c9f.then -> setter_9d4f1c.execute\n        list_1a9d8f -> for_d26972.items\n        for_d26972.item -> ifexpression_5f1c9f.gen_2\n        for_d26972.index -> ifexpression_5f1c9f.gen_0\n        getter_b280eb.value -> ifexpression_5f1c9f.gen_1\n        for_d26972.onItem -> ifexpression_5f1c9f.execute\n        for_d26972.done -> output_3c7b2e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a9d8f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a5b6f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 2, name: \"list\") property(List) list_3f0e9d\n\n        out(x: 1005, y: 1, name: \"output\") property(Bool) output_7b4a8c\n\n        instance(x: 352, y: -6) sort_7e2f3c root.Std_k98ojb.List.Sort {}\n        instance(x: 712, y: 11) for_5d1b9c root.Std_k98ojb.Std.For {}\n        instance(x: 1050, y: 12) sub_8a6a5c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1277, y: -2) lessthanorequal_e3e7d1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1489, y: 10) if_8f6a5c root.Std_k98ojb.Std.If {}\n        sort_7e2f3c.list -> for_5d1b9c.items\n        func() {\n            in(x: -121, y: 41, name: \"current\") property(Number) current_4f0c8e\n\n            out(x: 523, y: 49, name: \"\") property(Bool) _7dd980\n\n            instance(x: 106, y: 44) sub_1b9d3a root.Std_k98ojb.Math.Sub {}\n            for_5d1b9c.index -> sub_1b9d3a.first\n            1 -> sub_1b9d3a.second\n            sub_1b9d3a.result -> lessthanorequal_e3e7d1.left\n            current_4f0c8e -> lessthanorequal_e3e7d1.right\n            lessthanorequal_e3e7d1.result -> if_8f6a5c.predicate\n        } -> for_5d1b9c.handler\n        for_5d1b9c.onItem -> if_8f6a5c.execute\n        list_3f0e9d -> sort_7e2f3c.list\n        if_8f6a5c.else -> output_7b4a8c\n        if_8f6a5c.then -> sub_8a6a5c.execute\n        for_5d1b9c.item -> sub_8a6a5c.first\n        func() {\n            in(x: -121, y: 41, name: \"current\") property(Number) current_4f0c8e\n\n            out(x: 523, y: 49, name: \"\") property(Bool) _7dd980\n\n            instance(x: 106, y: 44) sub_1b9d3a root.Std_k98ojb.Math.Sub {}\n            for_5d1b9c.index -> sub_1b9d3a.first\n            1 -> sub_1b9d3a.second\n            sub_1b9d3a.result -> lessthanorequal_e3e7d1.left\n            current_4f0c8e -> lessthanorequal_e3e7d1.right\n            lessthanorequal_e3e7d1.result -> if_8f6a5c.predicate\n        } -> sub_8a6a5c.second\n        for_5d1b9c.done -> output_7b4a8c\n        sub_8a6a5c.result -> output_7b4a8c\n    }\n\n    \n\n    instance(x: -92, y: 59) is_consecutive_3e2f1f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 3, name: \"list\") property(List) list_8e6a5f\n\n        out(x: 1221, y: 2, name: \"output\") property(Bool) output_7c0d9b\n\n        instance(x: 1004, y: -13) ifexpression_3a3b7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 486, y: 29, name: \"getter_8f9e6d\") getter_8f9e6d = previous\n        setter(x: 1023, y: -227, name: \"setter_5c7b2a\") setter_5c7b2a = previous\n        instance(x: 370, y: -17) for_d1f0ee root.Std_k98ojb.Std.For {}\n        setter(x: -6, y: -121, name: \"setter_5c7b2a\") setter_3e9d8d = previous\n        instance(x: -281, y: -35) getat_e4b1f0 root.Std_k98ojb.List.GetAt {}\n        ifexpression_3a3b7c.else -> continue_6b5a3f\n        ifexpression_3a3b7c.value -> output_7c0d9b\n        ifexpression_3a3b7c.then -> setter_5c7b2a.execute\n        list_8e6a5f -> for_d1f0ee.items\n        for_d1f0ee.item -> ifexpression_3a3b7c.gen_2\n        for_d1f0ee.index -> ifexpression_3a3b7c.gen_0\n        getter_8f9e6d.value -> ifexpression_3a3b7c.gen_1\n        for_d1f0ee.onItem -> ifexpression_3a3b7c.execute\n        for_d1f0ee.done -> continue_6b5a3f\n        for_d1f0ee.item -> setter_5c7b2a.new_value\n        list_8e6a5f -> getat_e4b1f0.list\n        0 -> getat_e4b1f0.index\n        getat_e4b1f0.itemAtIndex -> setter_3e9d8d.new_value\n        execute_7c2a5e -> setter_3e9d8d.execute\n        setter_3e9d8d.continue -> for_d1f0ee.reset\n        setter_5c7b2a.continue -> for_d1f0ee.next\n    }\n\n    \n\n    instance(x: -64, y: 56) is_consecutive_6f8f1c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 0, name: \"list\") property(List) list_1a3e8f\n\n        out(x: 1059, y: 19, name: \"output\") property(Bool) output_eb7c5d\n\n        instance(x: 352, y: 2) sort_6e0b4f root.Std_k98ojb.List.Sort {}\n        instance(x: 672, y: -1) for_9a8b8c root.Std_k98ojb.Std.For {}\n        instance(x: 1053, y: 18) if_e7d5ed root.Std_k98ojb.Std.If {}\n        sort_6e0b4f.list -> for_9a8b8c.items\n        func() {\n            in(x: -113, y: 49, name: \"current\") property(Number) current_1e3b7c\n\n            out(x: 706, y: 48, name: \"bool\") property(Bool) bool_e5d9a6\n\n            instance(x: 106, y: 43) sub_8f2b0f root.Std_k98ojb.Math.Sub {}\n            instance(x: 331, y: 49) equal_7e1c3c root.Std_k98ojb.Logic.Equal {}\n            current_1e3b7c -> sub_8f2b0f.first\n            for_9a8b8c.item -> sub_8f2b0f.second\n            sub_8f2b0f.result -> equal_7e1c3c.left\n            1 -> equal_7e1c3c.right\n            equal_7e1c3c.result -> bool_e5d9a6\n        } -> if_e7d5ed.predicate\n        for_9a8b8c.onItem -> if_e7d5ed.execute\n        list_1a3e8f -> sort_6e0b4f.list\n        false -> output_eb7c5d\n        if_e7d5ed.value -> output_eb7c5d\n        for_9a8b8c.done -> if_e7d5ed.else\n    }\n\n    \n\n    instance(x: -67, y: 119) is_consecutive_2e1f0f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"sublist\") property(List) sublist_3f9a8e\n        in(x: -285, y: -160, name: \"list\") property(List) list_1c7b4d\n\n        out(x: 1115, y: -97, name: \"output\") property(Bool) output_2a6f9c\n\n        instance(x: -94, y: -157, name: \"length of sublist\") length_8e3c0e root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -156) contains_1d7b1f root.Std_k98ojb.List.Contains {}\n        instance(x: 360, y: -155) equal_f6a4c9 root.Std_k98ojb.Logic.Equal {}\n        sublist_3f9a8e -> length_8e3c0e.list\n        list_1c7b4d -> contains_1d7b1f.list\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(List) current_2c5c9a\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3e6d0b\n\n            instance(x: 226, y: 56) slice_1f8b7a root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) length_9c5a4c root.Std_k98ojb.List.Length {}\n            instance(x: 684, y: 52) equal_2d0e3c root.Std_k98ojb.Logic.Equal {}\n            current_2c5c9a -> slice_1f8b7a.list\n            length_8e3c0e.length -> slice_1f8b7a.start\n            -1 -> slice_1f8b7a.end\n            slice_1f8b7a.slice -> equal_2d0e3c.left\n            sublist_3f9a8e -> equal_2d0e3c.right\n            length_9c5a4c.length -> equal_2d0e3c.context\n            equal_2d0e3c.result -> output_3e6d0b\n        } -> contains_1d7b1f.handler\n        contains_1d7b1f.is_contained -> equal_f6a4c9.left\n        true -> equal_f6a4c9.right\n        equal_f6a4c9.result -> output_2a6f9c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7e5b0d root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 35, name: \"sublist\") property(List) sublist_3f1a8e\n        in(x: -283, y: -139, name: \"list\") property(List) list_0c7b9d\n\n        out(x: 1015, y: -11, name: \"output\") property(Bool) output_e2c6aa\n\n        instance(x: -10, y: -140, name: \"sublist length\") length_1e8a3f root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -142) greaterthan_c4d0c9 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 430, y: -141) notequal_5b7b1e root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 700, y: -140) not_2f8a3d root.Std_k98ojb.Logic.Not {}\n        instance(x: 930, y: -139) and_4c9b0c root.Std_k98ojb.Logic.And {}\n        sublist_3f1a8e -> length_1e8a3f.list\n        length_1e8a3f.length -> greaterthan_c4d0c9.left\n        list_0c7b9d -> greaterthan_c4d0c9.right\n        sublist_3f1a8e -> notequal_5b7b1e.left\n        List.Empty() -> notequal_5b7b1e.right\n        not_2f8a3d.input -> notequal_5b7b1e.result\n        and_4c9b0c.left -> greaterthan_c4d0c9.result\n        and_4c9b0c.right -> not_2f8a3d.result\n        and_4c9b0c.result -> output_e2c6aa\n    }\n\n    \n\n    instance(x: -67, y: 57) is_sublist_ae7a1c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -265, y: 30, name: \"sublist\") property(List) sublist_3f1a8e\n        in(x: -265, y: -130, name: \"list\") property(List) list_7b9d6c\n\n        out(x: 1265, y: -95, name: \"output\") property(Bool) output_e2a4ed\n\n        instance(x: 1000, y: -115) contains_3e1f1 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_9d7c8\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1a0f6\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3b2e4\n\n            instance(x: 226, y: 56) slice_9d8c7 root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) contains_1a0f6 root.Std_k98ojb.List.Contains {}\n            list_7b9d6c -> slice_9d8c7.list\n            _index_1a0f6 -> slice_9d8c7.start\n            -1 -> slice_9d8c7.end\n            slice_9d8c7.slice -> contains_1a0f6.list\n            sublist_3f1a8e -> contains_1a0f6.item\n            contains_1a0f6.is_contained -> output_3b2e4\n        } -> contains_3e1f1.handler\n        list_7b9d6c -> contains_3e1f1.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_5a0f8\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_2b9c4\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_5a0f8 -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_2b9c4\n        } -> contains_3e1f1.items\n        contains_3e1f1.is_contained -> output_e2a4ed\n    }\n\n    \n\n    instance(x: -291, y: 59) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -265, y: 20, name: \"sublist\") property(List) sublist_2a1f6e\n        in(x: -265, y: -150, name: \"list\") property(List) list_5c9b7d\n\n        out(x: 1020, y: -65, name: \"output\") property(Bool) output_e4f3ea\n\n        instance(x: -95, y: -145, name: \"is sublist\") filter_8e6a1c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 210, y: -64) length_9d7c5c root.Std_k98ojb.List.Length {}\n        instance(x: 426, y: -65) greaterthan_3f2f0f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 640, y: -66) sub_1a8e9d root.Std_k98ojb.Math.Sub {}\n        sublist_2a1f6e -> filter_8e6a1c.items\n        func() {\n            in(x: -192, y: -27, name: \"current\") property(List) current_7a0c4\n\n            out(x: 701, y: -28, name: \"bool\") property(Bool) bool_5f9b3e\n\n            instance(x: 112, y: -23) contains_8d1c1 root.Std_k98ojb.List.Contains {}\n            current_7a0c4 -> contains_8d1c1.list\n            sublist_2a1f6e -> contains_8d1c1.item\n            contains_8d1c1.is_contained -> bool_5f9b3e\n        } -> filter_8e6a1c.handler\n        list_5c9b7d -> length_9d7c5c.list\n        sublist_2a1f6e -> length_9d7c5c.list\n        greaterthan_3f2f0f.result -> output_e4f3ea\n        length_9d7c5c.length -> greaterthan_3f2f0f.left\n        filter_8e6a1c.output_list -> greaterthan_3f2f0f.right\n        list_5c9b7d -> sub_1a8e9d.first\n        sublist_2a1f6e -> sub_1a8e9d.second\n    }\n\n    \n\n    instance(x: -95, y: 35) is_sublist_3b0d9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 20, name: \"sublist\") property(List) sublist_1f9d5a\n        in(x: -301, y: -170, name: \"list\") property(List) list_7c2e8b\n\n        out(x: 1060, y: -95, name: \"output\") property(Bool) output_3b4a6d\n\n        instance(x: -91, y: -174, name: \"sublist length\") length_9f5c0c root.Std_k98ojb.List.Length {}\n        instance(x: 186, y: -95) contains_7e8b1f root.Std_k98ojb.List.Contains {}\n        sublist_1f9d5a -> length_9f5c0c.list\n        list_7c2e8b -> contains_7e8b1f.list\n        func() {\n            in(x: -230, y: 11, name: \"list\") property(List) list_4c6b9d\n\n            out(x: 555, y: 30, name: \"\") property(List) _2a0f5c\n\n            instance(x: 76, y: 16) slice_3e7f8c root.Std_k98ojb.List.Slice {}\n            length_9f5c0c.length -> slice_3e7f8c.end\n            list_4c6b9d -> slice_3e7f8c.list\n            0 -> slice_3e7f8c.start\n            slice_3e7f8c.slice -> _2a0f5c\n        } -> contains_7e8b1f.item\n        length_9f5c0c.length -> contains_7e8b1f.list_length\n        contains_7e8b1f.is_contained -> output_3b4a6d\n    }\n\n    \n\n    instance(x: -93, y: 29) is_sublist_2e7d8c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 0, name: \"sublist\") property(List) sublist_3f8a1e\n        in(x: -278, y: 160, name: \"list\") property(List) list_5c9b4d\n\n        out(x: 1067, y: 75, name: \"output\") property(Bool) output_6a0a2d\n\n        instance(x: 100, y: -3) contains_8f1e7 root.Std_k98ojb.List.Contains {}\n        list_5c9b4d -> contains_8f1e7.list\n        sublist_3f8a1e -> contains_8f1e7.item\n        contains_8f1e7.is_contained -> output_6a0a2d\n    }\n\n    \n\n    instance(x: -67, y: 95) is_sublist_a9b4c5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 20, name: \"sublist\") property(List) sublist_1a0d8f\n        in(x: -277, y: -140, name: \"list\") property(List) list_7c2e9b\n\n        out(x: 1056, y: -109, name: \"output\") property(Bool) output_e5f3ef\n\n        instance(x: -10, y: -110) contains_1a0d8f root.Std_k98ojb.List.Contains {}\n        sublist_1a0d8f -> contains_1a0d8f.item\n        list_7c2e9b -> contains_1a0d8f.list\n        contains_1a0d8f.is_contained -> output_e5f3ef\n    }\n\n    \n\n    instance(x: 93, y: -37) is_sublist_6f7f2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 5, name: \"sublist\") property(List) sublist_0f1a8e\n        in(x: -277, y: -175, name: \"list\") property(List) list_7c9d4b\n\n        out(x: 1063, y: -110, name: \"output\") property(Bool) output_e5a6ec\n\n        instance(x: -0, y: -122, name: \"sublist length\") length_8e1f9f root.Std_k98ojb.List.Length {}\n        instance(x: 189, y: -111) contains_7d3c2c root.Std_k98ojb.List.Contains {}\n        instance(x: 423, y: -109) and_4a5c6c root.Std_k98ojb.Logic.And {}\n        sublist_0f1a8e -> length_8e1f9f.list\n        list_7c9d4b -> contains_7d3c2c.list\n        sublist_0f1a8e -> contains_7d3c2c.item\n        and_4a5c6c.result -> output_e5a6ec\n        length_8e1f9f.length -> contains_7d3c2c.startIndex\n        list_7c9d4b -> and_4a5c6c.left\n        contains_7d3c2c.is_contained -> and_4a5c6c.right\n    }\n\n    \n\n    instance(x: 10, y: -37) is_sublist_ae0f1c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 20, name: \"sublist\") property(List) sublist_2f8d6a\n        in(x: -304, y: -140, name: \"list\") property(List) list_1b9e4c\n\n        out(x: 1067, y: -5, name: \"output\") property(Bool) output_0f3f2f\n\n        instance(x: -44, y: -135, name: \"is sublist\") filter_6d8a9f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -29, y: 16, name: \"current\") property(List) current_7e3c0f\n\n            out(x: 698, y: 49, name: \"\") property(Bool) _1d9a6b2\n\n            instance(x: 226, y: 56) contains_5a4f8f root.Std_k98ojb.List.Contains {}\n            sublist_2f8d6a -> contains_5a4f8f.list\n            current_7e3c0f -> contains_5a4f8f.item\n            contains_5a4f8f.is_contained -> _1d9a6b2\n        } -> filter_6d8a9f.handler\n        list_1b9e4c -> filter_6d8a9f.items\n        filter_6d8a9f.output_list -> output_0f3f2f\n    }\n\n    \n\n    instance(x: -67, y: 59) is_sublist_5a7d7c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 5, name: \"sublist\") property(List) sublist_1a9d6f\n        in(x: -285, y: -166, name: \"list\") property(List) list_3c7b2e\n\n        out(x: 1020, y: -121, name: \"output\") property(Bool) output_5c8c4f\n\n        instance(x: -105, y: -164, name: \"sublist length\") length_9a6d9 root.Std_k98ojb.List.Length {}\n        instance(x: 210, y: -120) contains_7e1c0c root.Std_k98ojb.List.Contains {}\n        sublist_1a9d6f -> length_9a6d9.list\n        list_3c7b2e -> contains_7e1c0c.list\n        func() {\n            in(x: -30, y: 15, name: \"current\") property(List) current_8b4b1f\n\n            out(x: 704, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) slice_7e5c0a root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            length_9a6d9.length -> slice_7e5c0a.end\n            current_8b4b1f -> slice_7e5c0c.list\n            0 -> slice_7e5c0a.start\n            slice_7e5c0a.slice -> equal_f89569.left\n            sublist_1a9d6f -> equal_f89569.right\n            equal_f89569.result -> output_efbc78\n        } -> contains_7e1c0c.handler\n        contains_7e1c0c.is_contained -> output_5c8c4f\n    }\n\n    \n\n    instance(x: -83, y: 59) is_sublist_6a3d9b root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1226, y: 29, name: \"continue\") trigger() continue_e2c4ee\n        out(x: 1213, y: 148, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: -5, y: -120) for_9b7d8f root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_4c6c3d\") getter_4c6c3d = index\n        setter(x: 780, y: -125, name: \"setter_5a9f7e\") setter_5a9f7e = index\n        instance(x: 465, y: 5) ifexpression_1b8b1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_9b7d8f.items\n        execute_5c7d8b -> setter_5a9f7e.execute\n        0 -> setter_5a9f7e.new_value\n        getter_4c6c3d.value -> output_1e0a1f\n        for_9b7d8f.done -> continue_e2c4ee\n        setter_5a9f7e.continue -> for_9b7d8f.reset\n        for_9b7d8f.onItem -> ifexpression_1b8b1e.execute\n        for_9b7d8f.index -> ifexpression_1b8b1e.gen_0\n        for_9b7d8f.item -> ifexpression_1b8b1e.gen_1\n        ifexpression_1b8b1e.then -> setter_5a9f7e.execute\n        for_9b7d8f.index -> setter_5a9f7e.new_value\n        ifexpression_1b8b1e.else -> for_9b7d8f.next\n        setter_5a9f7e.continue -> continue_e2c4ee\n    }\n\n    \n\n    instance(x: -206, y: 12) find_missing_6f3b0e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 2, name: \"list\") property(List) list_1a9f8e\n        in(x: -281, y: -224, name: \"execute\") trigger() execute_5c7b3d\n\n        out(x: 1216, y: 30, name: \"continue\") trigger() continue_e4f0be\n        out(x: 1162, y: 146, name: \"output\") property(Number) output_1a9e1f\n\n        instance(x: -8, y: -122, name: \"previous\") setter_5b3d6c = previous\n        instance(x: 0, y: 0, name: \"index\") setter_2e4a7f = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == len - 1\"\n        }\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = len\n        list_1a9f8e -> for_d26972.items\n        execute_5c7b3d -> setter_2e4a7f.execute\n        -1 -> setter_2e4a7f.new_value\n        0 -> previous_5b3d6c.new_value\n        list_1a9f8e -> for_d26972.items\n        for_d26972.onItem -> ifexpression_875761.execute\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        getter_b280eb.value -> setter_2e4a7f.new_value\n        list_1a9f8e -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a9f8e -> len_5b3d6c.list\n        len_5b3d6c.length -> getter_b280eb.value\n        ifexpression_875761.then -> output_1a9e1f.set\n        for_d26972.index -> ifexpression_875761.gen_0\n        for_d26972.item -> ifexpression_875761.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        list_1a9f8e -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        ifexpression_875761.else -> continue_e4f0be\n        ifexpression_875761.value -> output_1a9e1f\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_e4f0be\n        setter_2e4a7f.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -53, y: 127) find_missing_5b3d6c root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_3e9f8d\n        in(x: -292, y: -250, name: \"execute\") trigger() execute_1a6c5b\n\n        out(x: 1017, y: -252, name: \"continue\") trigger() continue_4a0f7c\n        out(x: 1022, y: 26, name: \"output\") property(Number) output_3d8e9f\n\n        instance(x: 0, y: 0) for_1b5f6f root.Std_k98ojb.Std.For {}\n        getter(x: -140, y: 60, name: \"getter_ea2c4e\") getter_ea2c4e = index\n        setter(x: 780, y: -126, name: \"setter_7d0b9f\") setter_7d0b9f = index\n        instance(x: 510, y: -15) ifexpression_6b1b3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_3e9f8d -> for_1b5f6f.items\n        execute_1a6c5b -> setter_7d0b9f.execute\n        0 -> setter_7d0b9f.new_value\n        getter_ea2c4e.value -> output_3d8e9f\n        for_1b5f6f.done -> continue_4a0f7c\n        setter_7d0b9f.continue -> for_1b5f6f.reset\n        for_1b5f6f.onItem -> ifexpression_6b1b3c.execute\n        for_1b5f6f.index -> ifexpression_6b1b3c.gen_0\n        for_1b5f6f.item -> ifexpression_6b1b3c.gen_1\n        ifexpression_6b1b3c.then -> setter_7d0b9f.execute\n        ifexpression_6b1b3c.else -> for_1b5f6f.next\n        for_1b5f6f.index -> setter_7d0b9f.new_value\n        setter_7d0b9f.continue -> continue_4a0f7c\n    }\n\n    \n\n    instance(x: -17, y: 64) find_missing_2e3b8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_2f3b5e\n        in(x: -298, y: -232, name: \"execute\") trigger() execute_ea9c8d\n\n        out(x: 1020, y: -233, name: \"continue\") trigger() continue_1c7e6e\n        out(x: 1012, y: 70, name: \"output\") property(Number) output_3b4f9f\n\n        instance(x: 0, y: 0) for_8a5d1f root.Std_k98ojb.Std.For {}\n        getter(x: -145, y: 79, name: \"getter_e6c7e2\") getter_e6c7e2 = index\n        setter(x: 755, y: -158, name: \"setter_9a3d8f\") setter_9a3d8f = index\n        instance(x: 0, y: 0) ifexpression_1b4c5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -187, y: 78, name: \"getter_9f3a2d\") getter_9f3a2d = previous\n        setter(x: 0, y: 0, name: \"setter_8c7b6e\") setter_8c7b6e = previous\n        instance(x: -272, y: -35) getat_e5b4d1 root.Std_k98ojb.List.GetAt {}\n        list_2f3b5e -> for_8a5d1f.items\n        execute_ea9c8d -> setter_8c7b6e.execute\n        0 -> setter_8c7b6e.new_value\n        getter_e6c7e2.value -> ifexpression_1b4c5e.gen_0\n        for_8a5d1f.item -> ifexpression_1b4c5e.gen_2\n        getter_9f3a2d.value -> ifexpression_1b4c5e.gen_1\n        list_2f3b5e -> getat_e5b4d1.list\n        0 -> getat_e5b4d1.index\n        getat_e5b4d1.itemAtIndex -> setter_8c7b6e.new_value\n        for_8a5d1f.onItem -> ifexpression_1b4c5e.execute\n        ifexpression_1b4c5e.then -> setter_9a3d8f.execute\n        for_8a5d1f.index -> setter_9a3d8f.new_value\n        ifexpression_1b4c5e.else -> continue_1c7e6e\n        ifexpression_1b4c5e.value -> output_3b4f9f\n        for_8a5d1f.done -> continue_1c7e6e\n        setter_9a3d8f.continue -> for_8a5d1f.next\n        setter_8c7b6e.continue -> for_8a5d1f.reset\n    }\n\n    \n\n    instance(x: -65, y: 111) find_missing_2f4c1f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 2, name: \"list\") property(List) list_9e6b5f\n        in(x: -288, y: -225, name: \"execute\") trigger() execute_1c8a3d\n\n        out(x: 1040, y: -229, name: \"continue\") trigger() continue_4b2c9f\n        out(x: 1035, y: 203, name: \"output\") property(Number) output_6e9b8e\n\n        instance(x: 0, y: 0) for_1d3a7f root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_4c5d7f\") getter_4c5d7f = index\n        setter(x: -186, y: -246, name: \"setter_1a8e9f\") setter_1a8e9f = index\n        instance(x: 0, y: 0) ifexpression_6b3a2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_7d4c1e -> for_1d3a7f.items\n        execute_1c8a3d -> setter_1a8e9f.execute\n        0 -> setter_1a8e9f.new_value\n        getter_4c5d7f.value -> output_6e9b8e\n        for_1d3a7f.done -> continue_4b2c9f\n        setter_1a8e9f.continue -> for_1d3a7f.reset\n        for_1d3a7f.onItem -> ifexpression_6b3a2f.execute\n        getter_4c5d7f.value -> ifexpression_6b3a2f.gen_0\n        for_1d3a7f.item -> ifexpression_6b3a2f.gen_1\n        ifexpression_6b3a2f.then -> continue_4b2c9f\n        ifexpression_6b3a2f.else -> for_1d3a7f.next\n    }\n\n    \n\n    instance(x: -204, y: 10) find_missing_5e8a1e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 1, name: \"list\") property(List) list_3a8f5e\n        in(x: -311, y: -221, name: \"execute\") trigger() execute_e9c7b0\n\n        out(x: 1046, y: -225, name: \"continue\") trigger() continue_4d1b8f\n        out(x: 1035, y: 148, name: \"output\") property(Number) output_3e7a2e\n\n        instance(x: 0, y: 0) for_6c7a9d root.Std_k98ojb.Std.For {}\n        getter(x: -144, y: 160, name: \"getter_8f4d5f\") getter_8f4d5f = index\n        setter(x: 679, y: -313, name: \"setter_1e9a3c\") setter_1e9a3c = index\n        instance(x: 321, y: -20) ifexpression_e6b7ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8f4d5f\") getter_9a3c2e = previous\n        setter(x: -0, y: -121, name: \"setter_1e9a3c\") setter_6b7a5e = previous\n        instance(x: 321, y: -20) getat_8d9f2f root.Std_k98ojb.List.GetAt {}\n        list_3a8f5e -> for_6c7a9d.items\n        for_6c7a9d.onItem -> ifexpression_e6b7ea.execute\n        getter_9a3c2e.value -> ifexpression_e6b7ea.gen_1\n        for_6c7a9d.index -> ifexpression_e6b7ea.gen_0\n        for_6c7a9d.item -> ifexpression_e6b7ea.gen_2\n        ifexpression_e6b7ea.then -> setter_1e9a3c.execute\n        list_3a8f5e -> getat_8d9f2f.list\n        0 -> getat_8d9f2f.index\n        getat_8d9f2f.itemAtIndex -> setter_6b7a5e.new_value\n        execute_e9c7b0 -> setter_6b7a5e.execute\n        getter_8f4d5f.value -> output_3e7a2e\n        for_6c7a9d.done -> continue_4d1b8f\n        ifexpression_e6b7ea.else -> continue_4d1b8f\n        setter_1e9a3c.continue -> for_6c7a9d.next\n        setter_6b7a5e.continue -> for_6c7a9d.reset\n    }\n\n    \n\n    instance(x: -50, y: 128) find_missing_8f4c0e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_9f6a8e\n        in(x: -310, y: -240, name: \"execute\") trigger() execute_7b3c5d\n\n        out(x: 1040, y: -243, name: \"continue\") trigger() continue_1f4b9f\n        out(x: 1032, y: 15, name: \"output\") property(Number) output_8e6a5e\n\n        instance(x: 0, y: 0) for_3c9d7e root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 0, name: \"getter_1f2f4e\") getter_1f2f4e = index\n        setter(x: 0, y: 0, name: \"setter_8a7d6c\") setter_8a7d6c = index\n        instance(x: 0, y: 0) ifexpression_e9b5d3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -0, y: 0, name: \"getter_8e7c4f\") getter_8e7c4f = previous\n        setter(x: 0, y: 0, name: \"setter_9b5d6a\") setter_9b5d6a = previous\n        instance(x: -0, y: 0) getat_e1b3c2 root.Std_k98ojb.List.GetAt {}\n        list_9f6a8e -> for_3c9d7e.items\n        execute_7b3c5d -> setter_8a7d6c.execute\n        -1 -> setter_8a7d6c.new_value\n        getter_1f2f4e.value -> output_8e6a5e\n        for_3c9d7e.done -> continue_1f4b9f\n        setter_8a7d6c.continue -> for_3c9d7e.reset\n        list_9f6a8e -> getat_e1b3c2.list\n        0 -> getat_e1b3c2.index\n        getat_e1b3c2.itemAtIndex -> setter_9b5d6a.new_value\n        for_3c9d7e.onItem -> ifexpression_e9b5d3.execute\n        getter_8e7c4f.value -> ifexpression_e9b5d3.gen_1\n        for_3c9d7e.index -> ifexpression_e9b5d3.gen_0\n        for_3c9d7e.item -> ifexpression_e9b5d3.gen_2\n        ifexpression_e9b5d3.then -> setter_8a7d6c.execute\n        for_3c9d7e.index -> setter_8a7d6c.new_value\n        ifexpression_e9b5d3.else -> for_3c9d7e.next\n        setter_9b5d6a.continue -> for_3c9d7e.next\n    }\n\n    \n\n    instance(x: -1, y: 2) find_missing_4f8a0e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_3a9f8e\n        in(x: -286, y: -240, name: \"execute\") trigger() execute_1b7d4c\n\n        out(x: 512, y: -241, name: \"continue\") trigger() continue_e5b2ec\n        out(x: 513, y: 0, name: \"output\") property(Number) output_3a8f9e\n\n        instance(x: 0, y: 0) for_7c6d1f root.Std_k98ojb.Std.For {}\n        getter(x: -150, y: 0, name: \"getter_4a2d6f\") getter_4a2d6f = index\n        setter(x: 116, y: -240, name: \"setter_7e5c9f\") setter_7e5c9f = index\n        instance(x: 0, y: 0) ifexpression_e1b8ec root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -150, y: 160, name: \"getter_4a2d6f\") getter_ae9c7e = previous\n        setter(x: 116, y: 160, name: \"setter_7e5c9f\") setter_1b3c8e = previous\n        instance(x: -276, y: 160) getat_4a2d6f root.Std_k98ojb.List.GetAt {}\n        list_3a9f8e -> for_7c6d1f.items\n        execute_1b7d4c -> setter_7e5c9f.execute\n        -1 -> setter_7e5c9f.new_value\n        0 -> getat_4a2d6f.index\n        list_3a9f8e -> getat_4a2d6f.list\n        for_7c6d1f.onItem -> ifexpression_e1b8ec.execute\n        getter_ae9c7e.value -> ifexpression_e1b8ec.gen_1\n        for_7c6d1f.index -> ifexpression_e1b8ec.gen_0\n        for_7c6d1f.item -> ifexpression_e1b8ec.gen_2\n        getter_4a2d6f.value -> output_3a8f9e\n        ifexpression_e1b8ec.then -> setter_1b3c8e.execute\n        for_7c6d1f.done -> continue_e5b2ec\n        setter_7e5c9f.continue -> for_7c6d1f.reset\n        setter_1b3c8e.new_value -> ifexpression_e1b8ec.gen_0\n        for_7c6d1f.item -> setter_1b3c8e.new_value\n        getat_4a2d6f.itemAtIndex -> setter_7e5c9f.new_value\n        ifexpression_e1b8ec.else -> for_7c6d1f.next\n        setter_1b3c8e.continue -> for_7c6d1f.next\n    }\n\n    \n\n    instance(x: -50, y: 159) find_missing_4a2d6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 2, name: \"list\") property(List) list_3e8b1f\n        in(x: -270, y: -226, name: \"execute\") trigger() execute_9c6d4a\n\n        out(x: 1017, y: -227, name: \"continue\") trigger() continue_e2f5ee\n        out(x: 1008, y: 147, name: \"output\") property(Number) output_3b0e7e\n\n        instance(x: 0, y: 0) for_1c6d4a root.Std_k98ojb.Std.For {}\n        getter(x: 344, y: 166, name: \"getter_e2f5ee\") getter_e2f5ee = index\n        setter(x: 683, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -275, y: -35, name: \"getter_9d4f1c\") getter_38e107 = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_e2f5ee\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3e8b1f -> for_1c6d4a.items\n        for_1c6d4a.item -> ifexpression_875761.gen_2\n        for_1c6d4a.index -> ifexpression_875761.gen_0\n        getter_e2f5ee.value -> ifexpression_875761.gen_1\n        for_1c6d4a.onItem -> ifexpression_875761.execute\n        for_1c6d4a.done -> continue_e2f5ee\n        for_1c6d4a.item -> setter_9d4f1c.new_value\n        list_3e8b1f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_9c6d4a -> setter_38e107.execute\n        setter_38e107.continue -> for_1c6d4a.reset\n        ifexpression_875761.value -> output_3b0e7e\n        getter_e2f5ee.value + 1 -> output_3b0e7e\n        setter_9d4f1c.continue -> for_1c6d4a.next\n    }\n\n    \n\n    instance(x: -19, y: 126) find_missing_9c6d4a root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f8d1e\n        in(x: -279, y: -230, name: \"execute\") trigger() execute_ea7c5b\n\n        out(x: 1006, y: -233, name: \"continue\") trigger() continue_3b2f4f\n        out(x: 1010, y: 17, name: \"output\") property(Number) output_9e1d8e\n\n        instance(x: 0, y: 0) for_7a6c1f root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 0, name: \"getter_5e2f4e\") getter_5e2f4e = index\n        setter(x: 0, y: 0, name: \"setter_7a8c9d\") setter_7a8c9d = index\n        instance(x: -0, y: 0) ifexpression_1b6d3e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_7a8c9d\") getter_7a8c9d = previous\n        setter(x: -0, y: 0, name: \"setter_5e2f4e\") setter_5e2f4e = previous\n        instance(x: 0, y: 0) math_add_node root.Std_k98ojb.Math.Add {}\n        list_7a8c9d -> for_7a6c1f.items\n        execute_ea7c5b -> setter_7a8c9d.execute\n        -1 -> setter_7a8c9d.new_value\n        getter_5e2f4e.value -> ifexpression_1b6d3e.gen_0\n        getter_7a8c9d.value -> ifexpression_1b6d3e.gen_1\n        for_7a6c1f.item -> ifexpression_1b6d3e.gen_2\n        math_add_node.result -> output_9e1d8e\n        1 -> math_add_node.second\n        getter_5e2f4e.value -> math_add_node.first\n        ifexpression_1b6d3e.then -> setter_5e2f4e.execute\n        for_7a6c1f.onItem -> ifexpression_1b6d3e.execute\n        list_9f8d1e -> for_7a6c1f.items\n        getter_5e2f4e.value -> output_9e1d8e\n        setter_5e2f4e.continue -> continue_3b2f4f\n        ifexpression_1b6d3e.else -> continue_3b2f4f\n        for_7a6c1f.done -> continue_3b2f4f\n        for_7a6c1f.index -> setter_5e2f4e.new_value\n        setter_7a8c9d.continue -> for_7a6c1f.reset\n        setter_5e2f4e.continue -> for_7a6c1f.next\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_3b2f4f root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 18, name: \"input\") property(String) input_9e3f1d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8c7a5b\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_06d2e5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) ifexpression_4aeea6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == ' ' || x == ',' || x == '.'\"\n        }\n        list_instance(x: 92, y: -22) data_cc1b1b  = [\":\", \" \", \",\", \".\"]\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        input_9e3f1d -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            ifexpression_4aeea6.execute -> replace_06d2e5.execute\n            map_f2330d.index -> slice_3f3ee6.start\n            map_f2330d.index -> sub_f133b2.first\n            1 -> sub_f133b2.second\n            sub_f133b2.result -> slice_3f3ee6.end\n            data_cc1b1b -> slice_3f3ee6.list\n            slice_3f3ee6.slice -> replace_06d2e5.search\n            x_8ee839 -> ifexpression_4aeea6.gen_0\n            input_9e3e1d -> ifexpression_4aeea6.gen_1\n            data_cc1b1b -> length_4b8927.list\n            length_4b8927.length -> replace_06d2e5.replace\n            replace_06d2e5.output -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_8c7a5b\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_1f3d9e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -200, y: 0, name: \"input\") property(String) input_9b1f8e\n\n        out(x: 500, y: -2, name: \"output\") property(String) output_7a5c4d\n\n        instance(x: 0, y: 1) replace_3e6b3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9f1e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5a4d7e root.Std_k98ojb.Strings.Replace {}\n        input_9b1f8e -> replace_3e6b3c.input\n        \" \" -> replace_3e6b3c.search\n        \":\" -> replace_3e6b3c.replace\n        replace_3e6b3c.output -> replace_9f1e8f.input\n        \",\" -> replace_9f1e8f.search\n        \":\" -> replace_9f1e8f.replace\n        replace_9f1e8f.output -> replace_5a4d7e.input\n        \".\" -> replace_5a4d7e.search\n        \":\" -> replace_5a4d7e.replace\n        replace_5a4d7e.output -> output_7a5c4d\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_spaces_commas_dots_2f3b9c root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 94, y: -105) replace_3c7b9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) replace_5f0e8a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3c7b9d.input\n        \" \" -> replace_3c7b9d.search\n        \":\" -> replace_3c7b9d.replace\n        replace_3c7b9d.output -> replace_5f0e8a.input\n        \",\" -> replace_5f0e8a.search\n        \":\" -> replace_5f0e8a.replace\n        \".\" -> replace_5f0e8a.search\n        \":\" -> replace_5f0e8a.replace\n        replace_5f0e8a.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9c7b4d root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -199, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 94, y: 9) replace_3e6f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_7a1d4c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e6f8c.input\n        \" \" -> replace_3e6f8c.search\n        \":\" -> replace_3e6f8c.replace\n        replace_3e6f8c.output -> replace_7a1d4c.input\n        \",\" -> replace_7a1d4c.search\n        \":\" -> replace_7a1d4c.replace\n        \".\" -> replace_7a1d4c.search\n        \":\" -> replace_7a1d4c.replace\n        replace_7a1d4c.output -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_spaces_commas_dots_5f8e2b root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 0, name: \"input\") property(String) input_1d3b6f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8a5c\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_instance(x: 92, y: -22) data_cc1b1b = [space, comma, dot]\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            instance(x: 92, y: -22) replace_1c2b5f root.Std_k98ojb.Strings.Replace {}\n            x_8ee839 -> replace_1c2b5f.input\n            data_cc1b1b.last -> replace_1c2b5f.search\n            \":\" -> replace_1c2b5f.replace\n            replace_1c2b5f.output -> _7dd980\n        } -> map_f2330d.handler\n        input_1d3b6f -> map_f2330d.items\n        data_cc1b1b.first -> data_cc1b1b.last\n        \" \" -> data_cc1b1b.first\n        \",\" -> data_cc1b1b.second\n        \".\" -> data_cc1b1b.third\n        map_f2330d.output_list -> output_7e8a5c\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9f2c3f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"input\") property(String) input_8e3f1a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5b9c4d\n\n        instance(x: 0, y: 1) replace_6a7d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8e3b7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d4c9ed root.Std_k98ojb.Strings.Replace {}\n        input_8e3f1a -> replace_6a7d2f.input\n        \" \" -> replace_6a7d2f.search\n        \":\" -> replace_6a7d2f.replace\n        replace_6a7d2f.output -> replace_8e3b7f.input\n        \",\" -> replace_8e3b7f.search\n        \":\" -> replace_8e3b7f.replace\n        replace_8e3b7f.output -> replace_d4c9ed.input\n        \".\" -> replace_d4c9ed.search\n        \":\" -> replace_d4c9ed.replace\n        replace_d4c9ed.output -> output_5b9c4d\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_b3a1e6 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 0, name: \"input\") property(String) input_8f2a9e\n\n        out(x: 500, y: -1, name: \"output\") property(String) output_5b3c6d\n\n        instance(x: 0, y: 0) replace_7c4c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_9e2a1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_5d6f3d root.Std_k98ojb.Strings.Replace {}\n        input_8f2a9e -> replace_7c4c8f.input\n        \" \" -> replace_7c4c8f.search\n        \":\" -> replace_7c4c8f.replace\n        replace_7c4c8f.output -> replace_9e2a1f.input\n        \",\" -> replace_9e2a1f.search\n        \":\" -> replace_9e2a1f.replace\n        replace_9e2a1f.output -> replace_5d6f3d.input\n        \".\" -> replace_5d6f3d.search\n        \":\" -> replace_5d6f3d.replace\n        replace_5d6f3d.output -> output_5b3c6d\n    }\n\n    \n\n    instance(x: -139, y: 38) replace_9a7e1c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 2, name: \"input\") property(String) input_1d9f0e\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_7c3a5b\n\n        instance(x: 94, y: -105) replace_4b8f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 9) replace_6d7e1f root.Std_k98ojb.Strings.Replace {}\n        input_1d9f0e -> replace_4b8f2f.input\n        \" \" -> replace_4b8f2f.search\n        \":\" -> replace_4b8f2f.replace\n        replace_4b8f2f.output -> replace_6d7e1f.input\n        \",\" -> replace_6d7e1f.search\n        \":\" -> replace_6d7e1f.replace\n        \".\" -> replace_6d7e1f.search\n        \":\" -> replace_6d7e1f.replace\n        replace_6d7e1f.output -> output_7c3a5b\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_b9ff6b root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_5f3d9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7a8c4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6f8c1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5f3d9e.input\n        \" \" -> replace_5f3d9e.search\n        \":\" -> replace_5f3d9e.replace\n        replace_5f3d9e.output -> replace_7a8c4c.input\n        \",\" -> replace_7a8c4c.search\n        \":\" -> replace_7a8c4c.replace\n        replace_7a8c4c.output -> replace_6f8c1f.input\n        \".\" -> replace_6f8c1f.search\n        \":\" -> replace_6f8c1f.replace\n        replace_6f8c1f.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7a9b4e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3e4f9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d8a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_5c8c1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e4f9c.input\n        \" \" -> replace_3e4f9c.search\n        \":\" -> replace_3e4f9c.replace\n        replace_3e4f9c.output -> replace_7d8a6f.input\n        \",\" -> replace_7d8a6f.search\n        \":\" -> replace_7d8a6f.replace\n        replace_7d8a6f.output -> replace_5c8c1f.input\n        \".\" -> replace_5c8c1f.search\n        \":\" -> replace_5c8c1f.replace\n        replace_5c8c1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7e9b6a root.main.replace_spaces_commas_dots {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 555, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_4b1e7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: -3) length_8f9a4f root.Std_k98ojb.List.Length {}\n        instance(x: 479, y: 5) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 702, y: 1) equal_7c7e3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 919, y: -4) for_9a5b8c root.Std_k98ojb.Std.For {}\n        instance(x: 1152, y: 0) ifexpression_c6d1f9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 434, y: 17, name: \"getter_8c3e5a\") getter_8c3e5a = previous\n        setter(x: 779, y: -45, name: \"setter_e9b1f7\") setter_e9b1f7 = previous\n        instance(x: 422, y: -20) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        getter(x: -3, y: -29, name: \"getter_e9b1f7\") getter_e9b1f7 = previous\n        setter(x: 15, y: -61, name: \"setter_8c3e5a\") setter_8c3e5a = previous\n        ifexpression_c6d1f9.else -> for_9a5b8c.next\n        ifexpression_c6d1f9.value -> output_5c7d6b\n        ifexpression_c6d1f9.then -> setter_e9b1f7.execute\n        characters_4b1e7c.characters -> for_9a5b8c.items\n        for_9a5b8c.item -> getat_6d0f2f.list\n        0 -> getat_6d0f2f.index\n        getat_6d0f2f.itemAtIndex -> equal_7c7e3c.left\n        getter_e9b1f7.value -> equal_7c7e3c.right\n        for_9a5b8c.onItem -> ifexpression_c6d1f9.execute\n        for_9a5b8c.done -> for_9a5b8c.next\n        characters_4b1e7c.characters -> length_8f9a4f.list\n        for_9a5b8c.index -> getat_6d0f2f.index\n        for_9a5b8c.index -> ifexpression_c6d1f9.gen_0\n        getter_8c3e5a.value -> ifexpression_c6d1f9.gen_1\n        equal_7c7e3c.result -> ifexpression_c6d1f9.gen_2\n        for_9a5b8c.item -> setter_e9b1f7.new_value\n        getat_6d0f2f.list -> getter_8c3e5a.list\n        string_3f8a9e -> characters_4b1e7c.input\n        ifexpression_c6d1f9.then -> setter_8c3e5a.execute\n        for_9a5b8c.item -> getat_6d0f2f.list\n        getter_e9b1f7.value -> setter_8c3e5a.new_value\n        getat_6d0f2f.itemAtIndex -> setter_8c3e5a.new_value\n    }\n\n    \n\n    instance(x: 30, y: -19) check_same_4c1d6f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -288, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3c8d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) setintersection_7e6a5f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 530, y: 2) equal_0f9c3c root.Std_k98ojb.Logic.Equal {}\n        characters_3c8d4f.characters -> setintersection_7e6a5f.left\n        characters_3c8d4f.characters -> setintersection_7e6a5f.right\n        1 -> equal_0f9c3c.right\n        setintersection_7e6a5f.intersect -> equal_0f9c3c.left\n        string_1 -> characters_3c8d4f.input\n        equal_0f9c3c.result -> output_1\n    }\n\n    \n\n    instance(x: -10, y: 40) check_same_2e5b7a root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -299, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 557, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3a8c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: -4) length_7d5e6c root.Std_k98ojb.List.Length {}\n        instance(x: 483, y: 1) equal_2f0b7c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 704, y: 3) and_9a8f4f root.Std_k98ojb.Logic.And {}\n        string_1 -> characters_3a8c9f.input\n        characters_3a8c9f.characters -> length_7d5e6c.list\n        instance(x: -0, y: 0) getat_7e7f4c root.Std_k98ojb.List.GetAt {}\n        instance(x: 146, y: 0) getat_1c2a8f root.Std_k98ojb.List.GetAt {}\n        characters_3a8c9f.characters -> getat_7e7f4c.list\n        1 -> getat_7e7f4c.index\n        instance(x: -0, y: 0) getat_5d6c8f root.Std_k98ojb.List.GetAt {}\n        characters_3a8c9f.characters -> getat_1c2a8f.list\n        length_7d5e6c.length -> getat_1c2a8f.index\n        instance(x: -0, y: 0) getat_1b4f5f root.Std_k98ojb.List.GetAt {}\n        characters_3a8c9f.characters -> getat_5d6c8f.list\n        length_7d5e6c.length -> getat_5d6c8f.index\n        getat_7e7f4c.itemAtIndex -> equal_2f0b7c.left\n        getat_1c2a8f.itemAtIndex -> equal_2f0b7c.right\n        equal_2f0b7c.result -> and_9a8f4f.left\n        1 -> length_7d5e6c.list\n        getat_1b4f5f.itemAtIndex -> and_9a8f4f.right\n        characters_3a8c9f.characters -> getat_1b4f5f.list\n        equal_2f0b7c.result -> output_1\n    }\n\n    \n\n    instance(x: 13, y: -12) check_same_f6e6d2 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -283, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 593, y: 2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 3) characters_5f9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) reduce_7e6d8a root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -114, y: 34, name: \"accumulated\") property(String) accumulated_0\n                in(x: -12, y: 35, name: \"current\") property(String) current_0\n\n                out(x: 515, y: 44, name: \"result\") property(String) result_0\n\n                instance(x: 89, y: 29) equal_1b8c9f root.Std_k98ojb.Logic.Equal {}\n                accumulated_0 -> equal_1b8c9f.left\n                current_0 -> equal_1b8c9f.right\n                equal_1b8c9f.result -> result_0\n            }\n        }\n        instance(x: 529, y: 2) not_7a3d6e root.Std_k98ojb.Logic.Not {}\n        characters_5f9b8c.characters -> reduce_7e6d8a.items\n        string_0 -> characters_5f9b8c.input\n        \"!\" -> reduce_7e6d8a.initialValue\n        reduce_7e6d8a.output -> not_7a3d6e.input\n        not_7a3d6e.result -> result_0\n    }\n\n    \n\n    instance(x: -54, y: 529) check_same_2c856f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 560, y: 3, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_7a9c5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 496, y: 1) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 720, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 944, y: -3) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 1156, y: 5, name: \"getter_1\") getter_1 = previous\n        setter(x: 1340, y: -28, name: \"setter_2\") setter_2 = previous\n        instance(x: 1514, y: -3) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter_1.value -> ifexpression_875761.gen_1\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        string_1 -> characters_7a9c5f.input\n        characters_7a9c5f.characters -> length_6e87f2.list\n        characters_7a9c5f.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_2.new_value\n        ifexpression_875761.value -> output_1\n        length_6e87f2.length -> for_d26972.items\n        characters_7a9c5f.characters -> for_d26972.items\n        ifexpression_875761.then -> setter_2.execute\n        ifexpression_875761.else -> for_d26972.next\n        for_d26972.done -> output_1\n    }\n\n    \n\n    instance(x: 40, y: -4) check_same_f3b7a8 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_3f1a9e\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_4b8c5d\n\n        instance(x: 0, y: 1) characters_6b7d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) setintersection_9e2a2c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 500, y: -1) length_3b4f6c root.Std_k98ojb.List.Length {}\n        characters_6b7d8f.output -> setintersection_9e2a2c.left\n        characters_6b7d8f.output -> setintersection_9e2a2c.right\n        1 -> length_3b4f6c.list\n        setintersection_9e2a2c.intersect -> length_3b4f6c.list\n        length_3b4f6c.length -> result_4b8c5d\n        string_3f1a9e -> characters_6b7d8f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_2e4d0f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_3a1f9e\n\n        out(x: 559, y: 2, name: \"output\") property(Bool) output_8b7c4d\n\n        instance(x: 0, y: 0) characters_c5e6ea root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -1) length_9a3f2f root.Std_k98ojb.List.Length {}\n        instance(x: 488, y: 0) getat_8d7c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 713, y: 0) equal_5e4f1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 927, y: -2) reduce_9a3a5f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        characters_c5e6ea.characters -> length_9a3f2f.list\n        string_3a1f9e -> characters_c5e6ea.input\n        0 -> getat_8d7c6f.index\n        characters_c5e6ea.characters -> getat_8d7c6f.list\n        reduce_9a3a5f.items -> characters_c5e6ea.characters\n        length_9a3f2f.length -> getat_8d7c6f.index\n        1 -> equal_5e4f1f.right\n        getat_8d7c6f.itemAtIndex -> equal_5e4f1f.left\n        reduce_9a3a5f.initialValue -> equal_5e4f1f.gen_0\n        equal_5e4f1f.result -> reduce_9a3a5f.previous\n        characters_c5e6ea.characters -> reduce_9a3a5f.items\n        reduce_9a3a5f.output -> output_8b7c4d\n    }\n\n    \n\n    instance(x: -17, y: 18) is_same_f1a0d2 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3e7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -50, y: 2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_3e7f9c.characters -> contains_d42dce.list\n        \"a\" -> contains_d42dce.item\n        characters_3e7f9c.characters -> length_6e87f2.list\n        instance(x: 0, y: -1) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"length == 0 || (contains && index > 0)\"\n        }\n        contains_d42dce.result -> ifexpression_875761.gen_1\n        length_6e87f2.length -> ifexpression_875761.gen_0\n        instance(x: -82, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        characters_3e7f9c.characters -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        ifexpression_875761.else -> result_0\n        ifexpression_875761.value -> result_0\n        ifexpression_875761.then -> contains_d42dce.execute\n        input_0 -> characters_3e7f9c.input\n        length_6e87f2.length -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> contains_d42dce.contains\n    }\n\n    \n\n    instance(x: -67, y: 52) is_same_f21f44 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 533, y: 2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 3) characters_5e7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 266, y: 1) all_equal_4a8d9f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_0\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 89, y: 29) equal_1c9b2f root.Std_k98ojb.Logic.Equal {}\n                characters_5e7f9c.characters[0] -> equal_1c9b2f.left\n                elem_0 -> equal_1c9b2f.right\n                equal_1c9b2f.result -> bool_0\n            }\n        }\n        string_0 -> characters_5e7f9c.input\n        characters_5e7f9c.characters -> all_equal_4a8d9f.items\n        1 == all_equal_4a8d9f.output_list.length -> result_0\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_f2b3f6 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_7e3c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) set_intersection_d5a9d8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 485, y: -2) length_1a6f7e root.Std_k98ojb.List.Length {}\n        characters_7e3c4f.characters -> set_intersection_d5a9d8.left\n        characters_7e3c4f.characters -> set_intersection_d5a9d8.right\n        length_1a6f7e.length -> set_intersection_d5a9d8.intersection -> result_1\n        string_1 -> characters_7e3c4f.input\n        characters_7e3c4f.characters -> length_1a6f7e.list\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_2b9d0f root.main.check_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c0d4e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9c0d4e.second\n        expression_2d6da6.result -> pow_9c0d4e.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9c0d4e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e5c0d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e5c0d.y\n        expression_2d6da6.result -> pow_9e5c0d.x\n        data_cde0dc -> pow_9e5c0d.power\n        pow_9e5c0d.result -> sum_365f7b\n        n_3a3116 -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4e8c9d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4e8c9d.second\n        expression_2d6da6.result -> pow_4e8c9d.first\n        n_3a3116 -> mul_f892a4.first\n        pow_4e8c9d.result -> mul_f892a4.second\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 10, name: \"size\") property(Number) size_8a0f9e\n\n        out(x: 1066, y: 12, name: \"surface_area\") property(Number) surface_area_b3c1d4\n\n        instance(x: 16, y: -7) mul_5b2a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 332, y: 55) data_8f0e6c  = 6\n        instance(x: 14, y: 53) pow_1d9a9c root.Std_k98ojb.Math.Pow {}\n        mul_5b2a4.result -> surface_area_b3c1d4\n        size_8a0f9e -> mul_5b2a4.first\n        data_8f0e6c -> mul_5b2a4.second\n        size_8a0f9e -> pow_1d9a9c.x\n        2 -> pow_1d9a9c.y\n        pow_1d9a9c.result -> mul_5b2a4.first\n    }\n\n    \n\n    instance(x: -6, y: -16) surface_area_cube_8f3e7 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 20, name: \"size\") property(Number) size_9e8f1a\n\n        out(x: 1166, y: 19, name: \"surface_area\") property(Number) surface_area_b0c7d2\n\n        instance(x: 16, y: -11) mul_f3b4e5 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 310, y: 71) data_1a9f6c  = 6\n        instance(x: 13, y: 68) pow_2d0a7f root.Std_k98ojb.Math.Pow {}\n        size_9e8f1a -> mul_f3b4e5.first\n        data_1a9f6c -> mul_f3b4e5.second\n        size_9e8f1a -> pow_2d0a7f.x\n        2 -> pow_2d0a7f.y\n        mul_f3b4e5.result -> surface_area_b0c7d2\n        pow_2d0a7f.result -> mul_f3b4e5.first\n    }\n\n    \n\n    instance(x: -20, y: -16) surface_area_cube_1c8c6c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"n*n\"\n        }\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 56, name: \"side\") property(Number) side_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        expression_instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_3a3116 -> mul_f892a4.first\n        side_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -108, y: 12, name: \"size\") property(Number) size_1f9a3d\n\n        out(x: 1024, y: 0, name: \"surface_area\") property(Number) surface_area_5c7b2e\n\n        instance(x: 8, y: -10) mul_f6b8f8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: 16) pow_e9a1d4 root.Std_k98ojb.Math.Pow {}\n        instance(x: 88, y: 0) mul_3c7e2f root.Std_k98ojb.Math.Mul {}\n        size_1f9a3d -> pow_e9a1d4.x\n        2 -> pow_e9a1d4.y\n        pow_e9a1d4.result -> mul_f6b8f8.first\n        6 -> mul_f6b8f8.second\n        mul_f6b8f8.result -> mul_3c7e2f.first\n        size_1f9a3d -> mul_3c7e2f.second\n        mul_3c7e2f.result -> surface_area_5c7b2e\n    }\n\n    \n\n    instance(x: 128, y: -28) surface_area_cube_a6a4ed root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_9e3f1a\n\n        out(x: 656, y: 63, name: \"surface_area\") property(Number) surface_area_b2b7d4\n\n        instance(x: 94, y: 25) mul_5c6c8c root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 93, y: -101) mul_1a9d2f root.Std_k98ojb.Math.Mul {}\n        size_9e3f1a -> pow_584bfd.x\n        6 -> pow_584bfd.y\n        pow_584bfd.result -> mul_5c6c8c.first\n        2 -> mul_5c6c8c.second\n        mul_5c6c8c.result -> mul_1a9d2f.first\n        size_9e3f1a -> mul_1a9d2f.second\n        mul_1a9d2f.result -> surface_area_b2b7d4\n    }\n\n    \n\n    instance(x: 426, y: -303) surface_area_cube_8c0b5f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 11, name: \"size\") property(Number) size_1a8d9f\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_3e6c0b\n\n        instance(x: 94, y: -105) mul_4e7f5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 92, y: 25) mul_2d9c8a root.Std_k98ojb.Math.Mul {}\n        size_1a8d9f -> pow_584bfd.x\n        3 -> pow_584bfd.y\n        pow_584bfd.result -> mul_4e7f5f.first\n        6 -> mul_4e7f5f.second\n        mul_4e7f5f.result -> surface_area_3e6c0b\n        size_1a8d9f -> mul_2d9c8a.first\n        size_1a8d9f -> mul_2d9c8a.second\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_b9ff6b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_8e9f1a\n\n        out(x: 46, y: 0, name: \"surface_area\") property(Number) surface_area_7c6d4b\n\n        instance(x: 15, y: -1) mul_3a2f5f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_3a2f5f.result -> div_64046c.first\n        expression_2d6da6.result -> mul_3a2f5f.second\n        side_8e9f1a -> mul_3a2f5f.first\n        side_8e9f1a -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_7c6d4b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_3b9c0c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 15, name: \"size\") property(Number) size_8f9d1e\n\n        out(x: 1062, y: 7, name: \"surface_area\") property(Number) surface_area_3c6a5b\n\n        instance(x: 10, y: -12) mul_4a0f2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 11, y: 67) pow_9e7d9f root.Std_k98ojb.Math.Pow {}\n        instance(x: 8, y: 118) mul_3a5b1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 6, y: 178) mul_4c2e0f root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: 227) add_9d7b8f root.Std_k98ojb.Math.Add {}\n        size_8f9d1e -> pow_9e7d9f.x\n        2 -> pow_9e7d9f.y\n        pow_9e7d9f.result -> mul_4a0f2c.first\n        6 -> mul_4a0f2c.second\n        mul_4a0f2c.result -> surface_area_3c6a5b\n        size_8f9d1e -> mul_3a5b1f.first\n        size_8f9d1e -> mul_3a5b1f.second\n        mul_3a5b1f.result -> mul_4c2e0f.first\n        6 -> mul_4c2e0f.second\n        mul_4c2e0f.result -> add_9d7b8f.first\n        mul_3a5b1f.result -> add_9d7b8f.second\n    }\n\n    \n\n    instance(x: -18, y: 12) surface_area_cube_6e8f9c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"size\") property(Number) size_1f3d8e\n\n        out(x: 600, y: 0, name: \"surface_area\") property(Number) surface_area_f7b9c4\n\n        instance(x: 30, y: 0) mul_5a2c6 root.Std_k98ojb.Math.Mul {}\n        instance(x: -90, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        instance(x: 150, y: 0) mul_1d9f7e root.Std_k98ojb.Math.Mul {}\n        instance(x: 210, y: 0) add_2c6a5f root.Std_k98ojb.Math.Add {}\n        size_1f3d8e -> math_expr_node.gen_0\n        math_expr_node.result -> mul_5a2c6.first\n        6 -> mul_5a2c6.second\n        mul_5a2c6.result -> add_2c6a5f.first\n        size_1f3d8e -> mul_1d9f7e.first\n        math_expr_node.result -> mul_1d9f7e.second\n        mul_1d9f7e.result -> add_2c6a5f.second\n        add_2c6a5f.result -> surface_area_f7b9c4\n    }\n\n    \n\n    instance(x: 0, y: -50, name: \"surface_area_cube\") surface_area_cube_8f3d1 root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 157, name: \"list\") property(List) list_9a3f1e\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7b8d6c\n\n        instance(x: 201, y: 126) sub_5e2a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f9f3aa root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_1a8c6e root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_9f7d5c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_e1e6a8 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f9f3aa.max -> firstitem_1a8c6e.list\n        minlist_9f7d5c.min -> firstitem_e1e6a8.list\n        list_9a3f1e -> maxlist_f9f3aa.list\n        list_9a3f1e -> minlist_9f7d5c.list\n        firstitem_1a8c6e.item -> sub_5e2a0c.first\n        firstitem_e1e6a8.item -> sub_5e2a0c.second\n        sub_5e2a0c.result -> output_7b8d6c\n    }\n\n    \n\n    instance(x: -66, y: 10) diff_max_min_9f3c1f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 165, name: \"list\") property(List) list_1f0b9e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_7c8a3d\n\n        instance(x: 532, y: 147) sub_6a2a5f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f1e9aa root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_7c0a8f root.Std_k98ojb.List.Min {}\n        list_1f0b9e -> max_f1e9aa.list\n        list_1f0b9e -> min_7c0a8f.list\n        max_f1e9aa.max -> sub_6a2a5f.first\n        min_7c0a8f.min -> sub_6a2a5f.second\n        sub_6a2a5f.result -> output_7c8a3d\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f1b4e9 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 155, name: \"list\") property(List) list_9e1f8a\n\n        out(x: 544, y: 146, name: \"output\") property(Number) output_7b4d6c\n\n        instance(x: 0, y: 0) sub_2b3b7f root.Std_k98ojb.Math.Sub {}\n        instance(x: -106, y: 156) max_1a8e9c root.Std_k98ojb.List.Max {}\n        instance(x: -107, y: -5) min_4d6f0f root.Std_k98ojb.List.Min {}\n        list_9e1f8a -> max_1a8e9c.list\n        list_9e1f8a -> min_4d6f0f.list\n        max_1a8e9c.max -> sub_2b3b7f.first\n        min_4d6f0f.min -> sub_2b3b7f.second\n        sub_2b3b7f.result -> output_7b4d6c\n    }\n\n    \n\n    instance(x: 49, y: 141) diff_max_min_5a1e8e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 154, name: \"list\") property(List) list_9a1f6e\n\n        out(x: 600, y: 145, name: \"output\") property(Number) output_eb2c8d\n\n        instance(x: 0, y: 0) sub_7f5f9f root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 26, name: \"Max value\") max_3e1a6f root.Std_k98ojb.List.Max {}\n        instance(x: -106, y: 257, name: \"Min value\") min_7c9d0f root.Std_k98ojb.List.Min {}\n        list_9a1f6e -> max_3e1a6f.list\n        list_9a1f6e -> min_7c9d0f.list\n        sub_7f5f9f.first -> max_3e1a6f.max\n        sub_7f5f9f.second -> min_7c9d0f.min\n        sub_7f5f9f.result -> output_eb2c8d\n    }\n\n    \n\n    instance(x: -293, y: 165) diff_max_min_1a3e6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_0d9f8e\n\n        out(x: 547, y: 145, name: \"output\") property(Number) output_1b2c7a\n\n        instance(x: 533, y: 147) sub_6a5f1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -38, y: 26, name: \"Max value\") max_3e8d4f root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_f7a6ed root.Std_k98ojb.List.Min {}\n        list_0d9f8e -> max_3e8d4f.list\n        list_0d9f8e -> min_f7a6ed.list\n        max_3e8d4f.max -> sub_6a5f1f.first\n        min_f7a6ed.min -> sub_6a5f1f.second\n        sub_6a5f1f.result -> output_1b2c7a\n    }\n\n    \n\n    instance(x: 93, y: -122) diff_max_min_cbc0b6 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 157, name: \"list\") property(List) list_1a8b5f\n\n        out(x: 542, y: 146, name: \"output\") property(Number) output_e2d7e6\n\n        instance(x: 0, y: 0) sub_9c4b3e root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: 26, name: \"Max value\") max_1a5f7f root.Std_k98ojb.List.Max {}\n        instance(x: -106, y: 258, name: \"Min value\") min_f6c9d2 root.Std_k98ojb.List.Min {}\n        list_1a8b5f -> max_1a5f7f.list\n        list_1a8b5f -> min_f6c9d2.list\n        sub_9c4b3e.first -> max_1a5f7f.max\n        sub_9c4b3e.second -> min_f6c9d2.min\n        sub_9c4b3e.result -> output_e2d7e6\n    }\n\n    \n\n    instance(x: -56, y: 177) diff_max_min_8a5b1f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 165, name: \"list\") property(List) list_0d4f9e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea1b8c\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f2d5f9 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_1a0e8c root.Std_k98ojb.List.Min {}\n        list_0d4f9e -> max_f2d5f9.list\n        list_0d4f9e -> min_1a0e8c.list\n        max_f2d5f9.max -> sub_7e1ce0.first\n        min_1a0e8c.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_ea1b8c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 156, name: \"list\") property(List) list_9a1f8e\n\n        out(x: 442, y: 147, name: \"output\") property(Number) output_7b4d6c\n\n        instance(x: 188, y: 144) sub_5f3f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: 156) max_1a9b8c root.Std_k98ojb.List.Max {}\n        instance(x: -104, y: -10) min_d0d7ad root.Std_k98ojb.List.Min {}\n        list_9a1f8e -> max_1a9b8c.list\n        list_9a1f8e -> min_d0d7ad.list\n        max_1a9b8c.max -> sub_5f3f2e.first\n        min_d0d7ad.min -> sub_5f3f2e.second\n        sub_5f3f2e.result -> output_7b4d6c\n    }\n\n    \n\n    instance(x: 46, y: 147) diff_max_min_1a8f2f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -318, y: 521, name: \"Max list\") max_1a7d3f root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_4e9f0c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_1a7d3f.max -> sub_852f2e.first\n        min_4e9f0c.min -> sub_852f2e.second\n        list_0b075e -> max_1a7d3f.list\n        list_0b075e -> min_4e9f0c.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 0, name: \"list\") property(List) list_1f8a3e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.list -> firstitem_870503.list\n        min_4d4556.list -> firstitem_3078c6.list\n        list_1f8a3e -> max_f3b46d.list\n        list_1f8a3e -> min_4d4556.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 20, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_9b7a6c\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -106, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_5e8f1d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_9b7a6c\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9e6d5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 12, name: \"input\") property(Number) input_9f6a8e\n        in(x: -451, y: -112, name: \"execute\") trigger() execute_e1b7c0\n\n        out(x: 1182, y: 4, name: \"output\") property(Bool) output_f3d5ba\n        out(x: 1228, y: -111, name: \"continue\") trigger() continue_9a6e9f\n\n        instance(x: 1067, y: -108) ifexpression_2c0b4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 1048, y: 19, name: \"getter_9f6a8e\") getter_9f6a8e = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9f6a8e -> ifexpression_2c0b4c.gen_0\n        ifexpression_2c0b4c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_2c0b4c.else -> continue_9a6e9f\n        getter_9f6a8e.value -> output_f3d5ba\n        execute_e1b7c0 -> ifexpression_2c0b4c.execute\n        setter_1cedb2.continue -> continue_9a6e9f\n    }\n\n    \n\n    instance(x: -177, y: 17) is_even_9d8f3f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"input\") property(Number) input_5f9a8e\n        in(x: -465, y: -234, name: \"execute\") trigger() execute_1b2d6c\n\n        out(x: 1227, y: -10, name: \"output\") property(Bool) output_4b0c7e\n        out(x: 1218, y: 130, name: \"continue\") trigger() continue_5f3a8f\n\n        instance(x: 752, y: 75) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_5f9a8e -> ifexpression_875761.gen_0\n        execute_1b2d6c -> ifexpression_875761.execute\n        ifexpression_875761.value -> output_4b0c7e\n        ifexpression_875761.then -> continue_5f3a8f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_f9a2d1 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 10, name: \"input\") property(Number) input_5e9f0d\n        in(x: -456, y: -114, name: \"execute\") trigger() execute_eb2c8a\n\n        out(x: 544, y: 11, name: \"output\") property(Bool) output_f6a3ef\n        out(x: 513, y: -115, name: \"continue\") trigger() continue_9e1f5d\n\n        instance(x: -82, y: 0) modulo_7b2c8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 202, y: 11) equal_6a3f4f root.Std_k98ojb.Logic.Equal {}\n        input_5e9f0d -> modulo_7b2c8f.value\n        2 -> modulo_7b2c8f.divisor\n        modulo_7b2c8f.result -> equal_6a3f4f.left\n        0 -> equal_6a3f4f.right\n        execute_eb2c8a -> modulo_7b2c8f.execute\n        equal_6a3f4f.result -> output_f6a3ef\n        equal_6a3f4f.value -> continue_9e1f5d\n    }\n\n    \n\n    instance(x: -56, y: 179) is_even_0f7b2c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 17, name: \"input\") property(Number) input_1f8e0d\n        in(x: -460, y: -114, name: \"execute\") trigger() execute_9b2c6a\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_7c3a5e\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_e1d4f0\n\n        instance(x: -105, y: -110) ifexpression_c8b9ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1e3c6f\") getter_1e3c6f = output\n        setter(x: 116, y: -268, name: \"setter_ea7d8b\") setter_ea7d8b = output\n        instance(x: 118, y: -56) ``getter_1e3c6f_0f2c5e`` root.Std_k98ojb.Std.IfExpression {\n            expression: \"true\"\n        }\n        input_1f8e0d -> ifexpression_c8b9ef.gen_0\n        execute_9b2c6a -> ifexpression_c8b9ef.execute\n        getter_1e3c6f.value -> output_e1d4f0\n        ``getter_1e3c6f_0f2c5e``.then -> setter_ea7d8b.execute\n        true -> ``getter_1e3c6f_0f2c5e``.gen_0\n        ifexpression_c8b9ef.then -> ``getter_1e3c6f_0f2c5e``.execute\n        1 -> setter_ea7d8b.new_value\n        ifexpression_c8b9ef.else -> continue_7c3a5e\n        ``getter_1e3c6f_0f2c5e``.else -> continue_7c3a5e\n        setter_ea7d8b.continue -> continue_7c3a5e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_4f9d1f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 167, name: \"input\") property(Number) input_9f8a0e\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_e5c1b3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_9f8a",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 30, name: \"input\") property(Number) input_1a9d8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_5c2b3e\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e6f7ee\n        out(x: 1269, y: 25, name: \"output\") property(Bool) output_1a8d4f\n\n        instance(x: -105, y: -110) ifexpression_c0b3c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9d8f -> ifexpression_c0b3c2.gen_0\n        execute_5c2b3e -> ifexpression_c0b3c2.execute\n        ifexpression_c0b3c2.then -> continue_e6f7ee\n        ifexpression_c0b3c2.else -> continue_e6f7ee\n        ifexpression_c0b3c2.value -> output_1a8d4f\n    }\n\n    \n\n    instance(x: -172, y: 11) is_even_5e9f2c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 166, name: \"input\") property(Number) input_0a9f1e\n        in(x: -485, y: 30, name: \"execute\") trigger() execute_eb7c6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_f3a8ac\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9e1f0f\n\n        instance(x: -35, y: 92) modulo_6c7d5b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 332, y: 93) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_0a9f1e -> modulo_6c7d5b.value\n        2 -> modulo_6c7d5b.divisor\n        modulo_6c7d5b.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        execute_eb7c6d -> equal_f89569.execute\n        equal_f89569.result -> output_9e1f0f\n        equal_f89569.value -> continue_f3a8ac\n    }\n\n    \n\n    instance(x: -291, y: 177) is_even_5f4c1b root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 17, name: \"input\") property(Number) input_5f8e0d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_7c1a9b\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_5f8e0d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_7c1a9b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_5a9d0e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_1a3e8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_e9b7d2\n\n        out(x: 546, y: 5, name: \"output\") property(Bool) output_4c0f6f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a3e8f\n\n        instance(x: -107, y: -115) ifexpression_e9b7d2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a3e8f -> ifexpression_e9b7d2.gen_0\n        execute_e9b7d2 -> ifexpression_e9b7d2.execute\n        ifexpression_e9b7d2.value -> output_4c0f6f\n        ifexpression_e9b7d2.then -> continue_1a3e8f\n        ifexpression_e9b7d2.else -> continue_1a3e8f\n    }\n\n    \n\n    instance(x: -173, y: 11) is_even_f4c0f6 root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_3f9c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``second occurrence_45e806`` root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> ``second occurrence_45e806``.input\n            find_3f9c8d.index + 1 -> ``second occurrence_45e806``.contains\n            ``second occurrence_45e806``.result -> bool_1eb6e9\n        } -> find_3f9c8d.predicate\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first occurrence_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_45e806`` root.Std_k98ojb.Strings.Contains {}\n            input_0 -> ``first occurrence_45e806``.input\n            current_afd5b1 -> ``first occurrence_45e806``.contains\n            ``first occurrence_45e806``.result -> bool_1eb6e9\n        } -> contains_d42dce.predicate\n        find_3f9c8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7f9c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first\") filter_634b7e root.Std_k98ojb.Query.Filter {\n            where: \"it == index\"\n        }\n        instance(x: 62, y: -226, name: \"second\") ``first_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        characters_2e1444.output -> find_7f9c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_2e1444.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7f9c8d.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_2e1444.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first_0b1361``.predicate\n        find_7f9c8d.item -> filter_634b7e.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_2e1444.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first_0b1361``.predicate\n        find_7f9c8d.item -> ``first_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_2e1444.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> filter_634b7e.predicate\n        ``first_0b1361``.item -> filter_634b7e.index\n        find_7f9c8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3c8d4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7f9a5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") filter_1c2d8e root.Std_k98ojb.Query.Filter {\n            where: \"it not in set\"\n        }\n        instance(x: 62, y: -226, name: \"filter\") filter_7f9a5f root.Std_k98ojb.Query.Filter {\n            where: \"it in set\"\n        }\n        characters_3c8d4e.characters -> find_7f9a5f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            filter_7f9a5f.result -> bool_1eb6e9\n        } -> find_7f9a5f.predicate\n        characters_3c8d4e.characters -> filter_1c2d8e.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            filter_7f9a5f.result -> bool_1eb6e9\n        } -> filter_1c2d8e.predicate\n        find_7f9a5f.item -> output_0\n        filter_1c2d8e.result -> filter_7f9a5f.list\n        input_0 -> characters_3c8d4e.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_6e6bfd root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 531, y: -2, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 1) characters_5a8d9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7c6e4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") ``first occurrence_2`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_3`` root.Std_k98ojb.Iteration.Find {}\n        characters_5a8d9f.characters -> find_7c6e4f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 112, y: 80) contains_4b7c9f root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_2``.output_list -> contains_4b7c9f.input\n            current_1 -> contains_4b7c9f.contains\n            contains_4b7c9f.result -> bool_2\n        } -> find_7c6e4f.predicate\n        characters_5a8d9f.characters -> ``first occurrence_3``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 112, y: 80) contains_4b7c9f root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_2``.output_list -> contains_4b7c9f.input\n            current_1 -> contains_4b7c9f.contains\n            contains_4b7c9f.result -> bool_2\n        } -> ``first occurrence_3``.predicate\n        find_7c6e4f.item -> output_1\n        input_1 -> characters_5a8d9f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d42ce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -60) filter_3a9f8c root.Std_k98ojb.Query.Filter {\n            where: \"it == item\"\n        }\n        characters_2e1444.output -> find_1c5d7e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            characters_2e1444.output -> filter_3a9f8c.list\n            current_afd5b1 -> contains_45e806.input\n            find_1c5d7e.item -> contains_45e806.contains\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_1c5d7e.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            characters_2e1444.output -> filter_3a9f8c.list\n            current_afd5b1 -> contains_45e806.input\n            find_7d42ce.item -> contains_45e806.contains\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_7d42ce.predicate\n        input_0 -> characters_2e1444.input\n        find_1c5d7e.item -> output_0\n        find_7d42ce.item -> filter_3a9f8c.item\n        find_1c5d7e.onItem -> filter_3a9f8c.execute\n        characters_2e1444.output -> find_7d42ce.items\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 515, y: 44) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.List.Contains {}\n        instance(x: 89, y: 29) slice_1e159f root.Std_k98ojb.List.Slice {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            slice_1e159f.slice -> contains_807ffd.list\n            characters_6d05b0.characters -> slice_1e159f.list\n            find_1088d5.index -> slice_1e159f.start\n            1 -> slice_1e159f.end\n            elem_9f6850 -> contains_807ffd.item\n            bool_af09a7 -> find_1088d5.predicate\n        }\n        find_1088d5.item -> output_0\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 551, y: -105) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_1e2b5c root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_3f0d8c root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> slice_1e2b5c.list\n            elem_9f6850 -> slice_1e2b5c.start\n            -1 -> slice_1e2b5c.end\n            slice_1e2b5c.slice -> contains_807ffd.input\n            elem_9f6850 -> contains_807ffd.contains\n            contains_807ffd.result -> notequal_3f0d8c.left\n            true -> notequal_3f0d8c.right\n            notequal_3f0d8c.result -> bool_af09a7\n        } -> find_1088d5.predicate\n        if_7c284f.execute -> find_1088d5.onItem\n        find_1088d5.item -> output_0\n        find_1088d5.done -> if_7c284f.execute\n        input_0 -> characters_6d05b0.input\n        find_1088d5.done -> if_7c284f.predicate\n        true -> if_7c284f.then\n        false -> if_7c284f.else\n    }\n\n    \n\n    instance(x: 777, y: 760) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a3c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4e9d7f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") filter_1a3c5f root.Std_k98ojb.Query.Filter {\n            where: \"it not in set\"\n        }\n        instance(x: 62, y: -226, name: \"set\") add_2e4d7f root.Std_k98ojb.List.Add {}\n        characters_5a3c8f.characters -> find_4d9d7f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) contains_4e9d7f root.Std_k98ojb.Strings.Contains {}\n            add_2e4d7f.list -> filter_1a3c5f.list\n            current_1 -> contains_4e9d7f.input\n            filter_1a3c5f.result -> contains_4e9d7f.contains\n            contains_4e9d7f.result -> bool_0\n        } -> find_4e9d7f.predicate\n        add_2e4d7f.item -> set_2e4d7f.listWithItem\n        find_4e9d7f.item -> output_0\n        input_1 -> characters_5a3c8f.input\n        find_4e9d7f.onItem -> add_2e4d7f.execute\n        set_2e4d7f.listWithItem -> add_2e4d7f.list\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3d42d6 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -60) filter_7c284f root.Std_k98ojb.Query.Filter {\n            where: \"it == characters_2e1444.characters[characters_2e1444.characters.indexOf(it)+1]\"\n        }\n        input_0 -> characters_2e1444.input\n        characters_2e1444.characters -> filter_7c284f.list\n        find_3d42d6.items -> characters_2e1444.characters\n        filter_7c284f.result -> find_3d42d6.predicate\n        find_3d42d6.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a4d6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_5e3b8c.characters -> find_7a4d6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_2a3f7c`` root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> ``first occurrence_2a3f7c``.input\n            current_afd5b1 -> ``first occurrence_2a3f7c``.contains\n            ``first occurrence_2a3f7c``.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7a4d6f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_2a3f7c`` root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> ``first occurrence_2a3f7c``.contains\n            input_0 -> ``first occurrence_2a3f7c``.input\n            ``first occurrence_2a3f7c``.result -> bool_1eb6e9\n        } -> contains_d42dce.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_2a3f7c`` root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> ``first occurrence_2a3f7c``.contains\n            input_0 -> ``first occurrence_2a3f7c``.input\n            ``first occurrence_2a3f7c``.result -> bool_1eb6e9\n        } -> ``first occurrence_0b1361``.predicate\n        find_7a4d6f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_8a1f9e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_5c7d6b\n\n        instance(x: -105, y: -110) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        list_8a1f9e -> min_c3e343.items\n        min_c3e343.min -> list_remove_node.index\n        list_8a1f9e -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_5c7d6b\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 3, name: \"list\") property(List) list_1a9f8e\n\n        out(x: 159, y: 84, name: \"second_min\") property(Number) second_min_a5c7d4\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_1a9f8e -> list_min_node.items\n        list_1a9f8e -> min_c3e343.items\n        list_min_node.min -> data_9a9c70.a\n        a_f37c19 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_c3e343.items\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        data_9a9c70.a -> setter_1cedb2.new_value\n        a_f37c19 -> setter_37db7f.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_min_node.min -> second_min_a5c7d4\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 159, y: 81, name: \"second_min\") property(Number) second_min_7c3d4b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 110) ifexpression_f9e3c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_d1d4ef\") getter_d1d4ef = min\n        setter(x: 116, y: 268, name: \"setter_7f2b9c\") setter_7f2b9c = min\n        setter(x: 118, y: 56, name: \"setter_8e3a5f\") setter_8e3a5f = min\n        instance(x: -105, y: 0) ifexpression_6d1d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_e7e3f5\") getter_e7e3f5 = min\n        setter(x: 116, y: 268, name: \"setter_9d2b8c\") setter_9d2b8c = min\n        setter(x: 118, y: 56, name: \"setter_ae3a6f\") setter_ae3a6f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 110) ifexpression_f9e3c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_d1d4ef\") getter_d1d4ef = min\n        setter(x: 116, y: 268, name: \"setter_7f2b9c\") setter_7f2b9c = min\n        setter(x: 118, y: 56, name: \"setter_8e3a5f\") setter_8e3a5f = min\n        instance(x: -105, y: 0) ifexpression_6d1d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_e7e3f5\") getter_e7e3f5 = min\n        setter(x: 116, y: 268, name: \"setter_9d2b8c\") setter_9d2b8c = min\n        setter(x: 118, y: 56, name: \"setter_ae3a6f\") setter_ae3a6f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 110) ifexpression_f9e3c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_d1d4ef\") getter_d1d4ef = min\n        setter(x: 116, y: 268, name: \"setter_7f2b9c\") setter_7f2b9c = min\n        setter(x: 118, y: 56, name: \"setter_8e3a5f\") setter_8e3a5f = min\n        instance(x: -105, y: 0) ifexpression_6d1d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_e7e3f5\") getter_e7e3f5 = min\n        setter(x: 116, y: 268, name: \"setter_9d2b8c\") setter_9d2b8c = min\n        setter(x: 118, y: 56, name: \"setter_ae3a6f\") setter_ae3a6f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 110) ifexpression_f9e3c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_d1d4ef\") getter_d1d4ef = min\n        setter(x: 116, y: 268, name: \"setter_7f2b9c\") setter_7f2b9c = min\n        setter(x: 118, y: 56, name: \"setter_8e3a5f\") setter_8e3a5f = min\n        instance(x: -105, y: 0) ifexpression_6d1d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_e7e3f5\") getter_e7e3f5 = min\n        setter(x: 116, y: 268, name: \"setter_9d2b8c\") setter_9d2b8c = min\n        setter(x: 118, y: 56, name: \"setter_ae3a6f\") setter_ae3a6f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 110) ifexpression_f9e3c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_d1d4ef\") getter_d1d4ef = min\n        setter(x: 116, y: 268, name: \"setter_7f2b9c\") setter_7f2b9c = min\n        setter(x: 118, y: 56, name:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 2, name: \"list\") property(List) list_8f1a4e\n\n        out(x: 519, y: 0, name: \"second_smallest\") property(Number) second_smallest_9c3b7d\n\n        instance(x: 0, y: 0) min_2c5b6c root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -111) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 0, y: 0) filter_6e5a8c root.Std_k98ojb.Query.Filter {\n            where: \"it != a\"\n        }\n        list_8f1a4e -> min_2c5b6c.items\n        min_2c5b6c.min -> ifexpression_e38995.gen_0\n        list_8f1a4e -> filter_6e5a8c.list\n        getter_9cceb3.value -> second_smallest_9c3b7d\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        min_2c5b6c.min -> setter_1cedb2.new_value\n        filter_6e5a8c.result -> ifexpression_e38995.gen_1\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_8f1a4e -> setter_37db7f.new_value\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_6e5a8c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_9e3a5f\n\n        out(x: 160, y: 2, name: \"second_min\") property(Number) second_min_7b4c6d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_3e8c0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: -105, y: -110) ifexpression_ae3d8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e5e9d8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: -426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b]\n        list_9e3a5f -> list_min_node.items\n        list_min_node.min -> min\n        instance(x: 426, y: -303) list_min_node_1 root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70_2  = [min, a]\n        list_9e3a5f -> list_min_node_1.items\n        list_min_node.min -> min\n        list_min_node_1.min -> second_min_7b4c6d\n        data_9a9c70 -> ifexpression_e38995.gen\n        a -> data_9a9c70.a\n        b -> data_9a9c70.b\n        getter_9cceb3.value -> min\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        data_9a9c70 -> ifexpression_3e8c0a.gen\n        a -> data_9a9c70.a\n        b -> data_9a9c70.b\n        getter_9cceb3.value -> second_min_7b4c6d\n        ifexpression_3e8c0a.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_3e8c0a.else -> setter_37db7f.execute\n        data_9a9c70 -> ifexpression_ae3d8c.gen\n        a -> data_9a9c70.a\n        b -> data_9a9c70.b\n        getter_9cceb3.value -> min\n        ifexpression_ae3d8c.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_ae3d8c.else -> setter_37db7f.execute\n        data_9a9c70 -> ifexpression_e5e9d8.gen\n        a -> data_9a9c70.a\n        b -> data_9a9c70.b\n        getter_9cceb3.value -> second_min_7b4c6d\n        ifexpression_e5e9d8.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e5e9d8.else -> setter_37db7f.execute\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7f3b9e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> getter_9cceb3.value\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.listWithItem -> list_remove_node.list\n        getter_9cceb3.value -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node.items\n        instance(x: 426, y: -303) list_min2_node root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min2_node.items\n        list_min2_node.min -> second_min_7f3b9e\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_3e8c9f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> getter_9cceb3.value\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.listWithItem -> list_remove_node.list\n        getter_9cceb3.value -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node.items\n        instance(x: 426, y: -303) list_min2_node root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min2_node.items\n        list_min2_node.min -> second_min_3e8c9f\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_7c1b6d\n\n        instance(x: 0, y: 0) find_5f2a4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            instance(x: -44, y: 59) min_1b3e7c root.Std_k98ojb.Math.Min {}\n            list_9e3f8a -> min_1b3e7c.list\n            min_1b3e7c.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5f2a4f.predicate\n        list_9e3f8a -> find_5f2a4f.items\n        find_5f2a4f.item -> number_7c1b6d\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_0a3b4f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_4a3e2f\n\n        out(x: 159, y: 160, name: \"second_min\") property(Number) second_min_7b8d6c\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_9a3c8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1d6f7a\") getter_1d6f7a = second_min\n        setter(x: 116, y: -268, name: \"setter_2b3c5e\") setter_2b3c5e = second_min\n        setter(x: 118, y: -56, name: \"setter_4c9d1f\") setter_4c9d1f = second_min\n        instance(x: -105, y: -110) ifexpression_ea8c6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_3d9f1b\") getter_3d9f1b = min\n        setter(x: 116, y: -268, name: \"setter_5e8c2d\") setter_5e8c2d = min\n        setter(x: 118, y: -56, name: \"setter_6a7d3f\") setter_6a7d3f = min\n        instance(x: -105, y: -110) ifexpression_f9b1ce root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_4e8d2f\") getter_4e8d2f = second_min\n        setter(x: 116, y: -268, name: \"setter_7c6b1e\") setter_7c6b1e = second_min\n        setter(x: 118, y: -56, name: \"setter_8a5c3d\") setter_8a5c3d = second_min\n        instance(x: -105, y: -110) ifexpression_a0b2df root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_5f7c3e\") getter_5f7c3e = min\n        setter(x: 116, y: -268, name: \"setter_9b4ad0\") setter_9b4ad0 = min\n        setter(x: 118, y: -56, name: \"setter_a83be2\") setter_a83be2 = min\n        instance(x: -105, y: -110) ifexpression_b1c3ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_6e6d4f\") getter_6e6d4f = second_min\n        setter(x: 116, y: -268, name: \"setter_c72cf3\") setter_c72cf3 = second_min\n        setter(x: 118, y: -56, name: \"setter_d61df5\") setter_d61df5 = second_min\n        instance(x: -105, y: -110) ifexpression_c2d4f0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7d5e60\") getter_7d5e60 = min\n        setter(x: 116, y: -268, name: \"setter_e83ef8\") setter_e83ef8 = min\n        setter(x: 118, y: -56, name: \"setter_f72ff0\") setter_f72ff0 = min\n        instance(x: -105, y: -110) ifexpression_d3e5f1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8c6f71\") getter_8c6f71 = second_min\n        setter(x: 116, y: -268, name: \"setter_g94d0b\") setter_g94d0b = second_min\n        setter(x: 118, y: -56, name: \"setter_h83e1d\") setter_h83e1d = second_min\n        instance(x: -105, y: -110) ifexpression_e4f6f2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9d7g82\") getter_9d7g82 = min\n        setter(x: 116, y: -268, name: \"setter_i95c2e\") setter_i95c2e = min\n        setter(x: 118, y: -56, name: \"setter_j84d3f\") setter_j84d3f = min\n        instance(x: -105, y: -110) ifexpression_f5g7f3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_ae8h93\") getter_ae8h93 = second_min\n        setter(x: 116, y: -268, name: \"setter_k96d4f\") setter_k96d4f = second_min\n        setter(x: 118, y: -56, name: \"setter_l85e60\") setter_l85e60 = second_min\n        instance(x: -105, y: -110) ifexpression_g6h8f4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_bf9i04\") getter_bf9i04 = min\n        setter(x: 116, y: -268, name: \"setter_m97e71\") setter_m97e71 = min\n        setter(x: 118, y: -56, name: \"setter_n86f82\") setter_n86f82 = min\n        instance(x: -105, y: -110) ifexpression_h7i9f5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_c0aj15\") getter_c0aj15 = second_min\n        setter(x: 116, y: -268, name: \"setter_o98f93\") setter_o98f93 = second_min\n        setter(x: 118, y: -56, name: \"setter_p87g04\") setter_p87g04 = second_min\n        instance(x: -105, y: -110) ifexpression_i8jaf6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_d1bk26\") getter_d1bk26 = min\n        setter(x: 116, y: -268, name: \"setter_q99g15\") setter_q99g15 = min\n        setter(x: 118, y: -56, name: \"setter_r88h26\") setter_r88h26 = min\n        instance(x: -105, y: -110) ifexpression_j9kbf7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_e2cl37\") getter_e2cl37 = second_min\n        setter(x: 116, y: -268, name: \"setter_s9ah26\") setter_s9ah26 = second_min\n        setter(x: 118, y: -56, name: \"setter_t8bi37\") setter_t8bi37 = second_min\n        instance(x: -105, y",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f2e1a\n\n        out(x: 159, y: 81, name: \"second_min\") property(Number) second_min_a3c8d7\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 112) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 224, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 60, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 168, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 224) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 336, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 180, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 288, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 336) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 448, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 292, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 400, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 448) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 560, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 444, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 552, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 560) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 672, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 596, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 704, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 672) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 784, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 748, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 856, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 784) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 896, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 860, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 968, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 896) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1008, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 972, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1080, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1008) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1120, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1104, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1216, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1120) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1232, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1196, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1304, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1232) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1344, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1308, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1416, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1344) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1456, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1420, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1528, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1456) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1568, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1552, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1664, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1568) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter"
            ]
        }
    }
]