[
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 10049,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -171, y: 16, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -169, y: -123, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_4b3e5e\n\n        instance(x: 133, y: -131) intersection_1f9a6 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_1f9a6.left\n        list2_eb0d7c -> intersection_1f9a6.right\n        instance(x: 362, y: -107) length_4a3c5 root.Std_k98ojb.List.Length {}\n        intersection_1f9a6.intersect -> length_4a3c5.list\n        length_4a3c5.length -> output_4b3e5e\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_7d0f1 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_3a8f9e\n        in(x: -162, y: -120, name: \"list2\") property(List) list2_7b0c4d\n\n        out(x: 485, y: -68, name: \"output\") property(Bool) output_6a5c1e\n\n        instance(x: 98, y: -105) intersection_c8f3ea root.Std_k98ojb.Sets.Intersection {}\n        list1_3a8f9e -> intersection_c8f3ea.left\n        list2_7b0c4d -> intersection_c8f3ea.right\n        instance(x: 288, y: -68) length_6e5c4f root.Std_k98ojb.List.Length {}\n        intersection_c8f3ea.intersect -> length_6e5c4f.list\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) greaterthan_4e8c54 root.Std_k98ojb.Logic.GreaterThan {}\n            list1_42bc6f -> greaterthan_4e8c54.left\n            0 -> greaterthan_4e8c54.right\n            greaterthan_4e8c54.result -> result_e245cb\n        } -> length_6e5c4f.handler\n        length_6e5c4f.length -> output_6a5c1e\n    }\n\n    \n\n    instance(x: -93, y: 59) has_common_element_a7d9d2 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_20b99a\n\n        instance(x: 221, y: -48, name: \"intersection\") Sets.Intersection root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection.left\n        list2_aa3106 -> intersection.right\n        intersection.intersect -> output_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_aad0c2 root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 18, name: \"list1\") property(List) list1_9e6f8a\n        in(x: -169, y: -123, name: \"list2\") property(List) list2_7c3d5b\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_e0c4aa\n\n        instance(x: 221, y: -48, name: \"has_common_element\") intersection_c1f9a8 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e6f8a -> intersection_c1f9a8.left\n        list2_7c3d5b -> intersection_c1f9a8.right\n        instance(x: 488, y: -50) notempty_4a8a1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c1f9a8.intersect -> notempty_4a8a1c.list\n        notempty_4a8a1c.result -> output_e0c4aa\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_4e9f8a\n        in(x: -182, y: -122, name: \"list2\") property(List) list2_e5b3c7\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_6d0a1e\n\n        instance(x: 133, y: -131) intersection_4f9f9f root.Std_k98ojb.Sets.Intersection {}\n        list1_4e9f8a -> intersection_4f9f9f.left\n        list2_e5b3c7 -> intersection_4f9f9f.right\n        instance(x: 360, y: -95) length_8166b0 root.Std_k98ojb.List.Length {}\n        intersection_4f9f9f.intersect -> length_8166b0.list\n        instance(x: 246, y: -97) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_6d0a1e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_4a8b3f\n        in(x: -162, y: -122, name: \"list2\") property(List) list2_7c0e6d\n\n        out(x: 555, y: -103, name: \"output\") property(Bool) output_9c1f1a\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8b3f -> intersection_c7c7e6.left\n        list2_7c0e6d -> intersection_c7c7e6.right\n        instance(x: 245, y: -54) length_8166b0 root.Std_k98ojb.List.Length {}\n        intersection_c7c7e6.intersect -> length_8166b0.list\n        length_8166b0.length -> output_9c1f1a\n    }\n\n    \n\n    instance(x: 101, y: -67) intersection_b8d5ec root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -265, y: -81, name: \"list2\") property(List) list_63c248\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) intersection_7e1ce0 root.Std_k98ojb.Sets.Intersection {}\n        list_09fcba -> intersection_7e1ce0.left\n        list_63c248 -> intersection_7e1ce0.right\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            list_63c248 -> contains_45e806.list\n            current_afd5b1 -> contains_45e806.item\n            contains_45e806.is_contained -> bool_1eb6e9\n        } -> intersection_7e1ce0.handler\n        instance(x: 100, y: -15) notempty_148aeb root.Std_k98ojb.List.NotEmpty {}\n        intersection_7e1ce0.intersect -> notempty_148aeb.list\n        notempty_148aeb.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) has_common_element_f53d27 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_4a8b9f\n        in(x: -182, y: -121, name: \"list2\") property(List) list2_7c0e6d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_5e1e9a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_eb8f3 root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8b9f -> intersection_eb8f3.left\n        list2_7c0e6d -> intersection_eb8f3.right\n        instance(x: 488, y: -49) length_5f1b5 root.Std_k98ojb.List.Length {}\n        intersection_eb8f3.intersect -> length_5f1b5.list\n        length_5f1b5.length -> output_5e1e9a\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_4c0d6 root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: 19, name: \"list1\") property(List) list1_4a2f8e\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_9b7d6c\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_5f1f3a\n\n        instance(x: 221, y: -48, name: \"has_common_element\") intersection_8e4b9e root.Std_k98ojb.Sets.Intersection {}\n        list1_4a2f8e -> intersection_8e4b9e.left\n        list2_9b7d6c -> intersection_8e4b9e.right\n        instance(x: 442, y: -48) contains_5e3a0c root.Std_k98ojb.List.Contains {}\n        intersection_8e4b9e.intersect -> contains_5e3a0c.list\n        true -> contains_5e3a0c.item\n        contains_5e3a0c.is_contained -> output_5f1f3a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_9b7d6c root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -171, y: 20, name: \"list1\") property(List) list1_3a2b8f\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_e5c7d4\n\n        instance(x: 133, y: -131) intersection_3a1f9e root.Std_k98ojb.Sets.Intersection {}\n        list1_3a2b8f -> intersection_3a1f9e.left\n        list2_c62075 -> intersection_3a1f9e.right\n        instance(x: 246, y: -97) contains_32727d root.Std_k98ojb.List.Contains {}\n        intersection_3a1f9e.intersect -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_e5c7d4\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_a8b3a6 root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 339, y: 20, name: \"getter_8f9c6d\") getter_8f9c6d = previous\n        setter(x: 682, y: -242, name: \"setter_7b3a4e\") setter_7b3a4e = previous\n        instance(x: 321, y: -34) for_1e2b5e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -145, name: \"setter_7b3a4e\") setter_9f6d7c = previous\n        instance(x: -275, y: -59) getat_e8a1ee root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b7e.else -> continue_5f0e0c\n        ifexpression_7e7b7e.value -> output_eb7d1c\n        ifexpression_7e7b7e.then -> setter_7b3a4e.execute\n        list_0a8f9e -> for_1e2b5e.items\n        for_1e2b5e.item -> ifexpression_7e7b7e.gen_2\n        for_1e2b5e.index -> ifexpression_7e7b7e.gen_0\n        getter_8f9c6d.value -> ifexpression_7e7b7e.gen_1\n        for_1e2b5e.onItem -> ifexpression_7e7b7e.execute\n        for_1e2b5e.done -> continue_5f0e0c\n        for_1e2b5e.item -> setter_7b3a4e.new_value\n        list_0a8f9e -> getat_e8a1ee.list\n        0 -> getat_e8a1ee.index\n        getat_e8a1ee.itemAtIndex -> setter_9f6d7c.new_value\n        execute_5b2f7c -> setter_9f6d7c.execute\n        setter_9f6d7c.continue -> for_1e2b5e.reset\n        setter_7b3a4e.continue -> for_1e2b5e.next\n    }\n\n    \n\n    instance(x: -82, y: 59) is_consecutive_8f9c0e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 3, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 1025, y: 0, name: \"output\") property(Bool) output_7b2c8d\n\n        instance(x: 110, y: -12) sort_4e6b3c root.Std_k98ojb.List.Sort {}\n        instance(x: 442, y: 1) for_5f9a0f root.Std_k98ojb.Std.For {}\n        instance(x: 788, y: 2) sub_7d8a7f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1036, y: -10) lessthan_3e4c5c root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1300, y: 1) and_9e9d8a root.Std_k98ojb.Logic.And {}\n        instance(x: 1552, y: 11) if_7f6c0c root.Std_k98ojb.Std.If {}\n        list_1a8f9e -> sort_4e6b3c.list\n        sort_4e6b3c.sortedList -> for_5f9a0f.items\n        func() {\n            in(x: -111, y: 39, name: \"current\") property(Number) current_7d1b8f\n\n            out(x: 721, y: 50, name: \"bool\") property(Bool) bool_3c2e6a\n\n            instance(x: 110, y: 46) sub_9f5b4f root.Std_k98ojb.Math.Sub {}\n            instance(x: 365, y: 49) lessthan_7d0f8f root.Std_k98ojb.Math.LessThan {}\n            for_5f9a0f.index -> sub_9f5b4f.first\n            current_7d1b8f -> sub_9f5b4f.second\n            sub_9f5b4f.result -> lessthan_7d0f8f.left\n            1 -> lessthan_7d0f8f.right\n            lessthan_7d0f8f.result -> bool_3c2e6a\n        } -> for_5f9a0f.handler\n        for_5f9a0f.onItem -> sub_7d8a7f.execute\n        func() {\n            in(x: -113, y: 35, name: \"current\") property(Number) current_ae6b2c\n\n            out(x: 515, y: 46, name: \"\") property(Number) _0a1c9d\n\n            instance(x: 88, y: 32) sub_7f3b5f root.Std_k98ojb.Math.Sub {}\n            for_5f9a0f.index -> sub_7f3b5f.first\n            current_ae6b2c -> sub_7f3b5f.second\n            sub_7f3b5f.result -> _0a1c9d\n        } -> sub_7d8a7f.gen_1\n        for_5f9a0f.item -> sub_7d8a7f.gen_0\n        sub_7d8a7f.result -> lessthan_3e4c5c.left\n        1 -> lessthan_3e4c5c.right\n        lessthan_3e4c5c.result -> and_9e9d8a.left\n        for_5f9a0f.index -> and_9e9d8a.gen_0\n        list_1a8f9e.length - 1 -> and_9e9d8a.gen_1\n        and_9e9d8a.result -> if_7f6c0c.predicate\n        for_5f9a0f.onItem -> if_7f6c0c.execute\n        if_7f6c0c.else -> output_7b2c8d\n        true -> if_7f6c0c.then\n        if_7f6c0c.value -> output_7b2c8d\n    }\n\n    \n\n    instance(x: -63, y: 178) is_consecutive_1e9a4c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 2, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 1119, y: 11, name: \"output\") property(Bool) output_eb7c5d\n\n        instance(x: 1040, y: -6) ifexpression_2f4c8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 512, y: 32, name: \"getter_9a3d5f\") getter_9a3d5f = previous\n        setter(x: 1017, y: -299, name: \"setter_e8c0b2\") setter_e8c0b2 = previous\n        instance(x: 485, y: -17) for_6e1d7f root.Std_k98ojb.Std.For {}\n        setter(x: -3, y: -211, name: \"setter_e8c0b2\") setter_4a9b5e = previous\n        instance(x: -279, y: -31) getat_7a6c1d root.Std_k98ojb.List.GetAt {}\n        ifexpression_2f4c8e.else -> continue_3b9c0c\n        ifexpression_2f4c8e.value -> output_eb7c5d\n        ifexpression_2f4c8e.then -> setter_e8c0b2.execute\n        list_1a3f8e -> for_6e1d7f.items\n        for_6e1d7f.item -> ifexpression_2f4c8e.gen_2\n        for_6e1d7f.index -> ifexpression_2f4c8e.gen_0\n        getter_9a3d5f.value -> ifexpression_2f4c8e.gen_1\n        for_6e1d7f.onItem -> ifexpression_2f4c8e.execute\n        for_6e1d7f.done -> continue_3b9c0c\n        for_6e1d7f.item -> setter_e8c0b2.new_value\n        list_1a3f8e -> getat_7a6c1d.list\n        0 -> getat_7a6c1d.index\n        getat_7a6c1d.itemAtIndex -> setter_4a9b5e.new_value\n        execute_9e2f1e -> setter_4a9b5e.execute\n        setter_4a9b5e.continue -> for_6e1d7f.reset\n        setter_e8c0b2.continue -> for_6e1d7f.next\n    }\n\n    \n\n    instance(x: -34, y: 59) is_consecutive_3b1f7c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e8a3f\n\n        out(x: 1050, y: 5, name: \"output\") property(Bool) output_7c6d4b\n\n        instance(x: 0, y: -13) sort_1f2c5f root.Std_k98ojb.List.Sort {}\n        instance(x: 321, y: 3) for_9e8a3c root.Std_k98ojb.Std.For {}\n        instance(x: 643, y: 7) sub_4d6f1f root.Std_k98ojb.Math.Sub {}\n        instance(x: 864, y: -11) equal_2e0a2c root.Std_k98ojb.Logic.Equal {}\n        sort_1f2c5f.sorted -> for_9e8a3c.items\n        func() {\n            in(x: -113, y: 44, name: \"current\") property(Number) current_e6d7ef\n\n            out(x: 699, y: 55, name: \"bool\") property(Bool) bool_1b0f2e\n\n            instance(x: 110, y: 40) sub_9c8a3c root.Std_k98ojb.Math.Sub {}\n            current_e6d7ef -> sub_9c8a3c.first\n            for_9e8a3c.index -> sub_9c8a3c.second\n            sub_9c8a3c.result -> equal_2e0a2c.left\n            1 -> equal_2e0a2c.right\n            equal_2e0a2c.result -> bool_1b0f2e\n        } -> for_9e8a3c.handler\n        for_9e8a3c.onItem -> sub_4d6f1f.execute\n        for_9e8a3c.index -> sub_4d6f1f.first\n        1 -> sub_4d6f1f.second\n        sub_4d6f1f.result -> equal_2e0a2c.left\n        1 -> equal_2e0a2c.right\n        for_9e8a3c.done -> output_7c6d4b\n        sort_1f2c5f.sorted -> output_7c8a3c.list\n        func() {\n            in(x: -113, y: 44, name: \"current\") property(Number) current_e6d7ef\n\n            out(x: 699, y: 55, name: \"bool\") property(Bool) bool_1b0f2e\n\n            instance(x: 110, y: 40) sub_9c8a3c root.Std_k98ojb.Math.Sub {}\n            current_e6d7ef -> sub_9c8a3c.first\n            for_9e8a3c.index -> sub_9c8a3c.second\n            sub_9c8a3c.result -> equal_2e0a2c.left\n            1 -> equal_2e0a2c.right\n            equal_2e0a2c.result -> bool_1b0f2e\n        } -> for_9e8a3c.handler\n        sub_4d6f1f.result -> equal_2e0a2c.left\n        1 -> equal_2e0a2c.right\n        equal_2e0a2c.result -> output_7c6d4b\n    }\n\n    \n\n    instance(x: -67, y: 177) is_consecutive_3f9b8f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 4, name: \"list\") property(List) list_1f0a8e\n\n        out(x: 1229, y: 5, name: \"output\") property(Bool) output_e6b2c7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1f0a8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f0a8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_c5a7b2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 5, name: \"list\") property(List) list_1f8a0e\n\n        out(x: 1129, y: 3, name: \"output\") property(Bool) output_7c6b4d\n\n        instance(x: 102, y: -13) sort_2b5f5f root.Std_k98ojb.List.Sort {}\n        instance(x: 442, y: 1) for_9e3a8c root.Std_k98ojb.Std.For {}\n        instance(x: 780, y: 6) sub_4d0c7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1032, y: -11) if_5f1b3c root.Std_k98ojb.Std.If {}\n        instance(x: 1288, y: -10) and_9e9a8c root.Std_k98ojb.Logic.And {}\n        list_1f8a0e -> sort_2b5f5f.list\n        sort_2b5f5f.sortedList -> for_9e3a8c.items\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_7d6f0e\n\n            out(x: 704, y: 43, name: \"bool\") property(Bool) bool_1b2c5a\n\n            instance(x: 226, y: 40) modulo_3b8a8f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 41) notequal_7e9d6f root.Std_k98ojb.Logic.NotEqual {}\n            current_7d6f0e -> modulo_3b8a8f.value\n            2 -> modulo_3b8a8f.divisor\n            modulo_3b8a8f.result -> notequal_7e9d6f.left\n            0 -> notequal_7e9d6f.right\n            notequal_7e9d6f.result -> bool_1b2c5a\n        } -> for_9e3a8c.handler\n        for_9e3a8c.item -> sub_4d0c7c.first\n        for_9e3a8c.index -> sub_4d0c7c.second\n        1 -> sub_4d0c7c.second\n        sub_4d0c7c.result -> if_5f1b3c.predicate\n        for_9e3a8c.onItem -> if_5f1b3c.execute\n        if_5f1b3c.else -> output_7c6b4d\n        0 -> and_9e9a8c.right\n        for_9e3a8c.index -> and_9e9a8c.left\n        and_9e9a8c.result -> if_5f1b3c.value\n        if_5f1b3c.then -> output_7c6b4d\n        for_9e3a8c.done -> output_7c6b4d\n    }\n\n    \n\n    instance(x: -64, y: 69) is_consecutive_2a0c7c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 1, name: \"list\") property(List) list_9a3f0e\n\n        out(x: 1066, y: 8, name: \"output\") property(Bool) output_5c7d4b\n\n        instance(x: 1052, y: -20) ifexpression_1f9a0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 335, y: 23, name: \"getter_8c7e3d\") getter_8c7e3d = previous\n        setter(x: 680, y: -265, name: \"setter_ea2b4f\") setter_ea2b4f = previous\n        instance(x: 321, y: -51) for_9e6c1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -161, name: \"setter_ea2b4f\") setter_3d7f8e = previous\n        instance(x: -275, y: -66) getat_5b9c9f root.Std_k98ojb.List.GetAt {}\n        ifexpression_1f9a0f.else -> continue_6e1e2c\n        ifexpression_1f9a0f.value -> output_5c7d4b\n        ifexpression_1f9a0f.then -> setter_ea2b4f.execute\n        list_9a3f0e -> for_9e6c1f.items\n        for_9e6c1f.item -> ifexpression_1f9a0f.gen_2\n        for_9e6c1f.index -> ifexpression_1f9a0f.gen_0\n        getter_8c7e3d.value -> ifexpression_1f9a0f.gen_1\n        for_9e6c1f.onItem -> ifexpression_1f9a0f.execute\n        for_9e6c1f.done -> continue_6e1e2c\n        for_9e6c1f.item -> setter_ea2b4f.new_value\n        list_9a3f0e -> getat_5b9c9f.list\n        0 -> getat_5b9c9f.index\n        getat_5b9c9f.itemAtIndex -> setter_3d7f8e.new_value\n        execute_1a2f4c -> setter_3d7f8e.execute\n        setter_3d7f8e.continue -> for_9e6c1f.reset\n        setter_ea2b4f.continue -> for_9e6c1f.next\n    }\n\n    \n\n    instance(x: -85, y: 57) is_consecutive_0e5d7c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 5, name: \"list\") property(List) list_1a3f0e\n\n        out(x: 1069, y: 4, name: \"output\") property(Bool) output_7c8b7d\n\n        instance(x: 0, y: -11) sort_2f6a1f root.Std_k98ojb.List.Sort {}\n        instance(x: 352, y: -12) for_9e5b4f root.Std_k98ojb.Std.For {}\n        instance(x: 699, y: 13) sub_8d7c3c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1021, y: 10) equal_2a6b0c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1269, y: -11) and_4f5e3f root.Std_k98ojb.Logic.And {}\n        sort_2f6a1f.sorted -> for_9e5b4f.items\n        func() {\n            in(x: -112, y: 37, name: \"current\") property(Number) current_7d0c8e\n\n            out(x: 516, y: 49, name: \"bool\") property(Bool) bool_3a2b5f\n\n            instance(x: 88, y: 44) sub_9b1a4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 311, y: 46) equal_7e6d8f root.Std_k98ojb.Logic.Equal {}\n            current_7d0c8e -> sub_9b1a4c.second\n            for_9e5b4f.index -> sub_9b1a4c.first\n            sub_9b1a4c.result -> equal_7e6d8f.left\n            1 -> equal_7e6d8f.right\n            equal_7e6d8f.result -> bool_3a2b5f\n        } -> for_9e5b4f.handler\n        for_9e5b4f.onItem -> sub_8d7c3c.execute\n        for_9e5b4f.index -> sub_8d7c3c.first\n        1 -> sub_8d7c3c.second\n        sub_8d7c3c.result -> equal_2a6b0c.left\n        for_9e5b4f.item -> equal_2a6b0c.right\n        equal_2a6b0c.result -> and_4f5e3f.left\n        for_9e5b4f.index -> and_4f5e3f.gen_1\n        0 -> and_4f5e3f.gen_0\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> and_4f5e3f.predicate\n        for_9e5b4f.done -> output_7c8b7d\n        list_1a3f0e -> sort_2f6a1f.list\n    }\n\n    \n\n    instance(x: -92, y: 529) is_consecutive_1c9d4f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1f8d5e\n\n        out(x: 1023, y: 7, name: \"output\") property(Bool) output_6a2b9c\n\n        instance(x: 104, y: -11) sort_b4a0ef root.Std_k98ojb.List.Sort {}\n        instance(x: 392, y: 12) for_8f1d7e root.Std_k98ojb.Std.For {}\n        instance(x: 698, y: 10) sub_3c9c5f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1000, y: -4) lessthanorequal_ea6c2f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1301, y: 7) and_3d9e8f root.Std_k98ojb.Logic.And {}\n        sort_b4a0ef.sorted -> for_8f1d7e.items\n        func() {\n            in(x: -111, y: 46, name: \"current\") property(Number) current_5c2e9f\n\n            out(x: 515, y: 35, name: \"bool\") property(Bool) bool_6a8b3d\n\n            instance(x: 112, y: 41) sub_1a7a4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 417, y: 38) lessthanorequal_e9f0e2 root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_8f1d7e.index -> sub_1a7a4c.first\n            1 -> sub_1a7a4c.second\n            sub_1a7a4c.result -> lessthanorequal_e9f0e2.left\n            current_5c2e9f -> lessthanorequal_e9f0e2.right\n            lessthanorequal_e9f0e2.result -> bool_6a8b3d\n        } -> for_8f1d7e.handler\n        for_8f1d7e.onItem -> sub_3c9c5f.execute\n        for_8f1d7e.index -> sub_3c9c5f.first\n        1 -> sub_3c9c5f.second\n        sub_3c9c5f.result -> lessthanorequal_ea6c2f.left\n        for_8f1d7e.item -> lessthanorequal_ea6c2f.right\n        and_3d9e8f.result -> output_6a2b9c\n        lessthanorequal_ea6c2f.result -> and_3d9e8f.left\n        for_8f1d7e.handler -> and_3d9e8f.right\n    }\n\n    \n\n    instance(x: -62, y: 109) is_consecutive_4b0f5f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 4, name: \"list\") property(List) list_9e8a0f\n\n        out(x: 1115, y: 7, name: \"output\") property(Bool) output_6b1c3d\n\n        instance(x: 0, y: -16) sort_1a2c8f root.Std_k98ojb.List.Sort {}\n        instance(x: 274, y: 12) for_5e7b9c root.Std_k98ojb.Std.For {}\n        instance(x: 680, y: 10) sub_3d0b6f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1022, y: -14) lessthanorequal_e1a8e4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1299, y: 11) if_3d0c7f root.Std_k98ojb.Std.If {}\n        list_9e8a0f -> sort_1a2c8f.list\n        sort_1a2c8f.sortedList -> for_5e7b9c.items\n        func() {\n            in(x: -121, y: 34, name: \"current\") property(Number) current_6d3e0e\n\n            out(x: 523, y: 49, name: \"bool\") property(Bool) bool_1a2f5b\n\n            instance(x: 106, y: 44) sub_7c8b9f root.Std_k98ojb.Math.Sub {}\n            instance(x: 350, y: 48) lessthanorequal_e3e0d4 root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_5e7b9c.index -> sub_7c8b9f.first\n            1 -> sub_7c8b9f.second\n            current_6d3e0e -> sub_7c8b9f.right\n            sub_7c8b9f.result -> lessthanorequal_e3e0d4.left\n            1 -> lessthanorequal_e3e0d4.right\n            lessthanorequal_e3e0d4.result -> bool_1a2f5b\n        } -> for_5e7b9c.handler\n        for_5e7b9c.onItem -> sub_3d0b6f.execute\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> sub_3d0b6f.handler\n        for_5e7b9c.index -> lessthanorequal_e1a8e4.left\n        list_9e8a0f -> lessthnorequal_e1a8e4.right\n        lessthanorequal_e1a8e4.result -> if_3d0c7f.predicate\n        for_5e7b9c.onItem -> if_3d0c7f.execute\n        sub_3d0b6f.result -> if_3d0c7f.value\n        if_3d0c7f.else -> output_6b1c3d\n        if_3d0c7f.then -> output_6b1c3d\n        for_5e7b9c.done -> output_6b1c3d\n    }\n\n    \n\n    instance(x: -67, y: 127) is_consecutive_4a8c1f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_3f0a8e\n        in(x: -292, y: -170, name: \"list\") property(List) list_1c7b2d\n\n        out(x: 1065, y: -120, name: \"output\") property(Bool) output_4e6c1d\n\n        instance(x: -93, y: -173, name: \"length of sublist\") length_3a9f0c root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -172) contains_7e8a2f root.Std_k98ojb.List.Contains {}\n        instance(x: 364, y: -171) equal_1a5d6f root.Std_k98ojb.Logic.Equal {}\n        sublist_3f0a8e -> length_3a9f0c.list\n        list_1c7b2d -> contains_7e8a2f.list\n        func() {\n            in(x: -193, y: -115, name: \"current\") property(List) current_5e4a7\n\n            out(x: 705, y: -105, name: \"output\") property(Bool) output_1c0b3d\n\n            instance(x: 226, y: -112) slice_f8f9f2 root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: -110) equal_5a7e6f root.Std_k98ojb.Logic.Equal {}\n            current_5e4a7 -> slice_f8f9f2.list\n            length_3a9f0c.length -> slice_f8f9f2.start\n            slice_f8f9f2.slice -> equal_5a7e6f.left\n            sublist_3f0a8e -> equal_5a7e6f.right\n            equal_5a7e6f.result -> output_1c0b3d\n        } -> contains_7e8a2f.handler\n        contains_7e8a2f.is_contained -> equal_1a5d6f.left\n        true -> equal_1a5d6f.right\n        equal_1a5d6f.result -> output_4e6c1d\n    }\n\n    \n\n    instance(x: -92, y: 29) is_sublist_7b8b0 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"sublist\") property(List) sublist_1a8f9e\n        in(x: -284, y: -170, name: \"list\") property(List) list_2b7c0d\n\n        out(x: 1115, y: -100, name: \"output\") property(Bool) output_e4a6ee\n\n        instance(x: -91, y: -171, name: \"is sublist\") filter_1f3e8c root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        instance(x: 146, y: -170) length_7d9a5f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -169) equal_f2e1c8 root.Std_k98ojb.Logic.Equal {}\n        list_2b7c0d -> filter_1f3e8c.list\n        sublist_1a8f9e -> filter_1f3e8c.sublist\n        filter_1f3e8c.result -> length_7d9a5f.list\n        length_7d9a5f.length -> equal_f2e1c8.left\n        0 -> equal_f2e1c8.right\n        equal_f2e1c8.result -> output_e4a6ee\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_3d9b7f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 5, name: \"sublist\") property(List) sublist_1f9a3b\n        in(x: -303, y: -195, name: \"list\") property(List) list_7e8c0d\n\n        out(x: 1066, y: -90, name: \"output\") property(Bool) output_4c2b5f\n\n        instance(x: -91, y: -190, name: \"is sublist\") filter_1a9f9f root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        instance(x: 246, y: -192) contains_3c0d5e root.Std_k98ojb.List.Contains {}\n        instance(x: 540, y: -189) length_1a9f6f root.Std_k98ojb.List.Length {}\n        instance(x: 752, y: -188) slice_7a8a4f root.Std_k98ojb.List.Slice {}\n        sublist_1f9a3b -> filter_1a9f9f.list\n        list_7e8c0d -> filter_1a9f9f.list\n        func() {\n            in(x: -192, y: 15, name: \"current\") property(List) current_2f5b6f\n\n            out(x: 705, y: 16, name: \"output\") property(Bool) output_3e7c0d\n\n            instance(x: 226, y: 23) length_4a8f1f root.Std_k98ojb.List.Length {}\n            instance(x: 463, y: 24) equal_f9b6d5 root.Std_k98ojb.Logic.Equal {}\n            sublist_1f9a3b -> length_4a8f1f.list\n            current_2f5b6f -> length_4a8f1f.list\n            length_4a8f1f.length -> equal_f9b6d5.left\n            equal_f9b6d5.right -> equal_f9b6d5.left\n            equal_f9b6d5.result -> output_3e7c0d\n        } -> filter_1a9f9f.handler\n        filter_1a9f9f.result -> contains_3c0d5e.list\n        false -> contains_3c0d5e.item\n        list_7e8c0d -> length_1a9f6f.list\n        length_1a9f6f.length -> slice_7a8a4f.end\n        0 -> slice_7a8a4f.start\n        slice_7a8a4f.slice -> filter_1a9f9f.items\n        contains_3c0d5e.is_contained -> output_4c2b5f\n    }\n\n    \n\n    instance(x: -93, y: 55) is_sublist_f6a9d1 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -277, y: -48, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        sublist_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -277, y: -24, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        sublist_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 15, name: \"sublist\") property(List) sublist_1a9f2e\n        in(x: -296, y: -186, name: \"list\") property(List) list_5c7d6b\n\n        out(x: 1000, y: -111, name: \"output\") property(Bool) output_e4f8c3\n\n        instance(x: -82, y: -187) length_2a9e1f root.Std_k98ojb.List.Length {}\n        instance(x: 188, y: -113) greaterthan_5e6d0c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 396, y: -112) notequal_4e7c8a root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 596, y: -114) and_9f1f2f root.Std_k98ojb.Logic.And {}\n        instance(x: 788, y: -113) not_6d5a3f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1020, y: -115) contains_7e4c1c root.Std_k98ojb.List.Contains {}\n        sublist_1a9f2e -> length_2a9e1f.list\n        list_5c7d6b -> length_2a9e1f.list\n        length_2a9e1f.length -> greaterthan_5e6d0c.left\n        length_2a9e1f.length -> greaterthan_5e6d0c.right\n        sublist_1a9f2e -> contains_7e4c1c.list\n        list_5c7d6b -> contains_7e4c1c.item\n        notequal_4e7c8a.left -> length_2a9e1f.length\n        0 -> notequal_4e7c8a.right\n        greaterthan_5e6d0c.result -> and_9f1f2f.left\n        notequal_4e7c8a.result -> and_9f1f2f.right\n        contains_7e4c1c.is_contained -> not_6d5a3f.input\n        and_9f1f2f.result -> not_6d5a3f.input\n        not_6d5a3f.result -> output_e4f8c3\n    }\n\n    \n\n    instance(x: 93, y: -122) is_sublist_15f9e9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"sublist\") property(List) sublist_1a8f2e\n        in(x: -286, y: -150, name: \"list\") property(List) list_3b9d7c\n\n        out(x: 558, y: -129, name: \"output\") property(Bool) output_4c6a0d\n\n        instance(x: -96, y: -128, name: \"sublist length\") length_f8e1c2 root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -129) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_1a8f2e -> length_f8e1c2.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_7b9c6f root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) contains_1e8d5a root.Std_k98ojb.List.Contains {}\n            list_3b9d7c -> slice_7b9c6f.list\n            func() {\n                in(x: -30, y: -25, name: \"index\") property(Number) _index_170471\n\n                out(x: 705, y: 49, name: \"\") property(Number) _0e1a8d\n\n                instance(x: 226, y: 56) add_9b7f2c root.Std_k98ojb.Math.Add {}\n                _index_170471 -> add_9b7f2c.first\n                current_81298e -> add_9b7f2c.second\n                add_9b7f2c.result -> _0e1a8d\n            } -> slice_7b9c6f.start\n            length_f8e1c2.length -> slice_7b9c6f.end\n            slice_7b9c6f.slice -> contains_1e8d5a.list\n            sublist_1a8f2e -> contains_1e8d5a.item\n            contains_1e8d5a.is_contained -> bool_4524be\n        } -> contains_32727d.handler\n        list_3b9d7c -> contains_32727d.list\n        contains_32727d.result -> output_4c6a0d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ae2f8f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 0, name: \"sublist\") property(List) sublist_1a2f6b\n        in(x: -300, y: 200, name: \"list\") property(List) list_7c9e5d\n\n        out(x: 1013, y: 115, name: \"output\") property(Bool) output_4c8b1d\n\n        instance(x: 12, y: -10, name: \"is sublist\") filter_6a0f2c root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        instance(x: 212, y: 112) contains_9e8a3d root.Std_k98ojb.List.Contains {}\n        list_7c9e5d -> filter_6a0f2c.list\n        sublist_1a2f6b -> filter_6a0f2c.where.sublist\n        filter_6a0f2c.result -> contains_9e8a3d.list\n        true -> contains_9e8a3d.item\n        contains_9e8a3d.is_contained -> output_4c8b1d\n    }\n\n    \n\n    instance(x: -288, y: 120) is_sublist_5f0c2e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 30, name: \"sublist\") property(List) sublist_1a8d6f\n        in(x: -277, y: -135, name: \"list\") property(List) list_0b075e\n\n        out(x: 1067, y: -104, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: -103) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_1a8d6f -> contains_32727d.item\n        list_0b075e -> contains_32727d.list\n        contains_32727d.is_contained -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 93, y: -122) is_sublist_cbc0b6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -265, y: 0, name: \"sublist\") property(List) sublist_1f8d6a\n        in(x: -263, y: -200, name: \"list\") property(List) list_3b9c4e\n\n        out(x: 1005, y: -105, name: \"output\") property(Bool) output_2e0c7c\n\n        instance(x: -92, y: -201, name: \"find sublist in list\") find_8f1a8d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -193, y: -117, name: \"current\") property(List) current_7e9c6\n            out(x: 705, y: -106, name: \"\") property(Bool) _1f0d8a\n\n            instance(x: 112, y: -113) contains_5b3b2 root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -192, y: -37, name: \"current\") property(List) current_7e9c6\n                out(x: 705, y: -26, name: \"\") property(Bool) _1f0d8a\n\n                instance(x: 112, y: -24) equal_5b3b2 root.Std_k98ojb.Logic.Equal {}\n                contains_5b3b2.item -> equal_5b3b2.left\n                current_7e9c6 -> equal_5b3b2.right\n                equal_5b3b2.result -> _1f0d8a\n            } -> contains_5b3b2.handler\n            sublist_1f8d6a -> contains_5b3b2.list\n            current_7e9c6 -> find_8f1a8d.items\n            contains_5b3b2.is_contained -> _1f0d8a\n        } -> find_8f1a8d.predicate\n        list_3b9c4e -> find_8f1a8d.items\n        find_8f1a8d.item -> output_2e0c7c\n    }\n\n    \n\n    instance(x: -91, y: 15) is_sublist_6c5d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_7b8c5d\n\n        out(x: 1216, y: 4, name: \"continue\") trigger() continue_0f7c1d\n        out(x: 1163, y: 177, name: \"output\") property(Number) output_2e9a0f\n\n        instance(x: -8, y: -120) for_5b6f4f root.Std_k98ojb.Std.For {}\n        getter(x: 496, y: 166, name: \"getter_e7c3d1\") getter_e7c3d1 = index\n        setter(x: 768, y: -125, name: \"setter_9e2a8f\") setter_9e2a8f = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_5b6f4f.items\n        execute_7b8c5d -> setter_9e2a8f.execute\n        0 -> setter_9e2a8f.new_value\n        getter_e7c3d1.value -> output_2e9a0f\n        for_5b6f4f.done -> continue_0f7c1d\n        setter_9e2a8f.continue -> for_5b6f4f.reset\n        for_5b6f4f.onItem -> ifexpression_6c15d4.execute\n        for_5b6f4f.index -> ifexpression_6c15d4.gen_0\n        1 + getter_e7c3d1.value -> ifexpression_6c15d4.gen_1\n        ifexpression_6c15d4.then -> setter_9e2a8f.execute\n        for_5b6f4f.index -> setter_9e2a8f.new_value\n        ifexpression_6c15d4.else -> for_5b6f4f.next\n        setter_9e2a8f.continue -> continue_0f7c1d\n    }\n\n    \n\n    instance(x: -177, y: 20) find_missing_3f1b8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_2e3f9d\n        in(x: -283, y: -225, name: \"execute\") trigger() execute_7a8c6b\n\n        out(x: 1215, y: -227, name: \"continue\") trigger() continue_e4b0ec\n        out(x: 1203, y: 2, name: \"output\") property(Number) output_9f3e6d\n\n        instance(x: 0, y: 0) for_1a7c5e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_4f8b9d\") getter_4f8b9d = index\n        setter(x: -187, y: -246, name: \"setter_6a6081\") setter_6a6081 = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_2e3f9d -> for_1a7c5e.items\n        execute_7a8c6b -> setter_6a6081.execute\n        -1 -> setter_6a6081.new_value\n        getter_4f8b9d.value -> output_9f3e6d\n        for_1a7c5e.done -> continue_e4b0ec\n        setter_6a6081.continue -> for_1a7c5e.reset\n        for_1a7c5e.onItem -> ifexpression_6c15d4.execute\n        for_1a7c5e.index -> ifexpression_6c15d4.gen_0\n        for_1a7c5e.item -> ifexpression_6c15d4.gen_1\n        ifexpression_6c15d4.then -> continue_e4b0ec\n        ifexpression_6c15d4.else -> for_1a7c5e.next\n    }\n\n    \n\n    instance(x: -203, y: -53) find_missing_8f3d2f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 0, name: \"list\") property(List) list_9e6f1d\n        in(x: -276, y: -232, name: \"execute\") trigger() execute_ea7c8b\n\n        out(x: 1063, y: -234, name: \"continue\") trigger() continue_5c0f4f\n        out(x: 1052, y: 26, name: \"output\") property(Number) output_1e6d9f\n\n        instance(x: 0, y: 0) for_3b8a9d root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.then -> continue_5c0f4f\n        ifexpression_875761.else -> setter_9d4f1c.execute\n        list_9e6f1d -> for_3b8a9d.items\n        for_3b8a9d.item -> ifexpression_875761.gen_2\n        for_3b8a9d.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_3b8a9d.onItem -> ifexpression_875761.execute\n        for_3b8a9d.done -> continue_5c0f4f\n        for_3b8a9d.item -> setter_9d4f1c.new_value\n        list_9e6f1d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_ea7c8b -> setter_38e107.execute\n        setter_38e107.continue -> for_3b8a9d.reset\n        ifexpression_875761.value -> output_1e6d9f\n        setter_9d4f1c.continue -> for_3b8a9d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f5b7ed root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9f7759\n        in(x: -286, y: -242, name: \"execute\") trigger() execute_f9110a\n\n        out(x: 593, y: -243, name: \"continue\") trigger() continue_3bc2ae\n        out(x: 594, y: 44, name: \"number\") property(Number) number_af09a7\n\n        instance(x: 0, y: 0) for_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) math_expression_1088d5 root.Std_k98ojb.Math.Expression {\n                expression: \"index + 1\"\n            }\n            instance(x: 310, y: 35) logic_notEqual_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            logic_notEqual_807ffd.right -> math_expression_1088d5.gen_0\n            elem_9f6850 -> logic_notEqual_807ffd.left\n            for_6d05b0.index -> math_expression_1088d5.gen_1\n            math_expression_1088d5.result -> logic_notEqual_807ffd.right\n            logic_notEqual_807ffd.result -> bool_af09a7\n        } -> find_missing.predicate\n        list_9f7759 -> for_6d05b0.items\n        execute_f9110a -> for_6d05b0.execute\n        for_6d05b0.item -> number_af09a7\n        for_6d05b0.done -> continue_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_9f0b8e\n        in(x: -281, y: -228, name: \"execute\") trigger() execute_7c1d5a\n\n        out(x: 1216, y: 23, name: \"continue\") trigger() continue_e4b2ba\n        out(x: 1019, y: 0, name: \"output\") property(Number) output_8f3e6f\n\n        instance(x: -1, y: -120) for_5a7d9c root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_2f8c4e\") getter_2f8c4e = index\n        setter(x: 355, y: -246, name: \"setter_ea1d9e\") setter_ea1d9e = output\n        instance(x: 648, y: -75) ifexpression_6b7e5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 336, y: 160, name: \"getter_8a3d9f\") getter_8a3d9f = previous\n        setter(x: 680, y: -313, name: \"setter_7c2b6e\") setter_7c2b6e = previous\n        instance(x: 0, y: 0) math_add_node root.Std_k98ojb.Math.Add {}\n        ifexpression_6b7e5c.else -> continue_e4b2ba\n        ifexpression_6b7e5c.then -> setter_7c2b6e.execute\n        list_9f0b8e -> for_5a7d9c.items\n        for_5a7d9c.item -> ifexpression_6b7e5c.gen_2\n        for_5a7d9c.index -> ifexpression_6b7e5c.gen_0\n        getter_8a3d9f.value -> ifexpression_6b7e5c.gen_1\n        math_add_node.result -> setter_7c2b6e.new_value\n        1 -> math_add_node.second\n        getter_2f8c4e.value -> math_add_node.first\n        for_5a7d9c.onItem -> ifexpression_6b7e5c.execute\n        for_5a7d9c.done -> continue_e4b2ba\n        setter_ea1d9e.new_value -> output_8f3e6f\n        execute_7c1d5a -> setter_ea1d9e.execute\n        0 -> setter_ea1d9e.new_value\n        getter_2f8c4e.value -> math_add_node.first\n        for_5a7d9c.index -> math_add_node.first\n        ifexpression_6b7e5c.then -> setter_ea1d9e.execute\n        0 -> setter_ea1d9e.new_value\n        ifexpression_6b7e5c.value -> setter_ea1d9e.new_value\n        for_5a7d9c.item -> setter_7c2b6e.new_value\n        getter_8a3d9f.value -> math_add_node.first\n        setter_7c2b6e.continue -> for_5a7d9c.next\n        setter_ea1d9e.continue -> continue_e4b2ba\n        for_5a7d9c.reset -> setter_ea1d9e.execute\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_6e6bfd root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -314, y: -225, name: \"execute\") trigger() execute_ea7d3c\n\n        out(x: 1024, y: -226, name: \"continue\") trigger() continue_5a8f6f\n        out(x: 1012, y: 154, name: \"output\") property(Number) output_9e1b0f\n\n        instance(x: 0, y: 0) for_7d4c0f root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_8a3d6d\") getter_8a3d6d = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) ifexpression_7b2e0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        instance(x: -275, y: -35) getat_c8a3d6 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7b2e0f.then -> continue_5a8f6f\n        getter_8a3d6d.value -> ifexpression_7b2e0f.gen_1\n        for_7d4c0f.index -> ifexpression_7b2e0f.gen_0\n        list_9f0b2e -> for_7d4c0f.items\n        for_7d4c0f.item -> ifexpression_7b2e0f.gen_2\n        for_7d4c0f.onItem -> ifexpression_7b2e0f.execute\n        list_9f0b2e -> getat_c8a3d6.list\n        0 -> getat_c8a3d6.index\n        getat_c8a3d6.itemAtIndex -> setter_9d4f1c.new_value\n        execute_ea7d3c -> setter_9d4f1c.execute\n        ifexpression_7b2e0f.else -> for_7d4c0f.next\n        ifexpression_7b2e0f.value -> output_9e1b0f\n        for_7d4c0f.done -> continue_5a8f6f\n        setter_9d4f1c.continue -> for_7d4c0f.reset\n    }\n\n    \n\n    instance(x: -50, y: 127) find_missing_3b2e1f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1e3f9a\n        in(x: -282, y: -246, name: \"execute\") trigger() execute_5b7d6c\n\n        out(x: 592, y: 0, name: \"continue\") trigger() continue_8e2b1e\n        out(x: 594, y: 154, name: \"output\") property(Number) output_9a3f9a\n\n        instance(x: -11, y: -119, name: \"index\") setter_5c0d4c = index\n        instance(x: 334, y: 62, name: \"expected\") setter_eb1e8c = expected\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_84fbbe\") getter_84fbbe = index\n        setter(x: 780, y: -125, name: \"setter_60cfcd\") setter_60cfcd = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9f3e7a\") getter_9f3e7a = expected\n        setter(x: -187, y: -246, name: \"setter_6a6081\") setter_6a6081 = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        list_1e3f9a -> for_d26972.items\n        execute_5b7d6c -> setter_6a6081.execute\n        getter_84fbbe.value -> output_9a3f9a\n        -1 -> setter_6a6081.new_value\n        0 -> index\n        for_d26972.done -> continue_8e2b1e\n        setter_6a6081.continue -> for_d26972.reset\n        getter_9f3e7a.value -> expected\n        for_d26972.onItem -> ifexpression_6c15d4.execute\n        index -> equal_aabb6e.left\n        for_d26972.item -> equal_aabb6e.right\n        equal_aabb6e.result -> ifexpression_6c15d4.predicate\n        ifexpression_6c15d4.then -> setter_eb1e8c.execute\n        1 -> setter_eb1e8c.new_value\n        for_d26972.index -> setter_eb1e8c.old_value\n        setter_eb1e8c.continue -> setter_60cfcd.execute\n        index -> setter_60cfcd.new_value\n        ifexpression_6c15d4.else -> setter_60cfcd.execute\n        for_d26972.index -> setter_60cfcd.new_value\n        setter_60cfcd.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -204, y: 1) find_missing_8e2b1e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -293, y: -239, name: \"execute\") trigger() execute_7a8c5d\n\n        out(x: 1036, y: -243, name: \"continue\") trigger() continue_1b4a5e\n        out(x: 1029, y: 17, name: \"output\") property(Number) output_3f2b5e\n\n        instance(x: 0, y: 0) for_7d6c9e root.Std_k98ojb.Std.For {}\n        getter(x: -110, y: 157, name: \"getter_1a4f9e\") getter_1a4f9e = index\n        setter(x: 728, y: -153, name: \"setter_7d5c8e\") setter_7d5c8e = index\n        instance(x: 446, y: -2) ifexpression_3b6a8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_3b6a8e.else -> continue_1b4a5e\n        for_7d6c9e.items -> list_9f0b2e\n        execute_7a8c5d -> setter_38e107.execute\n        0 -> setter_38e107.new_value\n        getter_b280eb.value -> ifexpression_3b6a8e.gen_1\n        for_7d6c9e.index -> ifexpression_3b6a8e.gen_0\n        for_7d6c9e.item -> ifexpression_3b6a8e.gen_2\n        for_7d6c9e.onItem -> ifexpression_3b6a8e.execute\n        ifexpression_3b6a8e.then -> setter_7d5c8e.execute\n        for_7d6c9e.done -> continue_1b4a5e\n        getter_1a4f9e.value -> output_3f2b5e\n        for_7d6c9e.index -> setter_7d5c8e.new_value\n        setter_38e107.continue -> for_7d6c9e.reset\n        setter_7d5c8e.continue -> for_7d6c9e.next\n    }\n\n    \n\n    instance(x: -55, y: 127) find_missing_2f3a4b root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9f5e1d\n        in(x: -298, y: -226, name: \"execute\") trigger() execute_7c8a2b\n\n        out(x: 1023, y: -229, name: \"continue\") trigger() continue_4a6c8f\n        out(x: 1015, y: 147, name: \"output\") property(Number) output_e1e0d9\n\n        instance(x: 0, y: 0) for_7b3d2e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_8c4f5a\") getter_8c4f5a = index\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) ifexpression_d3e6a2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        list_9f5e1d -> for_7b3d2e.items\n        execute_7c8a2b -> setter_9d4f1c.execute\n        0 -> setter_9d4f1c.new_value\n        for_7b3d2e.done -> continue_4a6c8f\n        getter_b280eb.value -> ifexpression_d3e6a2.gen_1\n        for_7b3d2e.index -> ifexpression_d3e6a2.gen_0\n        for_7b3d2e.item -> ifexpression_d3e6a2.gen_2\n        getter_8c4f5a.value -> output_e1e0d9\n        list_9f5e1d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        ifexpression_d3e6a2.else -> continue_4a6c8f\n        for_7b3d2e.onItem -> ifexpression_d3e6a2.execute\n        ifexpression_d3e6a2.then -> setter_9d4f1c.execute\n        for_7b3d2e.next -> setter_9d4f1c.continue\n        for_7b3d2e.reset -> getat_ce2a48.index\n        setter_9d4f1c.continue -> for_7b3d2e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_6c8f9f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_1e9b3f\n        in(x: -278, y: -226, name: \"execute\") trigger() execute_7c8a5d\n\n        out(x: 1016, y: -224, name: \"continue\") trigger() continue_e2c4ef\n        out(x: 1009, y: 54, name: \"output\") property(Number) output_1b3e9f\n\n        instance(x: 0, y: 0) for_7a5d6e root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 0, name: \"getter_8c2c4e\") getter_8c2c4e = index\n        setter(x: 0, y: 0, name: \"setter_1f3d9a\") setter_1f3d9a = index\n        instance(x: 340, y: -120) ifexpression_e5b6ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 333, y: 160, name: \"getter_8c2c4e\") getter_7f3a9d = previous\n        setter(x: 679, y: -313, name: \"setter_1f3d9a\") setter_5b0e1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e5b6ea.else -> continue_e2c4ef\n        ifexpression_e5b6ea.then -> setter_5b0e1c.execute\n        list_1e9b3f -> for_7a5d6e.items\n        for_7a5d6e.item -> ifexpression_e5b6ea.gen_2\n        for_7a5d6e.index -> ifexpression_e5b6ea.gen_0\n        getter_7f3a9d.value -> ifexpression_e5b6ea.gen_1\n        for_7a5d6e.onItem -> ifexpression_e5b6ea.execute\n        for_7a5d6e.done -> continue_e2c4ef\n        for_7a5d6e.item -> setter_5b0e1c.new_value\n        list_1e9b3f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_1f3d9a.new_value\n        execute_7c8a5d -> setter_1f3d9a.execute\n        getter_8c2c4e.value -> output_1b3e9f\n        setter_1f3d9a.continue -> for_7a5d6e.reset\n        setter_5b0e1c.continue -> for_7a5d6e.next\n    }\n\n    \n\n    instance(x: -14, y: 125) find_missing_8e2c9e root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -200, y: 0, name: \"string\") property(String) string_8d1f9e\n\n        out(x: 500, y: -2, name: \"result\") property(String) result_7c3b6a\n\n        instance(x: 0, y: 1) replace_all_4e3c0e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_match_wordz {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"string\") property(String) string_8f1e9d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5c7b4a\n\n        instance(x: 0, y: 0) replace_node root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) contains_node root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) tolower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) ifexpression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains_space || contains_comma || contains_dot\"\n        }\n        string_8f1e9d -> replace_node.input\n        \" \" -> contains_node.contains\n        string_8f1e9d -> contains_node.input\n        true -> ifexpression_node.then\n        false -> ifexpression_node.else\n        contains_node.result -> contains_space\n        \",\" -> contains_node.contains\n        string_8f1e9d -> contains_node.input\n        true -> ifexpression_node.then\n        false -> ifexpression_node.else\n        contains_node.result -> contains_comma\n        \".\" -> contains_node.contains\n        string_8f1e9d -> contains_node.input\n        true -> ifexpression_node.then\n        false -> ifexpression_node.else\n        contains_node.result -> contains_dot\n        replace_node.output -> output_5c7b4a\n        \" \" -> replace_node.find\n        \":\" -> replace_node.replace\n        tolower_node.input -> replace_node.input\n        string_8f1e9d -> tolower_node.input\n        ifexpression_node.execute -> replace_node.execute\n    }\n\n    \n\n    instance(x: -91, y: 44) replace_5a3c4b root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -122, y: 0, name: \"string\") property(String) string_1f8d6e\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_3c9b7a\n\n        instance(x: 0, y: 1) replace_all_f5c1a4 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_match_wordz {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -232, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) replaceall_d3f8d9 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -2) replaceall_7c1a5e root.Std_k98ojb.Strings.ReplaceAll {}\n        tolower_2e1444.output -> replaceall_d3f8d9.input\n        \" \" -> replaceall_d3f8d9.find\n        \":\" -> replaceall_d3f8d9.replaceWith\n        replaceall_d3f8d9.output -> replaceall_7c1a5e.input\n        \",\" -> replaceall_7c1a5e.find\n        \":\" -> replaceall_7c1a5e.replaceWith\n        replaceall_7c1a5e.output -> result_0\n        \".\" -> replaceall_d3f8d9.find\n        \":\" -> replaceall_d3f8d9.replaceWith\n        input_0 -> tolower_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"string\") property(String) string_2f1a8e\n\n        out(x: 504, y: -2, name: \"result\") property(String) result_3b7d9c\n\n        instance(x: 0, y: 0) replace_all_a4d5c6 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) replace_all_8e1a2f root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: 0) replace_all_9f3b2d root.Std_k98ojb.Strings.ReplaceAll {}\n        string_2f1a8e -> replace_all_a4d5c6.input\n        \" \" -> replace_all_a4d5c6.find\n        \":\" -> replace_all_a4d5c6.replaceWith\n        replace_all_a4d5c6.output -> replace_all_8e1a2f.input\n        \",\" -> replace_all_8e1a2f.find\n        \":\" -> replace_all_8e1a2f.replaceWith\n        replace_all_8e1a2f.output -> replace_all_9f3b2d.input\n        \".\" -> replace_all_9f3b2d.find\n        \":\" -> replace_all_9f3b2d.replaceWith\n        replace_all_9f3b2d.output -> result_3b7d9c\n    }\n\n    \n\n    instance(x: -85, y: 30, name: \"replace\") replace_5e8a6c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -232, y: 0, name: \"string\") property(String) string_1f3a6d\n\n        out(x: 532, y: -2, name: \"result\") property(String) result_5e9b4c\n\n        instance(x: 0, y: 1) replaceall_c7a8c8 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_match_wordz {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 0, name: \"string\") property(String) string_2f1a9d\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_7c3b5e\n\n        instance(x: 221, y: -48, name: \"replace\") replace_0c6c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_8d1a2f root.Std_k98ojb.Logic.Or {}\n        instance(x: -10, y: -36) contains_3e5a8c root.Std_k98ojb.Strings.Contains {}\n        instance(x: 92, y: -22) and_4b0a6c root.Std_k98ojb.Logic.And {}\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        string_2f1a9d -> replace_0c6c4f.input\n        \" \" -> contains_3e5a8c.contains\n        \",\" -> or_8d1a2f.right\n        \".\" -> and_4b0a6c.left\n        contains_3e5a8c.value -> and_4b0a6c.right\n        string_2f1a9d -> contains_3e5a8c.input\n        or_8d1a2f.left -> and_4b0a6c.left\n        and_4b0a6c.result -> or_8d1a2f.left\n        or_8d1a2f.result -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            instance(x: 92, y: -22) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n                expression: \"x == ' ' || x == ',' || x == '.'\"\n            }\n            instance(x: 94, y: -105) replace_0c6c4f_1 root.Std_k98ojb.Strings.Replace {}\n            \":\": -> replace_0c6c4f_1.replace\n            x_8ee839 -> replace_0c6c4f_1.input\n            ifexpression_5c4634.then -> replace_0c6c4f_1.execute\n            ifexpression_5c4634.else -> x_8ee839\n            ifexpression_5c4634.gen_0 -> x_8ee839\n            replace_0c6c4f_1.output -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> replace_0c6c4f.replacement\n        replace_0c6c4f.output -> output_7c3b5e\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_2a1f9f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -232, y: 0, name: \"string\") property(String) string_1f3a6d\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_f9e7b8\n\n        instance(x: 0, y: 1) replaceall_5c3c1e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        string_1f3a6d -> replaceall_5c3c1e.input\n        \" ,.\" -> replaceall_5c3c1e.find\n        \":\" -> replaceall_5c3c1e.replaceWith\n        replaceall_5c3c1e.output -> result_f9e7b8\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_4a6d2f root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) replaceall_d9c6d8 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -1) replaceall_7a3f9f root.Std_k98ojb.Strings.ReplaceAll {}\n        tolower_2e1444.output -> replaceall_d9c6d8.input\n        \" \" -> replaceall_d9c6d8.find\n        \":\" -> replaceall_d9c6d8.replaceWith\n        replaceall_d9c6d8.output -> replaceall_7a3f9f.input\n        \",\" -> replaceall_7a3f9f.find\n        \":\" -> replaceall_7a3f9f.replaceWith\n        replaceall_7a3f9f.output -> result_0\n        \".\" -> replaceall_d9c6d8.find\n        input_0 -> tolower_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 0, name: \"string\") property(String) string_8f3e1a\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_9c6b5d\n\n        instance(x: 0, y: 1) replaceall_7c4a2 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        string_8f3e1a -> replaceall_7c4a2.input\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        \": \" -> replaceall_7c4a2.replaceWith\n        \",.\" -> contains_d42dce.contains\n        string_8f3e1a -> tolower_2e1444.input\n        contains_d42dce.result -> replaceall_7c4a2.find\n        replaceall_7c4a2.output -> result_9c6b5d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_c9a3d8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -1, y: 0) length_7e6c5f root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) getat_4e7b8c root.Std_k98ojb.List.GetAt {}\n        instance(x: 265, y: -1) equal_2d3a3f root.Std_k98ojb.Logic.Equal {}\n        characters_c9a3d8.characters -> length_7e6c5f.list\n        input_0 -> characters_c9a3d8.input\n        length_7e6c5f.length -> getat_4e7b8c.index\n        1 -> getat_4e7b8c.index\n        characters_c9a3d8.characters -> getat_4e7b8c.list\n        input_0 -> equal_2d3a3f.left\n        getat_4e7b8c.itemAtIndex -> equal_2d3a3f.right\n        equal_2d3a3f.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) check_same_5b9f1f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 530, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_2e1444.output -> contains_d42dce.list\n        characters_2e1444.output -> length_6e87f2.list\n        \"a\" -> contains_d42dce.contains\n        length_6e87f2.length -> contains_d42dce.contains\n        input_0 -> characters_2e1444.input\n        contains_d42dce.is_contained -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -285, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_5a7d8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -3) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 530, y: 2) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_5a7d8c.characters -> contains_d42dce.list\n        string_1 -> characters_5a7d8c.input\n        characters_5a7d8c.characters[0] -> contains_d42dce.item\n        contains_d42dce.is_contained -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_1\n    }\n\n    \n\n    instance(x: -3, y: 12) check_same_2c8a4f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -1, y: 78) length_6d05b0 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 265, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_7b3b7b.characters -> length_6d05b0.list\n        input_0 -> characters_7b3b7b.input\n        getat_ce2a48.itemAtIndex -> equal_f89569.right\n        1 -> getat_ce2a48.index\n        characters_7b3b7b.characters -> getat_ce2a48.list\n        length_6d05b0.length -> getat_ce2a48.index\n        0 -> getat_ce2a48.index\n        equal_f89569.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) is_same_59bc6e root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3a9c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        characters_3a9c4f.characters -> contains_d42dce.list\n        characters_3a9c4f.characters -> firstitem_870503.list\n        firstitem_870503.item -> contains_d42dce.contains\n        input_0 -> characters_3a9c4f.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_5c9f4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: -2) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 489, y: 1) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 703, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_5c9f4a.characters -> contains_d42dce.list\n        characters_5c9f4a.characters -> length_8166b0.list\n        characters_5c9f4a.characters -> equal_f89569.left\n        1 -> equal_f89569.right\n        contains_d42dce.is_contained -> output_1\n        length_8166b0.length -> equal_f89569.left\n        string_1 -> characters_5c9f4a.input\n    }\n\n    \n\n    instance(x: -10, y: 30) check_same_7e8d2f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_7b9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 530, y: -1) length_8166b0 root.Std_k98ojb.List.Length {}\n        characters_7b9c8f.characters -> contains_d42dce.list\n        characters_7b9c8f.characters -> length_8166b0.list\n        \"a\" -> contains_d42dce.item\n        length_8166b0.length -> contains_d42dce.count\n        input_0 -> characters_7b9c8f.input\n        contains_d42dce.is_contained -> output_0\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_2c856f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 532, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_5e3c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -2, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_5e3c4f.characters -> contains_d42dce.list\n        characters_5e3c4f.characters -> length_6e87f2.list\n        \"a\" -> contains_d42dce.item\n        1 -> length_6e87f2.length\n        contains_d42dce.is_contained -> result_1\n    }\n\n    \n\n    instance(x: -67, y: 52) check_same_f21f44 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 557, y: -2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 1) characters_3a4f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 490, y: -2) length_8166b0 root.Std_k98ojb.List.Length {}\n        characters_3a4f9c.characters -> contains_d42dce.list\n        characters_3a4f9c.characters -> length_8166b0.list\n        characters_3a4f9c.characters -> instance(x: 715, y: -2) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            1 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        instance(x: 950, y: -3) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        contains_d42dce.is_contained -> sub_852f2e.first\n        length_8166b0.length -> sub_852f2e.second\n        string_1 -> characters_3a4f9c.input\n        map_6030c9.output_list -> instance(x: 1195, y: -2) sum_8c1d7 root.Std_k98ojb.Math.Sum {}\n        sum_8c1d7.list -> sub_852f2e.first\n        sub_852f2e.result -> contains_d42dce.item\n        0 -> contains_d42dce.item\n        sub_852f2e.result -> instance(x: 1345, y: -3) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        0 -> greaterthan_cb50ae.right\n        sum_8c1d7.sum -> greaterthan_cb50ae.left\n        greaterthan_cb50ae.result -> output_1\n    }\n\n    \n\n    instance(x: -67, y: -37) is_same_f21f44 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -526, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 557, y: 3, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c5e9d2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) length_6f7a8c root.Std_k98ojb.List.Length {}\n        instance(x: 487, y: 0) getat_3f4f5f root.Std_k98ojb.List.GetAt {}\n        instance(x: 710, y: 2) equal_9e1d0c root.Std_k98ojb.Logic.Equal {}\n        characters_c5e9d2.characters -> length_6f7a8c.list\n        input_1 -> characters_c5e9d2.input\n        length_6f7a8c.length -> getat_3f4f5f.index\n        0 -> getat_3f4f5f.list\n        characters_c5e9d2.characters -> getat_3f4f5f.list\n        input_1 -> equal_9e1d0c.left\n        getat_3f4f5f.itemAtIndex -> equal_9e1d0c.right\n        equal_9e1d0c.result -> output_1\n    }\n\n    \n\n    instance(x: -10, y: 11) is_same_f7a6b8 root.main.is_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1099, y: 76) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 1381, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        characters_7b3b7b.characters -> filter_7b3b7b.list\n        length_6e87f2.length -> output_ai\n        filter_7b3b7b.result -> length_6e87f2.list\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1032, y: 76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1032, y: 76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -5) pow_7e9f1c root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_7e9f1c.x\n        pow_7e9f1c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -5) pow_1e7f9c root.Std_k98ojb.Math.Expression {\n            expression: \"x**4\"\n        }\n        div_64046c.result -> pow_1e7f9c.x\n        pow_1e7f9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_7f8e9c root.Std_k98ojb.Math.Expression {\n            expression: \"x^y\"\n        }\n        div_64046c.result -> pow_7f8e9c.x\n        4 -> pow_7f8e9c.y\n        pow_7f8e9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_7f8c9e root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_7f8c9e.x\n        pow_7f8c9e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -5) pow_1e7f9c root.Std_k98ojb.Math.Expression {\n            expression: \"x**4\"\n        }\n        div_64046c.result -> pow_1e7f9c.x\n        pow_1e7f9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5f9e7c root.Std_k98ojb.Math.Expression {\n            expression: \"x*x\"\n        }\n        div_64046c.result -> pow_5f9e7c.x\n        pow_5f9e7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_7b8f9c root.Std_k98ojb.Math.Expression {\n            expression: \"x**4\"\n        }\n        div_64046c.result -> pow_7b8f9c.x\n        pow_7b8f9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_5f7c8e root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_5f7c8e.x\n        pow_5f7c8e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_7b9c5f root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_7b9c5f.x\n        pow_7b9c5f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -12) pow_1f8c5e root.Std_k98ojb.Math.Expression {\n            expression: \"x*x\"\n        }\n        div_64046c.result -> pow_1f8c5e.x\n        pow_1f8c5e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 10, name: \"size\") property(Number) size_8a0f9e\n\n        out(x: 1066, y: 12, name: \"surface_area\") property(Number) surface_area_a1c3d7\n\n        instance(x: 23, y: -5) mul_f2b8da root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 331, y: 95) data_4a0e6f  = 6\n        instance(x: 12, y: 99) expression_1d9c7c root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        instance(x: 303, y: -2) mul_5f3a0e root.Std_k98ojb.Math.Mul {}\n        data_4a0e6f -> mul_f2b8da.second\n        mul_f2b8da.result -> mul_5f3a0e.first\n        expression_1d9c7c.result -> mul_f2b8da.first\n        size_8a0f9e -> expression_1d9c7c.gen_0\n        mul_5f3a0e.result -> surface_area_a1c3d7\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_e6b2a4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_3e8f9a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        execute_3e8f9a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_3e8f9a\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_96023e.output_732a8a -> add_88bb8a.first\n        mul_adfa16.result -> add_88bb8a.second\n        6 -> mul_adfa34.first\n        side_length_6b655b -> mul_adfa34.second\n        mul_adfa34.result -> surface_area_cube_96023e.side_length_6b655b\n        2 -> mul_adfa16.first\n        side_length_6b655b -> mul_adfa16.second\n        setter_41e4ad.new_value = 0\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        setter_375321.new_value = add_88bb8a.result\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -333, y: 0, name: \"size\") property(Number) size_1a3f8e\n\n        out(x: 1046, y: 10, name: \"surface_area\") property(Number) surface_area_b2c7b9\n\n        instance(x: 13, y: -4) mul_f9d0b5 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 333, y: 40) data_3f8e1a  = 6\n        instance(x: 14, y: 42) pow_2c7c6c root.Std_k98ojb.Math.Pow {}\n        size_1a3f8e -> mul_f9d0b5.first\n        data_3f8e1a -> mul_f9d0b5.second\n        size_1a3f8e -> pow_2c7c6c.x\n        2 -> pow_2c7c6c.y\n        pow_2c7c6c.result -> mul_f9d0b5.first\n        mul_f9d0b5.result -> surface_area_b2c7b9\n    }\n\n    \n\n    instance(x: -63, y: -14) surface_area_cube_1a3f8e root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_9f5a3e\n\n        out(x: 39, y: 0, name: \"surface_area\") property(Number) surface_area_1c7b4d\n\n        instance(x: 15, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side * side\"\n        }\n        side_9f5a3e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_1c7b4d\n    }\n\n    \n\n    instance(x: 264, y: -464, name: \"surface_Area\") surface_area_cube_2a8f8f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9f5a8e\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_7c6d3b\n\n        instance(x: 0, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_9f5a8e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_7c6d3b\n    }\n\n    \n\n    instance(x: -86, y: 11, name: \"surface_area_cube\") expression_1e4d1f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 11, name: \"size\") property(Number) size_1a9f6e\n\n        out(x: 1168, y: 13, name: \"surface_area\") property(Number) surface_area_7b0c3d\n\n        instance(x: 23, y: -4) mul_2a5f6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_2a5f6f.result -> div_64046c.first\n        expression_2d6da6.result -> mul_2a5f6f.second\n        size_1a9f6e -> mul_2a5f6f.first\n        size_1a9f6e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_7b0c3d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_8f4c9f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6f8a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7b3c0d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_1b2f4f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8a8e9f\n\n        instance(x: 80, y: -417) ifexpression_7c3d6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_2a8d9f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f6c1e4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_7b0a5c root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_2f9d8f\") setter_2f9d8f = sum\n        getter(x: 902, y: -314, name: \"getter_1a6c4e\") getter_1a6c4e = sum\n        instance(x: -202, y: -236) floor_3b0c7c root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f6c1e4.second\n        mul_f6c1e4.result -> add_7b0a5c.first\n        6 -> add_7b0a5c.second\n        getter_1a6c4e.value -> output_8a8e9f\n        ifexpression_7c3d6e.then -> continue_1b2f4f\n        execute_9e6f8a -> setter_2f9d8f.execute\n        0 -> setter_2f9d8f.new_value\n        setter_2f9d8f.continue -> ifexpression_7c3d6e.execute\n        ifexpression_7c3d6e.else -> surface_area_cube_2a8d9f.execute_9e6f8a\n        surface_area_cube_2a8d9f.continue_1b2f4f -> setter_2f9d8f.execute\n        surface_area_cube_2a8d9f.output_8a8e9f -> add_7b0a5c.first\n        side_length_7b3c0d -> floor_3b0c7c.input\n        floor_3b0c7c.output -> mul_f6c1e4.first\n        floor_3b0c7c.output -> ifexpression_7c3d6e.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_2a8d9f root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 57, name: \"side\") property(Number) side_1f9a5e\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_3c8b6d\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_1f9a5e -> mul_f892a4.first\n        side_1f9a5e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_3c8b6d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_7f8c1c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_1a3f6e\n\n        out(x: 39, y: 0, name: \"surface_area\") property(Number) surface_area_7b9d5c\n\n        instance(x: 15, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side * side\"\n        }\n        side_1a3f6e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_7b9d5c\n    }\n\n    \n\n    instance(x: 264, y: -464, name: \"surface_Area\") surface_area_cube_2a8c1c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9f6a3e\n\n        out(x: 150, y: 0, name: \"surface_area\") property(Number) surface_area_1b7d8c\n\n        instance(x: 10, y: -5) mul_2a4a8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 20, y: 30) pow_6f9e0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 90, y: 25) mul_3d7c5 root.Std_k98ojb.Math.Mul {}\n        size_9f6a3e -> pow_6f9e0.x\n        2 -> pow_6f9e0.y\n        pow_6f9e0.result -> mul_2a4a8.first\n        6 -> mul_2a4a8.second\n        mul_2a4a8.result -> mul_3d7c5.first\n        size_9f6a3e -> mul_3d7c5.second\n        mul_3d7c5.result -> surface_area_1b7d8c\n    }\n\n    \n\n    instance(x: 0, y: -10) surface_area_cube_4e7f2 root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: 145, name: \"list\") property(List) list_9a3b5f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7e8d1c\n\n        instance(x: 201, y: 126) sub_6b2a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 359, name: \"Max list\") max_9f5a3f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -317, y: 520, name: \"Min list\") min_1e7c8d root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        list_9a3b5f -> max_9f5a3f.list\n        max_9f5a3f.max -> firstitem_870503.list\n        list_9a3b5f -> min_1e7c8d.list\n        min_1e7c8d.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_6b2a0c.first\n        firstitem_3078c6.item -> sub_6b2a0c.second\n        sub_6b2a0c.result -> output_7e8d1c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 166, name: \"list\") property(List) list_0a3b9f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {\n            predicate: func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n                current_afd5b1 -> greaterthan_a54bdc.left\n                max -> greaterthan_a54bdc.right\n                greaterthan_a54bdc.result -> bool_1eb6e9\n            }\n        }\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {\n            predicate: func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) lessthan_148aeb root.Std_k98ojb.Math.LessThan {}\n                current_afd5b1 -> lessthan_148aeb.left\n                min -> lessthan_148aeb.right\n                lessthan_148aeb.result -> bool_1eb6e9\n            }\n        }\n        list_0a3b9f -> find_de624f.items\n        list_0a3b9f -> ``Max value_0b1361``.items\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = max\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = max\n        getter(x: 118, y: -56, name: \"getter_37db7f\") getter_37db7f = min\n        setter(x: 118, y: -268, name: \"setter_37db7f\") setter_37db7f = min\n        find_de624f.item -> setter_1cedb2.new_value\n        ``Max value_0b1361``.item -> setter_37db7f.new_value\n        getter_9cceb3.value -> sub_7e1ce0.first\n        getter_37db7f.value -> sub_7e1ce0.second\n        execute_12bf99 -> find_de624f.execute\n        execute_12bf99 -> ``Max value_0b1361``.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 500, y: 7, name: \"output\") property(Number) output_e5b9c4\n\n        instance(x: 150, y: 15) sub_2d7b6f root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 14) max_1e8a3f root.Std_k98ojb.List.Max {}\n        instance(x: -102, y: -119) min_4c0c5c root.Std_k98ojb.List.Min {}\n        list_1a3f8e -> max_1e8a3f.items\n        list_1a3f8e -> min_4c0c5c.items\n        max_1e8a3f.max -> sub_2d7b6f.first\n        min_4c0c5c.min -> sub_2d7b6f.second\n        sub_2d7b6f.result -> output_e5b9c4\n    }\n\n    \n\n    instance(x: -65, y: 12) diff_max_min_3a1e2f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 156, name: \"list\") property(List) list_1a9b8f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_5e2d3c\n\n        instance(x: 188, y: 126) sub_6f7c4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: 156) max_9a1f8f root.Std_k98ojb.List.Max {}\n        instance(x: -104, y: 347) min_d5e2d3 root.Std_k98ojb.List.Min {}\n        list_1a9b8f -> max_9a1f8f.list\n        list_1a9b8f -> min_d5e2d3.list\n        max_9a1f8f.max -> sub_6f7c4f.first\n        min_d5e2d3.min -> sub_6f7c4f.second\n        sub_6f7c4f.result -> output_5e2d3c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 167, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {\n            predicate: func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n                current_afd5b1 -> greaterthan_a54bdc.left\n                max -> greaterthan_a54bdc.right\n                greaterthan_a54bdc.result -> bool_1eb6e9\n            }\n        }\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {\n            predicate: func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) lessthan_148aeb root.Std_k98ojb.Math.LessThan {}\n                current_afd5b1 -> lessthan_148aeb.left\n                min -> lessthan_148aeb.right\n                lessthan_148aeb.result -> bool_1eb6e9\n            }\n        }\n        list_09fcba -> find_de624f.items\n        list_09fcba -> ``Max value_0b1361``.items\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = max\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = max\n        getter(x: 118, y: -56, name: \"getter_37db7f\") getter_37db7f = min\n        setter(x: 118, y: -268, name: \"setter_37db7f\") setter_37db7f = min\n        find_de624f.item -> setter_1cedb2.new_value\n        ``Max value_0b1361``.item -> setter_37db7f.new_value\n        getter_9cceb3.value -> sub_7e1ce0.first\n        getter_37db7f.value -> sub_7e1ce0.second\n        setter_1cedb2.continue -> find_de624f.next\n        setter_37db7f.continue -> ``Max value_0b1361``.next\n        find_de624f.done -> sub_7e1ce0.execute\n        ``Max value_0b1361``.done -> sub_7e1ce0.execute\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 156, name: \"list\") property(List) list_1f9b3e\n\n        out(x: 512, y: 147, name: \"output\") property(Number) output_ea2d5c\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_3f8c6d root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_0b1361 root.Std_k98ojb.List.Min {}\n        list_1f9b3e -> max_3f8c6d.list\n        list_1f9b3e -> min_0b1361.list\n        max_3f8c6d.max -> sub_7e1ce0.first\n        min_0b1361.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_ea2d5c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 155, name: \"list\") property(List) list_0f3b9e\n\n        out(x: 544, y: 138, name: \"output\") property(Number) output_ea1d7c\n\n        instance(x: 192, y: 139) sub_6f8b4c root.Std_k98ojb.Math.Sub {}\n        instance(x: -108, y: 156) max_2e9a3c root.Std_k98ojb.List.Max {}\n        instance(x: -109, y: -11) min_d5d7ee root.Std_k98ojb.List.Min {}\n        list_0f3b9e -> max_2e9a3c.list\n        list_0f3b9e -> min_d5d7ee.list\n        max_2e9a3c.max -> sub_6f8b4c.first\n        min_d5d7ee.min -> sub_6f8b4c.second\n        sub_6f8b4c.result -> output_ea1d7c\n    }\n\n    \n\n    instance(x: 12, y: -10) diff_max_min_3e2f0f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 1, name: \"list\") property(List) list_9a8f6e\n\n        out(x: 600, y: 11, name: \"output\") property(Number) output_7b3c4d\n\n        instance(x: 226, y: 10) sub_5a0c2f root.Std_k98ojb.Math.Sub {}\n        instance(x: -111, y: 1, name: \"Max value\") max_9e8b6c root.Std_k98ojb.List.Max {}\n        instance(x: -112, y: 132, name: \"Min value\") min_ea4f0d root.Std_k98ojb.List.Min {}\n        list_9a8f6e -> max_9e8b6c.list\n        list_9a8f6e -> min_ea4f0d.list\n        max_9e8b6c.max -> sub_5a0c2f.first\n        min_ea4f0d.min -> sub_5a0c2f.second\n        sub_5a0c2f.result -> output_7b3c4d\n    }\n\n    \n\n    instance(x: -63, y: 11) diff_max_min_9e6b8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 0, name: \"list\") property(List) list_1e8b5f\n\n        out(x: 550, y: 7, name: \"output\") property(Number) output_2c9d4a\n\n        instance(x: 186, y: 3) sub_6f1b1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -119, y: 0, name: \"Max value\") max_f7f5e8 root.Std_k98ojb.List.Max {}\n        instance(x: -118, y: 127, name: \"Min value\") min_9a1c6d root.Std_k98ojb.List.Min {}\n        list_1e8b5f -> sub_6f1b1f.second\n        max_f7f5e8.max -> sub_6f1b1f.first\n        list_1e8b5f -> min_9a1c6d.items\n        list_1e8b5f -> max_f7f5e8.list\n        sub_6f1b1f.result -> output_2c9d4a\n    }\n\n    \n\n    instance(x: 0, y: -10) diff_max_min_3e7c6e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -293, y: 145, name: \"list\") property(List) list_0f3e8d\n\n        out(x: 554, y: 144, name: \"output\") property(Number) output_eb9c7a\n\n        instance(x: 201, y: 147) sub_1e6e2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -106, y: 145) max_3d8f5f root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -0) min_4c7a1f root.Std_k98ojb.List.Min {}\n        list_0f3e8d -> max_3d8f5f.items\n        list_0f3e8d -> min_4c7a1f.items\n        max_3d8f5f.max -> sub_1e6e2e.first\n        min_4c7a1f.min -> sub_1e6e2e.second\n        sub_1e6e2e.result -> output_eb9c7a\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_3d0d5f root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 16, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1269, y: 127, name: \"output\") property(Bool) output_1a0b5e\n\n        instance(x: -104, y: 128) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_5e8f1d -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_685c8f\n        false -> getter_9cceb3.value\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        getter_9cceb3.value -> output_1a0b5e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f7d4e6 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 10, name: \"input\") property(Number) input_1a8f0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb9c6d\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f4c7ec\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5a3f0e\n\n        instance(x: -104, y: -110) ifexpression_1d9b8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7f3a6e\") getter_7f3a6e = output\n        setter(x: 116, y: -268, name: \"setter_eb9c5d\") setter_eb9c5d = output\n        input_1a8f0e -> ifexpression_1d9b8c.gen_0\n        getter_7f3a6e.value -> output_f4c7ec\n        ifexpression_1d9b8c.then -> setter_eb9c5d.execute\n        true -> setter_eb9c5d.new_value\n        execute_eb9c6d -> ifexpression_1d9b8c.execute\n        ifexpression_1d9b8c.else -> continue_5a3f0e\n        setter_eb9c5d.continue -> continue_5a3f0e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f6f2f4 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 0, name: \"input\") property(Number) input_1f9a3e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_e5b7c4\n\n        out(x: 515, y: 10, name: \"output\") property(Bool) output_f6d0ba\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9f3e1a\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1f9a3e -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_9f3e1a\n        getter_9cceb3.value -> output_f6d0ba\n        execute_e5b7c4 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_9f3e1a\n    }\n\n    \n\n    instance(x: -175, y: 10) is_even_8b3b7c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_1f3e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1216, y: 5, name: \"output\") property(Bool) output_9a3e1b\n\n        instance(x: 1060, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1f3e9d -> ifexpression_875761.gen_0\n        getter_9cceb3.value -> output_9a3e1b\n        ifexpression_875761.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_1cedb2.new_value\n        ifexpression_875761.else -> continue_685c8f\n        execute_12bf99 -> ifexpression_875761.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -291, y: 11) is_even_f53d27 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 11, name: \"input\") property(Number) input_1a8f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb0d6c\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5f7b4f\n        out(x: 1228, y: 13, name: \"output\") property(Bool) output_f9e3a1\n\n        instance(x: 1040, y: 10) ifexpression_6c9d2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_eb0d6c -> ifexpression_6c9d2f.execute\n        input_1a8f9e -> ifexpression_6c9d2f.gen_0\n        ifexpression_6c9d2f.value -> output_f9e3a1\n        ifexpression_6c9d2f.then -> continue_5f7b4f\n        ifexpression_6c9d2f.else -> continue_5f7b4f\n    }\n\n    \n\n    instance(x: -174, y: 11) is_even_3a1e0c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 2, name: \"input\") property(Number) input_1a0f3e\n        in(x: -452, y: -114, name: \"execute\") trigger() execute_eb9d6c\n\n        out(x: 558, y: 27, name: \"output\") property(Bool) output_f4f7af\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5e8a1f\n\n        instance(x: -82, y: 26) modulo_3b2d0c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 148, y: 22) equal_f9f6ee root.Std_k98ojb.Logic.Equal {}\n        input_1a0f3e -> modulo_3b2d0c.value\n        2 -> modulo_3b2d0c.divisor\n        modulo_3b2d0c.result -> equal_f9f6ee.left\n        0 -> equal_f9f6ee.right\n        execute_eb9d6c -> modulo_3b2d0c.execute\n        equal_f9f6ee.result -> output_f4f7af\n        equal_f9f6ee.value -> continue_5e8a1f\n    }\n\n    \n\n    instance(x: -82, y: 222) is_even_9a3b9f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 17, name: \"input\") property(Number) input_1f3a9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_e5b8d7\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f6c2ea\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9e1a4f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1f3a9e -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_f6c2ea\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_9e1a4f\n        execute_e5b8d7 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_9e1a4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f3c6e0 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 2, name: \"input\") property(Number) input_1a0f3e\n        in(x: -451, y: -112, name: \"execute\") trigger() execute_9b8c6d\n\n        out(x: 1257, y: 5, name: \"continue\") trigger() continue_4a2e4e\n        out(x: 1260, y: 145, name: \"output\") property(Bool) output_1f3b3e\n\n        instance(x: -92, y: 93) ifexpression_e6d7c8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 335, y: 160, name: \"getter_1a3e5f\") getter_1a3e5f = output\n        setter(x: 680, y: -313, name: \"setter_eb7d6c\") setter_eb7d6c = output\n        instance(x: 321, y: -20) for_8a0c4e root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -121, name: \"setter_eb7d6c\") setter_d5f3ee = output\n        input_1a0f3e -> ifexpression_e6d7c8.gen_0\n        ifexpression_e6d7c8.then -> setter_eb7d6c.execute\n        true -> setter_eb7d6c.new_value\n        ifexpression_e6d7c8.else -> setter_d5f3ee.execute\n        false -> setter_d5f3ee.new_value\n        getter_1a3e5f.value -> output_1f3b3e\n        execute_9b8c6d -> ifexpression_e6d7c8.execute\n        ifexpression_e6d7c8.value -> for_8a0c4e.reset\n        setter_d5f3ee.continue -> for_8a0c4e.next\n        setter_eb7d6c.continue -> for_8a0c4e.next\n        for_8a0c4e.done -> continue_4a2e4e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_9f3b9c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 166, name: \"input\") property(Number) input_1e8a3f\n        in(x: -485, y: 30, name: \"execute\") trigger() execute_90aaec\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        execute_90aaec -> ifexpression_875761.execute\n        getter_b280eb.value -> output_5bbcd7\n        input_1e8a3f -> ifexpression_875761.gen_0\n        setter_9d4f1c.continue -> continue_a96db6\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_fc79d5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 17, name: \"input\") property(Number) input_9e8a0f\n        in(x: -452, y: -111, name: \"execute\") trigger() execute_eb2c7d\n\n        out(x: 1224, y: 5, name: \"continue\") trigger() continue_6f1f3e\n        out(x: 1215, y: 147, name: \"output\") property(Bool) output_8a9b7f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_875761.else -> continue_6f1f3e\n        ifexpression_875761.value -> output_8a9b7f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_9e8a0f -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_6f1f3e\n        setter_9d4f1c.continue -> continue_6f1f3e\n        execute_eb2c7d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f0e8a9 root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a3d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) contains_4a2b2c root.Std_k98ojb.List.Contains {}\n        characters_5b9f8c.characters -> find_7a3d6e.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 89, y: 29) slice_3b8c7d root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_5a2e9f root.Std_k98ojb.Logic.NotEqual {}\n            characters_5b9f8c.characters -> slice_3b8c7d.list\n            find_7a3d6e.index -> slice_3b8c7d.start\n            -1 -> slice_3b8c7d.end\n            slice_3b8c7d.slice -> contains_4a2b2c.list\n            current_0 -> contains_4a2b2c.item\n            contains_4a2b2c.result -> notequal_5a2e9f.left\n            false -> notequal_5a2e9f.right\n            notequal_5a2e9f.result -> bool_1\n        } -> find_7a3d6e.predicate\n        find_7a3d6e.item -> output_0\n        input_0 -> characters_5b9f8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_1e4a2f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) for_1088d5 root.Std_k98ojb.Std.For {}\n        instance(x: 551, y: -105) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> for_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_807ffd root.Std_k98ojb.List.Slice {}\n            slice_807ffd.list -> contains_d42dce.list\n            for_1088d5.item -> slice_807ffd.start\n            -1 -> slice_807ffd.end\n            slice_807ffd.slice -> contains_d42dce.list\n            current_9f6850 -> contains_d42dce.item\n            contains_d42dce.result -> bool_af09a7\n        } -> for_1088d5.predicate\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_807ffd root.Std_k98ojb.List.Slice {}\n            slice_807ffd.list -> contains_d42dce.list\n            for_1088d5.item -> slice_807ffd.start\n            -1 -> slice_807ffd.end\n            slice_807ffd.slice -> contains_d42dce.list\n            current_9f6850 -> contains_d42dce.item\n            contains_d42dce.result -> bool_af09a7\n        } -> if_7c284f.predicate\n        for_1088d5.onItem -> if_7c284f.execute\n        if_7c284f.else -> for_1088d5.next\n        if_7c284f.then -> output_0.execute\n        for_1088d5.item -> output_0.value\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3d7f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -105) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 515, y: 44) contains_d5e9a6 root.Std_k98ojb.List.Contains {}\n        characters_2e1444.characters -> find_3d7f9c.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            contains_d5e9a6.list -> notequal_807ffd.right\n            current_9f6850 -> contains_d5e9a6.item\n            find_3d7f8c.seen -> contains_d5e9a6.list\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_3d7f8c.predicate\n        input_0 -> characters_2e1444.input\n        find_3d7f8c.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_d42dce root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"seen\") filter_0b1361 root.Std_k98ojb.Query.Filter {\n            where: \"it in seen\"\n        }\n        input_0 -> characters_d42dce.input\n        characters_d42dce.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> contains_45e806.item\n            seen -> contains_45e806.list\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_d42dce.characters -> filter_0b1361.list\n        find_7e1ce0.item -> output_ebef81\n        find_7e1ce0.onItem -> filter_0b1361.execute\n        filter_0b1361.result -> seen\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d42ce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"contains\") contains_d42dce root.Std_k98ojb.List.Contains {}\n        characters_2e1444.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_a54bdc root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> slice_45e806.list\n            0 -> slice_45e806.start\n            find_6d05b0.index -> slice_45e806.end\n            slice_45e806.slice -> contains_a54bdc.list\n            current_afd5b1 -> contains_a54bdc.item\n            contains_a54bdc.result -> bool_1eb6e9\n        } -> find_7d42ce.predicate\n        input_0 -> characters_2e1444.input\n        find_7d42ce.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6a9d8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -105) notequal_a1c4a5 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 515, y: 44) contains_7e2c3f root.Std_k98ojb.List.Contains {}\n        characters_5e3b7c.characters -> find_6a9d8f.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            contains_7e2c3f.list -> notequal_a1c4a5.right\n            find_6a9d8f.items -> contains_7e2c3f.list\n            current_0 -> contains_7e2c3f.item\n            contains_7e2c3f.contains -> bool_1\n        } -> find_6a9d8f.predicate\n        input_0 -> characters_5e3b7c.input\n        find_6a9d8f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_1e4a1f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3c713b root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.List.Contains {}\n        characters_2e1444.output -> find_3c713b.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_a54bdc root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> slice_45e806.list\n            find_3c713b.index -> slice_45e806.start\n            -1 -> slice_45e806.end\n            slice_45e806.slice -> contains_a54bdc.list\n            current_afd5b1 -> contains_a54bdc.item\n            contains_a54bdc.result -> bool_1eb6e9\n        } -> find_3c713b.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.list\n            find_3c713b.index -> slice_45e806.start\n            -1 -> slice_45e806.end\n            slice_45e806.slice -> ``first occurrence_0b1361``.list\n            current_afd5b1 -> ``first occurrence_0b1361``.item\n            notequal_148aeb.result -> bool_1eb6e9\n            find_3c713b.index -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n        } -> contains_d42dce.predicate\n        input_0 -> characters_2e1444.input\n        find_3c713b.item -> output_0\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -2) contains_d42dce root.Std_k98ojb.List.Contains {}\n        characters_5e3b7c.characters -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_1088d5 root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            characters_5e3b7c.characters -> slice_1088d5.list\n            find_6d05b0.index -> slice_1088d5.start\n            -1 -> slice_1088d5.end\n            current_9f6850 -> notequal_807ffd.right\n            slice_1088d5.slice -> contains_d42dce.list\n            contains_d42dce.contains -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> output_0\n        input_0 -> characters_5e3b7c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_d42dce root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_d42dce.input\n        characters_d42dce.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            instance(x: 415, y: 86) ``contains_a54bdc`` root.Std_k98ojb.Iteration.Find {}\n            current_afd5b1 -> contains_45e806.item\n            find_7e1ce0.processedItems -> contains_45e806.list\n            contains_45e806.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.item\n            ``characters_0b1361``.processedItems -> contains_45e806.list\n            contains_45e806.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3c713b root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"count\") filter_d42dce root.Std_k98ojb.Query.Filter {\n            where: \"it.count > 1\"\n        }\n        characters_2e1444.output -> find_3c713b.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            instance(x: 415, y: 86) filter_a54bdc root.Std_k98ojb.Query.Filter {\n                where: \"it.count > 1\"\n            }\n            current_afd5b1 -> contains_45e806.item\n            find_3c713b.result -> contains_45e806.list\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_3c713b.predicate\n        characters_2e1444.output -> filter_d42dce.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) count_45e806 root.Std_k98ojb.List.Length {}\n            instance(x: 415, y: 86) expression_a54bdc root.Std_k98ojb.Math.Expression {\n                expression: \"it > 1\"\n            }\n            current_afd5b1 -> count_45e806.list\n            count_45e806.length -> expression_a54bdc.gen_0\n            expression_a54bdc.result -> bool_1eb6e9\n        } -> filter_d42dce.predicate\n        find_3c713b.item -> output_0\n        input_0 -> characters_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_4e8f9a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_3c7d5b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_min_node.min -> a\n        getter_9cceb3.value -> b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_4e8f9a -> data_9a9c70.a\n        list_min_node.items -> data_9a9c70.b\n        a -> min_c3e343.items\n        b -> min_c3e343.items\n        min_c3e343.min -> second_min_3c7d5b\n    }\n\n    \n\n    instance(x: 426, y: -303) list_min_node root.main.second_smallest {}\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -453) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.result -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9e6f1a\n\n        out(x: 158, y: 0, name: \"second_smallest\") property(Number) second_smallest_8b7c4d\n\n        instance(x: -2, y: -94, name: \"First smallest number\") find_3e5c9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) filter_1a6f1f root.Std_k98ojb.Query.Filter {\n            where: \"it != first_smallest\"\n        }\n        instance(x: -2, y: 106, name: \"Second smallest number\") find_7c8e4d root.Std_k98ojb.Iteration.Find {}\n        list_9e6f1a -> find_3e5c9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_3e5c9f.predicate\n        list_9e6f1a -> filter_1a6f1f.list\n        find_3e5c9f.item -> filter_1a6f1f.first_smallest\n        filter_1a6f1f.result -> find_7c8e4d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_7c8e4d.predicate\n        find_7c8e4d.item -> second_smallest_8b7c4d\n    }\n\n    \n\n    instance(x: -174, y: 31) second_smallest_3a5f0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8a6e\n\n        out(x: 593, y: 1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_9f8a6e -> min_c3e343.items\n        min_c3e343.min -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 159, y: 238, name: \"second_min\") property(Number) second_min_a5b1c7\n\n        instance(x: 426, y: 123) min_4d6c2f root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [min, list]\n        list_9e3f8a -> data_9a9c70.list\n        min_4d6c2f.min -> data_9a9c70.min\n        instance(x: -609, y: -363) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        data_9a9c70.list -> filter_7b3b7b.list\n        list_min_node.items -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_min_node.items\n        getter_9cceb3.value -> second_min_a5b1c7\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        min_4d6c2f.min -> setter_1cedb2.new_value\n        data_9a9c70.list -> ifexpression_e38995.gen_0\n        filter_7b3b7b.result -> ifexpression_e38995.gen_1\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_min_node.min -> second_min_a5b1c7\n        min_4d6c2f.min -> data_9a9c70.min\n        list_9e3f8a -> min_4d6c2f.items\n        ifexpression_e38995.execute -> min_4d6c2f.trigger\n        setter_1cedb2.continue -> list_min_node.reset\n        setter_37db7f.continue -> list_min_node.reset\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f8a3e\n\n        out(x: 160, y: 158, name: \"second_min\") property(Number) second_min_a7c6b1\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) filter_3e9f2a root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        list_9f8a3e -> min_node.items\n        min_node.min -> filter_3e9f2a.list\n        filter_3e9f2a.result -> second_min_a7c6b1\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_5e8d0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_1_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_1_node.item\n        list_remove_1_node.result -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 1, name: \"list\") property(List) list_9f5a6e\n\n        out(x: 159, y: 86, name: \"second_min\") property(Number) second_min_7c2b3d\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) filter_6e9a5f root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        data_instance(x: -609, y: -363) data_9a9c70  = [min]\n        list_min_node.items -> list_min_node.items\n        list_9f5a6e -> list_min_node.items\n        list_min_node.min -> data_9a9c70.min\n        filter_6e9a5f.list -> list_9f5a6e\n        data_9a9c70 -> filter_6e9a5f.where\n        instance(x: 426, y: -303) list_min_node2 root.Std_k98ojb.List.Min {}\n        list_min_node2.items -> filter_6e9a5f.result\n        list_min_node2.min -> second_min_7c2b3d\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f5a6e\n\n        out(x: 593, y: 1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_9f5a6e -> min_c3e343.items\n        min_c3e343.min -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 358, name: \"second_min\") property(Number) second_min_f9110a\n\n        instance(x: -105, y: 144) find_1d5b2e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 252, name: \"elem\") property(Number) elem_9cceb3\n\n            out(x: 116, y: 262, name: \"bool\") property(Bool) bool_1cedb2\n\n            instance(x: 89, y: 246) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 252) min_c3e343 root.Std_k98ojb.List.Min {}\n            list_9f7759 -> min_c3e343.items\n            min_c3e343.min -> notequal_807ffd.right\n            elem_9cceb3 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_1cedb2\n        } -> find_1d5b2e.predicate\n        list_9f7759 -> find_1d5b2e.items\n        find_1d5b2e.item -> second_min_f9110a\n    }\n\n    \n\n    instance(x: -174, y: 568) second_smallest_d6e930 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 10049,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -171, y: 16, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -169, y: -123, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_4b3e5e\n\n        instance(x: 133, y: -131) intersection_1f9a6 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_1f9a6.left\n        list2_eb0d7c -> intersection_1f9a6.right\n        instance(x: 362, y: -107) length_4a3c5 root.Std_k98ojb.List.Length {}\n        intersection_1f9a6.intersect -> length_4a3c5.list\n        length_4a3c5.length -> output_4b3e5e\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_7d0f1 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 17, name: \"list1\") property(List) list1_3e8a9f\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_3e8a9f -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_ac7dfb root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -178, y: 20, name: \"list1\") property(List) list1_3a8f5e\n        in(x: -180, y: -131, name: \"list2\") property(List) list2_7c0b6d\n\n        out(x: 505, y: -109, name: \"output\") property(Bool) output_9f1f4a\n\n        instance(x: 220, y: -110, name: \"intersection\") intersection_5e3c8 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a8f5e -> intersection_5e3c8.left\n        list2_7c0b6d -> intersection_5e3c8.right\n        instance(x: 445, y: -109) contains_9a4b2 root.Std_k98ojb.List.Contains {}\n        intersection_5e3c8.intersect -> contains_9a4b2.list\n        list1_3a8f5e -> contains_9a4b2.item\n        contains_9a4b2.is_contained -> output_9f1f4a\n    }\n\n    \n\n    instance(x: -140, y: 45) intersection_b7d6c0 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -173, y: 20, name: \"list1\") property(List) list1_2e9f0a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7b8d5c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_e6b1aa\n\n        instance(x: 133, y: -131) intersection_3e4a9f root.Std_k98ojb.Sets.Intersection {}\n        list1_2e9f0a -> intersection_3e4a9f.left\n        list2_7b8d5c -> intersection_3e4a9f.right\n        instance(x: 245, y: -54) length_6e8a8c root.Std_k98ojb.List.Length {}\n        intersection_3e4a9f.intersect -> length_6e8a8c.list\n        instance(x: 0, y: -99) notequal_f1d7a2 root.Std_k98ojb.Logic.NotEqual {}\n        0 -> notequal_f1d7a2.right\n        length_6e8a8c.length -> notequal_f1d7a2.left\n        notequal_f1d7a2.result -> output_e6b1aa\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_b9f3d4 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 19, name: \"list1\") property(List) list1_9a2b6f\n        in(x: -163, y: -126, name: \"list2\") property(List) list2_8e7d4c\n\n        out(x: 584, y: -110, name: \"output\") property(Bool) output_5f3b1a\n\n        instance(x: 146, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2b6f -> intersection_c7c7e6.left\n        list2_8e7d4c -> intersection_c7c7e6.right\n        instance(x: 362, y: -95) length_8166b0 root.Std_k98ojb.List.Length {}\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        instance(x: 576, y: -97) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n        length_8166b0.length -> notequal_148aeb.left\n        0 -> notequal_148aeb.right\n        notequal_148aeb.result -> output_5f3b1a\n    }\n\n    \n\n    instance(x: -86, y: 59) has_common_element_9c7d2e root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -178, y: 16, name: \"list1\") property(List) list1_9e3f0a\n        in(x: -181, y: -122, name: \"list2\") property(List) list2_eb7c8d\n\n        out(x: 584, y: -109, name: \"output\") property(Bool) output_4a5f6f\n\n        instance(x: 132, y: -131) intersection_9e1c3f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f0a -> intersection_9e1c3f.left\n        list2_eb7c8d -> intersection_9e1c3f.right\n        instance(x: 360, y: -109) length_5a4f6c root.Std_k98ojb.List.Length {}\n        intersection_9e1c3f.intersect -> length_5a4f6c.list\n        instance(x: 560, y: -108) notequal_f8d7d2 root.Std_k98ojb.Logic.NotEqual {}\n        length_5a4f6c.length -> notequal_f8d7d2.left\n        0 -> notequal_f8d7d2.right\n        notequal_f8d7d2.result -> output_4a5f6f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_b3c1b9 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -171, y: 18, name: \"list1\") property(List) list1_4e9b8a\n        in(x: -155, y: -121, name: \"list2\") property(List) list2_e5f7c0\n\n        out(x: 504, y: -50, name: \"output\") property(Bool) output_6d0f3e\n\n        instance(x: 221, y: -48, name: \"intersection\") Sets.Intersection root.Std_k98ojb.Sets.Intersection {}\n        list1_4e9b8a -> intersection.left\n        list2_e5f7c0 -> intersection.right\n        List.Length(root.Std_k98ojb.List.Length) instance(x: 465, y: -47) length_6a3d3f {}\n        intersection.intersect -> length_6a3d3f.list\n        length_6a3d3f.length -> output_6d0f3e\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_eb1c9c root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 19, name: \"list1\") property(List) list1_9e3f8a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7b0d4c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_6a5a1e\n\n        instance(x: 133, y: -131) intersection_c9f3e8 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f8a -> intersection_c9f3e8.left\n        list2_7b0d4c -> intersection_c9f3e8.right\n        instance(x: 360, y: -95) length_5a9b8c root.Std_k98ojb.List.Length {}\n        intersection_c9f3e8.intersect -> length_5a9b8c.list\n        instance(x: 1058, y: -203) notequal_f6d1ec root.Std_k98ojb.Logic.NotEqual {}\n        length_5a9b8c.length -> notequal_f6d1ec.left\n        0 -> notequal_f6d1ec.right\n        notequal_f6d1ec.result -> output_6a5a1e\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_b3f7b9 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 10, name: \"list1\") property(List) list1_8a2b5e\n        in(x: -177, y: -124, name: \"list2\") property(List) list2_7c0f9d\n\n        out(x: 558, y: -97, name: \"output\") property(Bool) output_4a1f6f\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2b5e -> intersection_c7c7e6.left\n        list2_7c0f9d -> intersection_c7c7e6.right\n        instance(x: 360, y: -95) notempty_4f3c7f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_4f3c7f.list\n        notempty_4f3c7f.result -> output_4a1f6f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_9b8d2f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: 16, name: \"list1\") property(List) list1_3f8a6e\n        in(x: -278, y: -125, name: \"list2\") property(List) list2_eb9d7c\n\n        out(x: 784, y: -97, name: \"output\") property(Bool) output_4f5c0e\n\n        instance(x: 93, y: -98) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8a6e -> intersection_c7c7e6.left\n        list2_eb9d7c -> intersection_c7c7e6.right\n        instance(x: 360, y: -97) notempty_5b4a0e root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_5b4a0e.list\n        notempty_5b4a0e.result -> output_4f5c0e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 339, y: 20, name: \"getter_8f9c6d\") getter_8f9c6d = previous\n        setter(x: 682, y: -242, name: \"setter_7b3a4e\") setter_7b3a4e = previous\n        instance(x: 321, y: -34) for_1e2b5e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -145, name: \"setter_7b3a4e\") setter_9f6d7c = previous\n        instance(x: -275, y: -59) getat_e8a1ee root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b7e.else -> continue_5f0e0c\n        ifexpression_7e7b7e.value -> output_eb7d1c\n        ifexpression_7e7b7e.then -> setter_7b3a4e.execute\n        list_0a8f9e -> for_1e2b5e.items\n        for_1e2b5e.item -> ifexpression_7e7b7e.gen_2\n        for_1e2b5e.index -> ifexpression_7e7b7e.gen_0\n        getter_8f9c6d.value -> ifexpression_7e7b7e.gen_1\n        for_1e2b5e.onItem -> ifexpression_7e7b7e.execute\n        for_1e2b5e.done -> continue_5f0e0c\n        for_1e2b5e.item -> setter_7b3a4e.new_value\n        list_0a8f9e -> getat_e8a1ee.list\n        0 -> getat_e8a1ee.index\n        getat_e8a1ee.itemAtIndex -> setter_9f6d7c.new_value\n        execute_5b2f7c -> setter_9f6d7c.execute\n        setter_9f6d7c.continue -> for_1e2b5e.reset\n        setter_7b3a4e.continue -> for_1e2b5e.next\n    }\n\n    \n\n    instance(x: -82, y: 59) is_consecutive_8f9c0e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_1f8a5e\n\n        out(x: 1066, y: 0, name: \"output\") property(Bool) output_7c2d9b\n\n        instance(x: 1054, y: -12) ifexpression_3e1f9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: 1046, y: 89) filter_7c2d5a root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_7c2d5a.handler\n        list_1f8a5e -> filter_7c2d5a.list\n        ifexpression_3e1f9.value -> output_7c2d9b\n        ifexpression_3e1f9.else -> output_7c2d9b\n        list_1f8a5e -> ifexpression_3e1f9.items\n        func() {\n            in(x: -192, y: 68, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 49, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 54) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_7c2d5a.where\n    }\n\n    \n\n    instance(x: -71, y: 128) is_consecutive_1e3f9b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 5, name: \"list\") property(List) list_9e3a8f\n\n        out(x: 1214, y: 10, name: \"output\") property(Bool) output_7c2b6d\n\n        instance(x: 0, y: -12) sort_1f5f8c root.Std_k98ojb.List.Sort {}\n        instance(x: 353, y: 9) for_3e4a7c root.Std_k98ojb.Std.For {}\n        instance(x: 1026, y: 11) sub_2d0b1f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1298, y: -13) lessthan_5e9c3c root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1487, y: 10) and_4a2d0c root.Std_k98ojb.Logic.And {}\n        instance(x: 1686, y: 11) if_8f3c1e root.Std_k98ojb.Std.If {}\n        list_9e3a8f -> sort_1f5f8c.list\n        sort_1f5f8c.sortedList -> for_3e4a7c.items\n        func() {\n            in(x: -112, y: 39, name: \"current\") property(Number) current_9d0b6f\n\n            out(x: 704, y: 40, name: \"bool\") property(Bool) bool_1f3e5a\n\n            instance(x: 107, y: 36) sub_7c8c2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 350, y: 37) lessthan_4d0a9f root.Std_k98ojb.Math.LessThan {}\n            for_3e4a7c.index -> sub_7c8c2c.first\n            current_9d0b6f -> sub_7c8c2c.second\n            sub_7c8c2c.result -> lessthan_4d0a9f.left\n            1 -> lessthan_4d0a9f.right\n            lessthan_4d0a9f.result -> bool_1f3e5a\n        } -> for_3e4a7c.handler\n        for_3e4a7c.onItem -> if_8f3c1e.execute\n        for_3e4a7c.done -> if_8f3c1e.else\n        and_4a2d0c.result -> output_7c2b6d\n        lessthan_5e9c3c.result -> and_4a2d0c.right\n        1 -> lessthan_5e9c3c.left\n        sub_2d0b1f.result -> lessthan_5e9c3c.right\n        for_3e4a7c.index -> sub_2d0b1f.first\n        for_3e4a7c.item -> sub_2d0b1f.second\n        if_8f3c1e.then -> sub_2d0b1f.execute\n    }\n\n    \n\n    instance(x: -62, y: 129) is_consecutive_f6a5ed root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9a1f3e\n\n        out(x: 1025, y: 7, name: \"output\") property(Bool) output_8c2d6b\n\n        instance(x: 106, y: -4) sort_b0b7cd root.Std_k98ojb.List.Sort {}\n        instance(x: 442, y: 9) for_1a5f3e root.Std_k98ojb.Std.For {}\n        instance(x: 789, y: 8) sub_2c6d3c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1030, y: -4) and_1b7f3c root.Std_k98ojb.Logic.And {}\n        sort_b0b7cd.sorted -> for_1a5f3e.items\n        func() {\n            in(x: -113, y: 41, name: \"current\") property(Number) current_9d4b6e\n\n            out(x: 705, y: 49, name: \"bool\") property(Bool) bool_7c8a2f\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_9d4b6e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> bool_7c8a2f\n        } -> for_1a5f3e.handler\n        for_1a5f3e.onItem -> sub_2c6d3c.execute\n        for_1a5f3e.index -> sub_2c6d3c.first\n        1 -> sub_2c6d3c.second\n        list_9a1f3e -> sort_b0b7cd.list\n        sub_2c6d3c.result -> and_1b7f3c.left\n        1 -> and_1b7f3c.right\n        for_1a5f3e.done -> output_8c2d6b\n        and_1b7f3c.result -> output_8c2d6b\n    }\n\n    \n\n    instance(x: -63, y: 159) is_consecutive_f9d0a4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 1, name: \"list\") property(List) list_9e6f3a\n\n        out(x: 1020, y: 2, name: \"output\") property(Bool) output_8b7d4c\n\n        instance(x: 104, y: -5) sort_1e3c7f root.Std_k98ojb.List.Sort {}\n        instance(x: 400, y: 11) for_9a2c8f root.Std_k98ojb.Std.For {}\n        instance(x: 720, y: 10) sub_4d0a5f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1001, y: -6) if_7e9c1f root.Std_k98ojb.Std.If {}\n        sort_1e3c7f.sorted -> for_9a2c8f.items\n        func() {\n            in(x: -113, y: 36, name: \"current\") property(Number) current_e6d5ad\n\n            out(x: 698, y: 47, name: \"bool\") property(Bool) bool_1e0b9a\n\n            instance(x: 112, y: 31) sub_4f3c8f root.Std_k98ojb.Math.Sub {}\n            current_e6d5ad -> sub_4f3c8f.first\n            for_9a2c8f.index -> sub_4f3c8f.second\n            sub_4f3c8f.result -> bool_1e0b9a\n        } -> if_7e9c1f.predicate\n        for_9a2c8f.onItem -> if_7e9c1f.execute\n        list_9e6f3a -> sort_1e3c7f.list\n        1 -> sub_4d0a5f.second\n        for_9a2a8f.index -> sub_4d0a5f.first\n        if_7e9c1f.else -> output_8b7d4c\n        if_7e9c1f.then -> continue_3e8c6f\n        for_9a2c8f.done -> continue_3e8c6f\n        sub_4d0a5f.result -> for_9a2c8f.next\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_2c856f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 1, name: \"list\") property(List) list_8e9f0a\n\n        out(x: 1023, y: 10, name: \"output\") property(Bool) output_eb7c6d\n\n        instance(x: 110, y: 13) sort_2a1f4f root.Std_k98ojb.List.Sort {}\n        instance(x: 403, y: -8) for_5e3c0e root.Std_k98ojb.Std.For {}\n        instance(x: 728, y: 9) sub_6d7f1f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1022, y: 10) and_4a9b8f root.Std_k98ojb.Logic.And {}\n        sort_2a1f4f.sorted -> for_5e3c0e.items\n        func() {\n            in(x: -113, y: -19, name: \"current\") property(Number) current_e7d6ba\n\n            out(x: 687, y: -8, name: \"bool\") property(Bool) bool_1a9f4b\n\n            instance(x: 92, y: -22) sub_2c0e3c root.Std_k98ojb.Math.Sub {}\n            current_e7d6ba -> sub_2c0e3c.first\n            for_5e3c0e.index -> sub_2c0e3c.second\n            1 -> sub_2c0e3c.second\n            sub_2c0e3c.result -> bool_1a9f4b\n        } -> and_4a9b8f.left\n        for_5e3c0e.onItem -> and_4a9b8f.execute\n        func() {\n            in(x: -113, y: -19, name: \"current\") property(Number) current_e7d6ba\n\n            out(x: 687, y: -8, name: \"bool\") property(Bool) bool_1a9f4b\n\n            instance(x: 92, y: -22) sub_2c0e3c root.Std_k98ojb.Math.Sub {}\n            current_e7d6ba -> sub_2c0e3c.first\n            for_5e3c0e.index -> sub_2c0e3c.second\n            1 -> sub_2c0e3c.second\n            sub_2c0e3c.result -> bool_1a9f4b\n        } -> sub_6d7f1f.first\n        for_5e3c0e.index -> sub_6d7f1f.second\n        1 -> sub_6d7f1f.second\n        sub_6d7f1f.result -> and_4a9b8f.right\n        and_4a9b8f.result -> output_eb7c6d\n        for_5e3c0e.done -> output_eb7c6d\n    }\n\n    \n\n    instance(x: -62, y: 179) is_consecutive_1a2c9c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 4, name: \"list\") property(List) list_1a9f3e\n\n        out(x: 1060, y: 13, name: \"output\") property(Bool) output_7c8d5b\n\n        instance(x: 101, y: -2) sort_ba6b1f root.Std_k98ojb.List.Sort {}\n        instance(x: 417, y: 16) for_3e4b0c root.Std_k98ojb.Std.For {}\n        instance(x: 749, y: 15) sub_9d7c2c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1011, y: -5) if_e8f6a9 root.Std_k98ojb.Std.If {}\n        instance(x: 1294, y: -10) and_0e3b8f root.Std_k98ojb.Logic.And {}\n        sort_ba7b1f.result -> for_3e4b0c.items\n        func() {\n            in(x: -114, y: 47, name: \"current\") property(Number) current_6d9a5f\n\n            out(x: 694, y: 49, name: \"bool\") property(Bool) bool_7e8f2b\n\n            instance(x: 112, y: 45) sub_1c0c3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 369, y: 47) equal_f9d6a4 root.Std_k98ojb.Logic.Equal {}\n            for_3e4b0c.index -> sub_1c0c3f.first\n            current_6d9a5f -> sub_1c0c3f.second\n            sub_1c0c3f.result -> equal_f9d6a4.left\n            1 -> equal_f9d6a4.right\n            equal_f9d6a4.result -> bool_7e8f2b\n        } -> if_e8f6a9.predicate\n        for_3e4b0c.onItem -> if_e8f6a9.execute\n        if_e8f6a9.else -> output_7c8d5b\n        for_3e4b0c.done -> output_7c8d5b\n        for_3e4b0c.index -> sub_9d7c2c.first\n        1 -> sub_9d7c2c.second\n        sub_9d7c2c.result -> and_0e3b8f.left\n        if_e8f6a9.value -> and_0e3b8f.right\n        and_0e3b8f.result -> output_7c8d5b\n        list_1a9f3e -> sort_ba7b1f.list\n    }\n\n    \n\n    instance(x: -63, y: 178) is_consecutive_6e4f2f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 3, name: \"list\") property(List) list_1f8d9e\n\n        out(x: 1050, y: 2, name: \"output\") property(Bool) output_7a4b7c\n\n        instance(x: 0, y: -10) sort_6b5c3c root.Std_k98ojb.List.Sort {}\n        instance(x: 322, y: 1) for_9e2f1d root.Std_k98ojb.Std.For {}\n        instance(x: 640, y: 7) sub_4a8c7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 912, y: -3) equal_5a0b6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1122, y: 1) if_9f0e2d root.Std_k98ojb.Std.If {}\n        sort_6b5c3c.sorted -> for_9e2f1d.items\n        func() {\n            in(x: -192, y: 49, name: \"current\") property(Number) current_8a4f7f\n\n            out(x: 706, y: 38, name: \"bool\") property(Bool) bool_5b9c3e\n\n            instance(x: 225, y: 45) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 462, y: 40) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_8a4f7f -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_5b9c3e\n        } -> for_9e2f1d.handler\n        for_9e2f1d.index -> sub_4a8c7c.first\n        1 -> sub_4a8c7c.second\n        for_9e2f1d.item -> sub_4a8c7c.second\n        sub_4a8c7c.result -> equal_5a0b6c.left\n        for_9e2f1d.item -> equal_5a0b6c.right\n        equal_5a0b6c.result -> if_9f0e2d.predicate\n        for_9e2f1d.onItem -> if_9f0e2d.execute\n        false -> if_9f0e2d.value\n        true -> output_7a4b7c\n        if_9f0e2d.then -> output_7a4b7c\n        for_9e2f1d.done -> output_7a4b7c\n        list_1f8d9e -> sort_6b5c3c.list\n    }\n\n    \n\n    instance(x: -56, y: 176) is_consecutive_f1b7c0 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 5, name: \"list\") property(List) list_3e8a1f\n\n        out(x: 1000, y: 2, name: \"output\") property(Bool) output_9c6d7b\n\n        instance(x: 0, y: -12) sort_4a5f9c root.Std_k98ojb.List.Sort {}\n        instance(x: 0, y: 93) for_1e3c8c root.Std_k98ojb.Std.For {}\n        instance(x: 357, y: 92) sub_6d7b1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 649, y: -2) lessthanorequal_e9f0a4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 920, y: 3) and_5e6d7f root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -61) if_8c1b2c root.Std_k98ojb.Std.If {}\n        sort_4a5f9c.list -> for_1e3c8c.items\n        func() {\n            in(x: -113, y: 44, name: \"current\") property(Number) current_6d0a1e\n\n            out(x: 519, y: 55, name: \"bool\") property(Bool) bool_7f2b3f\n\n            instance(x: 112, y: 49) sub_9c5e8f root.Std_k98ojb.Math.Sub {}\n            instance(x: 416, y: 50) lessthanorequal_6a1d0f root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_1e3c8c.index -> sub_9c5e8f.first\n            current_6d0a1e -> sub_9c5e8f.second\n            1 -> lessthanorequal_6a1d0f.right\n            sub_9c5e8f.result -> lessthanorequal_6a1d0f.left\n            lessthanorequal_6a1d0f.result -> bool_7f2b3f\n        } -> for_1e3c8c.handler\n        for_1e3c8c.onItem -> if_8c1b2c.execute\n        for_1e3c8c.done -> output_9c6d7b\n        list_3e8a1f -> sort_4a5f9c.list\n        sub_6d7b1c.result -> lessthanorequal_e9f0a4.left\n        1 -> lessthanorequal_e9f0a4.right\n        for_1e3c8c.index -> sub_6d7b1c.first\n        for_1e3c8c.item -> sub_6d7b1c.second\n        lessthanorequal_e9f0a4.result -> and_5e6d7f.left\n        bool_7f2b3f -> and_5e6d7f.right\n        if_8c1b2c.else -> output_9c6d7b\n        and_5e6d7f.result -> if_8c1b2c.predicate\n    }\n\n    \n\n    instance(x: -60, y: 180) is_consecutive_4a0d3f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_3a8f1e\n\n        out(x: 1050, y: 9, name: \"output\") property(Bool) output_eb6d7c\n\n        instance(x: 1044, y: -15) ifexpression_2b5b1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 526, y: 16, name: \"getter_9a3f6c\") getter_9a3f6c = previous\n        setter(x: 1022, y: -122, name: \"setter_7e5b0d\") setter_7e5b0d = previous\n        instance(x: 305, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -123, name: \"setter_7e5b0d\") setter_9f3a2c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_2b5b1e.else -> output_eb6d7c\n        ifexpression_2b5b1e.value -> output_eb6d7c\n        ifexpression_2b5b1e.then -> setter_7e5b0d.execute\n        list_3a8f1e -> for_d26972.items\n        for_d26972.item -> ifexpression_2b5b1e.gen_2\n        for_d26972.index -> ifexpression_2b5b1e.gen_0\n        getter_9a3f6c.value -> ifexpression_2b5b1e.gen_1\n        for_d26972.onItem -> ifexpression_2b5b1e.execute\n        for_d26972.done -> output_eb6d7c\n        for_d26972.item -> setter_7e5b0d.new_value\n        list_3a8f1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9f3a2c.new_value\n        setter_9f3a2c.continue -> for_d26972.reset\n        setter_7e5b0d.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -66, y: 59) is_consecutive_1f8c4f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_3f0a8e\n        in(x: -292, y: -170, name: \"list\") property(List) list_1c7b2d\n\n        out(x: 1065, y: -120, name: \"output\") property(Bool) output_4e6c1d\n\n        instance(x: -93, y: -173, name: \"length of sublist\") length_3a9f0c root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -172) contains_7e8a2f root.Std_k98ojb.List.Contains {}\n        instance(x: 364, y: -171) equal_1a5d6f root.Std_k98ojb.Logic.Equal {}\n        sublist_3f0a8e -> length_3a9f0c.list\n        list_1c7b2d -> contains_7e8a2f.list\n        func() {\n            in(x: -193, y: -115, name: \"current\") property(List) current_5e4a7\n\n            out(x: 705, y: -105, name: \"output\") property(Bool) output_1c0b3d\n\n            instance(x: 226, y: -112) slice_f8f9f2 root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: -110) equal_5a7e6f root.Std_k98ojb.Logic.Equal {}\n            current_5e4a7 -> slice_f8f9f2.list\n            length_3a9f0c.length -> slice_f8f9f2.start\n            slice_f8f9f2.slice -> equal_5a7e6f.left\n            sublist_3f0a8e -> equal_5a7e6f.right\n            equal_5a7e6f.result -> output_1c0b3d\n        } -> contains_7e8a2f.handler\n        contains_7e8a2f.is_contained -> equal_1a5d6f.left\n        true -> equal_1a5d6f.right\n        equal_1a5d6f.result -> output_4e6c1d\n    }\n\n    \n\n    instance(x: -92, y: 29) is_sublist_7b8b0 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 20, name: \"sublist\") property(List) sublist_1f8a0e\n        in(x: -285, y: -160, name: \"list\") property(List) list_3c9d5b\n\n        out(x: 1017, y: -110, name: \"output\") property(Bool) output_2a4b7f\n\n        instance(x: -82, y: -161) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 188, y: -114) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 189, y: -4) lessthan_ba7c9d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 191, y: 105) and_3e1f2f root.Std_k98ojb.Logic.And {}\n        instance(x: 188, y: 217) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -0, y: 55) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        greaterthan_cb50ae.result -> and_3e1f2f.left\n        lessthan_ba7c9d.result -> and_3e1f2f.right\n        sublist_1f8a0e -> length_6e87f2.list\n        list_3c9d5b -> length_6e87f2.list\n        length_6e87f2.length -> greaterthan_cb50ae.left\n        length_6e87f2.length -> lessthan_ba7c9d.right\n        sublist_1f8a0e -> for_d26972.items\n        and_3e1f2f.result -> for_d26972.reset\n        0 -> slice_3f3ee6.start\n        func() {\n            in(x: -192, y: 84, name: \"index\") property(Number) index_7a9c4b\n\n            out(x: 698, y: 85, name: \"\") property(Number) _1e8d0a\n\n            instance(x: 112, y: 80) add_5f2f6c root.Std_k98ojb.Math.Add {}\n            index_7a9c4b -> add_5f2f6c.first\n            sublist_1f8a0e.length -> add_5f2f6c.second\n            add_5f2f6c.result -> _1e8d0a\n        } -> slice_3f3ee6.end\n        for_d26972.item -> slice_3f3ee6.list\n        list_3c9d5b -> slice_3f3ee6.list\n        slice_3f3ee6.slice -> and_3e1f2f.right\n        sublist_1f8a0e -> and_3e1f2f.left\n        for_d26972.onItem -> and_3e1f2f.execute\n        and_3e1f2f.result -> output_2a4b7f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_8d0c5f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 15, name: \"sublist\") property(List) sublist_3a8d9f\n        in(x: -303, y: -177, name: \"list\") property(List) list_0b075e\n\n        out(x: 1265, y: -163, name: \"output\") property(Bool) output_1c7b2f\n\n        instance(x: -83, y: -176, name: \"is sublist\") filter_3d9a4c root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        instance(x: 246, y: -164) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_0b075e -> filter_3d9a4c.list\n        sublist_3a8d9f -> filter_3d9a4c.sublist\n        filter_3d9a4c.result_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_1c7b2f\n    }\n\n    \n\n    instance(x: -83, y: 19) is_sublist_5e8c9a root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 5, name: \"sublist\") property(List) sublist_0f9a1e\n        in(x: -295, y: -205, name: \"list\") property(List) list_7c8d6b\n\n        out(x: 1212, y: -97, name: \"output\") property(Bool) output_e5b4ba\n\n        instance(x: -0, y: -203, name: \"sublist length\") length_9e1a3f root.Std_k98ojb.List.Length {}\n        instance(x: 246, y: -206) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -202) not_75283f root.Std_k98ojb.Logic.Not {}\n        sublist_0f9a1e -> length_9e1a3f.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) contains_32727d root.Std_k98ojb.List.Contains {}\n            current_81298e -> slice_3f3ee6.list\n            length_9e1a3f.length -> slice_3f3ee6.start\n            -1 -> slice_3f3ee6.end\n            slice_3f3ee6.slice -> contains_32727d.list\n            sublist_0f9a1e -> contains_32727d.item\n            contains_32727d.is_contained -> bool_4524be\n        } -> map_c73e3b.handler\n        list_7c8d6b -> map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        contains_32727d.is_contained -> not_75283f.input\n        not_75283f.result -> output_e5b4ba\n    }\n\n    \n\n    instance(x: -293, y: 5) is_sublist_a7c1e9 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_1f9a0e\n        in(x: -278, y: -175, name: \"list\") property(List) list_7c6b3d\n\n        out(x: 1045, y: -100, name: \"output\") property(Bool) output_e2a8ba\n\n        instance(x: -98, y: -177, name: \"is sublist\") filter_1f0e4f root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        instance(x: 206, y: -102) contains_7c6d5a root.Std_k98ojb.List.Contains {}\n        list_7c6b3d -> filter_1f0e4f.list\n        sublist_1f9a0e -> filter_1f0e4f.sublist\n        filter_1f0e4f.result -> contains_7c6d5a.list\n        true -> contains_7c6d5a.item\n        contains_7c6d5a.is_contained -> output_e2a8ba\n    }\n\n    \n\n    instance(x: -92, y: 35) is_sublist_1f9a0e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 15, name: \"sublist\") property(List) sublist_2f1a8e\n        in(x: -300, y: -165, name: \"list\") property(List) list_0c7b9d\n\n        out(x: 1005, y: -85, name: \"output\") property(Bool) output_e4a3ea\n\n        instance(x: -99, y: -166, name: \"find sublist in list\") find_2f8e6c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_a9a7d0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b2f8c root.Std_k98ojb.List.Contains {}\n            sublist_2f1a8e -> contains_3b2f8c.list\n            current_a9a7d0 -> contains_3b2f8c.item\n            contains_3b2f8c.is_contained -> bool_1eb6e9\n        } -> find_2f8e6c.predicate\n        list_0c7b9d -> find_2f8e6c.items\n        find_2f8e6c.item -> output_e4a3ea\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_5a1f8a root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"sublist\") property(List) sublist_1a8f6e\n        in(x: -285, y: -220, name: \"list\") property(List) list_2b7d5c\n\n        out(x: 1069, y: -105, name: \"output\") property(Bool) output_e0b4ef\n\n        instance(x: -94, y: -217, name: \"find sublist in list\") find_f1f3a8 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 16, name: \"current\") property(List) current_7c9e5d\n\n            out(x: 702, y: 19, name: \"\") property(Bool) _0f1a8a\n\n            instance(x: 246, y: 14) contains_3b4b2f root.Std_k98ojb.List.Contains {}\n            sublist_1a8f6e -> contains_3b4b2f.list\n            current_7c9e5d -> contains_3b4b2f.item\n            contains_3b4b2f.is_contained -> _0f1a8a\n        } -> find_f1f3a8.predicate\n        list_2b7d5c -> find_f1f3a8.items\n        find_f1f3a8.item -> output_e0b4ef\n    }\n\n    \n\n    instance(x: -93, y: 11) is_sublist_6e9b4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 20, name: \"sublist\") property(List) sublist_1f8d9a\n        in(x: -306, y: -160, name: \"list\") property(List) list_7c0b5e\n\n        out(x: 1056, y: -11, name: \"output\") property(Bool) output_4a2a8a\n\n        instance(x: -95, y: -162, name: \"find sublist in list\") find_1f3d9 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_8c0e6a\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7f2b3d root.Std_k98ojb.List.Contains {}\n            sublist_1f8d9a -> contains_7f2b3d.list\n            current_8c0e6a -> contains_7f2b3d.item\n            contains_7f2b3d.is_contained -> bool_1eb6e9\n        } -> find_1f3d9.predicate\n        list_7c0b5e -> find_1f3d9.items\n        find_1f3d9.item -> output_4a2a8a\n    }\n\n    \n\n    instance(x: -292, y: 31) is_sublist_6a7c4 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_0f8e1a\n        in(x: -279, y: -170, name: \"list\") property(List) list_3c9d5b\n\n        out(x: 1007, y: -105, name: \"output\") property(Bool) output_4a2f6f\n\n        instance(x: -78, y: -171, name: \"sublist length\") length_8e0b7c root.Std_k98ojb.List.Length {}\n        instance(x: 188, y: -107) contains_1d9c5c root.Std_k98ojb.List.Contains {}\n        sublist_0f8e1a -> length_8e0b7c.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_4c2c8d\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_9a1b7f root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) contains_5c0e3d root.Std_k98ojb.List.Contains {}\n            current_4c2c8d -> slice_9a1b7f.list\n            length_8e0b7c.length -> slice_9a1b7f.end\n            0 -> slice_9a1b7f.start\n            slice_9a1b7f.slice -> contains_5c0e3d.list\n            sublist_0f8e1a -> contains_5c0e3d.item\n            contains_5c0e3d.is_contained -> bool_4524be\n        } -> contains_1d9c5c.handler\n        list_3c9d5b -> contains_1d9c5c.list\n        contains_1d9c5c.result -> output_4a2f6f\n    }\n\n    \n\n    instance(x: -66, y: 59) is_sublist_ae8c0c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 30, name: \"sublist\") property(List) sublist_3f9a1e\n        in(x: -287, y: -150, name: \"list\") property(List) list_0c7d6b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_3f9a1e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_0c7d6b -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        sublist_3f9a1e -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a8d5c2 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_7b8c5d\n\n        out(x: 1216, y: 4, name: \"continue\") trigger() continue_0f7c1d\n        out(x: 1163, y: 177, name: \"output\") property(Number) output_2e9a0f\n\n        instance(x: -8, y: -120) for_5b6f4f root.Std_k98ojb.Std.For {}\n        getter(x: 496, y: 166, name: \"getter_e7c3d1\") getter_e7c3d1 = index\n        setter(x: 768, y: -125, name: \"setter_9e2a8f\") setter_9e2a8f = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_5b6f4f.items\n        execute_7b8c5d -> setter_9e2a8f.execute\n        0 -> setter_9e2a8f.new_value\n        getter_e7c3d1.value -> output_2e9a0f\n        for_5b6f4f.done -> continue_0f7c1d\n        setter_9e2a8f.continue -> for_5b6f4f.reset\n        for_5b6f4f.onItem -> ifexpression_6c15d4.execute\n        for_5b6f4f.index -> ifexpression_6c15d4.gen_0\n        1 + getter_e7c3d1.value -> ifexpression_6c15d4.gen_1\n        ifexpression_6c15d4.then -> setter_9e2a8f.execute\n        for_5b6f4f.index -> setter_9e2a8f.new_value\n        ifexpression_6c15d4.else -> for_5b6f4f.next\n        setter_9e2a8f.continue -> continue_0f7c1d\n    }\n\n    \n\n    instance(x: -177, y: 20) find_missing_3f1b8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e3f6a\n        in(x: -279, y: -223, name: \"execute\") trigger() execute_5b8d4c\n\n        out(x: 1020, y: -224, name: \"continue\") trigger() continue_7f1b2e\n        out(x: 1013, y: 57, name: \"output\") property(Number) output_6a7c7e\n\n        instance(x: 0, y: 0) for_5d8a4c root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 0, name: \"getter_1f9b2e\") getter_1f9b2e = index\n        setter(x: 0, y: 0, name: \"setter_7d5a6c\") setter_7d5a6c = index\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 490, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        list_9e3f6a -> for_5d8a4c.items\n        execute_5b8d4c -> setter_7d5a6c.execute\n        -1 -> setter_7d5a6c.new_value\n        getter_1f9b2e.value -> output_6a7c7e\n        for_5d8a4c.done -> continue_7f1b2e\n        setter_7d5a6c.continue -> for_5d8a4c.reset\n        list_9e3f6a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_7d5a6c.new_value\n        for_5d8a4c.onItem -> ifexpression_875761.execute\n        for_5d8a4c.item -> ifexpression_875761.gen_2\n        for_5d8a4c.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.else -> for_5d8a4c.next\n        for_5d8a4c.item -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_5d8a4c.next\n    }\n\n    \n\n    instance(x: -27, y: 125) find_missing_6e0b2f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 1, name: \"list\") property(List) list_3e8b9f\n        in(x: -276, y: -239, name: \"execute\") trigger() execute_ea7d4c\n\n        out(x: 1020, y: -237, name: \"continue\") trigger() continue_5c1b6f\n        out(x: 1012, y: 15, name: \"output\") property(Number) output_9e3a8f\n\n        instance(x: 0, y: 0) for_4d9b9f root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 0, name: \"getter_7c1c6e\") getter_7c1c6e = index\n        setter(x: 339, y: -248, name: \"setter_8d9a5f\") setter_8d9a5f = index\n        instance(x: 592, y: -20) ifexpression_4b3f2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 338, y: 154, name: \"getter_9e7c5d\") getter_9e7c5d = previous\n        setter(x: 683, y: -120, name: \"setter_8f3b6a\") setter_8f3b6a = previous\n        instance(x: -0, y: -0) getat_1d2b4f root.Std_k98ojb.List.GetAt {}\n        ifexpression_4b3f2f.else -> continue_5c1b6f\n        getter_7c1c6e.value -> output_9e3a8f\n        list_3e8b9f -> for_4d9b9f.items\n        execute_ea7d4c -> setter_8d9a5f.execute\n        0 -> setter_8d9a5f.new_value\n        for_4d9b9f.done -> continue_5c1b6f\n        getter_9e7c5d.value -> ifexpression_4b3f2f.gen_1\n        list_3e8b9f -> getat_1d2b4f.list\n        0 -> getat_1d2b4f.index\n        getat_1d2b4f.itemAtIndex -> setter_8d9a5f.new_value\n        for_4d9b9f.onItem -> ifexpression_4b3f2f.execute\n        for_4d9b9f.index -> ifexpression_4b3f2f.gen_0\n        for_4d9b9f.item -> ifexpression_4b3f2f.gen_2\n        setter_8d9a5f.continue -> for_4d9b9f.reset\n        ifexpression_4b3f2f.then -> setter_8f3b6a.execute\n        for_4d9b9f.item -> setter_8f3b6a.new_value\n        setter_8f3b6a.continue -> for_4d9b9f.next\n    }\n\n    \n\n    instance(x: -1, y: 160) find_missing_5c2e0f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1a3f8e\n        in(x: -282, y: -226, name: \"execute\") trigger() execute_9b2c5d\n\n        out(x: 1017, y: -230, name: \"continue\") trigger() continue_4b6c4e\n        out(x: 1008, y: 0, name: \"output\") property(Number) output_3a1f1e\n\n        instance(x: 0, y: 0) for_9d7e2a root.Std_k98ojb.Std.For {}\n        getter(x: 336, y: 29, name: \"getter_8c4c6e\") getter_8c4c6e = index\n        setter(x: 679, y: -249, name: \"setter_7d9a5f\") setter_7d9a5f = index\n        instance(x: 321, y: -20) ifexpression_e1b3ae root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9a8f6c\") getter_9a8f6c = previous\n        setter(x: -0, y: -121, name: \"setter_7d9a5f\") setter_1b2e4d = index\n        instance(x: -275, y: -35) getat_eb9f6e root.Std_k98ojb.List.GetAt {}\n        ifexpression_e1b3ae.else -> continue_4b6c4e\n        ifexpression_e1b3ae.then -> setter_7d9a5f.execute\n        list_1a3f8e -> for_9d7e2a.items\n        for_9d7e2a.item -> ifexpression_e1b3ae.gen_2\n        for_9d7e2a.index -> ifexpression_e1b3ae.gen_0\n        getter_9a8f6c.value -> ifexpression_e1b3ae.gen_1\n        for_9d7e2a.onItem -> ifexpression_e1b3ae.execute\n        for_9d7e2a.done -> continue_4b6c4e\n        for_9d7e2a.item -> setter_7d9a5f.new_value\n        list_1a3f8e -> getat_eb9f6e.list\n        0 -> getat_eb9f6e.index\n        getat_eb9f6e.itemAtIndex -> setter_1b2e4d.new_value\n        execute_9b2c5d -> setter_1b2e4d.execute\n        getter_8c4c6e.value -> output_3a1f1e\n        setter_1b2e4d.continue -> for_9d7e2a.reset\n        setter_7d9a5f.continue -> for_9d7e2a.next\n    }\n\n    \n\n    instance(x: -10, y: 129) find_missing_3c8c6e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9e6f5a\n        in(x: -278, y: -250, name: \"execute\") trigger() execute_1b8c4d\n\n        out(x: 1067, y: -252, name: \"continue\") trigger() continue_e2f3ea\n        out(x: 1070, y: 20, name: \"output\") property(Number) output_5a6eae\n\n        instance(x: 0, y: 0) for_1c7b9d root.Std_k98ojb.Std.For {}\n        getter(x: -110, y: 50, name: \"getter_8f2b3f\") getter_8f2b3f = index\n        setter(x: 580, y: -250, name: \"setter_7c1d5e\") setter_7c1d5e = index\n        instance(x: 320, y: -120) ifexpression_6a4f9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_8f2b3f\") getter_d5d7e9 = previous\n        setter(x: -0, y: -121, name: \"setter_7c1d5e\") setter_6a4c5e = previous\n        list_",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 0, name: \"list\") property(List) list_3e9f8a\n        in(x: -304, y: -224, name: \"execute\") trigger() execute_e5b7c1\n\n        out(x: 1066, y: -221, name: \"continue\") trigger() continue_2d0f4e\n        out(x: 1058, y: 3, name: \"output\") property(Number) output_7a9b4e\n\n        instance(x: 0, y: 0) for_5c1c0e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_8d3f2d\") getter_8d3f2d = index\n        setter(x: -0, y: -0, name: \"setter_7c9e5a\") setter_7c9e5a = index\n        instance(x: 334, y: -1) ifexpression_4b7f9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_8d3f2d\") getter_d6a5e1 = previous\n        setter(x: -0, y: -0, name: \"setter_7c9e5a\") setter_b4b3ba = previous\n        instance(x: 679, y: -221) if_1b7f1f root.Std_k98ojb.Std.If {}\n        list_3e9f8a -> for_5c1c0e.items\n        execute_e5b7c1 -> setter_b4b3ba.execute\n        0 -> setter_b4b3ba.new_value\n        getter_d6a5e1.value -> ifexpression_4b7f9c.gen_1\n        for_5c1c0e.index -> ifexpression_4b7f9c.gen_0\n        for_5c1c0e.item -> ifexpression_4b7f9c.gen_2\n        ifexpression_4b7f9c.then -> setter_7c9e5a.execute\n        for_5c1c0e.onItem -> ifexpression_4b7f9c.execute\n        ifexpression_4b7f9c.else -> for_5c1c0e.next\n        ifexpression_4b7f9c.value -> if_1b7f1f.predicate\n        if_1b7f1f.then -> continue_2d0f4e\n        if_1b7f1f.else -> setter_7c9e5a.execute\n        for_5c1c0e.done -> continue_2d0f4e\n        getter_8d3f2d.value -> output_7a9b4e\n        for_5c1c0e.index -> setter_7c9e5a.new_value\n        setter_b4b3ba.continue -> for_5c1c0e.reset\n        setter_7c9e5a.continue -> for_5c1c0e.next\n    }\n\n    \n\n    instance(x: -17, y: 129) find_missing_8f6d2e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 2, name: \"list\") property(List) list_9f6b1e\n        in(x: -279, y: -221, name: \"execute\") trigger() execute_ea7d8c\n\n        out(x: 1050, y: -224, name: \"continue\") trigger() continue_3f5a2e\n        out(x: 1041, y: 57, name: \"output\") property(Number) output_6b4b5f\n\n        instance(x: 0, y: 0) for_7d9c8e root.Std_k98ojb.Std.For {}\n        getter(x: -3, y: 115, name: \"getter_ea1f2d\") getter_ea1f2d = index\n        setter(x: 740, y: -157, name: \"setter_7c9b4e\") setter_7c9b4e = index\n        instance(x: 440, y: -11) ifexpression_5b3b6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5b3b6c.else -> continue_3f5a2e\n        getter_ea1f2d.value -> output_6b4b5f\n        ifexpression_5b3b6c.then -> setter_7c9b4e.execute\n        list_9f6b1e -> for_7d9c8e.items\n        for_7d9c8e.item -> ifexpression_5b3b6c.gen_2\n        for_7d9c8e.index -> ifexpression_5b3b6c.gen_0\n        getter_b280eb.value -> ifexpression_5b3b6c.gen_1\n        for_7d9c8e.onItem -> ifexpression_5b3b6c.execute\n        for_7d9c8e.done -> continue_3f5a2e\n        for_7d9c8e.item -> setter_7c9b4e.new_value\n        list_9f6b1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_ea7d8c -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_7d9c8e.reset\n        setter_7c9b4e.continue -> for_7d9c8e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_2a3f0f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 1, name: \"list\") property(List) list_9e3b8f\n        in(x: -270, y: -223, name: \"execute\") trigger() execute_7a2c5d\n\n        out(x: 1040, y: -225, name: \"continue\") trigger() continue_1c4c9f\n        out(x: 1028, y: 55, name: \"output\") property(Number) output_3b7e6e\n\n        instance(x: 0, y: 0) for_2d5a7c root.Std_k98ojb.Std.For {}\n        getter(x: -110, y: 115, name: \"getter_9f8b1f\") getter_9f8b1f = index\n        setter(x: 630, y: -125, name: \"setter_6e5a7c\") setter_6e5a7c = index\n        instance(x: 360, y: 60) ifexpression_e3d4ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -140, y: -20, name: \"getter_8c9f6e\") getter_8c9f6e = previous\n        setter(x: 630, y: -245, name: \"setter_5b7a3d\") setter_5b7a3d = previous\n        instance(x: -280, y: -35) getat_e2b4ae root.Std_k98ojb.List.GetAt {}\n        ifexpression_e3d4ed.then -> continue_1c4c9f\n        getter_8c9f6e.value -> ifexpression_e3d4ed.gen_1\n        for_2d5a7c.item -> ifexpression_e3d4ed.gen_2\n        for_2d5a7c.index -> ifexpression_e3d4ed.gen_0\n        list_2d5a7c.items -> for_2d5a7c.items\n        execute_7a2c5d -> setter_6e5a7c.execute\n        1 -> setter_6e5a7c.new_value\n        ifexpression_e3d4ed.else -> setter_5b7a3d.execute\n        for_2d5a7c.onItem -> ifexpression_e3d4ed.execute\n        list_2d5a7c.list -> getat_e2b4ae.list\n        0 -> getat_e2b4ae.index\n        getat_e2b4ae.itemAtIndex -> setter_6e5a7c.new_value\n        for_2d5a7c.done -> continue_1c4c9f\n        getter_9f8b1f.value -> output_3b7e6e\n        ifexpression_e3d4ed.value -> output_3b7e6e\n        setter_5b7a3d.new_value -> setter_5b7a3d.new_value\n        for_2d5a7c.next -> setter_5b7a3d.execute\n        setter_6e5a7c.continue -> for_2d5a7c.reset\n        setter_5b7a3d.continue -> for_2d5a7c.next\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_9f4b8e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 1, name: \"list\") property(List) list_5f3a9e\n        in(x: -301, y: -217, name: \"execute\") trigger() execute_7b8d6c\n\n        out(x: 1014, y: -223, name: \"continue\") trigger() continue_1f0f2e\n        out(x: 1005, y: 57, name: \"output\") property(Number) output_3a9c5f\n\n        instance(x: 0, y: 0) for_8b7d6e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_4e1d5f\") getter_4e1d5f = index\n        setter(x: 0, y: 0, name: \"setter_7a9c2e\") setter_7a9c2e = index\n        instance(x: 350, y: -17) ifexpression_8b3d6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 335, y: 64, name: \"getter_4e1d5f\") getter_ba7c9e = previous\n        setter(x: 678, y: -308, name: \"setter_7a9c2e\") setter_3b8c6e = previous\n        instance(x: 322, y: -237) math_add_node root.Std_k98ojb.Math.Add {}\n        ifexpression_8b3d6e.else -> continue_1f0f2e\n        ifexpression_8b3d6e.then -> setter_7a9c2e.execute\n        list_5f3a9e -> for_8b7d6e.items\n        for_8b7d6e.item -> ifexpression_8b3d6e.gen_2\n        for_8b7d6e.index -> ifexpression_8b3d6e.gen_0\n        getter_ba7c9e.value -> ifexpression_8b3d6e.gen_1\n        math_add_node.result -> ifexpression_8b3d6e.gen_3\n        1 -> math_add_node.second\n        getter_ba7c9e.value -> math_add_node.first\n        for_8b7d6e.onItem -> ifexpression_8b3d6e.execute\n        for_8b7d6e.done -> continue_1f0f2e\n        for_8b7d6e.item -> setter_7a9c2e.new_value\n        execute_7b8d6c -> setter_7a9c2e.execute\n        0 -> setter_7a9c2e.new_value\n        getter_4e1d5f.value -> output_3a9c5f\n        ifexpression_8b3d6e.then -> math_add_node.execute\n        for_8b7d6e.onItem -> math_add_node.execute\n        setter_7a9c2e.continue -> for_8b7d6e.next\n        setter_7a9c2e.continue -> math_add_node.reset\n        ifexpression_8b3d6e.value -> output_3a9c5f\n        getter_4e1d5f.value -> output_3a9c5f\n        for_8b7d6e.onItem -> setter_7a9c2e.next\n        math_add_node.result -> ifexpression_8b3d6e.thenValue\n        math_add_node.result -> setter_7a9c2e.new_value\n        setter_7a9c2e.continue -> for_8b7d6e.reset\n    }\n\n    \n\n    instance(x: -1, y: 0) find_missing_4f3b5e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3b9e\n        in(x: -282, y: -246, name: \"execute\") trigger() execute_7c2f6d\n\n        out(x: 591, y: -247, name: \"continue\") trigger() continue_8a0b4f\n        out(x: 590, y: 5, name: \"output\") property(Number) output_e9e3af\n\n        instance(x: 15, y: -246) for_7c1d2e root.Std_k98ojb.Std.For {}\n        instance(x: 336, y: 0) ifexpression_8f6a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 333, y: 164, name: \"getter_9cceb3\") getter_9cceb3 = previous\n        setter(x: 678, y: -312, name: \"setter_1cedb2\") setter_1cedb2 = previous\n        instance(x: -276, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8f6a5f.else -> continue_8a0b4f\n        ifexpression_8f6a5f.value -> output_e9e3af\n        ifexpression_8f6a5f.then -> setter_1cedb2.execute\n        list_1a3b9e -> for_7c1d2e.items\n        for_7c1d2e.item -> ifexpression_8f6a5f.gen_2\n        for_7c1d2e.index -> ifexpression_8f6a5f.gen_0\n        getter_9cceb3.value -> ifexpression_8f6a5f.gen_1\n        for_7c1d2e.onItem -> ifexpression_8f6a5f.execute\n        for_7c1d2e.done -> continue_8a0b4f\n        for_7c1d2e.item -> setter_1cedb2.new_value\n        list_1a3b9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_1cedb2.new_value\n        execute_7c2f6d -> setter_1cedb2.execute\n        setter_1cedb2.continue -> for_7c1d2e.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f5a8c0 root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -200, y: 0, name: \"string\") property(String) string_8d1f9e\n\n        out(x: 500, y: -2, name: \"result\") property(String) result_7c3b6a\n\n        instance(x: 0, y: 1) replace_all_4e3c0e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_match_wordz {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -227, y: 0, name: \"input\") property(String) input_1d8b9f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c6e5a\n\n        instance(x: 0, y: 0) replace_all_3a4f9e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_1d8b9f -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n        instance(x: 265, y: -50) replace_all_3a4f9e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -100) replace_all_3a4f9e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 795, y: -150) replace_all_3a4f9e root.Std_k98ojb.Strings.ReplaceAll {}\n        input_1d8b9f -> replace_all_3a4f9e.input\n        \" \" -> replace_all_3a4f9e.find\n        \":\" -> replace_all_3a4f9e.replace\n        replace_all_3a4f9e.output -> replace_all_3a4f9e.input\n        \",\" -> replace_all_3a4f9e.find\n        replace_all_3a4f9e.output -> replace_all_3a4f9e.input\n        \".\" -> replace_all_3a4f9e.find\n        replace_all_3a4f9e.output -> output_7c6e5a\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_space_comma_dot_496e5e root.main.replace_space_comma_dot {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -232, y: 0, name: \"string\") property(String) string_9f8d1e\n\n        out(x: 505, y: -2, name: \"result\") property(String) result_f6a7b3\n\n        instance(x: 0, y: 1) replace_all_4c5b2e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        string_9f8d1e -> replace_all_4c5b2e.input\n        \" ,.\" -> replace_all_4c5b2e.find\n        \":\" -> replace_all_4c5b2e.replace\n        replace_all_4c5b2e.output -> result_f6a7b3\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_e54b7f root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_all_f8c6a9 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n\n        instance(x: 265, y: -1) replace_all_f8c6a9 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n\n        instance(x: 265, y: -2) replace_all_f8c6a9 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -1) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n\n        instance(x: 265, y: -3) replace_all_f8c6a9 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -2) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n\n        instance(x: 265, y: -4) replace_all_f8c6a9 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -3) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n\n        instance(x: 265, y: -5) replace_all_f8c6a9 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -4) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_space_comma_dot_e54b7f root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -232, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) replaceall_d3f7c9 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -1) replaceall_5d8a6f root.Std_k98ojb.Strings.ReplaceAll {}\n        tolower_2e1444.output -> replaceall_d3f7c9.input\n        \" \" -> replaceall_d3f7c9.find\n        \":\" -> replaceall_d3f7c9.replaceWith\n        replaceall_d3f7c9.output -> replaceall_5d8a6f.input\n        \",\" -> replaceall_5d8a6f.find\n        \":\" -> replaceall_5d8a6f.replaceWith\n        replaceall_5d8a6f.output -> result_0\n        \".\" -> replaceall_d3f7c9.find\n        \":\" -> replaceall_d3f7c9.replaceWith\n        input_0 -> tolower_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -156, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace_space_comma_dot\") replace_06d2e5 root.Std_k98ojb.Strings.Replace {\n            search: \" \"\n            replacement: \":\"\n        }\n        instance(x: 0, y: 9) replace_d4aeea6 root.Std_k98ojb.Strings.Replace {\n            search: \",\"\n            replacement: \":\"\n        }\n        instance(x: -11, y: 9) replace_4aeea6 root.Std_k98ojb.Strings.Replace {\n            search: \".\"\n            replacement: \":\"\n        }\n        input_0 -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            replace_d4aeea6.input -> replace_space_comma_dot.search\n            replace_06d2e5.input -> replace_d4aeea6.input\n            replace_4aeea6.input -> replace_06d2e5.input\n            x_8ee839 -> replace_4aeea6.input\n            replace_4aeea6.output -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_space_comma_dot_b9ff6b root.main.replace_space_comma_dot {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -200, y: 0, name: \"string\") property(String) string_1d9f6e\n\n        out(x: 500, y: -2, name: \"result\") property(String) result_3c7b5a\n\n        instance(x: 0, y: 1) replaceall_c4a8b8 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        string_1d9f6e -> replaceall_c4a8b8.input\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        string_1d9f6e -> tolower_2e1444.input\n        \" \" -> contains_d42dce.contains\n        replaceall_c4a8b8.output -> result_3c7b5a\n        \":\":contains_d42dce.result -> replaceall_c4a8b8.replaceWith\n        \",\":contains_d42dce.result -> replaceall_c4a8b8.replaceWith\n        \".\":contains_d42dce.result -> replaceall_c4a8b8.replaceWith\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_5f1e6c root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -227, y: 0, name: \"input\") property(String) input_1f2a8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3c9b5d\n\n        instance(x: 0, y: 0) replace_all_node root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 0, y: 0) replace_all_node_1 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 0, y: 0) replace_all_node_2 root.Std_k98ojb.Strings.ReplaceAll {}\n        input_1f2a8e -> replace_all_node.input\n        \" \" -> replace_all_node.find\n        \":\" -> replace_all_node.replaceWith\n        replace_all_node.output -> replace_all_node_1.input\n        \",\" -> replace_all_node_1.find\n        \":\" -> replace_all_node_1.replaceWith\n        replace_all_node_1.output -> replace_all_node_2.input\n        \".\" -> replace_all_node_2.find\n        \":\" -> replace_all_node_2.replaceWith\n        replace_all_node_2.output -> output_3c9b5d\n   }\n   \n\n    instance(x: -80, y: 30, name: \"replace_space_comma_dot\") replace_space_comma_dot_7e8f1a root.main.replace_space_comma_dot {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 2, name: \"input\") property(String) input_1d0a9f\n\n        out(x: 506, y: 77, name: \"output\") property(String) output_7c3e8b\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace\") replace_1a9f2f root.Std_k98ojb.Strings.Replace {}\n        list_instance(x: 92, y: -22) data_cc1b1b = [space, comma, dot]\n        instance(x: -11, y: 9) join_3e7c0d root.Std_k98ojb.Strings.Join {}\n        input_1d0a9f -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            instance(x: 92, y: -22) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n                expression: \"x == space || x == comma || x == dot\"\n            }\n            instance(x: 0, y: 0) replace_1a9f2f root.Std_k98ojb.Strings.Replace {}\n            list_instance(x: -121, y: -37) data_cc1b1b = [space, comma, dot]\n            x_8ee839 -> map_f2330d.handler\n            ifexpression_5c4634.then -> replace_1a9f2f.execute\n            ifexpression_5c4634.else -> _7dd980\n            data_cc1b1b.first -> space\n            data_cc1b1b.second -> comma\n            data_cc1b1b.third -> dot\n            x_8ee839 -> replace_1a9f2f.input\n            \":\" -> replace_1a9f2f.replaceWith\n            replace_1a9f2f.output -> _7dd980\n            ifexpression_5c4634.gen_0 -> space\n            ifexpression_5c4634.gen_1 -> comma\n            ifexpression_5c4634.gen_2 -> dot\n        } -> map_f2330d.handler\n        join_3e7c0d.joinWith -> replace_1a9f2f.replaceWith\n        \":\" -> join_3e7c0d.joinWith\n        data_cc1b1b -> join_3e7c0d.items\n        map_f2330d.output_list -> replace_1a9f2f.input\n        replace_1a9f2f.output -> output_7c3e8b\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_4a6c1c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 2, name: \"input\") property(String) input_1d9f0e\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_5a7b4c\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace\") replace_1e3f9c root.Std_k98ojb.Strings.Replace {}\n        list_instance(x: 92, y: -22) data_cc1b1b = [space, comma, dot]\n        instance(x: -11, y: 9) join_4aeea6 root.Std_k98ojb.Strings.Join {}\n        input_1d9f0e -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            instance(x: 92, y: -22) ifexpression_584bfd root.Std_k98ojb.Std.IfExpression {\n                expression: \"x == space || x == comma || x == dot\"\n            }\n            instance(x: 0, y: 0) replace_1e3f9c_2 root.main.replace {}\n            x_8ee839 -> ifexpression_584bfd.gen_0\n            \": \" -> replace_1e3f9c_.replaceWith\n            data_cc1b1b -> join_4aeea6.items\n            replace_1e3f9c_.input -> _7dd980\n            x_8ee839 -> replace_1e3f9c_.input\n            ifexpression_584bfd.then -> replace_1e3f9c_.execute\n            ifexpression_584bfd.else -> map_f2330d.handler.execute\n            join_4aeea6.output -> replace_1e3f9c_.replaceWhat\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_5a7b4c\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_2d8d4e root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_c9a3d8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -1, y: 0) length_7e6c5f root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) getat_4e7b8c root.Std_k98ojb.List.GetAt {}\n        instance(x: 265, y: -1) equal_2d3a3f root.Std_k98ojb.Logic.Equal {}\n        characters_c9a3d8.characters -> length_7e6c5f.list\n        input_0 -> characters_c9a3d8.input\n        length_7e6c5f.length -> getat_4e7b8c.index\n        1 -> getat_4e7b8c.index\n        characters_c9a3d8.characters -> getat_4e7b8c.list\n        input_0 -> equal_2d3a3f.left\n        getat_4e7b8c.itemAtIndex -> equal_2d3a3f.right\n        equal_2d3a3f.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) check_same_5b9f1f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c5e9a4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -3) contains_8f7d6c root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 1) map_2e4b3c root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -108, y: 36, name: \"current\") property(String) current_1\n\n            out(x: 512, y: 44, name: \"output\") property(String) output_2\n\n            instance(x: 88, y: 29) tolower_3b8c0f root.Std_k98ojb.Strings.ToLower {}\n            current_1 -> tolower_3b8c0f.input\n            tolower_3b8c0f.output -> output_2\n        } -> map_2e4b3c.handler\n        string_1 -> characters_c5e9a4.input\n        characters_c5e9a4.characters -> map_2e4b3c.items\n        map_2e4b3c.output_list -> contains_8f7d6c.list\n        0 -> contains_8f7d6c.item\n        contains_8f7d6c.is_contained -> output_1\n    }\n\n    \n\n    instance(x: -12, y: 20) check_same_f5e9b4 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 533, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3c8f9a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) set_ae4d5f root.Std_k98ojb.Sets.Set {}\n        instance(x: 530, y: 2) equal_7f0f1c root.Std_k98ojb.List.Equal {}\n        characters_3c8f9a.characters -> set_ae4d5f.set\n        input_1 -> characters_3c8f9a.input\n        set_ae4d5f.output_set -> equal_7f0f1c.left\n        characters_3c8f9a.characters -> equal_7f0f1c.right\n        equal_7f0f1c.result -> output_1\n    }\n\n    \n\n    instance(x: -13, y: 52) check_same_5b4e6d root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_3f9a6e\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_7c8d4b\n\n        instance(x: 0, y: 0) characters_c5a2f9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -1, y: 0) length_8166b0 root.Std_k98ojb.List.Length {}\n        characters_c5a2f9.characters -> contains_d42dce.list\n        string_3f9a6e -> characters_c5a2f9.input\n        \"z\" -> contains_d42dce.item\n        characters_c5a2f9.characters -> length_8166b0.list\n        1 -> equal_f89569.right\n        length_8166b0.length -> equal_f89569.left\n        instance(x: 530, y: -1) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        contains_d42dce.is_contained -> equal_f89569.result\n        equal_f89569.result -> output_7c8d4b\n    }\n\n    \n\n    instance(x: -53, y: 49) check_same_5e9a2f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_cb50ae root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        characters_7b3b7b.characters -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.itemAtIndex\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> equal_cb50ae.left\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> for_d26972.count\n        for_d26972.onItem -> equal_cb50ae.execute\n        for_d26972.done -> output_0\n        equal_cb50ae.right -> getat_ce2a48.itemAtIndex\n        equal_cb50ae.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) is_same_59bc6e root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3a9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -1, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_3a9c8f.characters -> contains_d42dce.list\n        \"z\" -> contains_d42dce.item\n        characters_3a9c8f.characters -> length_6e87f2.list\n        length_6e87f2.length -> contains_d42dce.count\n        contains_d42dce.result -> result_0\n        input_0 -> characters_3a9c8f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_7b1b5e root.main.check_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_1a9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -10, y: 2) length_7e3d4c root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) getat_6e9a8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 201, y: -10) equal_5b2b1c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 360, y: 0) for_7d3c8c root.Std_k98ojb.Std.For {}\n        instance(x: 560, y: 76) ifexpression_6f4a9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_6f4a9e.else -> output_0\n        ifexpression_6f4a9e.value -> output_0\n        ifexpression_6f4a9e.then -> setter_9d4f1c.execute\n        characters_1a9c8f.characters -> for_7d3c8c.items\n        for_7d3c8c.item -> getat_6e9a8f.list\n        0 -> getat_6e9a8f.index\n        getat_6e9a8f.itemAtIndex -> ifexpression_6f4a9e.gen_2\n        for_7d3c8c.index -> ifexpression_6f4a9e.gen_0\n        getter_b280eb.value -> ifexpression_6f4a9e.gen_1\n        for_7d3c8c.onItem -> ifexpression_6f4a9e.execute\n        for_7d3c8c.done -> output_0\n        getat_6e9a8f.itemAtIndex -> setter_38e107.new_value\n        input_0 -> characters_1a9c8f.input\n        length_7e3d4c.list -> for_d26972.items\n        for_d26972.onItem -> equal_5b2b1c.execute\n        equal_5b2b1c.left -> getat_6e9a8f.list\n        0 -> getat_6e9a8f.index\n        getat_6e9a8f.itemAtIndex -> equal_5b2b1c.right\n        for_d26972.done -> output_0\n        equal_5b2b1c.result -> ifexpression_6f4a9e.predicate\n        length_7e3d4c.length -> for_d26972.items_length\n        input_0 -> length_7e3d4c.list\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        equal_5b2b1c.result -> ifexpression_6f4a9e.predicate\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3c9d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) contains_5a7e6f root.Std_k98ojb.List.Contains {}\n        instance(x: 480, y: 2) length_1c4b1c root.Std_k98ojb.List.Length {}\n        characters_3c9d8f.input -> contains_5a7e6f.list\n        string_1 -> characters_3c9d8f.input\n        characters_3c9d8f.characters -> length_1c4b1c.list\n        0 -> contains_5a7e6f.item\n        length_1c4b1c.length -> contains_5a7e6f.index\n        contains_5a7e6f.is_contained -> output_1\n    }\n\n    \n\n    instance(x: -3, y: 10) check_same_0d8d9c root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 490, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_2e1444.output -> contains_d42dce.list\n        characters_2e1444.output -> length_6e87f2.list\n        characters_2e1444.output -> ifexpression_875761.gen_1\n        0 -> ifexpression_875761.gen_0\n        input_0 -> characters_2e1444.input\n        contains_d42dce.contains -> ifexpression_875761.gen_2\n        length_6e87f2.length -> ifexpression_875761.gen_3\n        instance(x: 725, y: -1) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 307, y: 28, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 652, y: -271, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 285, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> result_0\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        characters_2e1444.output -> for_d26972.items\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        instance(x: 1267, y: -270) continue_a96db6 root.Std_k98ojb.Trigger.Continue {}\n        instance(x: -285, y: -271) execute_90aaec root.Std_k98ojb.Trigger.Execute {}\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        characters_2e1444.output -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n    }\n\n    \n\n    instance(x: -67, y: -37) is_same_f21f44 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 555, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_7b3f6a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 490, y: -1) length_8166b0 root.Std_k98ojb.List.Length {}\n        characters_7b3f6a.characters -> contains_d42dce.list\n        characters_7b3f6a.characters -> length_8166b0.list\n        \"aa\" -> contains_d42dce.item\n        length_8166b0.length -> contains_d42dce.contains\n        input_0 -> characters_7b3f6a.input\n        contains_d42dce.result -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1032, y: 76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1090, y: -2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 1279, y: 77) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        characters_7b3b7b.characters -> filter_7b3b7b.list\n        filter_7b3b7b.result -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1050, y: 76) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1032, y: 76) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 1301, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        characters_7b3b7b.characters -> filter_7b3b7b.list\n        filter_7b3b7b.result -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 76) length_9c8f1a root.Std_k98ojb.List.Length {}\n        instance(x: 1350, y: 76) filter_4d5e2f root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_9c8f1a.list\n        characters_7b3b7b.characters -> filter_4d5e2f.list\n        filter_4d5e2f.result -> length_9c8f1a.list\n        length_9c8f1a.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1090, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 1278, y: 62) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 1557, y: 63) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        characters_7b3b7b.characters -> length_6e87f2.list\n        input_ai -> characters_7b3b7b.input\n        length_6e87f2.length -> contains_d42dce.right\n        filter_7b3b7b.result -> output_ai\n        characters_7b3b7b.characters -> contains_d42dce.list\n        \"0\" -> contains_d42dce.contains\n        characters_7b3b7b.characters -> filter_7b3b7b.list\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -5) pow_7e9f1c root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_7e9f1c.x\n        pow_7e9f1c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_5f8b7c root.Std_k98ojb.Math.Expression {\n            expression: \"x^y\"\n        }\n        div_64046c.result -> pow_5f8b7c.x\n        4 -> pow_5f8b7c.y\n        pow_5f8b7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5f8e7c root.Std_k98ojb.Math.Expression {\n            expression: \"x*x\"\n        }\n        div_64046c.result -> pow_5f8e7c.x\n        pow_5f8e7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_7c9b8f root.Std_k98ojb.Math.Expression {\n            expression: \"x^y\"\n        }\n        div_64046c.result -> pow_7c9b8f.x\n        4 -> pow_7c9b8f.y\n        pow_7c9b8f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_7f9b1c root.Std_k98ojb.Math.Expression {\n            expression: \"x**4\"\n        }\n        div_64046c.result -> pow_7f9b1c.x\n        pow_7f9b1c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5b8f9c root.Std_k98ojb.Math.Expression {\n            expression: \"x*x\"\n        }\n        div_64046c.result -> pow_5b8f9c.x\n        pow_5b8f9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_5f7b9c root.Std_k98ojb.Math.Expression {\n            expression: \"x^y\"\n        }\n        div_64046c.result -> pow_5f7b9c.x\n        4 -> pow_5f7b9c.y\n        pow_5f7b9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5f8b7e root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_5f8b7e.x\n        pow_5f8b7e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_5e9b7c root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_5e9b7c.x\n        pow_5e9b7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_5e9f7c root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_5e9f7c.x\n        pow_5e9f7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 10, name: \"size\") property(Number) size_8a0f9e\n\n        out(x: 1066, y: 12, name: \"surface_area\") property(Number) surface_area_a1c3d7\n\n        instance(x: 23, y: -5) mul_f2b8da root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 331, y: 95) data_4a0e6f  = 6\n        instance(x: 12, y: 99) expression_1d9c7c root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        instance(x: 303, y: -2) mul_5f3a0e root.Std_k98ojb.Math.Mul {}\n        data_4a0e6f -> mul_f2b8da.second\n        mul_f2b8da.result -> mul_5f3a0e.first\n        expression_1d9c7c.result -> mul_f2b8da.first\n        size_8a0f9e -> expression_1d9c7c.gen_0\n        mul_5f3a0e.result -> surface_area_a1c3d7\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_e6b2a4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 56, name: \"side\") property(Number) side_1a9f6e\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_2b3c4d\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_1a9f6e -> mul_f892a4.first\n        side_1a9f6e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_2b3c4d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_8c7c1d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -333, y: 1, name: \"execute\") trigger() execute_2e8a9f\n        in(x: -330, y: -103, name: \"side\") property(Number) side_a6cea7\n\n        out(x: 1065, y: 4, name: \"continue\") trigger() continue_eb0c3d\n        out(x: 1088, y: -90, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 10, y: -2) mul_9e5a2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 11, y: -102) mul_3c6b4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 13, y: -50) mul_1d7f8 root.Std_k98ojb.Math.Mul {}\n        side_a6cea7 -> mul_9e5a2.first\n        side_a6cea7 -> mul_3c6b4.first\n        side_a6cea7 -> mul_1d7f8.first\n        6 -> mul_9e5a2.second\n        mul_3c6b4.result -> mul_1d7f8.second\n        mul_9e5a2.result -> mul_3c6b4.second\n        mul_1d7f8.result -> output_b1d7f8\n        execute_2e8a9f -> continue_eb0c3d\n    }\n\n    \n\n    instance(x: 10, y: -2) surface_area_cube_5e5f7 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"size\") property(Number) size_9a6f1e\n\n        out(x: 100, y: 0, name: \"surface_area\") property(Number) surface_area_7c8d3b\n\n        instance(x: -120, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_9a6f1e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_7c8d3b\n    }\n\n    \n\n    instance(x: -120, y: 0) surface_area_cube_2c4d1e root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_1f9d6e\n\n        out(x: 1064, y: 7, name: \"surface_area\") property(Number) surface_area_3a8b0c\n\n        instance(x: 93, y: -2) mul_5f7b8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 91, y: 86) expression_1d4e9f root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_1f9d6e -> mul_5f7b8f.first\n        size_1f9d6e -> mul_5f7b8f.second\n        mul_5f7b8f.result -> expression_1d4e9f.gen_2\n        6 -> expression_1d4e9f.gen_0\n        expression_1d4e9f.result -> surface_area_3a8b0c\n    }\n\n    \n\n    instance(x: -94, y: 46) surface_area_cube_7c5f2f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 11, name: \"size\") property(Number) size_8f1e9a\n\n        out(x: 1146, y: 13, name: \"surface_area\") property(Number) surface_area_a0c7d4\n\n        instance(x: 18, y: -5) mul_3b2b1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 17, y: 66) pow_6a9e1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 15, y: 120) mul_7d0b4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: 179) mul_3a2c5c root.Std_k98ojb.Math.Mul {}\n        size_8f1e9a -> pow_6a9e1c.x\n        2 -> pow_6a9e1c.y\n        pow_6a9e1c.result -> mul_7d0b4f.first\n        6 -> mul_3b2b1f.second\n        size_8f1e9a -> mul_3b2b1f.first\n        mul_3b2b1f.result -> mul_7d0b4f.second\n        mul_7d0b4f.result -> mul_3a2c5c.first\n        mul_7d0b4f.result -> mul_3a2c5c.second\n        mul_3a2c5c.result -> surface_area_a0c7d4\n    }\n\n    \n\n    instance(x: 18, y: -5) surface_area_cube_9e8f6c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 20, name: \"execute\") trigger() execute_1f0a3e\n        in(x: -296, y: -122, name: \"side\") property(Number) side_a6cea7\n\n        out(x: 1064, y: 22, name: \"continue\") trigger() continue_5c8b7d\n        out(x: 1040, y: -102, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 14, y: 19) mul_3a6e2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 13, y: -109) mul_5c0b9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: -49) add_f7d8ea root.Std_k98ojb.Math.Add {}\n        side_a6cea7 -> mul_3a6e2f.first\n        side_a6cea7 -> mul_5c0b9f.first\n        6 -> mul_3a6e2f.second\n        2 -> mul_5c0b9f.second\n        mul_3a6e2f.result -> add_f7d8ea.first\n        mul_5c0b9f.result -> add_f7d8ea.second\n        add_f7d8ea.result -> output_b1d7f8\n        execute_1f0a3e -> continue_5c8b7d\n    }\n\n    \n\n    instance(x: 14, y: -47) surface_area_cube_2c9a4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -333, y: 15, name: \"execute\") trigger() execute_1a9d8f\n        in(x: -318, y: -111, name: \"side\") property(Number) side_7c3b2e\n\n        out(x: 1076, y: 14, name: \"continue\") trigger() continue_5b4b9f\n        out(x: 1100, y: -106, name: \"output\") property(Number) output_1a8d8c\n\n        instance(x: 12, y: 11) mul_3e7b6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: -102) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 14, y: -187) mul_4c8a1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: -271) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 13, y: -356) add_88bb8a root.Std_k98ojb.Math.Add {}\n        side_7c3b2e -> mul_3e7b6.first\n        side_7c3b2e -> mul_3e7b6.second\n        mul_3e7b6.result -> mul_2f9d09.first\n        mul_3e7b6.result -> mul_2f9d09.second\n        mul_2f9d09.result -> mul_4c8a1.first\n        mul_2f9d09.result -> mul_4c8a1.second\n        mul_4c8a1.result -> add_b4554f.first\n        mul_3e7b6.result -> add_b4554f.second\n        add_b4554f.result -> add_88bb8a.first\n        mul_2f9d09.result -> add_88bb8a.second\n        add_88bb8a.result -> output_1a8d8c\n        execute_1a9d8f -> mul_3e7b6.execute\n        mul_3e7b6.done -> mul_2f9d09.execute\n        mul_2f9d09.done -> mul_4c8a1.execute\n        mul_4c8a1.done -> add_b4554f.execute\n        add_b4554f.done -> add_88bb8a.execute\n        add_88bb8a.done -> continue_5b4b9f\n    }\n\n    \n\n    instance(x: 14, y: -463) surface_area_cube_2d7e1c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f8d5e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a6cea7\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_1a3b0c\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9c1e2f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3a6d7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_8c5b0e root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_3a6d7f.second\n        side_length_a6cea7 -> mul_3a6d7f.first\n        mul_3a6d7f.result -> mul_8c5b0e.first\n        side_length_a6cea7 -> mul_8c5b0e.second\n        mul_8c5b0e.result -> surface_area_cube_9c1e2f.side_length_a6cea7\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_1a3b0c\n        execute_9f8d5e -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_9c1e2f.execute_9f8d5e\n        surface_area_cube_9c1e2f.continue_1a3b0c -> setter_375321.execute\n        surface_area_cube_9c1e2f.output_b1d7f8 -> setter_375321.new_value\n        setter_375321.continue -> continue_1a3b0c\n        getter_38583a.value -> output_b1d7f8\n        side_length_a6cea7 -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f8d1e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7c2a6b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e4f3cf\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_5d0e1f\n\n        instance(x: 80, y: -417) ifexpression_c8b7a6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9c3d2e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_7a1f5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6f8f0f root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_4e3d7a\") setter_4e3d7a = sum\n        setter(x: 875, y: -518, name: \"setter_1c5f9a\") setter_1c5f9a = sum\n        getter(x: 902, y: -314, name: \"getter_6b0b8e\") getter_6b0b8e = sum\n        instance(x: -202, y: -236) floor_3d7f2f root.Std_k98ojb.Math.Floor {}\n        10 -> mul_7a1f5c.second\n        mul_7a1f5c.result -> add_6f8f0f.first\n        10 -> surface_area_cube_9c3d2e.side_length_7c2a6b\n        0 -> setter_4e3d7a.new_value\n        setter_4e3d7a.continue -> ifexpression_c8b7a6.execute\n        ifexpression_c8b7a6.then -> continue_e4f3cf\n        execute_9f8d1e -> setter_4e3d7a.execute\n        ifexpression_c8b7a6.else -> surface_area_cube_9c3d2e.execute_9f8d1e\n        surface_area_cube_9c3d2e.continue_e4f3cf -> setter_1c5f9a.execute\n        surface_area_cube_9c3d2e.output_5d0e1f -> add_6f8f0f.second\n        add_6f8f0f.result -> setter_1c5f9a.new_value\n        setter_1c5f9a.continue -> continue_e4f3cf\n        getter_6b0b8e.value -> output_5d0e1f\n        side_length_7c2a6b -> floor_3d7f2f.input\n        floor_3d7f2f.output -> mul_7a1f5c.first\n        floor_3d7f2f.output -> ifexpression_c8b7a6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_b9e4d2 root.main.surface_area_cube {}\n\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: 145, name: \"list\") property(List) list_9a3b5f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7e8d1c\n\n        instance(x: 201, y: 126) sub_6b2a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 359, name: \"Max list\") max_9f5a3f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -317, y: 520, name: \"Min list\") min_1e7c8d root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        list_9a3b5f -> max_9f5a3f.list\n        max_9f5a3f.max -> firstitem_870503.list\n        list_9a3b5f -> min_1e7c8d.list\n        min_1e7c8d.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_6b2a0c.first\n        firstitem_3078c6.item -> sub_6b2a0c.second\n        sub_6b2a0c.result -> output_7e8d1c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 158, name: \"list\") property(List) list_1a8f3e\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_4c9d5b\n\n        instance(x: 188, y: 126) sub_6e7b0f root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 158) max_1a3a8c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -12) min_d5d4dc root.Std_k98ojb.List.Min {}\n        list_1a8f3e -> max_1a3a8c.list\n        list_1a8f3e -> min_d5d4dc.list\n        max_1a3a8c.max -> sub_6e7b0f.first\n        min_d5d4dc.min -> sub_6e7b0f.second\n        sub_6e7b0f.result -> output_4c9d5b\n    }\n\n    \n\n    instance(x: 48, y: -2) diff_max_min_1a3b8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 156, name: \"list\") property(List) list_0d3f9e\n\n        out(x: 512, y: 155, name: \"output\") property(Number) output_eb7a6c\n\n        instance(x: 192, y: 158) sub_1e8f4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 156) max_3a9d5c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -12) min_d6b7ed root.Std_k98ojb.List.Min {}\n        list_0d3f9e -> max_3a9d5c.list\n        list_0d3f9e -> min_d6b7ed.list\n        max_3a9d5c.max -> sub_1e8f4f.first\n        min_d6b7ed.min -> sub_1e8f4f.second\n        sub_1e8f4f.result -> output_eb7a6c\n    }\n\n    \n\n    instance(x: 0, y: -2) diff_max_min_5d3f8e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: 0, name: \"list\") property(List) list_9a2b8f\n\n        out(x: 550, y: 11, name: \"output\") property(Number) output_1e3c5d\n\n        instance(x: 188, y: 63) sub_7c4c0f root.Std_k98ojb.Math.Sub {}\n        instance(x: -108, y: 10) max_2a9c8f root.Std_k98ojb.List.Max {}\n        instance(x: -110, y: -111) min_1d5e9f root.Std_k98ojb.List.Min {}\n        list_9a2b8f -> max_2a9c8f.list\n        list_9a2b8f -> min_1d5e9f.list\n        max_2a9c8f.max -> sub_7c4c0f.first\n        min_1d5e9f.min -> sub_7c4c0f.second\n        sub_7c4c0f.result -> output_1e3c5d\n    }\n\n    \n\n    instance(x: 10, y: -27) diff_max_min_eb2a6e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 156, name: \"list\") property(List) list_1a3f0e\n\n        out(x: 545, y: 137, name: \"output\") property(Number) output_7c9b2d\n\n        instance(x: 185, y: 136) sub_6a8c1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 155) max_4e5c0c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -12) min_9d7b3c root.Std_k98ojb.List.Min {}\n        list_1a3f0e -> max_4e5c0c.list\n        list_1a3f0e -> min_9d7b3c.list\n        max_4e5c0c.max -> sub_6a8c1f.first\n        min_9d7b3c.min -> sub_6a8c1f.second\n        sub_6a8c1f.result -> output_7c9b2d\n    }\n\n    \n\n    instance(x: 48, y: -5) diff_max_min_4e0d0e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 156, name: \"list\") property(List) list_9e8f1d\n\n        out(x: 545, y: 147, name: \"output\") property(Number) output_ea2c7b\n\n        instance(x: 188, y: 145) sub_3e6b5f root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: 155) max_1d0c9c root.Std_k98ojb.List.Max {}\n        instance(x: -104, y: -12) min_d8a7ea root.Std_k98ojb.List.Min {}\n        list_9e8f1d -> max_1d0c9c.list\n        list_9e8f1d -> min_d8a7ea.list\n        max_1d0c9c.max -> sub_3e6b5f.first\n        min_d8a7ea.min -> sub_3e6b5f.second\n        sub_3e6b5f.result -> output_ea2c7b\n    }\n\n    \n\n    instance(x: 48, y: -4) diff_max_min_1d9b0f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: 145, name: \"list\") property(List) list_1f0b8e\n\n        out(x: 600, y: 127, name: \"output\") property(Number) output_ea2d7c\n\n        instance(x: 226, y: 128) sub_3a4a5c root.Std_k98ojb.Math.Sub {}\n        instance(x: -108, y: 156) max_9f1e6f root.Std_k98ojb.List.Max {}\n        instance(x: -110, y: -11) min_f8d7ad root.Std_k98ojb.List.Min {}\n        list_1f0b8e -> max_9f1e6f.list\n        list_1f0b8e -> min_f8d7ad.list\n        max_9f1e6f.max -> sub_3a4a5c.first\n        min_f8d7ad.min -> sub_3a4a5c.second\n        sub_3a4a5c.result -> output_ea2d7c\n    }\n\n    \n\n    instance(x: -57, y: 157) diff_max_min_1e9f9b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 154, name: \"list\") property(List) list_1a3b9f\n\n        out(x: 600, y: 145, name: \"output\") property(Number) output_7e8c0d\n\n        instance(x: 534, y: 147) sub_6f2a8e root.Std_k98ojb.Math.Sub {}\n        instance(x: -38, y: 26, name: \"Max value\") max_9b1bc3 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_d831ca root.Std_k98ojb.List.Min {}\n        list_1a3b9f -> max_9b1bc3.list\n        list_1a3b9f -> min_d831ca.list\n        max_9b1bc3.max -> sub_6f2a8e.first\n        min_d831ca.min -> sub_6f2a8e.second\n        sub_6f2a8e.result -> output_7e8c0d\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 158, name: \"list\") property(List) list_9a3f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c0d7b\n\n        instance(x: 188, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.list -> firstitem_870503.list\n        min_4d4556.list -> firstitem_3078c6.list\n        list_9a3f1e -> max_f3b46d.list\n        list_9a3f1e -> min_4d4556.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_5c0d7b\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 155, name: \"list\") property(List) list_9a2b8f\n\n        out(x: 543, y: 147, name: \"output\") property(Number) output_e6c3e7\n\n        instance(x: 0, y: 0) sub_4d5f9f root.Std_k98ojb.Math.Sub {}\n        instance(x: -309, y: 154) max_2a1b8f root.Std_k98ojb.List.Max {}\n        instance(x: -307, y: -17) min_d6e7c3 root.Std_k98ojb.List.Min {}\n        list_9a2b8f -> max_2a1b8f\n        list_9a2b8f -> min_d6e7c3\n        max_2a1b8f.max -> sub_4d5f9f.first\n        min_d6e7c3.min -> sub_4d5f9f.second\n        sub_4d5f9f.result -> output_e6c3e7\n    }\n\n    \n\n    instance(x: -57, y: 529) diff_max_min_2b8a0f root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 16, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1269, y: 127, name: \"output\") property(Bool) output_1a0b5e\n\n        instance(x: -104, y: 128) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_5e8f1d -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_685c8f\n        false -> getter_9cceb3.value\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        getter_9cceb3.value -> output_1a0b5e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f7d4e6 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 5, name: \"input\") property(Number) input_1f0a3e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_7b8d6c\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5a9f4f\n        out(x: 1210, y: 11, name: \"output\") property(Bool) output_3e2f3d\n\n        instance(x: -104, y: -109) ifexpression_1c8b6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -143, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_1f0a3e -> ifexpression_1c8b6f.gen_0\n        getter_9cceb3.value -> output_3e2f3d\n        ifexpression_1c8b6f.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_37db7f.new_value\n        ifexpression_1c8b6f.else -> setter_37db7f.execute\n        execute_7b8d6c -> ifexpression_1c8b6f.execute\n        setter_1cedb2.continue -> continue_5a9f4f\n        setter_37db7f.continue -> continue_5a9f4f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_f0e3c8 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 2, name: \"input\") property(Number) input_9e6a8f\n        in(x: -452, y: -111, name: \"execute\") trigger() execute_eb7d5c\n\n        out(x: 1214, y: -1, name: \"output\") property(Bool) output_2f3b0f\n        out(x: 1269, y: -110, name: \"continue\") trigger() continue_6a8e5e\n\n        instance(x: 1097, y: -11) ifexpression_4d1c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 1053, y: 75, name: \"getter_5a6e1d\") getter_5a6e1d = output\n        setter(x: 1178, y: -261, name: \"setter_7f9c4b\") setter_7f9c4b = output\n        input_9e6a8f -> ifexpression_4d1c9f.gen_0\n        ifexpression_4d1c9f.then -> setter_7f9c4b.execute\n        true -> setter_7f9c4b.new_value\n        ifexpression_4d1c9f.else -> continue_6a8e5e\n        false -> setter_7f9c4b.new_value\n        getter_5a6e1d.value -> output_2f3b0f\n        execute_eb7d5c -> ifexpression_4d1c9f.execute\n        setter_7f9c4b.continue -> continue_6a8e5e\n    }\n\n    \n\n    instance(x: -171, y: 10) is_even_2c7b3f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_9f1e6d\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = is_even\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = is_even\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        execute_90aaec -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> continue_a96db6\n        getter_b280eb.value -> is_even\n        input_9f1e6d -> ifexpression_875761.gen_0\n        2 -> getat_ce2a48.divisor\n        input_9f1e6d -> getat_ce2a48.value\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_b280eb.value\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_f7c3b8 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_1f9a5e\n        in(x: -454, y: -120, name: \"execute\") trigger() execute_7c8b6d\n\n        out(x: 1184, y: -122, name: \"continue\") trigger() continue_3f2a9e\n        out(x: 1215, y: 68, name: \"output\") property(Bool) output_e1b0ec\n\n        instance(x: 1046, y: 66) ifexpression_8d7c4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1f9a5e -> ifexpression_8d7c4e.gen_0\n        execute_7c8b6d -> ifexpression_8d7c4e.execute\n        ifexpression_8d7c4e.value -> output_e1b0ec\n        ifexpression_8d7c4e.then -> continue_3f2a9e\n        ifexpression_8d7c4e.else -> continue_3f2a9e\n    }\n\n    \n\n    instance(x: -292, y: 11) is_even_1b6c5c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 1, name: \"input\") property(Number) input_3a9f8e\n        in(x: -454, y: -115, name: \"execute\") trigger() execute_e5b7c0\n\n        out(x: 547, y: 11, name: \"output\") property(Bool) output_f6d4ef\n        out(x: 513, y: -114, name: \"continue\") trigger() continue_9a3e2f\n\n        instance(x: -91, y: 1) modulo_8b0c5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 148, y: 6) equal_4d7c5f root.Std_k98ojb.Logic.Equal {}\n        input_3a9f8e -> modulo_8b0c5c.value\n        2 -> modulo_8b0c5c.divisor\n        modulo_8b0c5c.result -> equal_4d7c5f.left\n        0 -> equal_4d7c5f.right\n        execute_e5b7c0 -> modulo_8b0c5c.execute\n        equal_4d7c5f.result -> output_f6d4ef\n        equal_4d7c5f.continue -> continue_9a3e2f\n    }\n\n    \n\n    instance(x: -83, y: 210) is_even_1b0b1f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 16, name: \"input\") property(Number) input_1a9f3e\n        in(x: -451, y: -116, name: \"execute\") trigger() execute_eb0d7c\n\n        out(x: 1268, y: 10, name: \"output\") property(Bool) output_4c6b2e\n        out(x: 1423, y: -117, name: \"continue\") trigger() continue_1a9f3e\n\n        instance(x: 1120, y: 11) ifexpression_7d8b9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9f3e -> ifexpression_7d8b9c.gen_0\n        execute_eb0d7c -> ifexpression_7d8b9c.execute\n        ifexpression_7d8b9c.value -> output_4c6b2e\n        ifexpression_7d8b9c.then -> continue_1a9f3e\n        ifexpression_7d8b9c.else -> continue_1a9f3e\n    }\n\n    \n\n    instance(x: -66, y: 11) is_even_4d6c5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 5, name: \"input\") property(Number) input_1f0e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_7a3e1b\n\n        instance(x: -104, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_1f0e9d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_7a3e1b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9e3d6 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 1, name: \"input\") property(Number) input_8a9d3f\n        in(x: -451, y: -113, name: \"execute\") trigger() execute_7b4e6c\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1b2f5f\n        out(x: 1258, y: 0, name: \"output\") property(Bool) output_9d3a7e\n\n        instance(x: -104, y: -112) ifexpression_e6c4ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_8a9d3f -> ifexpression_e6c4ef.gen_0\n        execute_7b4e6c -> ifexpression_e6c4ef.execute\n        ifexpression_e6c4ef.value -> output_9d3a7e\n        ifexpression_e6c4ef.then -> continue_1b2f5f\n        ifexpression_e6c4ef.else -> continue_1b2f5f\n    }\n\n    \n\n    instance(x: -175, y: 11) is_even_f8a0d9 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 17, name: \"input\") property(Number) input_5e1f9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_7c6a0b\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_4e3c2f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_f8d1ee\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_5e1f9d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_4e3c2f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_1cedb2.new_value\n        execute_7c6a0b -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_f8d1ee\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_9e4f5c root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a3d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) contains_4a2b2c root.Std_k98ojb.List.Contains {}\n        characters_5b9f8c.characters -> find_7a3d6e.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 89, y: 29) slice_3b8c7d root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_5a2e9f root.Std_k98ojb.Logic.NotEqual {}\n            characters_5b9f8c.characters -> slice_3b8c7d.list\n            find_7a3d6e.index -> slice_3b8c7d.start\n            -1 -> slice_3b8c7d.end\n            slice_3b8c7d.slice -> contains_4a2b2c.list\n            current_0 -> contains_4a2b2c.item\n            contains_4a2b2c.result -> notequal_5a2e9f.left\n            false -> notequal_5a2e9f.right\n            notequal_5a2e9f.result -> bool_1\n        } -> find_7a3d6e.predicate\n        find_7a3d6e.item -> output_0\n        input_0 -> characters_5b9f8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_1e4a2f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3a7d6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -35) contains_4f1b1c root.Std_k98ojb.List.Contains {}\n        characters_5e9b8c.characters -> find_3a7d6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_2f8c0a root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            characters_5e9b8c.characters -> slice_2f8c0a.list\n            current_afd5b1 -> slice_2f8c0a.start\n            -1 -> slice_2f8c0a.end\n            slice_2f8c0a.slice -> contains_4f1b1c.list\n            current_afd5b1 -> contains_4f1b1c.item\n            contains_4f1b1c.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_3a7d6f.predicate\n        find_3a7d6f.item -> output_0\n        input_0 -> characters_5e9b8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7f6a3d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") set_1e4c9f root.Std_k98ojb.Sets.Set {}\n        characters_5e9b8c.characters -> find_7f6a3d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7f3c root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> contains_2a7f3c.item\n            set_1e4c9f.set -> contains_2a7f3c.list\n            contains_2a7f3c.result -> bool_1eb6e9\n        } -> find_7f6a3d.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7f3c root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> contains_2a7f3c.item\n            set_1e4c9f.set -> contains_2a7f3c.list\n            contains_2a7f3c.result -> bool_1eb6e9\n        } -> set_1e4c9f.add\n        find_7f6a3d.item -> output_0\n        input_0 -> characters_5e9b8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7f9d6c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -75) ifexpression_807ffd root.Std_k98ojb.Std.IfExpression {\n            expression: \"a != b\"\n        }\n        characters_2e1444.characters -> find_7f9d6c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_7f9d6c.result -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            true -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7f9d6c.predicate\n        ifexpression_807ffd.gen_0 -> characters_2e1444.characters\n        find_7f9d6c.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) for_1088d5 root.Std_k98ojb.Std.For {}\n        instance(x: 551, y: -105) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> for_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_807ffd root.Std_k98ojb.List.Slice {}\n            slice_807ffd.list -> contains_d42dce.list\n            for_1088d5.item -> slice_807ffd.start\n            -1 -> slice_807ffd.end\n            slice_807ffd.slice -> contains_d42dce.list\n            current_9f6850 -> contains_d42dce.item\n            contains_d42dce.result -> bool_af09a7\n        } -> for_1088d5.predicate\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_807ffd root.Std_k98ojb.List.Slice {}\n            slice_807ffd.list -> contains_d42dce.list\n            for_1088d5.item -> slice_807ffd.start\n            -1 -> slice_807ffd.end\n            slice_807ffd.slice -> contains_d42dce.list\n            current_9f6850 -> contains_d42dce.item\n            contains_d42dce.result -> bool_af09a7\n        } -> if_7c284f.predicate\n        for_1088d5.onItem -> if_7c284f.execute\n        if_7c284f.else -> for_1088d5.next\n        if_7c284f.then -> output_0.execute\n        for_1088d5.item -> output_0.value\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d42ce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"contains\") contains_d42dce root.Std_k98ojb.List.Contains {}\n        characters_2e1444.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_a54bdc root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> slice_45e806.list\n            0 -> slice_45e806.start\n            find_6d05b0.index -> slice_45e806.end\n            slice_45e806.slice -> contains_a54bdc.list\n            current_afd5b1 -> contains_a54bdc.item\n            contains_a54bdc.result -> bool_1eb6e9\n        } -> find_7d42ce.predicate\n        input_0 -> characters_2e1444.input\n        find_7d42ce.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4a9d6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"Set\") set_1e2c8f root.Std_k98ojb.Sets.Set {}\n        characters_5e3c8f.characters -> find_4a9d6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_4f3a7c root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> contains_4f3a7c.item\n            set_1e2c8f.set -> contains_4f3a7c.list\n            contains_4f3a7c.result -> bool_1eb6e9\n        } -> find_4a9d6f.predicate\n        characters_5e3c8f.characters -> set_1e2c8f.add\n        find_4a9d6f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_6e6bfd root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e4b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a3f8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.List.Contains {}\n        characters_5e4b9c.characters -> find_7a3f8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_0b1361`` root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> ``first occurrence_0b1361``.item\n            find_7a3f8d.result -> ``first occurrence_0b1361``.list\n            ``first occurrence_0b1361``.result -> bool_1eb6e9\n        } -> find_7a3f8d.predicate\n        characters_5e4b9c.characters -> contains_d42dce.list\n        input_0 -> characters_5e4b9c.input\n        find_7a3f8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 515, y: 44) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.List.Contains {}\n        instance(x: 89, y: 29) slice_9f6850 root.Std_k98ojb.List.Slice {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            slice_9f6850.slice -> contains_807ffd.list\n            characters_6d05b0.characters -> slice_9f6850.list\n            elem_9f6850 -> slice_9f6850.end\n            1 -> slice_9f6850.start\n            contains_807ffd.item -> bool_af09a7\n            elem_9f6850 -> contains_807ffd.contains\n        } -> find_1088d5.predicate\n        find_1088d5.item -> output_0\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_2c6a8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d4e5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"Set\") set_a9c1a8 root.Std_k98ojb.Set {}\n        characters_2c6a8f.characters -> find_7d4e5f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_4f3c7a root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> contains_4f3c7a.item\n            set_a9c1a8.set -> contains_4f3c7a.list\n            contains_4f3c7a.result -> bool_1eb6e9\n        } -> find_7d4e5f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) notcontains_4f3c7a root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> notcontains_4f3c7a.item\n            set_a9c1a8.set -> notcontains_4f3c7a.list\n            notcontains_4f3c7a.result -> bool_1eb6e9\n        } -> set_a9c1a8.add\n        find_7d4e5f.item -> output_0\n        input_0 -> characters_2c6a8f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_4e8f9a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_3c7d5b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_min_node.min -> a\n        getter_9cceb3.value -> b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_4e8f9a -> data_9a9c70.a\n        list_min_node.items -> data_9a9c70.b\n        a -> min_c3e343.items\n        b -> min_c3e343.items\n        min_c3e343.min -> second_min_3c7d5b\n    }\n\n    \n\n    instance(x: 426, y: -303) list_min_node root.main.second_smallest {}\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -427, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) list_remove_1_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -503) list_min_2_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_1_node.item\n        items_ai -> list_remove_1_node.list\n        list_remove_1_node.result -> list_min_2_node.items\n        list_min_2_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1e8a9f\n\n        out(x: 158, y: 81, name: \"second_smallest\") property(Number) second_smallest_5c7d4b\n\n        instance(x: -104, y: -6) min_3a2c0c root.Std_k98ojb.List.Min {}\n        instance(x: 94, y: 69) filter_9e1f9c root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        instance(x: 95, y: -8) min_3a2c0c_0 root.Std_k98ojb.List.Min {}\n        list_1e8a9f -> min_3a2c0c.items\n        min_3a2c0c.min -> filter_9e1f9c.gen_0\n        list_1e8a9f -> filter_9e1f9c.list\n        filter_9e1f9c.result -> min_3a2c0c_0.items\n        min_3a2c0c_.min -> second_smallest_5c7d4b\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_6f8a5e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_7c9d6b\n\n        instance(x: -105, y: -110) find_2b5e0f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_1a7c4d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e5f3e9\n\n            instance(x: 89, y: 29) min_2b8c6f root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_1d0a7f root.Std_k98ojb.Logic.NotEqual {}\n            list_1a3f8e -> min_2b8c6f.items\n            min_2b8c6f.min -> notequal_1d0a7f.left\n            elem_1a7c4d -> notequal_1d0a7f.right\n            notequal_1d0a7f.result -> bool_e5f3e9\n        } -> find_2b5e0f.predicate\n        list_1a3f8e -> find_2b5e0f.items\n        instance(x: -105, y: 120) find_4c6d7e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_1a7c4d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e5f3e9\n\n            instance(x: 89, y: 29) min_2b8c6f root.Std_k98ojb.List.Min {}\n            list_1a3f8e -> min_2b8c6f.items\n            min_2b8c6f.min -> elem_1a7c4d\n            find_2b5e0f.item -> notequal_1d0a7f.right\n            notequal_1d0a7f.result -> bool_e5f3e9\n        } -> find_4c6d7e.predicate\n        list_1a3f8e -> find_4c6d7e.items\n        find_4c6d7e.item -> second_min_7c9d6b\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_2b5e0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -432) list_remove_1_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -561) list_min_2_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_1_node.item\n        items_ai -> list_remove_1_node.list\n        list_remove_1_node.result -> list_min_2_node.items\n        list_min_2_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_a5c3d7\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_filter_2a1f0e root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        data_instance(x: -105, y: -110) data_7c8d5a  = [min]\n        instance(x: -105, y: -110) list_min_node_1f9e2f root.Std_k98ojb.List.Min {}\n        list_filter_2a1f0e.result -> second_min_a5c3d7\n        min_node.min -> data_7c8d5a.min\n        list_8e9f1a -> min_node.items\n        list_8e9f1a -> list_filter_2a1f0e.list\n        data_7c8d5a -> list_min_node_1f9e2f.items\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -427, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) slice_1c7f9a root.Std_k98ojb.List.Slice {}\n        instance(x: 426, y: -537) list_max_node root.Std_k98ojb.List.Max {}\n\n        items_ai -> list_min_node.items\n        list_min_node.min -> slice_1c7f9a.start\n\n        items_ai -> slice_1c7f9a.list\n        slice_1c7f9a.slice -> list_max_node.items\n        list_max_node.max -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e3a8f\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_7c2b4d\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_1 root.Std_k98ojb.List.Min {}\n        data_instance(x: -105, y: -110) data_9a9c70  = [min, second_min]\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < second_min\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        list_9e3a8f -> list_min_node.items\n        list_min_node.min -> data_9a9c70.min\n        list_9e3a8f -> list_min_node_1.items\n        ifexpression_e38995.gen_0 -> list_min_node_1.items\n        getter_9cceb3.value -> second_min_7c2b4d\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        data_9a9c70.second_min -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -432) list_remove_1 root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_1.item\n        items_ai -> list_remove_1.list\n        list_remove_1.result -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_1f9d0a root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_1f9d0a.item\n        items_ai -> list_remove_1f9d0a.list\n        list_remove_1f9d0a.result -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 10049,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -171, y: 16, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -169, y: -123, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_4b3e5e\n\n        instance(x: 133, y: -131) intersection_1f9a6 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_1f9a6.left\n        list2_eb0d7c -> intersection_1f9a6.right\n        instance(x: 362, y: -107) length_4a3c5 root.Std_k98ojb.List.Length {}\n        intersection_1f9a6.intersect -> length_4a3c5.list\n        length_4a3c5.length -> output_4b3e5e\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_7d0f1 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -176, y: 20, name: \"list1\") property(List) list1_3e9f0a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_6c7b8d\n\n        instance(x: 133, y: -131) intersection_1a0e9f root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9f0a -> intersection_1a0e9f.left\n        list2_c62075 -> intersection_1a0e9f.right\n        instance(x: 340, y: -107) length_5c7d6f root.Std_k98ojb.List.Length {}\n        intersection_1a0e9f.intersect -> length_5c7d6f.list\n        length_5c7d6f.length -> output_6c7b8d\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_b3d2a4 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -177, y: 12, name: \"list1\") property(List) list1_3e9f0a\n        in(x: -175, y: -122, name: \"list2\") property(List) list2_7c6d5b\n\n        out(x: 558, y: -107, name: \"output\") property(Bool) output_8a1b4e\n\n        instance(x: 134, y: -125) intersection_3f0c9e root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9f0a -> intersection_3f0c9e.left\n        list2_7c6d5b -> intersection_3f0c9e.right\n        instance(x: 348, y: -107) length_4b8927 root.Std_k98ojb.List.Length {}\n        intersection_3f0c9e.intersect -> length_4b8927.list\n        length_4b8927.length -> output_8a1b4e\n    }\n\n    \n\n    instance(x: 101, y: -67) intersection_5d2f9c root.main.intersection {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 12, name: \"list1\") property(List) list1_3e9b5a\n        in(x: -163, y: -120, name: \"list2\") property(List) list2_4f0c8d\n\n        out(x: 506, y: -47, name: \"output\") property(Bool) output_6a1f3e\n\n        instance(x: 223, y: -44, name: \"intersection\") intersection_eb9f7e root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9b5a -> intersection_eb9f7e.left\n        list2_4f0c8d -> intersection_eb9f7e.right\n        instance(x: 482, y: -44) length_6e1e9f root.Std_k98ojb.List.Length {}\n        length_6e1e9f.list -> intersection_eb9f7e.intersection\n        length_6e1e9f.length -> output_6a1f3e\n    }\n\n    \n\n    instance(x: -138, y: 45) intersection_8c0d2f root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -171, y: 18, name: \"list1\") property(List) list1_9a2b6f\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_7c0d8e\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_5c3c4a\n\n        instance(x: 221, y: -48, name: \"intersection\") Sets.Intersection root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2b6f -> intersection.left\n        list2_7c0d8e -> intersection.right\n        intersection.intersect -> output_5c3c4a\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_9e1f8c root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 11, name: \"list1\") property(List) list1_8a2f5e\n        in(x: -181, y: -124, name: \"list2\") property(List) list2_c62075\n\n        out(x: 783, y: -107, name: \"output\") property(Bool) output_e6c7b0\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_8a2f5e -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) item1_4c7b3d\n            in(x: -223, y: 18, name: \"item2\") property(Number) item2_e5f9e0\n\n            out(x: 245, y: -54, name: \"\") property(Bool) _8a9c7c\n\n            instance(x: -8, y: -53) equal_1b3d6c root.Std_k98ojb.Logic.Equal {}\n            item1_4c7b3d -> equal_1b3d6c.left\n            item2_e5f9e0 -> equal_1b3d6c.right\n            equal_1b3d6c.result -> _8a9c7c\n        } -> zip_201051.handler\n        instance(x: 345, y: -107) contains_32727d root.Std_k98ojb.List.Contains {}\n        zip_201051.zipped -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_e6c7b0\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 19, name: \"list1\") property(List) list1_8e6f9a\n        in(x: -163, y: -121, name: \"list2\") property(List) list2_5c7b4d\n\n        out(x: 501, y: -50, name: \"output\") property(Bool) output_3f0c1e\n\n        instance(x: 221, y: -48, name: \"has_common_element\") intersection_9a8f6f root.Std_k98ojb.Sets.Intersection {}\n        list1_8e6f9a -> intersection_9a8f6f.left\n        list2_5c7b4d -> intersection_9a8f6f.right\n        instance(x: 445, y: -48) contains_3e0e9c root.Std_k98ojb.List.Contains {}\n        intersection_9a8f6f.intersect -> contains_3e0e9c.list\n        true -> contains_3e1e9c.item\n        contains_3e0e9c.is_contained -> output_3f0c1e\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_7a5d4b root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: 164, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -276, y: -5, name: \"list2\") property(List) list2_7c0d3b\n\n        out(x: 803, y: 145, name: \"output\") property(Bool) output_4f1b6e\n\n        instance(x: 534, y: 147) intersection_9a5b7c root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f2a -> intersection_9a5b7c.left\n        list2_7c0d3b -> intersection_9a5b7c.right\n        instance(x: 1056, y: 144) notempty_4e1e5f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a5b7c.intersect -> notempty_4e1e5f.list\n        notempty_4e1e5f.result -> output_4f1b6e\n    }\n\n    \n\n    instance(x: -293, y: 177) has_common_element_e2f3d8 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -171, y: 12, name: \"list1\") property(List) list1_9e3b8a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_6c0d7f\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_5a1f4e\n\n        instance(x: 133, y: -131) intersection_3b8f7e root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8a -> intersection_3b8f7e.left\n        list2_6c0d7f -> intersection_3b8f7e.right\n        instance(x: 362, y: -109) length_4a8b7f root.Std_k98ojb.List.Length {}\n        intersection_3b8f7e.intersect -> length_4a8b7f.list\n        instance(x: 556, y: -108) notequal_1c9d5c root.Std_k98ojb.Logic.NotEqual {}\n        length_4a8b7f.length -> notequal_1c9d5c.left\n        0 -> notequal_1c9d5c.right\n        notequal_1c9d5c.result -> output_5a1f4e\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_b7b8d2 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -173, y: 18, name: \"list1\") property(List) list1_3e6f9a\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_e5c8d7\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_4b0a1f\n\n        instance(x: 221, y: -48, name: \"intersection\") Sets.Intersection root.Std_k98ojb.Sets.Intersection {}\n        list1_3e6f9a -> intersection.left\n        list2_e5c8d7 -> intersection.right\n        List.Contains(root.Std_k98ojb.List.Contains) {\n            is_contained -> output_4b0a1f\n            item: 0\n            list: intersection.intersect\n        }\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_9e7d2c root.main.intersection {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 339, y: 20, name: \"getter_8f9c6d\") getter_8f9c6d = previous\n        setter(x: 682, y: -242, name: \"setter_7b3a4e\") setter_7b3a4e = previous\n        instance(x: 321, y: -34) for_1e2b5e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -145, name: \"setter_7b3a4e\") setter_9f6d7c = previous\n        instance(x: -275, y: -59) getat_e8a1ee root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b7e.else -> continue_5f0e0c\n        ifexpression_7e7b7e.value -> output_eb7d1c\n        ifexpression_7e7b7e.then -> setter_7b3a4e.execute\n        list_0a8f9e -> for_1e2b5e.items\n        for_1e2b5e.item -> ifexpression_7e7b7e.gen_2\n        for_1e2b5e.index -> ifexpression_7e7b7e.gen_0\n        getter_8f9c6d.value -> ifexpression_7e7b7e.gen_1\n        for_1e2b5e.onItem -> ifexpression_7e7b7e.execute\n        for_1e2b5e.done -> continue_5f0e0c\n        for_1e2b5e.item -> setter_7b3a4e.new_value\n        list_0a8f9e -> getat_e8a1ee.list\n        0 -> getat_e8a1ee.index\n        getat_e8a1ee.itemAtIndex -> setter_9f6d7c.new_value\n        execute_5b2f7c -> setter_9f6d7c.execute\n        setter_9f6d7c.continue -> for_1e2b5e.reset\n        setter_7b3a4e.continue -> for_1e2b5e.next\n    }\n\n    \n\n    instance(x: -82, y: 59) is_consecutive_8f9c0e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 4, name: \"list\") property(List) list_9a3f1e\n\n        out(x: 1020, y: 7, name: \"output\") property(Bool) output_eb2c8d\n\n        instance(x: 104, y: 13) sort_6b4a7f root.Std_k98ojb.List.Sort {}\n        instance(x: 400, y: -1) for_5e9c0e root.Std_k98ojb.Std.For {}\n        instance(x: 738, y: 2) sub_3d7a1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1024, y: 6) and_8f8c0f root.Std_k98ojb.Logic.And {}\n        list_9a3f1e -> sort_6b4a7f.list\n        sort_6b4a7f.sortedList -> for_5e9c0e.items\n        func() {\n            in(x: -114, y: 49, name: \"current\") property(Number) current_2f8d3f\n\n            out(x: 690, y: 51, name: \"bool\") property(Bool) bool_eb7a5c\n\n            instance(x: 82, y: 46) sub_1e6a4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 321, y: 50) equal_8d3f2f root.Std_k98ojb.Logic.Equal {}\n            for_5e9c0e.index -> sub_1e6a4c.first\n            1 -> sub_1e6a4c.second\n            current_2f8d3f -> sub_1e6a4c.right\n            sub_1e6a4c.result -> equal_8d3f2f.left\n            sub_1e6a4c.result -> sub_3d7a1c.first\n            1 -> sub_3d7a1c.second\n            sub_3d7a1c.result -> equal_8d3f2f.right\n            equal_8d3f2f.result -> bool_eb7a5c\n        } -> for_5e9c0e.handler\n        and_8f8c0f.left -> output_eb2c8d\n        for_5e9c0e.done -> and_8f8c0f.right\n        true -> and_8f8c0f.left\n    }\n\n    \n\n    instance(x: -63, y: 176) is_consecutive_1a3d4c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 2, name: \"list\") property(List) list_3a0f9e\n\n        out(x: 1058, y: 1, name: \"output\") property(Bool) output_7c5d6b\n\n        instance(x: 1004, y: -11) ifexpression_7f3c8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 487, y: 28, name: \"getter_ea2d9e\") getter_ea2d9e = previous\n        setter(x: 1018, y: -299, name: \"setter_7f5c3b\") setter_7f5c3b = previous\n        instance(x: 465, y: -18) for_d0b1af root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7f5c3b\") setter_2a8e6d = previous\n        instance(x: -274, y: -35) getat_9b4b5c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7f3c8c.else -> continue_1f0c0f\n        ifexpression_7f3c8c.value -> output_7c5d6b\n        ifexpression_7f3c8c.then -> setter_7f5c3b.execute\n        list_3a0f9e -> for_d0b1af.items\n        for_d0b1af.item -> ifexpression_7f3c8c.gen_2\n        for_d0b1af.index -> ifexpression_7f3c8c.gen_0\n        getter_ea2d9e.value -> ifexpression_7f3c8c.gen_1\n        for_d0b1af.onItem -> ifexpression_7f3c8c.execute\n        for_d0b1af.done -> continue_1f0c0f\n        for_d0b1af.item -> setter_7f5c3b.new_value\n        list_3a0f9e -> getat_9b4b5c.list\n        0 -> getat_9b4b5c.index\n        getat_9b4b5c.itemAtIndex -> setter_2a8e6d.new_value\n        execute_1a7b9c -> setter_2a8e6d.execute\n        setter_2a8e6d.continue -> for_d0b1af.reset\n        setter_7f5c3b.continue -> for_d0b1af.next\n    }\n\n    \n\n    instance(x: -34, y: 59) is_consecutive_e9a4ec root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_8a1f2e\n\n        out(x: 1015, y: 12, name: \"output\") property(Bool) output_7b9c0d\n\n        instance(x: 110, y: -11) sort_4a6b7f root.Std_k98ojb.List.Sort {}\n        instance(x: 428, y: 14) for_1e3b2c root.Std_k98ojb.Std.For {}\n        instance(x: 730, y: 13) sub_8d9a0f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1014, y: -11) and_7e6f5f root.Std_k98ojb.Logic.And {}\n        sort_4a6b7f.sorted -> for_1e3b2c.items\n        func() {\n            in(x: -121, y: 34, name: \"current\") property(Number) current_9d8a0e\n\n            out(x: 705, y: 45, name: \"\") property(Bool) _7dd980\n\n            instance(x: 112, y: 41) sub_2b1f3c root.Std_k98ojb.Math.Sub {}\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n                out(x: 698, y: 85, name: \"\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n                instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                current_afd5b1 -> modulo_45e806.value\n                2 -> modulo_45e806.divisor\n                modulo_45e806.result -> equal_a54bdc.left\n                0 -> equal_a54bdc.right\n                equal_a54bdc.result -> bool_1eb6e9\n            } -> sub_2b1f3c.second\n            current_9d8a0e -> sub_2b1f3c.first\n            sub_2b1f3c.result -> _7dd980\n        } -> for_1e3b2c.handler\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> sub_8d9a0f.second\n        for_1e3b2c.item -> sub_8d9a0f.first\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> for_1e3b2c.predicate\n        list_8a1f2e -> sort_4a6b7f.list\n        sub_8d9a0f.result -> and_7e6f5f.left\n        1 -> and_7e6f5f.right\n        for_1e3b2c.output_list -> and_7e6f5f.left\n        and_7e6f5f.result -> output_7b9c0d\n    }\n\n    \n\n    instance(x: -64, y: 127) is_consecutive_4a8d9c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 3, name: \"list\") property(List) list_1f9a0e\n\n        out(x: 1005, y: 2, name: \"output\") property(Bool) output_8c7b4d\n\n        instance(x: 0, y: -10) sort_b6e3da root.Std_k98ojb.List.Sort {}\n        instance(x: 0, y: 83) for_1f5a2d root.Std_k98ojb.Std.For {}\n        instance(x: 322, y: 84) sub_9c8c7f root.Std_k98ojb.Math.Sub {}\n        instance(x: 622, y: -3) lessthanorequal_e4e6ce root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 902, y: 2) and_5d9a8c root.Std_k98ojb.Logic.And {}\n        sort_b6e3da.sorted -> for_1f5a2d.items\n        func() {\n            in(x: -113, y: 43, name: \"current\") property(Number) current_7e4c0e\n\n            out(x: 517, y: 54, name: \"bool\") property(Bool) bool_eb9f8a\n\n            instance(x: 112, y: 38) add_3d5f2f root.Std_k98ojb.Math.Add {}\n            instance(x: 413, y: 49) lessthanorequal_7c1e6c root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_7e4c0e -> sub_9c8c7f.first\n            for_1f5a2d.index -> sub_9c8c7f.second\n            1 -> add_3d5f2f.second\n            for_1f5a2d.index -> add_3d5f2f.first\n            lessthanorequal_e4e6ce.result -> and_5d9a8c.left\n            sub_9c8c7f.result -> lessthanorequal_7c1e6c.right\n            current_7e4c0e -> lessthanorequal_7c1e6c.left\n            add_3d5f2f.result -> lessthanorequal_e4e6ce.left\n            and_5d9a8c.result -> bool_eb9f8a\n        } -> for_1f5a2d.handler\n        for_1f5a2d.onItem -> and_5d9a8c.execute\n        for_1f5a2d.done -> output_8c7b4d\n        list_1f9a0e -> sort_b6e3da.list\n    }\n\n    \n\n    instance(x: -67, y: 129) is_consecutive_1c8c9f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 5, name: \"list\") property(List) list_9a8f0e\n\n        out(x: 1006, y: 3, name: \"output\") property(Bool) output_e1b2d7\n\n        instance(x: 104, y: 10) sort_1c5a4c root.Std_k98ojb.List.Sort {}\n        instance(x: 352, y: -13) for_8e9f6c root.Std_k98ojb.Std.For {}\n        instance(x: 696, y: 7) lessthanorequal_2d3f1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1024, y: -10) and_8e9a0c root.Std_k98ojb.Logic.And {}\n        instance(x: 1286, y: 60) if_5a7d3f root.Std_k98ojb.Std.If {}\n        sort_1c5a4c.list -> for_8e9f6c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_8e9f6c.predicate\n        for_8e9f6c.onItem -> if_5a7d3f.execute\n        for_8e9f6c.done -> if_5a7d3f.else\n        and_8e9a0c.result -> output_e1b2d7\n        lessthanorequal_2d3f1c.result -> and_8e9a0c.left\n        for_8e9f6c.index -> lessthanorequal_2d3f1c.right\n        1 -> lessthanorequal_2d3f1c.left\n        sort_1c5a4c.list -> lessthanorequal_2d3f1c.left\n        for_8e9f6c.item -> and_8e9a0c.right\n        list_9a8f0e -> sort_1c5a4c.list\n    }\n\n    \n\n    instance(x: -62, y: 129) is_consecutive_7b3d9c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 3, name: \"list\") property(List) list_1a9d8f\n\n        out(x: 1056, y: 2, name: \"output\") property(Bool) output_5b7c0e\n\n        instance(x: 107, y: -4) sort_1f3c9f root.Std_k98ojb.List.Sort {}\n        instance(x: 427, y: 10) for_8a2d9c root.Std_k98ojb.Std.For {}\n        instance(x: 778, y: 7) sub_5e0b9c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1033, y: -1) if_4f9c6f root.Std_k98ojb.Std.If {}\n        instance(x: 1262, y: 12) lessthan_7d7a8e root.Std_k98ojb.Math.LessThan {}\n        list_1a9d8f -> sort_1f3c9f.list\n        sort_1f3c9f.sortedList -> for_8a2d9c.items\n        func() {\n            in(x: -121, y: 39, name: \"current\") property(Number) current_5b0e7f\n\n            out(x: 704, y: 48, name: \"\") property(Bool) _6e3b8a\n\n            instance(x: 94, y: 32) sub_e9c1d2 root.Std_k98ojb.Math.Sub {}\n            current_5b0e7f -> sub_e9c1d2.first\n            for_8a2d9c.index -> sub_e9c1d2.second\n            sub_e9c1d2.result -> if_4f9c6f.predicate\n        } -> for_8a2d9c.handler\n        for_8a2d9c.onItem -> if_4f9c6f.execute\n        if_4f9c6f.else -> output_5b7c0e\n        lessthan_7d7a8e.result -> if_4f9c6f.value\n        sub_5e0b9c.result -> lessthan_7d7a8e.left\n        1 -> lessthan_7d7a8e.right\n        for_8a2d9c.index -> sub_5e0b9c.first\n        for_8a2d9c.item -> sub_5e0b9c.second\n    }\n\n    \n\n    instance(x: -60, y: 178) is_consecutive_1f7c3f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 2, name: \"list\") property(List) list_3e9f8a\n\n        out(x: 1000, y: 1, name: \"output\") property(Bool) output_7c5d4b\n\n        instance(x: 0, y: -17) sort_6e2b3c root.Std_k98ojb.List.Sort {}\n        instance(x: 246, y: 12) for_9f8a9f root.Std_k98ojb.Std.For {}\n        instance(x: 525, y: 11) sub_1d7c4f root.Std_k98ojb.Math.Sub {}\n        instance(x: 788, y: -18) lessthanorequal_e6f0e2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1013, y: 11) and_1d9c5a root.Std_k98ojb.Logic.And {}\n        list_3e9f8a -> sort_6e2b3c.list\n        sort_6e2b3c.sortedList -> for_9f8a9f.items\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_1d0b4f\n\n            out(x: 705, y: 45, name: \"bool\") property(Bool) bool_5e7c8a\n\n            instance(x: 226, y: 42) sub_e9e6ec root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 43) lessthanorequal_1d0f4c root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_9f8a9f.index -> sub_e9e6ec.first\n            1 -> sub_e9e6ec.second\n            sub_e9e6ec.result -> lessthanorequal_1d0f4c.left\n            current_1d0b4f -> lessthanorequal_1d0f4c.right\n            lessthanorequal_1d0f4c.result -> bool_5e7c8a\n        } -> for_9f8a9f.handler\n        for_9f8a9f.onItem -> and_1d9c5a.execute\n        sub_1d7c4f.result -> lessthanorequal_e6f0e2.left\n        1 -> lessthanorequal_e6f0e2.right\n        for_9f8a9f.index -> sub_1d7c4f.first\n        sort_6e2b3c.sortedList[for_9f8a9f.index + 1] -> sub_1d7c4f.second\n        lessthanorequal_e6f0e2.result -> and_1d9c5a.right\n        for_9f8a9f.output_bool -> and_1d9c5a.left\n        and_1d9c5a.result -> output_7c5d4b\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_2c856f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 3, name: \"list\") property(List) list_8e6a0f\n\n        out(x: 1065, y: 2, name: \"output\") property(Bool) output_7c9d1b\n\n        instance(x: 104, y: -13) sort_4a3f0c root.Std_k98ojb.List.Sort {}\n        instance(x: 403, y: 14) for_5e6b8f root.Std_k98ojb.Std.For {}\n        instance(x: 750, y: 2) if_7d1b7f root.Std_k98ojb.Std.If {}\n        instance(x: 1010, y: -13) sub_9a4c6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1273, y: 14) lessthanorequal_e8e2d1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        sort_4a3f0c.list -> for_5e6b8f.items\n        func() {\n            in(x: -121, y: 44, name: \"current\") property(Number) current_9e7b2d\n\n            out(x: 702, y: 55, name: \"\") property(Bool) _3c1a4f\n\n            instance(x: 91, y: 40) sub_8b6b5f root.Std_k98ojb.Math.Sub {}\n            current_9e7b2d -> sub_8b6b5f.first\n            for_5e6b8f.index -> sub_8b6b5f.second\n            sub_8b6b5f.result -> if_7d1b7f.predicate\n        } -> for_5e6b8f.handler\n        for_5e6b8f.onItem -> if_7d1b7f.execute\n        list_8e6a0f -> sort_4a3f0c.list\n        1 -> sub_9a4c6c.second\n        for_5e6e8f.index -> sub_9a4c6c.first\n        sub_9a4c6c.result -> lessthanorequal_e8e2d1.left\n        1 -> lessthanorequal_e8e2d1.right\n        lessthanorequal_e8e2d1.result -> if_7d1b7f.value\n        for_5e6b8f.done -> output_7c9d1b\n    }\n\n    \n\n    instance(x: -64, y: 127) is_consecutive_3a4d0c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 0, name: \"list\") property(List) list_1a3e8f\n\n        out(x: 1052, y: 19, name: \"output\") property(Bool) output_eb7c6d\n\n        instance(x: 101, y: -4) sort_9a0b5f root.Std_k98ojb.List.Sort {}\n        instance(x: 420, y: 17) for_1e3b8c root.Std_k98ojb.Std.For {}\n        instance(x: 754, y: 18) sub_6d2b7f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1029, y: -4) map_5a0c6c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1031, y: 89) and_3e8c0d root.Std_k98ojb.Logic.And {}\n        instance(x: 1307, y: 90) if_2f9f5a root.Std_k98ojb.Std.If {}\n        sort_9a0b5f.list -> for_1e3b8c.items\n        func() {\n            in(x: -111, y: 46, name: \"current\") property(Number) current_e6d7cc\n\n            out(x: 515, y: 55, name: \"bool\") property(Bool) bool_9a0f1e\n\n            instance(x: 89, y: 40) modulo_2b3c5f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 46) equal_8d4a7c root.Std_k98ojb.Logic.Equal {}\n            current_e6d7cc -> modulo_2b3c5f.value\n            1 -> modulo_2b3c5f.divisor\n            modulo_2b3c5f.result -> equal_8d4a7c.left\n            0 -> equal_8d4a7c.right\n            equal_8d4a7c.result -> bool_9a0f1e\n        } -> map_5a0c6c.handler\n        for_1e3b8c.item -> sub_6d2b7f.first\n        1 -> sub_6d2b7f.second\n        for_1e3b8c.index -> sub_6d2b7f.second\n        list_1a3e8f -> sort_9a0b5f.list\n        sub_6d2b7f.result -> map_5a0c6c.items\n        func() {\n            in(x: -111, y: 46, name: \"current\") property(Number) current_e6d7cc\n\n            out(x: 515, y: 55, name: \"bool\") property(Bool) bool_9a0f1e\n\n            instance(x: 89, y: 40) modulo_2b3c5f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 46) equal_8d4a7c root.Std_k98ojb.Logic.Equal {}\n            current_e6d7cc -> modulo_2b3c5f.value\n            1 -> modulo_2b3c5f.divisor\n            modulo_2b3c5f.result -> equal_8d4a7c.left\n            0 -> equal_8d4a7c.right\n            equal_8d4a7c.result -> bool_9a0f1e\n        } -> map_5a0c6c.handler\n        for_1e3b8c.onItem -> if_2f9f5a.execute\n        map_5a0c6c.output_list -> and_3e8c0d.left\n        0 -> and_3e8c0d.right\n        and_3e8c0d.result -> if_2f9f5a.predicate\n        for_1e3b8c.done -> if_2f9f5a.else\n        true -> output_eb7c6d\n        if_2f9f5a.then -> output_eb7c6d\n    }\n\n    \n\n    instance(x: -64, y: 159) is_consecutive_3e0d4f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_3f0a8e\n        in(x: -292, y: -170, name: \"list\") property(List) list_1c7b2d\n\n        out(x: 1065, y: -120, name: \"output\") property(Bool) output_4e6c1d\n\n        instance(x: -93, y: -173, name: \"length of sublist\") length_3a9f0c root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -172) contains_7e8a2f root.Std_k98ojb.List.Contains {}\n        instance(x: 364, y: -171) equal_1a5d6f root.Std_k98ojb.Logic.Equal {}\n        sublist_3f0a8e -> length_3a9f0c.list\n        list_1c7b2d -> contains_7e8a2f.list\n        func() {\n            in(x: -193, y: -115, name: \"current\") property(List) current_5e4a7\n\n            out(x: 705, y: -105, name: \"output\") property(Bool) output_1c0b3d\n\n            instance(x: 226, y: -112) slice_f8f9f2 root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: -110) equal_5a7e6f root.Std_k98ojb.Logic.Equal {}\n            current_5e4a7 -> slice_f8f9f2.list\n            length_3a9f0c.length -> slice_f8f9f2.start\n            slice_f8f9f2.slice -> equal_5a7e6f.left\n            sublist_3f0a8e -> equal_5a7e6f.right\n            equal_5a7e6f.result -> output_1c0b3d\n        } -> contains_7e8a2f.handler\n        contains_7e8a2f.is_contained -> equal_1a5d6f.left\n        true -> equal_1a5d6f.right\n        equal_1a5d6f.result -> output_4e6c1d\n    }\n\n    \n\n    instance(x: -92, y: 29) is_sublist_7b8b0 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 35, name: \"sublist\") property(List) sublist_3f1a8e\n        in(x: -294, y: -135, name: \"list\") property(List) list_7c9b2d\n\n        out(x: 1265, y: -97, name: \"output\") property(Bool) output_e0b6ef\n\n        instance(x: -94, y: -98, name: \"sublist in list\") contains_1f8e3a root.Std_k98ojb.List.Contains {}\n        sublist_3f1a8e -> contains_1f8e3a.item\n        list_7c9b2d -> contains_1f8e3a.list\n        contains_1f8e3a.is_contained -> output_e0b6ef\n    }\n\n    \n\n    instance(x: -92, y: 59) is_sublist_4a7c9e root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 30, name: \"sublist\") property(List) sublist_0a8f9e\n        in(x: -283, y: -166, name: \"list\") property(List) list_1b7d3c\n\n        out(x: 1056, y: -97, name: \"output\") property(Bool) output_e5f4aa\n\n        instance(x: -93, y: -167, name: \"length of sublist\") length_9e2a8c root.Std_k98ojb.List.Length {}\n        instance(x: 186, y: -166) contains_1d0f7c root.Std_k98ojb.List.Contains {}\n        instance(x: 416, y: -165) slice_3f6a4c root.Std_k98ojb.List.Slice {}\n        instance(x: 746, y: -164) length_9e2a8c_1 root.Std_k98ojb.List.Length {}\n        sublist_0a8f9e -> length_9e2a8c.list\n        list_1b7d3c -> slice_3f6a4c.list\n        func() {\n            in(x: -31, y: 12, name: \"index\") property(Number) index_5e0a1f\n\n            out(x: 696, y: 13, name: \"\") property(List) _2b7d8f\n\n            instance(x: 230, y: 19) slice_3f6a4c_1 root.Std_k98ojb.List.Slice {}\n            index_5e0a1f -> slice_3f6a4c_1.start\n            -1 -> slice_3f6a4c_1.end\n            slice_3f6a4c.slice -> slice_3f6a4c_1.list\n            slice_3f6a4c_1.slice -> _2b7d8f\n        } -> contains_1d0f7c.handler\n        length_9e2a8c.length -> slice_3f6a4c.end\n        0 -> slice_3f6a4c.start\n        sublist_0a8f9e -> contains_1d0f7c.item\n        list_1b7d3c -> length_9e2a8c_1.list\n        length_9e2a8c_1.length -> slice_3f6a4c.start\n        contains_1d0f7c.is_contained -> output_e5f4aa\n    }\n\n    \n\n    instance(x: -91, y: 59) is_sublist_5b1d4e root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"sublist\") property(List) sublist_3f1a2e\n        in(x: -286, y: -240, name: \"list\") property(List) list_5b9c8d\n\n        out(x: 1027, y: -110, name: \"output\") property(Bool) output_e0f4ea\n\n        instance(x: -95, y: -242, name: \"find sublist in list\") find_f1e3a6 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_9f7d5c\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_f0a8b4 root.Std_k98ojb.List.Contains {}\n            sublist_3f1a2e -> contains_f0a8b4.list\n            current_9f7d5c -> contains_f0a8b4.item\n            contains_f0a8b4.is_contained -> bool_1eb6e9\n        } -> find_f1e3a6.predicate\n        list_5b9c8d -> find_f1e3a6.items\n        find_f1e3a6.item -> output_e0f4ea\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 20, name: \"sublist\") property(List) sublist_1f9d5a\n        in(x: -307, y: -170, name: \"list\") property(List) list_7c2e4b\n\n        out(x: 1050, y: -95, name: \"output\") property(Bool) output_8c3a6d\n\n        instance(x: -91, y: -166, name: \"is sublist\") filter_9f5c7c root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        instance(x: 210, y: -95) contains_8e3a2d root.Std_k98ojb.List.Contains {}\n        list_7c2e4b -> filter_9f5c7c.list\n        sublist_1f9d5a -> filter_9f5c7c.sublist\n        filter_9f5c7c.result -> contains_8e3a2d.list\n        true -> contains_8e3a2d.item\n        contains_8e3a2d.is_contained -> output_8c3a6d\n    }\n\n    \n\n    instance(x: -93, y: 35) is_sublist_a7b1f9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 20, name: \"sublist\") property(List) sublist_0f8a3e\n        in(x: -280, y: -180, name: \"list\") property(List) list_7b2c6d\n\n        out(x: 1045, y: -115, name: \"output\") property(Bool) output_9a1a4f\n\n        instance(x: -92, y: -181, name: \"is sublist\") filter_f3e0a8 root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        instance(x: 198, y: -115) contains_5d7c9f root.Std_k98ojb.List.Contains {}\n        list_7b2c6d -> filter_f3e0a8.list\n        sublist_0f8a3e -> contains_5d7c9f.item\n        filter_f3e0a8.result -> contains_5d7c9f.list\n        contains_5d7c9f.is_contained -> output_9a1a4f\n    }\n\n    \n\n    instance(x: -92, y: 19) is_sublist_a6b2c9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 0, name: \"sublist\") property(List) sublist_1a8d9f\n        in(x: -277, y: 179, name: \"list\") property(List) list_7c6e3b\n\n        out(x: 1052, y: 54, name: \"output\") property(Bool) output_e5f0ee\n\n        instance(x: -82, y: 178) contains_1a8d9f root.Std_k98ojb.List.Contains {}\n        sublist_1a8d9f -> contains_1a8d9f.list\n        list_7c6e3b -> contains_1a8d9f.item\n        contains_1a8d9f.is_contained -> output_e5f0ee\n    }\n\n    \n\n    instance(x: 101, y: -11) is_sublist_2c7d0f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 5, name: \"sublist\") property(List) sublist_0f1a8e\n        in(x: -277, y: -205, name: \"list\") property(List) list_7c9d4b\n\n        out(x: 1113, y: -97, name: \"output\") property(Bool) output_e5a6ec\n\n        instance(x: -0, y: -105, name: \"sublist length\") length_8e1f7f root.Std_k98ojb.List.Length {}\n        instance(x: 186, y: -106) greaterthan_3c2d9e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 410, y: -107) notequal_5a0f6f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 628, y: -108) not_7f8a1c root.Std_k98ojb.Logic.Not {}\n        instance(x: 842, y: -109) ifexpression_3e9d4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        instance(x: 1058, y: -110) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1272, y: -111) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_0f1a8e -> length_8e1f7f.list\n        list_7c9d4b -> for_d26972.items\n        greaterthan_3c2d9e.result -> notequal_5a0f6f.left\n        length_8e1f7f.length -> greaterthan_3c2d9e.right\n        0 -> greaterthan_3c2d9e.left\n        notequal_5a0f6f.result -> not_7f8a1c.input\n        for_d26972.item -> ifexpression_3e9d4f.gen_2\n        for_d26972.index -> ifexpression_3e9d4f.gen_0\n        sublist_0f1a8e -> contains_32727d.list\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> ifexpression_3e9d4f.handler\n        for_d26972.onItem -> ifexpression_3e9d4f.execute\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        ifexpression_3e9d4f.value -> not_7f8a1c.input\n        for_d26972.done -> output_e5a6ec\n        not_7f8a1c.result -> output_e5a6ec\n        ifexpression_3e9d4f.then -> contains_32727d.execute\n        ifexpression_3e9d4f.else -> for_d26972.next\n        contains_32727d.is_contained -> not_7f8a1c.input\n    }\n\n    \n\n    instance(x: -0, y: 10) is_sublist_5b6b2f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 20, name: \"sublist\") property(List) sublist_2f8d6a\n        in(x: -298, y: -145, name: \"list\") property(List) list_1b9e4c\n\n        out(x: 1040, y: -5, name: \"output\") property(Bool) output_3e7f8f\n\n        instance(x: -50, y: -143, name: \"is sublist\") filter_6d7a2f root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        instance(x: 296, y: -4) contains_3c9e8c root.Std_k98ojb.List.Contains {}\n        list_1b9e4c -> filter_6d7a2f.list\n        sublist_2f8d6a -> filter_6d7a2f.sublist\n        filter_6d7a2f.result_list -> contains_3c9e8c.list\n        true -> contains_3c9e8c.item\n        contains_3c9e8c.is_contained -> output_3e7f8f\n    }\n\n    \n\n    instance(x: -92, y: 59) is_sublist_1a2b4d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 5, name: \"sublist\") property(List) sublist_1a9d6f\n        in(x: -292, y: -177, name: \"list\") property(List) list_7b0c4e\n\n        out(x: 1063, y: -115, name: \"output\") property(Bool) output_5f8c2f\n\n        instance(x: -88, y: -117, name: \"sublist length\") length_1d6a9f root.Std_k98ojb.List.Length {}\n        instance(x: 210, y: -116) greaterthan_7e3a0c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 420, y: -117) notequal_4b2e1d root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 636, y: -118) not_8f5c9f root.Std_k98ojb.Logic.Not {}\n        sublist_1a9d6f -> length_1d6a9f.list\n        list_7b0c4e -> greaterthan_7e3a0c.left\n        length_1d6a9f.length -> greaterthan_7e3a0c.right\n        greaterthan_7e3a0c.result -> notequal_4b2e1d.left\n        0 -> notequal_4b2e1d.right\n        notequal_4b2e1d.result -> not_8f5c9f.input\n        not_8f5c9f.result -> output_5f8c2f\n    }\n\n    \n\n    instance(x: -83, y: 29) is_sublist_7a3d0a root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_7b8c5d\n\n        out(x: 1216, y: 4, name: \"continue\") trigger() continue_0f7c1d\n        out(x: 1163, y: 177, name: \"output\") property(Number) output_2e9a0f\n\n        instance(x: -8, y: -120) for_5b6f4f root.Std_k98ojb.Std.For {}\n        getter(x: 496, y: 166, name: \"getter_e7c3d1\") getter_e7c3d1 = index\n        setter(x: 768, y: -125, name: \"setter_9e2a8f\") setter_9e2a8f = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_5b6f4f.items\n        execute_7b8c5d -> setter_9e2a8f.execute\n        0 -> setter_9e2a8f.new_value\n        getter_e7c3d1.value -> output_2e9a0f\n        for_5b6f4f.done -> continue_0f7c1d\n        setter_9e2a8f.continue -> for_5b6f4f.reset\n        for_5b6f4f.onItem -> ifexpression_6c15d4.execute\n        for_5b6f4f.index -> ifexpression_6c15d4.gen_0\n        1 + getter_e7c3d1.value -> ifexpression_6c15d4.gen_1\n        ifexpression_6c15d4.then -> setter_9e2a8f.execute\n        for_5b6f4f.index -> setter_9e2a8f.new_value\n        ifexpression_6c15d4.else -> for_5b6f4f.next\n        setter_9e2a8f.continue -> continue_0f7c1d\n    }\n\n    \n\n    instance(x: -177, y: 20) find_missing_3f1b8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 2, name: \"list\") property(List) list_1a9f8e\n        in(x: -281, y: -224, name: \"execute\") trigger() execute_5c7b3d\n\n        out(x: 1040, y: -221, name: \"continue\") trigger() continue_e2f4ee\n        out(x: 1029, y: 69, name: \"output\") property(Number) output_1a8e8e\n\n        instance(x: 340, y: 60) for_3b5d0c root.Std_k98ojb.Std.For {}\n        getter(x: 704, y: 170, name: \"getter_9f6f4e\") getter_9f6f4e = index\n        setter(x: 955, y: -158, name: \"setter_1d8a5c\") setter_1d8a5c = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        setter(x: 0, y: 0, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        list_2bbadf -> for_3b5d0c.items\n        execute_5c7b3d -> setter_9d4f1c.execute\n        -1 -> setter_9d4f1c.new_value\n        for_3b5d0c.done -> continue_e2f4ee\n        getter_9f6f4e.value -> output_1a8e8e\n        setter_9d4f1c.continue -> for_3b5d0c.reset\n        for_3b5d0c.onItem -> if_7c284f.execute\n        equal_aabb6e.result -> if_7c284f.predicate\n        if_7c284f.else -> setter_1d8a5c.execute\n        for_3b5d0c.item -> equal_aabb6e.right\n        0 -> equal_aabb6e.left\n        for_3b5d0c.index -> setter_1d8a5c.new_value\n        if_7c284f.then -> for_3b5d0c.next\n        setter_1d8a5c.continue -> continue_e2f4ee\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_6e6bfd root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_3e9f8d\n        in(x: -292, y: -225, name: \"execute\") trigger() execute_1a6b5c\n\n        out(x: 1017, y: -227, name: \"continue\") trigger() continue_4a0f7c\n        out(x: 1008, y: 2, name: \"output\") property(Number) output_3d9e7f\n\n        instance(x: 0, y: 0) for_1b5f6f root.Std_k98ojb.Std.For {}\n        getter(x: 344, y: 60, name: \"getter_ea4c2d\") getter_ea4c2d = index\n        setter(x: 696, y: -154, name: \"setter_7e9b5f\") setter_7e9b5f = index\n        instance(x: 450, y: -108) ifexpression_6f8b0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        instance(x: 661, y: -76) if_2c1a7e root.Std_k98ojb.Std.If {}\n        setter(x: -184, y: -226, name: \"setter_6a6081\") setter_6a6081 = index\n        list_3e9f8d -> for_1b5f6f.items\n        execute_1a6b5c -> setter_6a6081.execute\n        0 -> setter_6a6081.new_value\n        getter_ea4c2d.value -> output_3d9e7f\n        for_1b5f6f.done -> continue_4a0f7c\n        setter_6a6081.continue -> for_1b5f6f.reset\n        for_1b5f6f.onItem -> ifexpression_6f8b0f.execute\n        for_1b5f6f.index -> ifexpression_6f8b0f.gen_0\n        for_1b5f6f.item -> ifexpression_6f8b0f.gen_1\n        ifexpression_6f8b0f.then -> setter_7e9b5f.execute\n        ifexpression_6f8b0f.else -> if_2c1a7e.execute\n        for_1b5f6f.index -> setter_7e9b5f.new_value\n        if_2c1a7e.predicate -> ifexpression_6f8b0f.result\n        if_2c1a7e.then -> continue_4a0f7c\n        if_2c1a7e.else -> for_1b5f6f.next\n        setter_7e9b5f.continue -> for_1b5f6f.next\n    }\n\n    \n\n    instance(x: -179, y: 19) find_missing_3d4c8e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_2f3b5e\n        in(x: -296, y: -232, name: \"execute\") trigger() execute_ea9c8d\n\n        out(x: 1020, y: -230, name: \"continue\") trigger() continue_1c7e6e\n        out(x: 1012, y: 144, name: \"output\") property(Number) output_3b4f9e\n\n        instance(x: 15, y: -120) for_8d5a0c root.Std_k98ojb.Std.For {}\n        instance(x: 435, y: 20) ifexpression_e1f7ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9cceb3\") getter_9cceb3 = previous\n        setter(x: 679, y: -313, name: \"setter_1cedb2\") setter_1cedb2 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e1f7ea.else -> continue_1c7e6e\n        ifexpression_e1f7ea.value -> output_3b4f9e\n        ifexpression_e1f7ea.then -> setter_1cedb2.execute\n        list_2f3b5e -> for_8d5a0c.items\n        for_8d5a0c.item -> ifexpression_e1f7ea.gen_2\n        for_8d5a0c.index -> ifexpression_e1f7ea.gen_0\n        getter_9cceb3.value -> ifexpression_e1f7ea.gen_1\n        for_8d5a0c.onItem -> ifexpression_e1f7ea.execute\n        for_8d5a0c.done -> continue_1c7e6e\n        for_8d5a0c.item -> setter_1cedb2.new_value\n        list_2f3b5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_1cedb2.new_value\n        execute_ea9c8d -> setter_1cedb2.execute\n        setter_1cedb2.continue -> for_8d5a0c.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_7e6f4c root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 2, name: \"list\") property(List) list_9e6b5f\n        in(x: -278, y: -224, name: \"execute\") trigger() execute_1c8a3d\n\n        out(x: 1067, y: -223, name: \"continue\") trigger() continue_2a0f8f\n        out(x: 1074, y: 45, name: \"output\") property(Number) output_e5b6e9\n\n        instance(x: 1, y: 0) for_7c9d7f root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_8a2d9d\") getter_8a2d9d = index\n        setter(x: 0, y: -246, name: \"setter_e1e3c7\") setter_e1e3c7 = index\n        instance(x: 340, y: 60) if_5f6b4c root.Std_k98ojb.Std.If {}\n        getter(x: 704, y: 170, name: \"getter_84fbbe\") getter_84fbbe = index\n        setter(x: 955, y: -158, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        list_9e6b5f -> for_7c9d7f.items\n        execute_1c8a3d -> setter_e1e3c7.execute\n        0 -> setter_e1e3c7.new_value\n        getter_8a2d9d.value -> output_e5b6e9\n        for_7c9d7f.done -> continue_2a0f8f\n        setter_e1e3c7.continue -> for_7c9d7f.reset\n        for_7c9d7f.onItem -> if_5f6b4c.execute\n        for_7c9d7f.item -> equal_aabb6e.left\n        getter_84fbbe.value -> equal_aabb6e.right\n        equal_aabb6e.result -> if_5f6b4c.predicate\n        if_5f6b4c.else -> setter_7e2b42.execute\n        for_7c9d7f.index -> setter_7e2b42.new_value\n        if_5f6b4c.then -> for_7c9d7f.next\n        setter_7e2b42.continue -> continue_2a0f8f\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_1f3b7f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 1, name: \"list\") property(List) list_3a8f5e\n        in(x: -304, y: -225, name: \"execute\") trigger() execute_e9c7b0\n\n        out(x: 1046, y: -229, name: \"continue\") trigger() continue_4d1b8f\n        out(x: 1035, y: 155, name: \"output\") property(Number) output_3e7a2e\n\n        instance(x: 0, y: 0) for_6c7a9d root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_8f1f4e\") getter_8f1f4e = index\n        setter(x: -0, y: -0, name: \"setter_7c9a6d\") setter_7c9a6d = index\n        instance(x: 0, y: 0) ifexpression_a3b2ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_8f1f4e\") getter_9a7d5c = previous\n        setter(x: -0, y: -0, name: \"setter_7c9a6d\") setter_3b2e2d = previous\n        list_3a8f5e -> for_6c7a9d.items\n        execute_e9c7b0 -> setter_7c9a6d.execute\n        -1 -> setter_7c9a6d.new_value\n        getter_8f1f4e.value -> ifexpression_a3b2ea.gen_1\n        for_6c7a9d.index -> ifexpression_a3b2ea.gen_0\n        getter_9a7d5c.value -> ifexpression_a3b2ea.gen_2\n        for_6c7a9d.onItem -> ifexpression_a3b2ea.execute\n        ifexpression_a3b2ea.then -> setter_3b2e2d.execute\n        for_6c7a9d.item -> setter_3b2e2d.new_value\n        ifexpression_a3b2ea.else -> continue_4d1b8f\n        getter_8f1f4e.value -> output_3e7a2e\n        for_6c7a9d.done -> continue_4d1b8f\n        setter_7c9a6d.continue -> for_6c7a9d.reset\n        setter_3b2e2d.continue -> for_6c7a9d.next\n    }\n\n    \n\n    instance(x: -17, y: 119) find_missing_1f8d5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_9f6a8e\n        in(x: -300, y: -221, name: \"execute\") trigger() execute_7b3c5d\n\n        out(x: 1040, y: -225, name: \"continue\") trigger() continue_1f4b9f\n        out(x: 1032, y: 29, name: \"output\") property(Number) output_8e6a5e\n\n        instance(x: 0, y: 0) for_3c9d7e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_1f4a2f\") getter_1f4a2f = index\n        setter(x: 0, y: 0, name: \"setter_e5c8e7\") setter_e5c8e7 = index\n        instance(x: 350, y: -35) ifexpression_6d9b3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 335, y: 110, name: \"getter_e5f7e2\") getter_e5f7e2 = previous\n        setter(x: 681, y: -305, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -277, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6d9b3c.else -> continue_1f4b9f\n        ifexpression_6d9b3c.then -> setter_e5c8e7.execute\n        list_9f6a8e -> for_3c9d7e.items\n        for_3c9d7e.item -> ifexpression_6d9b3c.gen_2\n        for_3c9d7e.index -> ifexpression_6d9b3c.gen_0\n        getter_e5f7e2.value -> ifexpression_6d9b3c.gen_1\n        for_3c9d7e.onItem -> ifexpression_6d9b3c.execute\n        for_3c9d7e.done -> continue_1f4b9f\n        for_3c9d7e.item -> setter_e5c8e7.new_value\n        list_9f6a8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getter_1f4a2f.value -> output_8e6a5e\n        ifexpression_6d9b3c.value -> output_8e6a5e\n        execute_7b3c5d -> setter_e5c8e7.execute\n        0 -> setter_e5c8e7.new_value\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        for_3c9d7e.index -> setter_9d4f1c.new_value\n        setter_e5c8e7.continue -> for_3c9d7e.reset\n        setter_9d4f1c.continue -> for_3c9d7e.next\n    }\n\n    \n\n    instance(x: -17, y: 126) find_missing_2a0b6c root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_3a9f8e\n        in(x: -298, y: -224, name: \"execute\") trigger() execute_1b2d5c\n\n        out(x: 1017, y: -228, name: \"continue\") trigger() continue_6f0f8b\n        out(x: 1009, y: 144, name: \"output\") property(Number) output_3e4a1f\n\n        instance(x: 0, y: 0) for_2c5d7e root.Std_k98ojb.Std.For {}\n        getter(x: 336, y: 161, name: \"getter_8e6c2d\") getter_8e6c2d = index\n        setter(x: 680, y: -314, name: \"setter_1a7f9f\") setter_1a7f9f = index\n        instance(x: -274, y: -30) getat_3b0b5e root.Std_k98ojb.List.GetAt {}\n        instance(x: 751, y: 94) ifexpression_6d4c8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        setter(x: -0, y: -122, name: \"setter_1a7f9f\") setter_2e5b3d = index\n        ifexpression_6d4c8f.else -> continue_6f0f8b\n        getter_8e6c2d.value -> output_3e4a1f\n        ifexpression_6d4c8f.then -> setter_1a7f9f.execute\n        list_3a9f8e -> for_2c5d7e.items\n        for_2c5d7e.item -> ifexpression_6d4c8f.gen_2\n        for_2c5d7e.index -> ifexpression_6d4c8f.gen_0\n        getter_8e6c2d.value -> ifexpression_6d4c8f.gen_1\n        for_2c5d7e.onItem -> ifexpression_6d4c8f.execute\n        for_2c5d7e.done -> continue_6f0f8b\n        for_2c5d7e.item -> setter_1a7f9f.new_value\n        list_3a9f8e -> getat_3b0b5e.list\n        0 -> getat_3b0b5e.index\n        getat_3b0b5e.itemAtIndex -> setter_2e5b3d.new_value\n        execute_1b2d5c -> setter_2e5b3d.execute\n        setter_2e5b3d.continue -> for_2c5d7e.reset\n        setter_1a7f9f.continue -> for_2c5d7e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f6f0d8 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 2, name: \"list\") property(List) list_3e8b1f\n        in(x: -306, y: -225, name: \"execute\") trigger() execute_9c6d4a\n\n        out(x: 1017, y: -224, name: \"continue\") trigger() continue_e2f0ec\n        out(x: 1008, y: 74, name: \"output\") property(Number) output_3b5e9e\n\n        instance(x: 0, y: 0) for_1c6d4a root.Std_k98ojb.Std.For {}\n        getter(x: 340, y: 60, name: \"getter_8f7f2f\") getter_8f7f2f = index\n        setter(x: 755, y: -157, name: \"setter_1c6d4a\") setter_1c6d4a = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        setter(x: -187, y: -246, name: \"setter_6a6081\") setter_6a6081 = index\n        getter(x: 502, y: 166, name: \"getter_cc0721\") getter_cc0721 = index\n        list_3e8b1f -> for_1c6d4a.items\n        execute_9c6d4a -> setter_6a6081.execute\n        -1 -> setter_6a6081.new_value\n        getter_cc0721.value -> output_3b5e9e\n        for_1c6d4a.done -> continue_e2f0ec\n        setter_6a6081.continue -> for_1c6d4a.reset\n        for_1c6d4a.onItem -> if_7c284f.execute\n        equal_aabb6e.result -> if_7c284f.predicate\n        for_1c6d4a.item -> equal_aabb6e.right\n        getter_8f7f2f.value -> equal_aabb6e.left\n        if_7c284f.else -> setter_1c6d4a.execute\n        for_1c6d4a.index -> setter_1c6d4a.new_value\n        if_7c284f.then -> for_1c6d4a.next\n        setter_1c6d4a.continue -> continue_e2f0ec\n    }\n\n    \n\n    instance(x: -201, y: 8) find_missing_9e5b3f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f8d6e\n        in(x: -277, y: -223, name: \"execute\") trigger() execute_ea7c5b\n\n        out(x: 1043, y: -221, name: \"continue\") trigger() continue_1b2c4f\n        out(x: 1036, y: 55, name: \"output\") property(Number) output_9e0d8e\n\n        instance(x: 15, y: -120) for_7a5b3e root.Std_k98ojb.Std.For {}\n        instance(x: 435, y: 30) ifexpression_1f4c2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 338, y: 155, name: \"getter_ea9e5d\") getter_ea9e5d = previous\n        setter(x: 680, y: -313, name: \"setter_8c3f7b\") setter_8c3f7b = previous\n        instance(x: 321, y: -20) getat_c1c0d2 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1f4c2f.else -> continue_1b2c4f\n        ifexpression_1f4c2f.then -> setter_8c3f7b.execute\n        list_9f8d6e -> for_7a5b3e.items\n        for_7a5b3e.item -> ifexpression_1f4c2f.gen_2\n        for_7a5b3e.index -> ifexpression_1f4c2f.gen_0\n        getter_ea9e5d.value -> ifexpression_1f4c2f.gen_1\n        for_7a5b3e.onItem -> ifexpression_1f4c2f.execute\n        for_7a5b3e.done -> continue_1b2c4f\n        for_7a5b3e.item -> setter_8c3f7b.new_value\n        list_9f8d6e -> getat_c1c0d2.list\n        0 -> getat_c1c0d2.index\n        getat_c1c0d2.itemAtIndex -> setter_8c3f7b.new_value\n        execute_ea7c5b -> setter_8c3f7b.execute\n        setter_8c3f7b.continue -> for_7a5b3e.reset\n        ifexpression_1f4c2f.value -> output_9e0d8e\n        setter_8c3f7b.continue -> for_7a5b3e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f6b7ec root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -200, y: 0, name: \"string\") property(String) string_8d1f9e\n\n        out(x: 500, y: -2, name: \"result\") property(String) result_7c3b6a\n\n        instance(x: 0, y: 1) replace_all_4e3c0e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_match_wordz {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -228, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replaceall_3e4c8f root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n\n        instance(x: 265, y: -20) replaceall_3e4c8f root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -20) replaceall_3e4c8f root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 795, y: -20) replaceall_3e4c8f root.Std_k98ojb.Strings.ReplaceAll {}\n        input_0 -> replaceall_3e4c8f.input\n        \" \" -> replaceall_3e4c8f.find\n        \":\" -> replaceall_3e4c8f.replace\n        replaceall_3e4c8f.output -> replaceall_3e4c8f.input\n        \",\" -> replaceall_3e4c8f.find\n        \":\" -> replaceall_3e4c8f.replace\n        \".\" -> replaceall_3e4c8f.find\n        \":\" -> replaceall_3e4c8f.replace\n        replaceall_3e4c8f.output -> result_0\n\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_e54b7f root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -122, y: 2, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) string_replace_node root.Std_k98ojb.Strings.Replace {\n            search: \" \"\n            replace: \":\"\n        }\n        instance(x: 0, y: 0) string_replace_node_2 root.Std_k98ojb.Strings.Replace {\n            search: \",\"\n            replace: \":\"\n        }\n        instance(x: 0, y: 0) string_replace_node_3 root.Std_k98ojb.Strings.Replace {\n            search: \".\"\n            replace: \":\"\n        }\n        input_ai -> string_replace_node.input\n        string_replace_node.output -> string_replace_node_2.input\n        string_replace_node_2.output -> string_replace_node_3.input\n        string_replace_node_3.output -> output_ai\n   }\n\n    \n\n    instance(x: -85, y: 46, name: \"replace_space_comma_dot\") replace_space_comma_dot_9e7f8c root.main.replace_space_comma_dot {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -227, y: 2, name: \"input\") property(String) input_1f0b3e\n\n        out(x: 505, y: -48, name: \"output\") property(String) output_7a9c8d\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace_space_comma_dot\") replace_06d2e5 root.Std_k98ojb.Strings.ReplaceAll {\n            search: \" ,.\"\n            replacement: \":\"\n        }\n        list_instance(x: 92, y: -22) data_cc1b1b = [first, middle, last]\n        instance(x: -11, y: 9) sub_4aeea6 root.Std_k98ojb.Math.Sub {}\n        k_94ca93 -> sub_4aeea6.first\n        1 -> sub_4aeea6.second\n        sub_4aeea6.result -> remove_06d2e5.index\n        list_aa3106 -> remove_06d2e5.list\n        remove_06d2e5.listWithoutItem -> newList_20b99a\n        input_1f0b3e -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            replace_06d2e5.input -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_7a9c8d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_space_comma_dot_1b6f3f root.main.replace_space_comma_dot {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -200, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 600, y: 0, name: \"output\") property(String) output_2\n\n        instance(x: 0, y: 0) replace_space root.Std_k98ojb.Strings.Replace {}\n        instance(x: 200, y: 0) replace_comma root.Std_k98ojb.Strings.Replace {}\n        instance(x: 400, y: 0) replace_dot root.Std_k98ojb.Strings.Replace {}\n        string_1 -> replace_space.input\n        \" \" -> replace_space.find\n        \":\" -> replace_space.replace\n        replace_space.output -> replace_comma.input\n        \",\" -> replace_comma.find\n        \":\" -> replace_comma.replace\n        replace_comma.output -> replace_dot.input\n        \".\" -> replace_dot.find\n        \":\" -> replace_dot.replace\n        replace_dot.output -> output_2\n   }\n   \n\n    instance(x: -120, y: 30, name: \"replace_space_comma_dot\") replace_space_comma_dot_1 root.main.replace_space_comma_dot {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 0, name: \"string\") property(String) string_2d8f1e\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_7a9c5b\n\n        instance(x: 0, y: 1) replace_all_3a4c2e root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        string_2d8f1e -> replace_all_3a4c2e.input\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        string_2d8f1e -> tolower_2e1444.input\n        \" ,.\" -> replace_all_3a4c2e.find\n        \":\" -> replace_all_3a4c2e.replace\n        replace_all_3a4c2e.output -> result_7a9c5b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"string\") property(String) string_2f3a8e\n\n        out(x: 500, y: -2, name: \"result\") property(String) result_1b9c6d\n\n        instance(x: 0, y: 0) replace_all_a5c7c4 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 0, y: 0) replace_all_8f3e2a root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 0, y: 0) replace_all_9d1b6a root.Std_k98ojb.Strings.ReplaceAll {}\n        string_2f3a8e -> replace_all_a5c7c4.input\n        \" \" -> replace_all_a5c7c4.find\n        \":\" -> replace_all_a5c7c4.replaceWith\n        replace_all_a5c7c4.output -> replace_all_8f3e2a.input\n        \",\" -> replace_all_8f3e2a.find\n        \":\" -> replace_all_8f3e2a.replaceWith\n        replace_all_8f3e2a.output -> replace_all_9d1b6a.input\n        \".\" -> replace_all_9d1b6a.find\n        \":\" -> replace_all_9d1b6a.replaceWith\n        replace_all_9d1b6a.output -> result_1b9c6d\n    }\n\n    \n\n    instance(x: -92, y: 43) replace_7e2f8f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 2, name: \"input\") property(String) input_1f0a9e\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_7c8d6b\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace\") replace_2a1f9e root.Std_k98ojb.Strings.Replace {}\n        list_instance(x: 92, y: -22) data_cc1b1b = [space, comma, dot]\n        instance(x: -11, y: 9) join_4aeea6 root.Std_k98ojb.Strings.Join {}\n        input_1f0a9e -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            instance(x: 92, y: -22) ifexpression_584bfd root.Std_k98ojb.Std.IfExpression {\n                expression: \"x == space || x == comma || x == dot\"\n            }\n            replace_2a1f9e.input -> map_f2330d.handler\n            join_4aeea6.delimiter -> replace_2a1f9e.with\n            data_cc1b1b -> join_4aeea6.items\n            ifexpression_584bfd.then -> replace_2a1f9e.execute\n            ifexpression_584bfd.else -> _7dd980\n            x_8ee839 -> ifexpression_584bfd.gen_0\n            x_8ee839 -> ifexpression_584bfd.gen_1\n            x_8ee839 -> ifexpression_584bfd.gen_2\n            \":\" -> replace_2a1f9e.with\n            map_f2330d.output_list -> output_7c8d6b\n        } -> map_f2330d.handler\n        data_cc1b1b.first -> space\n        data_cc1b1b.second -> comma\n        data_cc1b1b.third -> dot\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_3f9c7e root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -200, y: 0, name: \"string\") property(String) string_8f2a1d\n\n        out(x: 500, y: -2, name: \"result\") property(String) result_7e3b5c\n\n        instance(x: 0, y: 1) replace_all_9f6f4f root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_match_wordz {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replaceall_c8e7d5 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n\n        instance(x: 265, y: -20) replaceall_c8e7d5 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 530, y: -40) replaceall_c8e7d5 root.Std_k98ojb.Strings.ReplaceAll {}\n        instance(x: 795, y: -60) replaceall_c8e7d5 root.Std_k98ojb.Strings.ReplaceAll {}\n        input_0 -> replaceall_c8e7d5.input\n        \" \" -> replaceall_c8e7d5.find\n        \":\" -> replaceall_c8e7d5.replace\n        replaceall_c8e7d5.output -> replaceall_c8e7d5.input\n        \",\" -> replaceall_c8e7d5.find\n        \".\" -> replaceall_c8e7d5.find\n        replaceall_c8e7d5.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_e54b7f root.main.replace_space_comma_dot {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_c9a3d8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -1, y: 0) length_7e6c5f root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) getat_4e7b8c root.Std_k98ojb.List.GetAt {}\n        instance(x: 265, y: -1) equal_2d3a3f root.Std_k98ojb.Logic.Equal {}\n        characters_c9a3d8.characters -> length_7e6c5f.list\n        input_0 -> characters_c9a3d8.input\n        length_7e6c5f.length -> getat_4e7b8c.index\n        1 -> getat_4e7b8c.index\n        characters_c9a3d8.characters -> getat_4e7b8c.list\n        input_0 -> equal_2d3a3f.left\n        getat_4e7b8c.itemAtIndex -> equal_2d3a3f.right\n        equal_2d3a3f.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) check_same_5b9f1f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3a9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -10, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_3a9c8f.characters -> contains_d42dce.list\n        \"1\" -> contains_d42dce.item\n        characters_3a9c8f.characters -> length_6e87f2.list\n        1 -> equal_f89569.right\n        length_6e87f2.length -> equal_f89569.left\n        instance(x: 463, y: -1) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        contains_d42dce.result -> result_1\n        string_1 -> characters_3a9c8f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_7e4c0e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 530, y: -1) length_6f5c9a root.Std_k98ojb.List.Length {}\n        characters_2e1444.output -> contains_d42dce.list\n        characters_2e1444.output -> length_6f5c9a.list\n        \"0\" -> contains_d42dce.contains\n        input_0 -> characters_2e1444.input\n        1 -> length_6f5c9a.length\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: -3, y: 54) check_same_f21f44 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 555, y: 2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 0) characters_7b9f5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_7b9f5c.characters -> contains_d42dce.list\n        string_0 -> characters_7b9f5c.input\n        \"a\" -> contains_d42dce.item\n        1 -> length_6e87f2.list\n        length_6e87f2.length -> contains_d42dce.index\n        contains_d42dce.is_contained -> result_0\n    }\n\n    \n\n    instance(x: -3, y: 11) check_same_7a4dad root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -10, y: 80) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -0, y: -121) setter_38e107 root.Std_k98ojb.Setting.Setter {}\n        ifexpression_875761.else -> output_0\n        ifexpression_875761.value -> output_0\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_7b3b7b.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_0\n        for_d26972.item -> setter_9d4f1c.new_value\n        characters_7b3b7b.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        input_0 -> characters_7b3b7b.input\n        length_6e87f2.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        characters_7b3b7b.characters -> length_6e87f2.list\n        equal_f89569.result -> output_0\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 529, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7e8f5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        characters_7e8f5c.characters -> contains_d42dce.list\n        characters_7e8f5c.characters -> firstitem_870503.list\n        input_0 -> characters_7e8f5c.input\n        firstitem_870503.item -> contains_d42dce.contains\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_5e9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -3, y: -2) length_7a6c4f root.Std_k98ojb.List.Length {}\n        characters_5e9c8f.characters -> contains_d42dce.list\n        \"0\" -> contains_d42dce.item\n        characters_5e9c8f.characters -> length_7a6c4f.list\n        1 -> length_7a6c4f.length -> contains_d42dce.is_contained -> result_0\n        input_0 -> characters_5e9c8f.input\n    }\n\n    \n\n    instance(x: -11, y: 52) is_same_2b3d1f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3a7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        characters_3a7f9c.characters -> contains_d42dce.list\n        characters_3a7f9c.characters -> firstitem_870503.list\n        input_0 -> characters_3a7f9c.input\n        firstitem_870503.item -> contains_d42dce.contains\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_2b1e4c root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_c7f8a9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -3, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 488, y: 0) substract_9a7c4c root.Std_k98ojb.Math.Sub {}\n        instance(x: 701, y: -1) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        characters_c7f8a9.characters -> length_6e87f2.list\n        input_0 -> characters_c7f8a9.input\n        length_6e87f2.length -> substract_9a7c4c.first\n        1 -> substract_9a7c4c.second\n        substract_9a7c4c.result -> contains_d42dce.list\n        characters_c7f8a9.characters -> contains_d42dce.list\n        characters_c7f8a9.characters -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) check_same_59bc6e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 531, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_4c7f6a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        characters_4c7f6a.characters -> contains_d42dce.list\n        string_1 -> characters_4c7f6a.input\n        \"0\" -> contains_d42dce.contains\n        characters_4c7f6a.characters -> firstitem_870503.list\n        firstitem_870503.item -> contains_d42dce.contains\n        contains_d42dce.result -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_2e5b0 root.main.check_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 76) length_8a4f9e root.Std_k98ojb.List.Length {}\n        instance(x: 1350, y: 76) filter_9b5d1c root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_8a4f9e.list\n        characters_7b3b7b.characters -> filter_9b5d1c.list\n        filter_9b5d1c.result -> length_8a4f9e.list\n        length_8a4f9e.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1030, y: -5) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1032, y: 76) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 1289, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        characters_7b3b7b.characters -> filter_7b3b7b.list\n        length_6e87f2.length -> output_ai\n        filter_7b3b7b.result -> length_6e87f2.list\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1090, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 1378, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        characters_7b3b7b.characters -> length_6e87f2.list\n        input_ai -> characters_7b3b7b.input\n        length_6e87f2.length -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1090, y: -6) length_5a9c8e root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_5a9c8e.list\n        length_5a9c8e.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1050, y: 76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -5) pow_7e9f1c root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_7e9f1c.x\n        pow_7e9f1c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_5f7b9c root.Std_k98ojb.Math.Expression {\n            expression: \"x^y\"\n        }\n        div_64046c.result -> pow_5f7b9c.x\n        4 -> pow_5f7b9c.y\n        pow_5f7b9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_7c8f9e root.Std_k98ojb.Math.Expression {\n            expression: \"x^y\"\n        }\n        div_64046c.result -> pow_7c8f9e.x\n        4 -> pow_7c8f9e.y\n        pow_7c8f9e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_5c8f9e root.Std_k98ojb.Math.Expression {\n            expression: \"x^y\"\n        }\n        div_64046c.result -> pow_5c8f9e.x\n        4 -> pow_5c8f9e.y\n        pow_5c8f9e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5f8e7c root.Std_k98ojb.Math.Expression {\n            expression: \"x*x\"\n        }\n        div_64046c.result -> pow_5f8e7c.x\n        pow_5f8e7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_5e9f8c root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_5e9f8c.x\n        pow_5e9f8c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_7b8c9f root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        div_64046c.result -> pow_7b8c9f.x\n        pow_7b8c9f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_5e7f9c root.Std_k98ojb.Math.Expression {\n            expression: \"x**4\"\n        }\n        div_64046c.result -> pow_5e7f9c.x\n        pow_5e7f9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5b8f7e root.Std_k98ojb.Math.Expression {\n            expression: \"x*x\"\n        }\n        div_64046c.result -> pow_5b8f7e.x\n        pow_5b8f7e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_7f9c5e root.Std_k98ojb.Math.Expression {\n            expression: \"x^y\"\n        }\n        div_64046c.result -> pow_7f9c5e.x\n        4 -> pow_7f9c5e.y\n        pow_7f9c5e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 10, name: \"size\") property(Number) size_8a0f9e\n\n        out(x: 1066, y: 12, name: \"surface_area\") property(Number) surface_area_a1c3d7\n\n        instance(x: 23, y: -5) mul_f2b8da root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 331, y: 95) data_4a0e6f  = 6\n        instance(x: 12, y: 99) expression_1d9c7c root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        instance(x: 303, y: -2) mul_5f3a0e root.Std_k98ojb.Math.Mul {}\n        data_4a0e6f -> mul_f2b8da.second\n        mul_f2b8da.result -> mul_5f3a0e.first\n        expression_1d9c7c.result -> mul_f2b8da.first\n        size_8a0f9e -> expression_1d9c7c.gen_0\n        mul_5f3a0e.result -> surface_area_a1c3d7\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_e6b2a4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 20, name: \"execute\") trigger() execute_3a9f8e\n        in(x: -296, y: -110, name: \"side\") property(Number) side_a1\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9e1f5c root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f8d3a6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f8d3a6.second\n        mul_f8d3a6.result -> add_88bb8a.first\n        10 -> mul_f8d3a6.second\n        mul_f8d3a6.result -> surface_area_cube_9e1f5c.side_a1\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_3a9f8e -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_9e1f5c.execute_3a9f8e\n        surface_area_cube_9e1f5c.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_9e1f5c.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        side_a1 -> floor_61b38d.input\n        floor_61b38d.output -> mul_f8d3a6.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9e1f5c root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"n*n\"\n        }\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 56, name: \"side\") property(Number) side_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        expression_instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_3a3116 -> mul_f892a4.first\n        side_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -333, y: 10, name: \"execute\") trigger() execute_1a0d8f\n        in(x: -330, y: -110, name: \"side\") property(Number) side_9b2c6e\n\n        out(x: 1054, y: 11, name: \"continue\") trigger() continue_5a3f9f\n        out(x: 1087, y: -111, name: \"output\") property(Number) output_e8d0be\n\n        instance(x: 18, y: 10) mul_1b4c6e root.Std_k98ojb.Math.Mul {}\n        instance(x: 19, y: -90) mul_5f3a2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 17, y: -180) mul_c8d0ae root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: -270) add_9e7c4c root.Std_k98ojb.Math.Add {}\n        instance(x: 19, y: -360) add_5f1a3c root.Std_k98ojb.Math.Add {}\n        side_9b2c6e -> mul_1b4c6e.first\n        side_9b2c6e -> mul_1b4c6e.second\n        mul_1b4c6e.result -> mul_5f3a2c.first\n        mul_1b4c6e.result -> mul_5f3a2c.second\n        mul_5f3a2c.result -> mul_c8d0ae.first\n        mul_5f3a2c.result -> mul_c8d0ae.second\n        mul_c8d0ae.result -> add_9e7c4c.first\n        mul_1b4c6e.result -> add_9e7c4c.second\n        add_9e7c4c.result -> add_5f1a3c.first\n        add_9e7c4c.result -> add_5f1a3c.second\n        add_5f1a3c.result -> output_e8d0be\n        execute_1a0d8f -> continue_5a3f9f\n    }\n\n    \n\n    instance(x: 18, y: -390) surface_area_cube_7e4b6c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_9e3f1a\n\n        out(x: 156, y: 0, name: \"surface_area\") property(Number) surface_area_a7b8d4\n\n        instance(x: 14, y: 44) mul_5c2b7f root.Std_k98ojb.Math.Mul {}\n        instance(x: -6, y: -1) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        instance(x: 91, y: -4) mul_3e8a5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 142, y: -2) add_bf9d7f root.Std_k98ojb.Math.Add {}\n        size_9e3f1a -> math_expr_node.gen_0\n        math_expr_node.result -> mul_5c2b7f.first\n        6 -> mul_5c2b7f.second\n        mul_5c2b7f.result -> add_bf9d7f.first\n        size_9e3f1a -> mul_3e8a5c.first\n        math_expr_node.result -> mul_3e8a5c.second\n        mul_3e8a5c.result -> add_bf9d7f.second\n        add_bf9d7f.result -> surface_area_a7b8d4\n    }\n\n    \n\n    instance(x: 48, y: -32) surface_area_cube_1e6f0c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 15, name: \"size\") property(Number) size_1f0d9e\n\n        out(x: 656, y: 120, name: \"surface_area\") property(Number) surface_area_5a8c6b\n\n        instance(x: 94, y: -105) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_1f0d9e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_5a8c6b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_3e7f4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_9e6f8a\n\n        out(x: 39, y: 0, name: \"surface_area\") property(Number) surface_area_a7c1d4\n\n        instance(x: 15, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side * side\"\n        }\n        side_9e6f8a -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_a7c1d4\n    }\n\n    \n\n    instance(x: 264, y: -464, name: \"surface_Area\") surface_area_cube_3b5f7f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 15, name: \"size\") property(Number) size_8f0d5e\n\n        out(x: 1069, y: 7, name: \"surface_area\") property(Number) surface_area_3c2a1b\n\n        instance(x: 16, y: -11) mul_4f6f0c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_4f6f0c.result -> div_64046c.first\n        expression_2d6da6.result -> mul_4f6f0c.second\n        size_8f0d5e -> mul_4f6f0c.first\n        size_8f0d5e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_3c2a1b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_a7c9a4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"size\") property(Number) size_1f3d8e\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_a7b9c6\n\n        instance(x: -200, y: 50) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_1f3d8e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_a7b9c6\n    }\n\n    \n\n    instance(x: -300, y: 0) surface_area_cube_5a2c4 root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: 145, name: \"list\") property(List) list_9a3b5f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7e8d1c\n\n        instance(x: 201, y: 126) sub_6b2a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 359, name: \"Max list\") max_9f5a3f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -317, y: 520, name: \"Min list\") min_1e7c8d root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        list_9a3b5f -> max_9f5a3f.list\n        max_9f5a3f.max -> firstitem_870503.list\n        list_9a3b5f -> min_1e7c8d.list\n        min_1e7c8d.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_6b2a0c.first\n        firstitem_3078c6.item -> sub_6b2a0c.second\n        sub_6b2a0c.result -> output_7e8d1c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: 166, name: \"list\") property(List) list_1f0b9e\n\n        out(x: 600, y: 145, name: \"output\") property(Number) output_e5a7c3\n\n        instance(x: 432, y: 147) sub_2a4d8f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_1e9d0c root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_3a7f2c root.Std_k98ojb.List.Min {}\n        list_1f0b9e -> max_1e9d0c\n        list_1f0b9e -> min_3a7f2c\n        max_1e9d0c.max -> sub_2a4d8f.first\n        min_3a7f2c.min -> sub_2a4d8f.second\n        sub_2a4d8f.result -> output_e5a7c3\n    }\n\n    \n\n    instance(x: -292, y: 177) diff_max_min_9b6e9f root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 155, name: \"list\") property(List) list_9e1f8a\n\n        out(x: 542, y: 138, name: \"output\") property(Number) output_7b4d6c\n\n        instance(x: 0, y: 0) sub_3e2c4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 156) max_1a8f9c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -20) min_7d5f0c root.Std_k98ojb.List.Min {}\n        list_9e1f8a -> max_1a8f9c.list\n        list_9e1f8a -> min_7d5f0c.list\n        max_1a8f9c.max -> sub_3e2c4e.first\n        min_7d5f0c.min -> sub_3e2c4e.second\n        sub_3e2c4e.result -> output_7b4d6c\n    }\n\n    \n\n    instance(x: 50, y: -1) diff_max_min_ea8b1e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 158, name: \"list\") property(List) list_9a1f3e\n\n        out(x: 545, y: 147, name: \"output\") property(Number) output_eb2c8d\n\n        instance(x: 201, y: 146) sub_6f7a4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 157) max_9e3b0f root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -66) min_1d8c2c root.Std_k98ojb.List.Min {}\n        list_9a1f3e -> max_9e3b0f.list\n        list_9a1f3e -> min_1d8c2c.list\n        max_9e3b0f.max -> sub_6f7a4e.first\n        min_1d8c2c.min -> sub_6f7a4e.second\n        sub_6f7a4e.result -> output_eb2c8d\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_max_min_5f9f0f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 158, name: \"list\") property(List) list_1a3b5f\n\n        out(x: 550, y: 145, name: \"output\") property(Number) output_7c2e8d\n\n        instance(x: 0, y: 0) sub_9a6f8f root.Std_k98ojb.Math.Sub {}\n        instance(x: -103, y: 26, name: \"Max value\") max_f3b5f4 root.Std_k98ojb.List.Max {}\n        instance(x: -102, y: 256, name: \"Min value\") min_1a7d8c root.Std_k98ojb.List.Min {}\n        list_1a3b5f -> max_f3b5f4.list\n        list_1a3b5f -> min_1a7d8c.list\n        max_f3b5f4.max -> sub_9a6f8f.first\n        min_1a7d8c.min -> sub_9a6f8f.second\n        sub_9a6f8f.result -> output_7c2e8d\n    }\n\n    \n\n    instance(x: -56, y: 177) diff_max_min_3b5e0f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 158, name: \"list\") property(List) list_0d3b5f\n\n        out(x: 544, y: 145, name: \"output\") property(Number) output_e9c1a8\n\n        instance(x: 512, y: 147) sub_7e6f2f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_3d4c1f root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_f8e7a9 root.Std_k98ojb.List.Min {}\n        list_0d3b5f -> max_3d4c1f\n        list_0d3b5f -> min_f8e7a9\n        max_3d4c1f.max -> sub_7e6f2f.first\n        min_f8e7a9.min -> sub_7e6f2f.second\n        sub_7e6f2f.result -> output_e9c1a8\n    }\n\n    \n\n    instance(x: -55, y: 177) diff_max_min_3b4d0e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 154, name: \"list\") property(List) list_1f0a8d\n\n        out(x: 600, y: 148, name: \"output\") property(Number) output_5b9c6e\n\n        instance(x: 312, y: 145) sub_7e4f3e root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 155) max_1a8d0f root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -14) min_2c9a5c root.Std_k98ojb.List.Min {}\n        list_1f0a8d -> max_1a8d0f.list\n        list_1f0a8d -> min_2c9a5c.list\n        max_1a8d0f.max -> sub_7e4f3e.first\n        min_2c9a5c.min -> sub_7e4f3e.second\n        sub_7e4f3e.result -> output_5b9c6e\n    }\n\n    \n\n    instance(x: -57, y: 177) diff_max_min_8d0b8e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 155, name: \"list\") property(List) list_9a1f8e\n\n        out(x: 544, y: 145, name: \"output\") property(Number) output_7b4d6c\n\n        instance(x: 0, y: 0) sub_3e2b5e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 52) max_9a1f8e root.Std_k98ojb.List.Max {}\n        instance(x: -317, y: -115) min_9a1f8e root.Std_k98ojb.List.Min {}\n        list_9a1f8e -> max_9a1f8e.list\n        list_9a1f8e -> min_9a1f8e.list\n        max_9a1f8e.max -> sub_3e2b5e.first\n        min_9a1f8e.min -> sub_3e2b5e.second\n        sub_3e2b5e.result -> output_7b4d6c\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_2c856f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 158, name: \"list\") property(List) list_9e1b3f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c0d6a\n\n        instance(x: 188, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.list -> firstitem_870503.list\n        min_4d4556.list -> firstitem_3078c6.list\n        list_9e1b3f -> max_f3b46d.list\n        list_9e1b3f -> min_4d4556.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_5c0d6a\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: 0, name: \"list\") property(List) list_1e3f8d\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        list_1e3f8d -> max_f3b46d.list\n        max_f3b46d.max -> firstitem_870503.item\n        list_1e3f8d -> min_4d4556.list\n        min_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 16, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1269, y: 127, name: \"output\") property(Bool) output_1a0b5e\n\n        instance(x: -104, y: 128) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_5e8f1d -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_685c8f\n        false -> getter_9cceb3.value\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        getter_9cceb3.value -> output_1a0b5e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f7d4e6 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 17, name: \"input\") property(Number) input_9f6a8e\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_e1b2c7\n\n        out(x: 1225, y: 10, name: \"continue\") trigger() continue_4d3a1f\n        out(x: 1216, y: 142, name: \"output\") property(Bool) output_8e9a0c\n\n        instance(x: -88, y: 141) ifexpression_5b2a1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 335, y: 158, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 680, y: -319, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 322, y: -24) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -125, name: \"setter_9d4f1c\") setter_38e107 = output\n        input_9f6a8e -> ifexpression_5b2a1c.gen_0\n        getter_b280eb.value -> ifexpression_5b2a1c.value\n        ifexpression_5b2a1c.else -> continue_4d3a1f\n        ifexpression_5b2a1c.then -> setter_9d4f1c.execute\n        for_d26972.item -> ifexpression_5b2a1c.execute\n        for_d26972.onItem -> ifexpression_5b2a1c.execute\n        for_d26972.done -> continue_4d3a1f\n        for_d26972.item -> setter_9d4f1c.new_value\n        true -> setter_9d4f1c.new_value\n        execute_e1b2c7 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f0a8b5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"input\") property(Number) input_5f9a8e\n        in(x: -465, y: -236, name: \"execute\") trigger() execute_1b2d3c\n\n        out(x: 1227, y: 6, name: \"continue\") trigger() continue_4a9c1e\n        out(x: 1218, y: 148, name: \"output\") property(Bool) output_5f0a6f\n\n        instance(x: 752, y: 94) ifexpression_7b3d2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 161, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -314, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -21) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -122, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_7b3d2f.else -> continue_4a9c1e\n        ifexpression_7b3d2f.value -> output_5f0a6f\n        ifexpression_7b3d2f.then -> setter_9d4f1c.execute\n        input_5f9a8e -> ifexpression_7b3d2f.gen_0\n        for_d26972.item -> ifexpression_7b3d2f.gen_2\n        for_d26972.index -> ifexpression_7b3d2f.gen_1\n        getter_b280eb.value -> output_5f0a6f\n        for_d26972.onItem -> ifexpression_7b3d2f.execute\n        for_d26972.done -> continue_4a9c1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        execute_1b2d3c -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -178) is_even_f0b8a2 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 5, name: \"input\") property(Number) input_3f8a0e\n        in(x: -456, y: -111, name: \"execute\") trigger() execute_eb1c9d\n\n        out(x: 1217, y: 4, name: \"output\") property(Bool) output_f5f6ea\n        out(x: 1263, y: -110, name: \"continue\") trigger() continue_2e8a7f\n\n        instance(x: 1089, y: -107) ifexpression_0b1d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_eb1c9d -> ifexpression_0b1d4c.execute\n        input_3f8a0e -> ifexpression_0b1d4c.gen_0\n        ifexpression_0b1d4c.value -> output_f5f6ea\n        ifexpression_0b1d4c.then -> continue_2e8a7f\n        ifexpression_0b1d4c.else -> continue_2e8a7f\n    }\n\n    \n\n    instance(x: -63, y: 20) is_even_9e3f6f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 11, name: \"input\") property(Number) input_1f8e0d\n        in(x: -454, y: -111, name: \"execute\") trigger() execute_9b3c6a\n\n        out(x: 1217, y: 5, name: \"continue\") trigger() continue_2b9f1f\n        out(x: 1208, y: 143, name: \"output\") property(Bool) output_0d4e2e\n\n        instance(x: -93, y: 142) ifexpression_e6a7c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_1d4e3f\") getter_1d4e3f = output\n        setter(x: 679, y: -313, name: \"setter_ea7b8c\") setter_ea7b8c = output\n        instance(x: 321, y: -20) for_9a5f2f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_ea7b8c\") setter_d1d4e3 = output\n        input_1f8e0d -> ifexpression_e6a7c5.gen_0\n        ifexpression_e6a7c5.else -> continue_2b9f1f\n        ifexpression_e6a7c5.value -> output_0d4e2e\n        ifexpression_e6a7c5.then -> setter_ea7b8c.execute\n        getter_1d4e3f.value -> ifexpression_e6a7c5.gen_1\n        for_9a5f2f.onItem -> ifexpression_e6a7c5.execute\n        for_9a5f2f.done -> continue_2b9f1f\n        execute_9b3c6a -> setter_d1d4e3.execute\n        setter_d1d4e3.continue -> for_9a5f2f.reset\n        setter_ea7b8c.continue -> for_9a5f2f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_6a9b9f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 165, name: \"input\") property(Number) input_9f8a0e\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_e5c1b3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_f6d4ab\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9e2f9a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_875761.else -> continue_f6d4ab\n        ifexpression_875761.value -> output_9e2f9a\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_9f8a0e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_f6d4ab\n        setter_9d4f1c.new_value -> output\n        execute_e5c1b3 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f0a8da root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 10, name: \"input\") property(Number) input_1a9d8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_2c3b5e\n\n        out(x: 46, y: 157, name: \"output\") property(Bool) output_7e4b0f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a9d8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1a9d8f -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_7e4b0f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        execute_2c3b5e -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1a9d8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f6f0f4 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 166, name: \"input\") property(Number) input_0a9f8e\n        in(x: -485, y: 30, name: \"execute\") trigger() execute_eb7c6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_f3a1da\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9e2f0f\n\n        instance(x: -275, y: -35) modulo_e6b7d4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = result\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = result\n        input_0a9f8e -> modulo_e6b7d4.value\n        2 -> modulo_e6b7d4.divisor\n        ifexpression_875761.else -> continue_f3a1da\n        ifexpression_875761.value -> output_9e2f0f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        modulo_e6b7d4.result -> setter_9d4f1c.new_value\n        execute_eb7c6d -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> continue_f3a1da\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_c5e2ed root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 11, name: \"input\") property(Number) input_5f8e0d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1b2a3c\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_7a9c4f\n        out(x: 1218, y: 5, name: \"output\") property(Bool) output_e6e0d4\n\n        instance(x: -104, y: -110) ifexpression_c3b2bc root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -143, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_5f8e0d -> ifexpression_c3b2bc.gen_0\n        getter_9cceb3.value -> output_e6e0d4\n        ifexpression_c3b2bc.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_37db7f.new_value\n        ifexpression_c3b2bc.else -> setter_37db7f.execute\n        execute_1b2a3c -> ifexpression_c3b2bc.execute\n        setter_1cedb2.continue -> continue_7a9c4f\n        setter_37db7f.continue -> continue_7a9c4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f6e8d5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_1a3e8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_e9b7d2\n\n        out(x: 1186, y: -5, name: \"output\") property(Bool) output_4c0f8f\n        out(x: 1261, y: -114, name: \"continue\") trigger() continue_3a1e8e\n\n        instance(x: 1032, y: -6) ifexpression_7d9b5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a3e8f -> ifexpression_7d9b5c.gen_0\n        2 -> ifexpression_7d9b5c.gen_1\n        execute_e9b7d2 -> ifexpression_7d9b5c.execute\n        ifexpression_7d9b5c.value -> output_4c0f8f\n        ifexpression_7d9b5c.then -> continue_3a1e8e\n        ifexpression_7d9b5c.else -> continue_3a1e8e\n    }\n\n    \n\n    instance(x: -175, y: 11) is_even_f6e2f4 root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a3d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) contains_4a2b2c root.Std_k98ojb.List.Contains {}\n        characters_5b9f8c.characters -> find_7a3d6e.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 89, y: 29) slice_3b8c7d root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_5a2e9f root.Std_k98ojb.Logic.NotEqual {}\n            characters_5b9f8c.characters -> slice_3b8c7d.list\n            find_7a3d6e.index -> slice_3b8c7d.start\n            -1 -> slice_3b8c7d.end\n            slice_3b8c7d.slice -> contains_4a2b2c.list\n            current_0 -> contains_4a2b2c.item\n            contains_4a2b2c.result -> notequal_5a2e9f.left\n            false -> notequal_5a2e9f.right\n            notequal_5a2e9f.result -> bool_1\n        } -> find_7a3d6e.predicate\n        find_7a3d6e.item -> output_0\n        input_0 -> characters_5b9f8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_1e4a2f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a3d4c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) contains_2e6f0c root.Std_k98ojb.List.Contains {}\n        characters_5e9c8f.characters -> find_7a3d4c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_2c8f3a root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            characters_5e9c8f.characters -> slice_2c8f3a.list\n            current_afd5b1 -> slice_2c8f3a.start\n            -1 -> slice_2c8f3a.end\n            slice_2c8f3a.slice -> contains_2e6f0c.list\n            current_afd5b1 -> contains_2e6f0c.item\n            contains_2e6f0c.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7a3d4c.predicate\n        find_7a3d4c.item -> output_0\n        input_0 -> characters_5e9c8f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d42ce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"contains\") contains_d42dce root.Std_k98ojb.List.Contains {}\n        characters_2e1444.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_a54bdc root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> slice_45e806.list\n            0 -> slice_45e806.start\n            find_6d05b0.index -> slice_45e806.end\n            slice_45e806.slice -> contains_a54bdc.list\n            current_afd5b1 -> contains_a54bdc.item\n            contains_a54bdc.result -> bool_1eb6e9\n        } -> find_7d42ce.predicate\n        input_0 -> characters_2e1444.input\n        find_7d42ce.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b8c4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9a7d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -105) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 515, y: 44) contains_d42dce root.Std_k98ojb.List.Contains {}\n        characters_5b8c4e.characters -> find_3f9a7d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_d42dce_0 root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> slice_3f3ee6.list\n            find_3f9a7d.index -> slice_3f3ee6.start\n            -1 -> slice_3f3ee6.end\n            slice_3f3ee6.slice -> contains_d42dce_0.list\n            current_afd5b1 -> contains_d42dce_0.item\n            contains_d42dce_0.result -> bool_1eb6e9\n        } -> find_3f9a7d.predicate\n        find_3f9a7d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e4c7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6a9d8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -3) contains_2f1f9f root.Std_k98ojb.List.Contains {}\n        characters_5e4c7f.characters -> find_6a9d8f.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 89, y: 29) slice_3e8b5f root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) contains_2c9a4d root.Std_k98ojb.List.Contains {}\n            characters_5e4c7f.characters -> slice_3e8b5f.list\n            find_6a9d8f.index -> slice_3e8b5f.start\n            -1 -> slice_3e8b5f.end\n            slice_3e8b5f.slice -> contains_2c9a4d.list\n            current_0 -> contains_2c9a4d.item\n            contains_2c9a4d.result -> bool_1\n        } -> find_6a9d8f.predicate\n        find_6a9d8f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_5e4c7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 515, y: 44) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.List.Contains {}\n        instance(x: 89, y: 29) slice_9f6850 root.Std_k98ojb.List.Slice {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            slice_9f6850.slice -> contains_807ffd.list\n            characters_6d05b0.characters -> slice_9f6850.list\n            elem_9f6850 -> slice_9f6850.end\n            1 -> slice_9f6850.start\n            contains_807ffd.item -> bool_af09a7\n            elem_9f6850 -> contains_807ffd.contains\n        } -> find_1088d5.predicate\n        find_1088d5.item -> output_0\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) for_1088d5 root.Std_k98ojb.Std.For {}\n        instance(x: 551, y: -105) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> for_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_807ffd root.Std_k98ojb.List.Slice {}\n            slice_807ffd.list -> contains_d42dce.list\n            for_1088d5.item -> slice_807ffd.start\n            -1 -> slice_807ffd.end\n            slice_807ffd.slice -> contains_d42dce.list\n            current_9f6850 -> contains_d42dce.item\n            contains_d42dce.result -> bool_af09a7\n        } -> for_1088d5.predicate\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_807ffd root.Std_k98ojb.List.Slice {}\n            slice_807ffd.list -> contains_d42dce.list\n            for_1088d5.item -> slice_807ffd.start\n            -1 -> slice_807ffd.end\n            slice_807ffd.slice -> contains_d42dce.list\n            current_9f6850 -> contains_d42dce.item\n            contains_d42dce.result -> bool_af09a7\n        } -> if_7c284f.predicate\n        for_1088d5.onItem -> if_7c284f.execute\n        if_7c284f.else -> for_1088d5.next\n        if_7c284f.then -> output_0.execute\n        for_1088d5.item -> output_0.value\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_d42dce root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_d42dce.input\n        characters_d42dce.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            instance(x: 415, y: 86) ``contains_a54bdc`` root.Std_k98ojb.Iteration.Find {}\n            current_afd5b1 -> contains_45e806.item\n            find_7e1ce0.result -> contains_45e806.list\n            contains_45e806.contains -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        characters_d42dce.characters -> ``characters_0b1361``.items\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b7f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4a3d9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -41) contains_6c2b7e root.Std_k98ojb.List.Contains {}\n        characters_5b7f8c.characters -> find_4a3d9e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_2f8c0a root.Std_k98ojb.List.Slice {}\n            contains_6c2b7e.list -> slice_2f8c0a.list\n            find_4a3d9e.index -> slice_2f8c0a.start\n            -1 -> slice_2f8c0a.end\n            current_afd5b1 -> contains_6c2b7e.item\n            slice_2f8c0a.slice -> contains_6c2b7e.list\n            contains_6c2b7e.result -> bool_1eb6e9\n        } -> find_4a3d9e.predicate\n        input_0 -> characters_5b7f8c.input\n        find_4a3d9e.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_6e6bfd root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3c713b root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"is repeated\") filter_d42dce root.Std_k98ojb.Query.Filter {\n            where: \"it == it[1:]\"\n        }\n        characters_2e1444.output -> find_3c713b.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.item\n            find_3c713b.items -> contains_45e806.list\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_3c713b.predicate\n        characters_2e1444.output -> filter_d42dce.list\n        find_3c713b.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_4e8f9a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_3c7d5b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_min_node.min -> a\n        getter_9cceb3.value -> b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_4e8f9a -> data_9a9c70.a\n        list_min_node.items -> data_9a9c70.b\n        a -> min_c3e343.items\n        b -> min_c3e343.items\n        min_c3e343.min -> second_min_3c7d5b\n    }\n\n    \n\n    instance(x: 426, y: -303) list_min_node root.main.second_smallest {}\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 2, name: \"list\") property(List) list_1a9f8e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_a3c7d4\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -305, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: -205, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        data_instance(x: 0, y: 0) data_1a9f8e  = [min, max]\n        list_1a9f8e -> list_min_node.items\n        list_1a9f8e -> list_max_node.items\n        list_min_node.min -> data_1a9f8e.min\n        list_max_node.max -> data_1a9f8e.max\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Query.Filter {\n            where: \"it != max\"\n        }\n        data_1a9f8e.min -> ifexpression_e38995.gen_0\n        data_1a9f8e.max -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> second_min_a3c7d4\n        list_1a9f8e -> list_filter_node.list\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        data_1a9f8e.min -> setter_1cedb2.new_value\n        list_filter_node.result -> list_min_node.items\n        ifexpression_e38995.else -> setter_37db7f.execute\n        data_1a9f8e.max -> setter_37db7f.new_value\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_3c6d4b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 159, y: 81, name: \"second_min\") property(Number) second_min_7c3d4b\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node2 root.Std_k98ojb.List.Min {}\n        data_instance(x: -144, y: -110) data_9a9c70  = [min1, min2]\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min1 < min2\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        list_8e9f1a -> list_min_node.items\n        list_min_node.min -> data_9a9c70.min1\n        list_8e9f1a -> list_min_node2.items\n        ifexpression_e38995.gen_0 -> list_min_node2.items\n        ifexpression_e38995.gen_1 -> list_min_node.items\n        getter_9cceb3.value -> second_min_7c3d4b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        data_9a9c70.min2 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        data_9a9c70.min1 -> setter_37db7f.new_value\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -427, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -433) list_remove_1_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -563) list_min_2_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_1_node.item\n        items_ai -> list_remove_1_node.list\n        list_remove_1_node.result -> list_min_2_node.items\n        list_min_2_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 2, name: \"list\") property(List) list_9e6a1f\n\n        out(x: 162, y: 3, name: \"second_smallest\") property(Number) second_smallest_7b4c0d\n\n        instance(x: -10, y: -5, name: \"First smallest number\") find_8a3b2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 226, y: 9) sub_1f3a8c root.Std_k98ojb.Math.Sub {}\n        instance(x: 225, y: -111, name: \"Second smallest number\") find_7d4f0e root.Std_k98ojb.Iteration.Find {}\n        list_9e6a1f -> find_8a3b2e.items\n        func() {\n            in(x: -121, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_8a3b2e.item -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_8a3b2e.predicate\n        list_9e6a1f -> find_7d4f0e.items\n        func() {\n            in(x: -121, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_8a3b2e.item -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_7d4f0e.predicate\n        sub_1f3a8c.first -> second_smallest_7b4c0d\n        find_8a3b2e.item -> sub_1f3a8c.second\n        find_7d4f0e.item -> sub_1f3a8c.first\n    }\n\n    \n\n    instance(x: 224, y: -12) second_smallest_b9c5ea root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -432) list_remove_1 root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_1.item\n        items_ai -> list_remove_1.list\n        list_remove_1.result -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -453) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.result -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 593, y: 1, name: \"number\") property(Number) number_2b7c5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_9e3f8a -> min_c3e343.items\n        min_c3e343.min -> find_6d05b0.predicate.first\n        list_9e3f8a -> find_6d05b0.items\n        find_6d05b0.item -> number_2b7c5d\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_1a7f4f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 2, name: \"list\") property(List) list_8e3a4f\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_7b9d6c\n\n        instance(x: -105, y: -110) find_1f2f0e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_8a3f9d\n\n            out(x: 515, y: 44, name: \"\") property(Bool) _1c2e6c5\n\n            instance(x: 89, y: 29) min_4b0b2c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_8a9f7d root.Std_k98ojb.Logic.NotEqual {}\n            list_8e3a4f -> min_4b0b2c.items\n            elem_8a3f9d -> ``list_8e3a4f``.gen_1\n            min_4b0b2c.min -> ``list_8e3a4f``.gen_0\n            instance(x: 89, y: 29) ifexpression_5c7f1c root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem < list_8e3a4f\"\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = elem\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = ``list_8e3a4f``\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = ``list_8e3a4f``\n            elem_8a3f9d -> ifexpression_5c7f1c.gen_0\n            ``list_8e3a4f``.gen_1 -> ifexpression_5c7f1c.gen_1\n            getter_9cceb3.value -> setter_1cedb2.new_value\n            ifexpression_5c7f1c.then -> setter_1cedb2.execute\n            ``list_8e3a4f``.gen_0 -> setter_37db7f.new_value\n            ifexpression_5c7f1c.else -> setter_37db7f.execute\n            notequal_8a9f7d.result -> _1c2e6c5\n            ``list_8e3a4f``.gen_0 -> notequal_8a9f7d.left\n            elem_8a3f9d -> notequal_8a9f7d.right\n        } -> find_1f2f0e.predicate\n        list_8e3a4f -> find_1f2f0e.items\n        find_1f2f0e.item -> second_min_7b9d6c\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_5c6b7f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 0, name: \"list\") property(List) list_9f2e8a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_a3b7c1\n\n        instance(x: -105, y: -110) find_5e6d0e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1e6c5d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            list_9f2e8a -> min_1e6c5d.items\n            min_1e6c5d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5e6d0e.predicate\n        list_9f2e8a -> find_5e6d0e.items\n        find_5e6d0e.item -> second_min_a3b7c1\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_c4c6d2 root.main.second_smallest {}\n}"
            ]
        }
    }
]