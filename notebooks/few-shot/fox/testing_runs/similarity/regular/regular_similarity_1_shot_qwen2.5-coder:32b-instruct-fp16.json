[
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3323,
        "task_candidates": {
            "5": [
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a_9f7759\n                second: b_f9110a\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result_b2508f\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result_b2508f\n\n            mul_e38995.result -> getter_9cceb3.value\n            getter_9cceb3.value -> setter_1cedb2.new_value\n            execute_12bf99 -> mul_e38995.execute\n            setter_1cedb2.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n\n            execute_12bf99 -> mul_e38995.execute\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }",
                "func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n            first: a\n            second: b\n        }\n\n        execute_12bf99 -> mul_e38995.trigger\n        mul_e38995.result -> result_b2508f\n        mul_e38995.continue -> continue_685c8f\n    }",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> mul_e38995.first\n        b_f9110a -> mul_e38995.second\n        getter_9cceb3.value -> result_b2508f\n        mul_e38995.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n            }\n            a_9f7759 -> mul_e38995.first\n            b_f9110a -> mul_e38995.second\n            execute_12bf99 -> mul_e38995.trigger\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a_9f7759\n                second: b_f9110a\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result_b2508f\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result_b2508f\n\n            mul_e38995.result -> getter_9cceb3.value\n            execute_12bf99 -> mul_e38995.execute\n            getter_9cceb3.value -> setter_1cedb2.new_value\n            setter_1cedb2.execute -> continue_685c8f\n        }\n    }",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"product\") property(Number) product_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n        }\n        a_9f7759 -> mul_e38995.first\n        b_f9110a -> mul_e38995.second\n        mul_e38995.result -> product_b2508f\n        execute_12bf99 -> mul_e38995.execute\n        mul_e38995.continue -> continue_685c8f\n    }\n}",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n\n            execute_12bf99 -> mul_e38995.execute\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n            first: a\n            second: b\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n\n        a_9f7759 -> mul_e38995.first\n        b_f9110a -> mul_e38995.second\n        getter_9cceb3.value -> result_b2508f\n        mul_e38995.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n}",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n\n            execute_12bf99 -> mul_e38995.execute\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }"
            ],
            "19": [
                "func(doc: \"Finds the difference between the largest and smallest value in a given list.\") LargestSmallestDifference {\n        in(x: 0, y: 0, name: \"items\") property(List) items_ai\n        out(x: 0, y: 100, name: \"difference\") property(Number) difference_ai\n\n        instance(x: -200, y: -50) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: -200, y: 150) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: 250) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(List) sample_list_ai = [10, 20, 30, 40, 50]\n\n    instance(x: 0, y: 0) largest_smallest_difference_instance root.LargestSmallestDifference {}\n    sample_list_ai -> largest_smallest_difference_instance.items\n    largest_smallest_difference_instance.difference -> result_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") largest_smallest_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.list\n        max_node.max -> diff_node.first\n\n        instance(x: 0, y: -100) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.list\n        min_node.min -> diff_node.second\n\n        instance(x: 0, y: -200) diff_node root.Std_k98ojb.Math.Sub {}\n        diff_node.result -> difference_ai\n    }",
                "func(doc: \"finds the difference between the largest and smallest value in a given list.\") largest_smallest_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -375) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -450) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") largest_smallest_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -350) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -400) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between largest and smallest value in a given list.\") find_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n\n        math_sub_node.result -> difference_ai\n    }",
                "func(doc: \"finds the difference between largest and smallest value in a given list.\") find_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    in(x: 426, y: -303, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n    instance(x: 426, y: -303) find_difference_node root.main.find_difference {}\n    items_ai -> find_difference_node.items\n    find_difference_node.difference -> difference_ai",
                "func(doc: \"finds the difference between largest and smallest value in a given list.\") find_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.list\n        max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.list\n        min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    in(x: 426, y: -303, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n    instance(x: 426, y: -303) find_difference_node root.find_difference {}\n    items_ai -> find_difference_node.items\n    find_difference_node.difference -> difference_ai",
                "func(doc: \"finds the difference between largest and smallest value in a given list.\") difference_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_ai\n\n        in(x: 200, y: 50, name: \"max\") property(Number) max_ai\n        in(x: 200, y: -50, name: \"min\") property(Number) min_ai\n\n        instance(x: 400, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_ai -> math_sub_node.first\n        min_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }",
                "func(doc: \"finds the difference between the largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_ai -> math_sub_node.first\n        min_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n\n        property(Number) max_ai\n        property(Number) min_ai\n    }"
            ],
            "20": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_123456.left\n        find_odd_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_even_6d05b1.predicate\n        list_abed4a -> find_even_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_odd_6d05b0.item -> sub_123456.left\n        find_even_6d05b1.item -> sub_123456.right\n\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_even_6d05b1.predicate\n        list_abed4a -> find_even_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_odd_6d05b0.item -> sub_123456.left\n        find_even_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_abed4a -> find_first_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_first_even_6d05b1.predicate\n        list_abed4a -> find_first_even_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b1.item -> sub_123456.left\n        find_first_odd_6d05b0.item -> sub_123456.right\n\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            modulo_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_abed4a -> find_first_even_6d05b0.items\n\n        instance(x: 100, y: 0) find_first_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            modulo_1088d6.result -> notequal_807ffe.left\n            0 -> notequal_807ffe.right\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_first_odd_6d05b1.predicate\n        list_abed4a -> find_first_odd_6d05b1.items\n\n        instance(x: 200, y: 0) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b0.item -> sub_123456.left\n        find_first_odd_6d05b1.item -> sub_123456.right\n\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) sub_3e5f7c root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_3e5f7c.left\n        find_odd_6d05b1.item -> sub_3e5f7c.right\n        sub_3e5f7c.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_abed4a -> find_first_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_first_even_6d05b1.predicate\n        list_abed4a -> find_first_even_6d05b1.items\n\n        instance(x: 200, y: 200) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b1.item -> sub_12345.left\n        find_first_odd_6d05b0.item -> sub_12345.right\n\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_even_6d05b1.predicate\n        list_abed4a -> find_even_6d05b1.items\n\n        instance(x: 200, y: 100) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_odd_6d05b0.item -> sub_123456.left\n        find_even_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_12345.left\n        find_odd_6d05b1.item -> sub_12345.right\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_123456.left\n        find_odd_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}"
            ],
            "21": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 147, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 147) div_8eee0e root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_8eee0e.first\n        n_0c0609 -> div_8eee0e.second\n        div_8eee0e.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_7a6b3f\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 106, y: 150) divide_4b2c1f root.Std_k98ojb.Math.Divide {}\n        sum_2ad0d5 -> divide_4b2c1f.dividend\n        n_0c0609 -> divide_4b2c1f.divisor\n        divide_4b2c1f.quotient -> average_7a6b3f\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_7f6e2a\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 148) div_3f11cd root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3f11cd.first\n        n_0c0609 -> div_3f11cd.second\n        div_3f11cd.result -> average_7f6e2a\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 108, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> reduce_3a8e90.initialValue\n        n_0c0609 -> reduce_3a8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 114) div_e38c7d root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_e38c7d.first\n        n_0c0609 -> div_e38c7d.second\n        div_e38c7d.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_2ad0d6\n\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> reduce_3a8e90.items\n        n_0c0609 -> reduce_3a8e90.to\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 120) div_3a8e91 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e91.first\n        n_0c0609 -> div_3a8e91.second\n        div_3a8e91.result -> average_2ad0d6\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 143, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 143) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 103, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 103) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 103, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 103) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 147, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 372, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 147) div_8eee0e root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_8eee0e.first\n        n_0c0609 -> div_8eee0e.second\n        div_8eee0e.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 372, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 148) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}"
            ],
            "22": [
                "func(doc:\"check if the given number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1045, y: 89) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1054, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1054, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1045, y: 89) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1054, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1045, y: 89) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if the given number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 150) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1054, y: 89) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7a4f1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8e23d4 root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9d578a root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7a4f1c.items\n\n        instance(x: 0, y: 0) if_ae23d4 root.Std_k98ojb.Std.If {}\n        contains_9d578a.result -> if_ae23d4.input\n        for_7a4f1c.item -> list_add_8e23d4.item\n\n        instance(x: 0, y: 0) list_empty_bf678a root.Std_k98ojb.List.Empty {}\n        list_empty_bf678a.list -> list_add_8e23d4.list\n        list_add_8e23d4.listWithItem -> contains_9d578a.list\n\n        for_7a4f1c.item -> contains_9d578a.item\n\n        if_ae23d4.then -> char_3bc2ae\n        for_7a4f1c.item -> if_ae23d4.then\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7f8a1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8e4b2d root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9f6850 root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7f8a1c.items\n\n        instance(x: 0, y: 0) if_ae2b3f root.Std_k98ojb.Std.If {}\n        contains_9f6850.result -> if_ae2b3f.input\n        for_7f8a1c.item -> char_3bc2ae [if_ae2b3f.then]\n        \n        list_add_8e4b2d.listWithItem -> for_7f8a1c.context [for_7f8a1c.next]\n        for_7f8a1c.context -> contains_9f6850.list\n        for_7f8a1c.item -> list_add_8e4b2d.item [for_7f8a1c.trigger]\n        List.Empty() -> list_add_8e4b2d.list [for_7f8a1c.trigger]\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "module() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_map_7e1f4c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Object) acc_9f6850\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"newAcc\") property(Object) newAcc_af09a7\n\n            instance(x: 0, y: 0) get_count_1088d5 root.Std_k98ojb.List.GetAt {}\n            instance(x: 0, y: 0) add_one_807ffd root.Std_k98ojb.Math.Add {}\n            instance(x: 0, y: 0) set_count_4e2a1c root.Std_k98ojb.List.Add {}\n            instance(x: 0, y: 0) update_map_3d5f6b root.Std_k98ojb.Iteration.Map {}\n\n            \"char\" -> get_count_1088d5.index\n            acc_9f6850 -> get_count_1088d5.list\n            1 -> add_one_807ffd.second\n            get_count_1088d5.value -> add_one_807ffd.first\n            add_one_807ffd.result -> set_count_4e2a1c.item\n            char_9f6850 -> update_map_3d5f6b.items\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n                out(x: 515, y: 44, name: \"count\") property(Number) count_af09a7\n\n                instance(x: 0, y: 0) get_count_1088d5 root.Std_k98ojb.List.GetAt {}\n                instance(x: 0, y: 0) or_zero_807ffd root.Std_k98ojb.Std.IfExpression {}\n\n                \"char\" -> get_count_1088d5.index\n                acc_9f6850 -> get_count_1088d5.list\n                \"0 ? 0 : it\" -> or_zero_807ffd.expression\n                get_count_1088d5.value -> or_zero_807ffd.it\n                or_zero_807ffd.value -> count_af09a7\n            } -> update_map_3d5f6b.handler\n            set_count_4e2a1c.list -> newAcc_af09a7\n        } -> count_map_7e1f4c.reducer\n        instance(x: 0, y: 0) find_repeated_8d2b3a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 0, y: 0) get_count_1088d5 root.Std_k98ojb.List.GetAt {}\n            instance(x: 0, y: 0) greater_than_one_807ffd root.Std_k98ojb.Math.GreaterThan {}\n\n            \"char\" -> get_count_1088d5.index\n            count_map_7e1f4c.result -> get_count_1088d5.list\n            1 -> greater_than_one_807ffd.right\n            get_count_1088d5.value -> greater_than_one_807ffd.left\n            greater_than_one_807ffd.result -> bool_af09a7\n        } -> find_repeated_8d2b3a.predicate\n\n        input_abed4a -> characters_6d05b0.string\n        characters_6d05b0.chars -> count_map_7e1f4c.list\n        [] -> count_map_7e1f4c.initial\n        count_map_7e1f4c.result -> find_repeated_8d2b3a.items\n        find_repeated_8d2b3a.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -254, y: 0, name: \"input\") property(String) input_8e3b1f\n\n        out(x: 697, y: 0, name: \"char\") property(String) char_3a2c4d\n\n        instance(x: -117, y: 150) characters_500538 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 60, y: 300) list_empty_9f1e8a root.Std_k98ojb.List.Empty {}\n        instance(x: 274, y: 300) for_5d3c7a root.Std_k98ojb.Std.For {}\n        instance(x: 60, y: 450) list_contains_1e1f8a root.Std_k98ojb.List.Contains {}\n        instance(x: 274, y: 450) if_3d3c7a root.Std_k98ojb.Std.If {}\n\n        input_8e3b1f -> characters_500538.input\n        characters_500538.characters -> for_5d3c7a.items\n\n        for_5d3c7a.item -> list_contains_1e1f8a.item\n        list_empty_9f1e8a.list -> list_contains_1e1f8a.list\n\n        list_contains_1e1f8a.result -> if_3d3c7a.input\n        for_5d3c7a.on_item -> if_3d3c7a.trigger\n\n        instance(x: 460, y: 450) add_2b9c7a root.Std_k98ojb.List.Add {}\n        list_contains_1e1f8a.list -> add_2b9c7a.list\n        for_5d3c7a.item -> add_2b9c7a.item\n\n        instance(x: 460, y: 600) if_then_2b9c7a root.Std_k98ojb.Std.If {}\n        if_3d3c7a.then -> if_then_2b9c7a.trigger\n        for_5d3c7a.item -> if_then_2b9c7a.value\n\n        instance(x: 60, y: 600) if_else_1e1f8a root.Std_k98ojb.Std.If {}\n        if_3d3c7a.else -> if_else_1e1f8a.trigger\n        add_2b9c7a.listWithItem -> if_else_1e1f8a.value\n\n        if_then_2b9c7a.value -> char_3a2c4d\n        if_else_1e1f8a.value -> list_empty_9f1e8a.list\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7a8f4c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8e2b1d root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9d3c2e root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7a8f4c.items\n\n        instance(x: 0, y: 0) func_123456 {\n            in(x: -113, y: 34, name: \"item\") property(Char) item_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6851\n\n            out(x: 515, y: 44, name: \"done\") property(Bool) done_af09a7\n\n            instance(x: 0, y: 0) list_add_234567 root.Std_k98ojb.List.Add {}\n            instance(x: 0, y: 0) contains_345678 root.Std_k98ojb.List.Contains {}\n\n            for_7a8f4c.item -> item_9f6850\n            list_add_234567.list -> contains_345678.list\n            item_9f6850 -> list_add_234567.item\n\n            list_add_234567.listWithItem -> contains_345678.list\n            item_9f6850 -> contains_345678.item\n\n            instance(x: 0, y: 0) if_456789 root.Std_k98ojb.Std.If {}\n            contains_345678.result -> if_456789.input\n            item_9f6850 -> char_3bc2ae\n\n            instance(x: 0, y: 0) true_567890 root.Std_k98ojb.Logic.Not {}\n            contains_345678.result -> true_567890.input\n            true_567890.result -> if_456789.input\n\n            instance(x: 0, y: 0) false_678901 root.Std_k98ojb.Logic.Not {}\n            true_567890.result -> false_678901.input\n            false_678901.result -> done_af09a7\n\n        } -> for_7a8f4c.handler\n\n        List.Empty() -> list_add_8e2b1d.list\n        list_add_8e2b1d.listWithItem -> for_7a8f4c.state\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "func() first_repeated_char {\n        in(x: 0, y: 0) property(String) input_string\n\n        out(x: 250, y: 0) property(Char) result_char\n\n        instance(x: 100, y: 0) characters_7a8f9b root.Strings.Characters {}\n        instance(x: 200, y: 0) for_loop_3c4d5e root.Std.For {}\n        instance(x: 300, y: -50) list_add_6f7g8h root.List.Add {}\n        instance(x: 300, y: 50) list_contains_9i0j1k root.List.Contains {}\n\n        input_string -> characters_7a8f9b.input\n        characters_7a8f9b.characters -> for_loop_3c4d5e.items\n\n        for_loop_3c4d5e.item -> list_contains_9i0j1k.item\n        instance(x: 250, y: -100) seen_chars_2l3m4n property(List)\n        seen_chars_2l3m4n -> list_contains_9i0j1k.list\n\n        for_loop_3c4d5e.item -> list_add_6f7g8h.item\n        seen_chars_2l3m4n -> list_add_6f7g8h.list\n        list_add_6f7g8h.listWithItem -> seen_chars_2l3m4n\n\n        instance(x: 150, y: -50) if_expression_a1b2c3 root.Std.IfExpression {}\n        \"it ? for_loop_3c4d5e.next : for_loop_3c4d5e.done\" -> if_expression_a1b2c3.expression\n        list_contains_9i0j1k.result -> if_expression_a1b2c3.it\n\n        for_loop_3c4d5e.on_item -> if_expression_a1b2c3.trigger\n        if_expression_a1b2c3.then -> result_char\n        for_loop_3c4d5e.item -> result_char\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_3a5b1f\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_6c7d2e\n\n        instance(x: 0, y: 0) for_4d8f3g root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"found\") property(Bool) found_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) list_add_807ffd root.Std_k98ojb.List.Add {}\n            instance(x: 450, y: 29) list_empty_6d05b0 root.Std_k98ojb.List.Empty {}\n\n            char_9f6850 -> contains_1088d5.item\n            for_4d8f3g.index -> list_add_807ffd.index\n            list_empty_6d05b0.list -> list_add_807ffd.list\n            list_add_807ffd.listWithItem -> contains_1088d5.list\n            contains_1088d5.result -> found_af09a7\n\n            instance(x: 310, y: 65) std_if_807ffd root.Std_k98ojb.Std.If {}\n            found_af09a7 -> std_if_807ffd.input\n            char_9f6850 -> std_if_807ffd.then\n        } -> for_4d8f3g.on_item\n        input_3a5b1f -> for_4d8f3g.items\n        std_if_807ffd.value -> char_6c7d2e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: 0, y: 0, name: \"input\") property(String) input_3a4b5c\n\n        out(x: 200, y: 0, name: \"char\") property(String) char_6d7e8f\n\n        instance(x: 100, y: 0) chars_9g0h1i root.Strings.Characters {}\n        input_3a4b5c -> chars_9g0h1i.input\n        out(x: 200, y: 100, name: \"seen\") property(List) seen_2j3k4l\n\n        instance(x: 100, y: 200) for_5m6n7o root.Std.For {}\n        chars_9g0h1i.characters -> for_5m6n7o.items\n        out(x: 200, y: 300, name: \"found\") property(Bool) found_8p9q0r\n\n        func() {\n            in(x: 0, y: 0, name: \"item\") property(String) item_1s2t3u\n            out(x: 200, y: 0, name: \"trigger\") trigger_4v5w6x\n\n            instance(x: 100, y: 0) contains_7y8z9a root.List.Contains {}\n            seen_2j3k4l -> contains_7y8z9a.list\n            item_1s2t3u -> contains_7y8z9a.item\n\n            instance(x: 100, y: 100) if_0b1c2d root.Std.If {}\n            contains_7y8z9a.result -> if_0b1c2d.input\n            func() {\n                item_1s2t3u -> char_6d7e8f\n                true -> found_8p9q0r\n                trigger_4v5w6x\n            } -> if_0b1c2d.then\n\n            func() {\n                instance(x: 100, y: 0) add_3e4f5g root.List.Add {}\n                seen_2j3k4l -> add_3e4f5g.list\n                item_1s2t3u -> add_3e4f5g.item\n                add_3e4f5g.listWithItem -> seen_2j3k4l\n            } -> if_0b1c2d.else\n\n        } -> for_5m6n7o.handler\n\n        false -> found_8p9q0r\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -253, y: 0, name: \"input\") property(String) input_481b8a\n\n        out(x: 679, y: 0, name: \"char\") property(String) char_ae6f8c\n\n        instance(x: 0, y: 0) characters_3d2565 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 145, y: -17) concat_3a1667 root.Std_k98ojb.List.Concat {}\n        instance(x: 295, y: -17) contains_0d66e6 root.Std_k98ojb.List.Contains {}\n        instance(x: 445, y: -17) if_3c7a8f root.Std_k98ojb.Std.If {}\n        instance(x: 295, y: 17) add_0d66e6 root.Std_k98ojb.List.Add {}\n\n        input_481b8a -> characters_3d2565.input\n        characters_3d2565.characters -> contains_0d66e6.list\n        characters_3d2565.characters -> add_0d66e6.list\n        concat_3a1667.listWithItem -> contains_0d66e6.list\n        concat_3a1667.listWithItem -> add_0d66e6.list\n        characters_3d2565.characters -> if_3c7a8f.input\n        contains_0d66e6.contains -> if_3c7a8f.value\n        add_0d66e6.item -> concat_3a1667.right\n        List.Empty() -> concat_3a1667.left\n        if_3c7a8f.then -> char_ae6f8c\n    }\n\n    \n\n    instance(x: -55, y: 490) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -250, y: 14, name: \"input\") property(String) input_3b8f9a\n\n        out(x: 673, y: 14, name: \"char\") property(String) char_2c5e3d\n\n        instance(x: 0, y: 0) characters_7d9b1a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 60) for_4f1c7a root.Std_k98ojb.Std.For {}\n        instance(x: 235, y: -10) list_add_1e8d4a root.Std_k98ojb.List.Add {}\n        instance(x: 235, y: 60) list_contains_3f7c9b root.Std_k98ojb.List.Contains {}\n\n        input_3b8f9a -> characters_7d9b1a.input\n        characters_7d9b1a.characters -> for_4f1c7a.items\n\n        instance(x: 0, y: 0) if_6e2b5c root.Std_k98ojb.Std.If {}\n        list_contains_3f7c9b.result -> if_6e2b5c.input\n        for_4f1c7a.item -> list_add_1e8d4a.item\n\n        instance(x: 0, y: 0) list_empty_1a8d4a root.Std_k98ojb.List.Empty {}\n        list_empty_1a8d4a.list -> list_add_1e8d4a.list\n        list_add_1e8d4a.listWithItem -> for_4f1c7a.context\n\n        list_add_1e8d4a.listWithItem -> list_contains_3f7c9b.list\n        for_4f1c7a.item -> list_contains_3f7c9b.item\n\n        instance(x: 0, y: 0) if_expression_2e5e3d root.Std_k98ojb.Std.IfExpression {}\n        if_6e2b5c.then -> if_expression_2e5e3d.trigger\n        for_4f1c7a.item -> if_expression_2e5e3d.a\n        \"found\" -> if_expression_2e5e3d.expression\n        \"\" -> if_expression_2e5e3d.b\n\n        if_expression_2e5e3d.value -> char_2c5e3d\n    }\n\n    \n\n    instance(x: -40, y: 198) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }\n\n    in(x: -426, y: -248, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n    instance(x: 0, y: 0) second_smallest_num_node root.second_smallest_num {}\n    items_ai -> second_smallest_num_node.items\n    second_smallest_num_node.second_min -> second_min_ai",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) first_item_node root.List.FirstItem {}\n        sorted_items_ai -> first_item_node.list\n        first_item_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) second_item_node root.List.FirstItem {}\n        remaining_items_ai -> second_item_node.list\n        second_item_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }\n\n    in(x: -426, y: -248, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n    instance(x: 0, y: 0) second_smallest_num_node root.second_smallest_num {}\n    items_ai -> second_smallest_num_node.items\n    second_smallest_num_node.second_min -> second_min_ai",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: 0, y: 0, name: \"items\") property(List) items_ai\n        out(x: 0, y: 100, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 50) list_sort_node root.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 0, y: 150) list_get_at_node root.List.GetAt {}\n        list_sort_node.sorted_list -> list_get_at_node.list\n        const(value: 1) -> list_get_at_node.index\n        list_get_at_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index -> index_ai\n        index_ai -> constant_index_ai.value\n        constant_index_ai -> remove_first_node.index\n        remove_first_node.listWithoutItem -> remaining_list_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_list_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n\n        instance(x: 0, y: 200) constant_index_ai root.constant(Number) {\n            value = 0\n        }\n    }"
            ],
            "40": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 300, y: 100) mul_12345 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_12345.first\n        find_odd_6d05b1.item -> mul_12345.second\n        mul_12345.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "func() find_product_of_first_even_and_odd {\n        in(x: 0, y: 0) property(List) numbers\n\n        out(x: 0, y: 150) property(Number) product\n\n        instance(x: 0, y: 30) first_even_7a8b9c root.Iteration.Find {}\n        func() {\n            in(x: -100, y: 0) property(Number) num\n            out(x: 100, y: 0) property(Bool) is_even\n\n            instance(x: 0, y: 0) modulo_3d4e5f root.Math.Modulo {}\n            2 -> modulo_3d4e5f.divisor\n            num -> modulo_3d4e5f.value\n            0 -> modulo_3d4e5f.result -> is_even\n        } -> first_even_7a8b9c.predicate\n        numbers -> first_even_7a8b9c.items\n\n        instance(x: 0, y: 120) first_odd_6g7h8i root.Iteration.Find {}\n        func() {\n            in(x: -100, y: 0) property(Number) num\n            out(x: 100, y: 0) property(Bool) is_odd\n\n            instance(x: 0, y: 0) modulo_9j0k1l root.Math.Modulo {}\n            2 -> modulo_9j0k1l.divisor\n            num -> modulo_9j0k1l.value\n            1 -> modulo_9j0k1l.result -> is_odd\n        } -> first_odd_6g7h8i.predicate\n        numbers -> first_odd_6g7h8i.items\n\n        instance(x: 0, y: 240) multiply_2m3n4o root.Math.Mul {}\n        first_even_7a8b9c.item -> multiply_2m3n4o.first\n        first_odd_6g7h8i.item -> multiply_2m3n4o.second\n        multiply_2m3n4o.result -> product\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 300, y: 200) mul_6d05b2 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_6d05b2.first\n        find_odd_6d05b1.item -> mul_6d05b2.second\n        mul_6d05b2.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_123 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123.first\n        find_odd_6d05b1.item -> mul_123.second\n        mul_123.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "func(doc: \"Finds the product of the first even and odd number in a given list.\") product_of_first_even_odd {\n        in(x: 0, y: 0, name: \"list\") property(List) list_5a2b3c\n\n        out(x: 0, y: 100, name: \"product\") property(Number) product_6d7e8f\n\n        instance(x: 0, y: 40) find_first_even_9g0h1i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -20, y: 30, name: \"elem\") property(Number) elem_jk2l3m\n\n            out(x: 50, y: 40, name: \"bool\") property(Bool) bool_n1o2p3\n\n            instance(x: 0, y: 0) modulo_q4r5s6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 70, y: 40) equal_t7u8v9 root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_t7u8v9.right\n            modulo_q4r5s6.result -> equal_t7u8v9.left\n            2 -> modulo_q4r5s6.divisor\n            elem_jk2l3m -> modulo_q4r5s6.value\n            equal_t7u8v9.result -> bool_n1o2p3\n        } -> find_first_even_9g0h1i.predicate\n        list_5a2b3c -> find_first_even_9g0h1i.items\n\n        instance(x: 0, y: 140) find_first_odd_wx2y3z root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -20, y: 130, name: \"elem\") property(Number) elem_abc1d2\n\n            out(x: 50, y: 140, name: \"bool\") property(Bool) bool_efg3h4\n\n            instance(x: 0, y: 0) modulo_ijk5l6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 70, y: 140) notequal_mno7p8 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_mno7p8.right\n            modulo_ijk5l6.result -> notequal_mno7p8.left\n            2 -> modulo_ijk5l6.divisor\n            elem_abc1d2 -> modulo_ijk5l6.value\n            notequal_mno7p8.result -> bool_efg3h4\n        } -> find_first_odd_wx2y3z.predicate\n        list_5a2b3c -> find_first_odd_wx2y3z.items\n\n        instance(x: 0, y: 210) multiply_qrs4t5 root.Std_k98ojb.Math.Mul {}\n        find_first_even_9g0h1i.item -> multiply_qrs4t5.first\n        find_first_odd_wx2y3z.item -> multiply_qrs4t5.second\n\n        multiply_qrs4t5.result -> product_6d7e8f\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_6d05b2 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_6d05b2.first\n        find_odd_6d05b1.item -> mul_6d05b2.second\n        mul_6d05b2.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "func(doc: \"Finds the product of the first even and odd number in a given list.\") first_even_odd_product {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n\n        mul_123456.result -> product_3bc2ae\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 0) mul_12345 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_12345.first\n        find_odd_6d05b1.item -> mul_12345.second\n        mul_12345.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 300, y: 50) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}"
            ],
            "41": [
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            length_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_count_ai\n\n            instance(x: 105, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"count > 0 ? count - 1 : -1\" -> std_if_expression_node.expression\n            length_ai -> std_if_expression_node.count\n            next_count_ai -> std_if_expression_node.next_count\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 120, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger\n            std_for_node.reset\n            next_count_ai -> std_for_node.next\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 105, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            next_index_ai -> std_count_reset_node.reset\n\n            instance(x: 120, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"index > 0\" -> std_if_expression_node.expression\n            index_ai -> std_if_expression_node.index\n            std_count_reset_node.trigger -> std_if_expression_node.then\n\n            instance(x: 135, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 150, y: 0) std_if_expression_node root.Std.k98ojb.Std.IfExpression {}\n            \"is_empty == false\" -> std_if_expression_node.expression\n            is_empty_ai -> std_if_expression_node.is_empty\n            std_if_node.trigger -> std_if_expression_node.then\n\n            last_position_ai -> result_ai\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position_Of_Element\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element {\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> result_ai\n            std_count_node.reset -> reset_count_trigger\n\n            instance(x: 90, y: 0) std_count_node2 root.Std_k98ojb.Std.Count {}\n            reset_count_trigger -> std_count_node2.reset\n            std_count_node.next -> std_count_node2.count\n\n            instance(x: 105, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 120, y: 0) std_if_node2 root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node2.input\n            -1 -> result_ai\n            std_count_node.reset -> reset_count_trigger2\n\n            instance(x: 135, y: 0) std_count_node3 root.Std_k98ojb.Std.Count {}\n            reset_count_trigger2 -> std_count_node3.reset\n            std_count_node.next -> std_count_node3.count\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> result_ai [std_if_node.then]\n            -1 -> result_ai [std_if_node.else]\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            std_count_node.value -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> prev_index_ai\n\n            instance(x: 105, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"prev_index >= 0 ? prev_index : -1\" -> std_if_expression_node.expression\n            prev_index_ai -> std_if_expression_node.prev_index\n            std_if_expression_node.value -> next_count_ai\n\n            instance(x: 120, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            next_count_ai -> std_for_node.trigger [std_if_expression_node.then]\n            -1 -> result_ai [std_for_node.done]\n\n            instance(x: 135, y: 0) list_get_at_node_2 root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node_2.list\n            std_for_node.index -> list_get_at_node_2.index\n            list_get_at_node_2.item -> item_ai_2\n\n            instance(x: 150, y: 0) logic_equal_node_2 root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node_2.left\n            item_ai_2 -> logic_equal_node_2.right\n            logic_equal_node_2.value -> is_equal_ai_2\n\n            instance(x: 165, y: 0) std_if_node_2 root.Std_k98ojb.Std.If {}\n            is_equal_ai_2 -> std_if_node_2.input\n            std_for_node.index -> result_ai [std_if_node_2.then]\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            std_count_node.value -> std_if_node.input\n            false -> std_if_node.then\n            true -> std_if_node.else\n\n            instance(x: 60, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 75, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> std_if_node.input\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            std_count_node.value -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> std_count_node.reset\n\n            instance(x: 120, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            logic_equal_node.value -> std_if_expression_node.expression\n            std_count_node.value -> std_if_expression_node.value\n            -1 -> std_if_expression_node.value\n\n            std_if_expression_node.value -> result_ai\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> last_index_ai\n\n            instance(x: 120, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            -1 -> std_if_node.input\n            std_if_node.then -> result_ai\n\n            instance(x: 75, y: 60) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            last_index_ai -> list_get_at_node.index\n            list_get_at_node.item -> std_if_node.input\n\n            instance(x: 120, y: 60) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            list_get_at_node.item -> logic_equal_node.right\n            logic_equal_node.result -> std_if_node.then\n\n            instance(x: 75, y: 120) math_sub_node root.Std_k98ojb.Math.Sub {}\n            last_index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> new_last_index_ai\n\n            instance(x: 120, y: 120) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.on_item -> check_element_ai\n\n            instance(x: 75, y: 180) logic_equal_node_2 root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node_2.left\n            std_for_node.item -> logic_equal_node_2.right\n            logic_equal_node_2.result -> std_if_node.input\n\n            instance(x: 120, y: 180) std_if_node_2 root.Std_k98ojb.Std.If {}\n            std_if_node_2.then -> result_ai\n            std_for_node.index -> std_if_node_2.then\n\n            instance(x: 75, y: 240) math_sub_node_2 root.Std_k98ojb.Math.Sub {}\n            last_index_ai -> math_sub_node_2.first\n            std_for_node.index -> math_sub_node_2.second\n            math_sub_node_2.result -> new_last_index_ai\n\n            instance(x: 120, y: 240) std_if_node_3 root.Std_k98ojb.Std.If {}\n            -1 -> std_if_node_3.input\n            std_for_node.next -> std_if_node_3.then\n        }\n\n        in(x: 0, y: 0, name: \"array\") property(List) array_ai\n        in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n        out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        array_ai -> list_length_node.list\n        list_length_node.length -> last_index_ai\n\n        instance(x: 120, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n        -1 -> std_if_node.input\n        std_if_node.then -> result_ai\n\n        instance(x: 75, y: 60) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        array_ai -> list_get_at_node.list\n        last_index_ai -> list_get_at_node.index\n        list_get_at_node.item -> std_if_node.input\n\n        instance(x: 120, y: 60) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n        element_ai -> logic_equal_node.left\n        list_get_at_node.item -> logic_equal_node.right\n        logic_equal_node.result -> std_if_node.then\n\n        instance(x: 75, y: 120) math_sub_node root.Std_k98ojb.Math.Sub {}\n        last_index_ai -> math_sub_node.first\n        1 -> math_sub_node.second\n        math_sub_node.result -> new_last_index_ai\n\n        instance(x: 120, y: 120) std_for_node root.Std_k98ojb.Std.For {}\n        array_ai -> std_for_node.items\n        std_for_node.on_item -> check_element_ai\n\n        instance(x: 75, y: 180) logic_equal_node_2 root.Std_k98ojb.Logic.Equal {}\n        element_ai -> logic_equal_node_2.left\n        std_for_node.item -> logic_equal_node_2.right\n        logic_equal_node_2.result -> std_if_node.input\n\n        instance(x: 120, y: 180) std_if_node_2 root.Std_k98ojb.Std.If {}\n        std_if_node_2.then -> result_ai\n        std_for_node.index -> std_if_node_2.then\n\n        instance(x: 75, y: 240) math_sub_node_2 root.Std_k98ojb.Math.Sub {}\n        last_index_ai -> math_sub_node_2.first\n        std_for_node.index -> math_sub_node_2.second\n        math_sub_node_2.result -> new_last_index_ai\n\n        instance(x: 120, y: 240) std_if_node_3 root.Std_k98ojb.Std.If {}\n        -1 -> std_if_node_3.input\n        std_for_node.next -> std_if_node_3.then\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            std_count_node.value -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 105, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"count > 0 ? last_position : -1\" -> std_if_expression_node.expression\n            count_ai -> std_if_expression_node.count\n            last_position_ai -> std_if_expression_node.last_position\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            next_index_ai -> std_count_node.reset\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 165, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 210, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 255, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 300, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 345, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"index > 0 ? last_position : -1\" -> std_if_expression_node.expression\n            index_ai -> std_if_expression_node.index\n            last_position_ai -> std_if_expression_node.last_position\n            std_if_expression_node.value -> result_ai\n\n            next_index_ai -> std_count_node.reset\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 105, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count.reset {}\n            next_index_ai -> std_count_reset_node.trigger\n\n            instance(x: 120, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 135, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"is_empty ? -1 : last_position\" -> std_if_expression_node.expression\n            is_empty_ai -> std_if_expression_node.is_empty\n            last_position_ai -> std_if_expression_node.last_position\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 150, y: 0) std_count_trigger_node root.Std_k98ojb.Std.Count.trigger {}\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 165, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 210, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 255, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 300, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 345, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            next_index_ai -> std_count_reset_node.reset\n\n            instance(x: 390, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 435, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"is_empty_ai ? last_position_ai : -1\" -> std_if_expression_node.expression\n            std_if_expression_node.value -> result_ai\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3323,
        "task_candidates": {
            "5": [
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a_9f7759\n                second: b_f9110a\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result_b2508f\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result_b2508f\n\n            mul_e38995.result -> getter_9cceb3.value\n            getter_9cceb3.value -> setter_1cedb2.new_value\n            execute_12bf99 -> mul_e38995.execute\n            setter_1cedb2.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n\n            execute_12bf99 -> mul_e38995.execute\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a_9f7759\n                second: b_f9110a\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result_b2508f\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result_b2508f\n\n            mul_e38995.result -> getter_9cceb3.value\n            getter_9cceb3.value -> setter_1cedb2.new_value\n            execute_12bf99 -> mul_e38995.execute\n            setter_1cedb2.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n        }\n        a_9f7759 -> mul_e38995.first\n        b_f9110a -> mul_e38995.second\n        execute_12bf99 -> mul_e38995.trigger\n        mul_e38995.result -> result_b2508f\n        mul_e38995.continue -> continue_685c8f\n    }\n}",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"product\") property(Number) product_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = product\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = product\n\n        mul_e38995.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_e38995.execute\n        getter_9cceb3.value -> product_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n}",
                "module() main {\n    func(doc: \"Multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n        }\n        a_9f7759 -> mul_e38995.first\n        b_f9110a -> mul_e38995.second\n        mul_e38995.result -> result_b2508f\n        execute_12bf99 -> mul_e38995.execute\n        mul_e38995.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Multiply_d6e930 root.main.Multiply {}\n}",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n\n            a_9f7759 -> mul_e38995.first\n            b_f9110a -> mul_e38995.second\n            getter_9cceb3.value -> result_b2508f\n            mul_e38995.result -> setter_1cedb2.new_value\n            execute_12bf99 -> mul_e38995.execute\n            setter_1cedb2.continue -> continue_685c8f\n        }\n    }",
                "func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n            first: a\n            second: b\n        }\n\n        execute_12bf99 -> mul_e38995.trigger\n        mul_e38995.result -> result_b2508f\n        mul_e38995.continue -> continue_685c8f\n    }",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n\n            execute_12bf99 -> mul_e38995.execute\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> mul_e38995.first\n        b_f9110a -> mul_e38995.second\n        getter_9cceb3.value -> result_b2508f\n        mul_e38995.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n}"
            ],
            "19": [
                "func(doc: \"Finds the difference between the largest and smallest value in a given list.\") LargestSmallestDifference {\n        in(x: 0, y: 0, name: \"items\") property(List) items_ai\n        out(x: 0, y: 100, name: \"difference\") property(Number) difference_ai\n\n        instance(x: -200, y: -50) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: -200, y: 150) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: 250) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(List) sample_list_ai = [10, 20, 30, 40, 50]\n\n    instance(x: 0, y: 0) largest_smallest_difference_instance root.LargestSmallestDifference {}\n    sample_list_ai -> largest_smallest_difference_instance.items\n    largest_smallest_difference_instance.difference -> result_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") difference_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a given list.\") largest_smallest_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") find_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 100) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        max_node.max -> Math.Sub.first\n        min_node.min -> Math.Sub.second\n\n        instance(x: 0, y: 200) sub_node root.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n\n        sub_node.result -> difference_ai\n    }",
                "func(doc: \"Finds the difference between the largest and smallest value in a given list.\") LargestSmallestDifference {\n        in(x: 0, y: 0, name: \"items\") property(List) items_ai\n        out(x: 0, y: 150, name: \"difference\") property(Number) difference_ai\n\n        instance(x: -200, y: 50) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: -200, y: 150) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: 100) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between largest and smallest value in a given list.\") find_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") largest_smallest_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"finds the difference between largest and smallest value in a given list.\") find_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.list\n        max_node.max -> Math.Sub.first\n\n        instance(x: 0, y: -100) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.list\n        min_node.min -> Math.Sub.second\n\n        instance(x: 0, y: -50) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> difference_ai\n    }",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n\n        math_sub_node.result -> difference_ai\n    }"
            ],
            "20": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_123456.left\n        find_odd_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_abed4a -> find_first_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_first_even_6d05b1.predicate\n        list_abed4a -> find_first_even_6d05b1.items\n\n        instance(x: 300, y: 50) subtract_123 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b1.item -> subtract_123.left\n        find_first_odd_6d05b0.item -> subtract_123.right\n\n        subtract_123.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_123456.left\n        find_odd_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_even_odd_2c856f root.main.diff_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_abed4a -> find_first_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_first_odd_6d05b1.predicate\n        list_abed4a -> find_first_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b0.item -> sub_123456.left\n        find_first_odd_6d05b1.item -> sub_123456.right\n\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_123456.left\n        find_odd_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_even_odd_2c856f root.main.diff_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_12345.left\n        find_odd_6d05b1.item -> sub_12345.right\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_abed4a -> find_first_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_abed4a -> find_first_even_6d05b0.items\n\n        instance(x: 200, y: 100) sub_3e8f9c root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b0.item -> sub_3e8f9c.left\n        find_first_odd_6d05b0.item -> sub_3e8f9c.right\n\n        sub_3e8f9c.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_odd_6d05b0.predicate\n        list_abed4a -> find_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_even_6d05b1.predicate\n        list_abed4a -> find_even_6d05b1.items\n\n        instance(x: 200, y: 100) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_odd_6d05b0.item -> sub_12345.right\n        find_even_6d05b1.item -> sub_12345.left\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_abed4a -> find_first_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_first_even_6d05b1.predicate\n        list_abed4a -> find_first_even_6d05b1.items\n\n        instance(x: 200, y: 200) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b1.item -> sub_12345.left\n        find_first_odd_6d05b0.item -> sub_12345.right\n\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_12345.left\n        find_odd_6d05b1.item -> sub_12345.right\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}"
            ],
            "21": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 147, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 147) div_8eee0e root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_8eee0e.first\n        n_0c0609 -> div_8eee0e.second\n        div_8eee0e.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 103, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 103) div_8eee0e root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_8eee0e.first\n        n_0c0609 -> div_8eee0e.second\n        div_8eee0e.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 113, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 113) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 114, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 372, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 114) div_1b2c3d root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_1b2c3d.first\n        n_0c0609 -> div_1b2c3d.second\n        div_1b2c3d.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_7f6b9a\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 168, y: 148) div_9b2c3f root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_9b2c3f.first\n        n_0c0609 -> div_9b2c3f.second\n        div_9b2c3f.result -> average_7f6b9a\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_7a6b2c\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 106, y: 150) divide_4b2c3f root.Std_k98ojb.Math.Divide {}\n        sum_2ad0d5 -> divide_4b2c3f.first\n        n_0c0609 -> divide_4b2c3f.second\n        divide_4b2c3f.result -> average_7a6b2c\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 103, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 103) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_7b6f1a\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 149) div_8eee0e root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_8eee0e.first\n        n_0c0609 -> div_8eee0e.second\n        div_8eee0e.result -> average_7b6f1a\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 123, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 123) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 103, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 103) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}"
            ],
            "22": [
                "func(doc:\"check if the given number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1045, y: 89) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1054, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -492, y: 107, name: \"number\") property(Number) number_ai\n        out(x: 368, y: 105, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 167, y: 104) mod_2 root.Math.Modulo {\n            divisor: 2\n        }\n        number_ai -> mod_2.value\n        mod_2.result -> instance(x: 359, y: 105) is_zero root.Logic.Equal {\n            right: 0\n        }.left\n        is_zero.result -> isEven_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 150) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1045, y: 189) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 150) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1045, y: 89) is_zero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        is_zero_7b3b7b.value -> is_even_ai\n    }"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7a4f1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8e23d4 root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9d578a root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7a4f1c.items\n\n        instance(x: 0, y: 0) if_ae23d4 root.Std_k98ojb.Std.If {}\n        contains_9d578a.result -> if_ae23d4.input\n        for_7a4f1c.item -> list_add_8e23d4.item\n\n        instance(x: 0, y: 0) list_empty_bf678a root.Std_k98ojb.List.Empty {}\n        list_empty_bf678a.list -> list_add_8e23d4.list\n        list_add_8e23d4.listWithItem -> contains_9d578a.list\n\n        for_7a4f1c.item -> contains_9d578a.item\n\n        if_ae23d4.then -> char_3bc2ae\n        for_7a4f1c.item -> if_ae23d4.then\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "func() first_repeated_char {\n        in(x: 0, y: 0) property(String) input_string\n\n        out(x: 200, y: 0) property(Char) result_char\n\n        instance(x: 50, y: 100) characters_345678 root.Strings.Characters {}\n        instance(x: 150, y: 100) for_loop_901234 root.Std.For {}\n        instance(x: 250, y: 100) list_add_567890 root.List.Add {}\n        instance(x: 350, y: 100) list_contains_098765 root.List.Contains {}\n\n        input_string -> characters_345678.input\n        characters_345678.characters -> for_loop_901234.items\n\n        instance(x: 150, y: 200) if_expression_123456 root.Std.IfExpression {}\n        \"list.contains(item) ? item : null\" -> if_expression_123456.expression\n        for_loop_901234.item -> if_expression_123456.item\n\n        instance(x: 250, y: 200) list_add_handler_678901 root.List.Add {}\n        for_loop_901234.item -> list_add_handler_678901.item\n        list_add_567890.listWithItem -> list_add_handler_678901.list\n\n        instance(x: 350, y: 200) list_contains_handler_123456 root.List.Contains {}\n        for_loop_901234.item -> list_contains_handler_123456.item\n        list_add_handler_678901.listWithItem -> list_contains_handler_123456.list\n\n        if_expression_123456.value -> result_char\n\n        for_loop_901234.trigger -> characters_345678.trigger\n        for_loop_901234.next -> for_loop_901234.trigger\n        list_add_handler_678901.listWithItem -> list_add_567890.list\n    }",
                "module() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Strings.Characters {}\n        instance(x: 0, y: 0) count_map_7e1f9c root.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Object) acc_9f6850\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"new_acc\") property(Object) new_acc_af09a7\n\n            instance(x: 0, y: 0) get_count_1088d5 root.Object.Get {}\n            instance(x: 0, y: 0) add_one_807ffd root.Math.Add {}\n            instance(x: 0, y: 0) set_count_9c3b2a root.Object.Set {}\n\n            char_9f6850 -> get_count_1088d5.key\n            acc_9f6850 -> get_count_1088d5.obj\n            get_count_1088d5.value -> add_one_807ffd.first\n            1 -> add_one_807ffd.second\n            add_one_807ffd.result -> set_count_9c3b2a.value\n            char_9f6850 -> set_count_9c3b2a.key\n            acc_9f6850 -> set_count_9c3b2a.obj\n            set_count_9c3b2a.result -> new_acc_af09a7\n        } -> count_map_7e1f9c.reducer\n        instance(x: 0, y: 0) find_repeated_8d4b2c root.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 0, y: 0) get_count_1088d5 root.Object.Get {}\n            instance(x: 0, y: 0) greater_than_807ffd root.Math.GreaterThan {}\n\n            char_9f6850 -> get_count_1088d5.key\n            count_map_7e1f9c.result -> get_count_1088d5.obj\n            get_count_1088d5.value -> greater_than_807ffd.left\n            1 -> greater_than_807ffd.right\n            greater_than_807ffd.result -> bool_af09a7\n        } -> find_repeated_8d4b2c.predicate\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> count_map_7e1f9c.items\n        {} -> count_map_7e1f9c.initial\n        count_map_7e1f9c.result -> find_repeated_8d4b2c.items\n        find_repeated_8d4b2c.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Strings.Characters {}\n        instance(x: 0, y: 0) seen_7e1f2c root.List.Empty {}\n        instance(x: 0, y: 0) for_8a3d4e root.Std.For {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_8a3d4e.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"done\") property(Bool) done_af09a7\n            out(x: 515, y: 84, name: \"next\") property(Bool) next_ae3f2b\n\n            instance(x: 0, y: 0) contains_1088d5 root.List.Contains {}\n            instance(x: 0, y: 0) add_807ffd root.List.Add {}\n\n            seen_7e1f2c -> contains_1088d5.list\n            char_9f6850 -> contains_1088d5.item\n\n            contains_1088d5.result -> done_af09a7\n            Logic.Not(done_af09a7) -> next_ae3f2b\n\n            seen_7e1f2c -> add_807ffd.list\n            char_9f6850 -> add_807ffd.item\n            add_807ffd.listWithItem -> seen_7e1f2c\n\n            contains_1088d5.result -> Std.If {\n                then() {\n                    char_9f6850 -> char_3bc2ae\n                }\n            }\n        } -> for_8a3d4e.on_item\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7a4f1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8e2b3d root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9f6850 root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7a4f1c.items\n\n        instance(x: 0, y: 0) func_123456 {\n            in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n            out(x: 515, y: 44, name: \"done\") property(Bool) done_af09a7\n\n            instance(x: 0, y: 0) list_add_8e2b3d root.Std_k98ojb.List.Add {}\n            instance(x: 0, y: 0) contains_9f6850 root.Std_k98ojb.List.Contains {}\n\n            item_9f6850 -> contains_9f6850.item\n            list_add_8e2b3d.listWithItem -> contains_9f6850.list\n\n            instance(x: 0, y: 0) if_expression_a1b2c3 root.Std_k98ojb.Std.IfExpression {}\n            \"contains ? item : null\" -> if_expression_a1b2c3.expression\n            contains_9f6850.result -> if_expression_a1b2c3.contains\n            item_9f6850 -> if_expression_a1b2c3.item\n\n            list_add_8e2b3d.list -> if_expression_a1b2c3.list\n            item_9f6850 -> list_add_8e2b3d.item\n\n            if_expression_a1b2c3.value -> char_3bc2ae\n            Logic.Not(if_expression_a1b2c3.value == null) -> done_af09a7\n        } -> for_7a4f1c.on_item\n\n        List.Empty() -> list_add_8e2b3d.list\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Strings.Characters {}\n        instance(x: 0, y: 0) seen_7f89c1 root.List.Empty {}\n        instance(x: 0, y: 0) for_loop_8a23d2 root.Std.For {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_loop_8a23d2.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"done\") property(Bool) done_af09a7\n\n            instance(x: 0, y: 0) contains_check_1088d5 root.List.Contains {}\n            instance(x: 0, y: 0) add_char_2c856f root.List.Add {}\n\n            char_9f6850 -> contains_check_1088d5.item\n            seen_7f89c1 -> contains_check_1088d5.list\n\n            instance(x: 0, y: 0) if_char_repeated_3b4a7e root.Std.If {}\n            contains_check_1088d5.contains -> if_char_repeated_3b4a7e.input\n            func() {\n                char_9f6850 -> char_3bc2ae\n                true -> done_af09a7\n            } -> if_char_repeated_3b4a7e.then\n\n            func() {\n                char_9f6850 -> add_char_2c856f.item\n                seen_7f89c1 -> add_char_2c856f.list\n                add_char_2c856f.listWithItem -> seen_7f89c1\n                false -> done_af09a7\n            } -> if_char_repeated_3b4a7e.else\n\n        } -> for_loop_8a23d2.on_item\n\n    }",
                "func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Strings.Characters {}\n        instance(x: 0, y: 0) seen_7e1f9c root.List.Empty {}\n        instance(x: 0, y: 0) for_8a2b34 root.Std.For {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_8a2b34.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"done\") property(Bool) done_af09a7\n\n            instance(x: 0, y: 0) contains_1088d5 root.List.Contains {}\n            instance(x: 0, y: 0) add_807ffd root.List.Add {}\n\n            seen_7e1f9c -> contains_1088d5.list\n            char_9f6850 -> contains_1088d5.item\n\n            contains_1088d5.contains -> done_af09a7\n\n            Logic.Not(done_af09a7) -> add_807ffd.trigger\n            seen_7e1f9c -> add_807ffd.list\n            char_9f6850 -> add_807ffd.item\n            add_807ffd.listWithItem -> seen_7e1f9c\n\n            done_af09a7 -> for_8a2b34.reset\n            Logic.Not(done_af09a7) -> for_8a2b34.next\n            char_9f6850 -> char_3bc2ae\n        } -> for_8a2b34.on_item\n\n        for_8a2b34.done -> char_3bc2ae\n    }",
                "module() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7e4f1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8a23d4 root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9f6850 root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7e4f1c.items\n\n        instance(x: 0, y: 0) func_1088d5 {\n            in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n            out(x: 515, y: 44, name: \"done\") property(Bool) done_af09a7\n\n            instance(x: 0, y: 0) contains_2c856f root.Std_k98ojb.List.Contains {}\n            instance(x: 0, y: 0) list_add_3bc2ae root.Std_k98ojb.List.Add {}\n\n            item_9f6850 -> contains_2c856f.item\n            for_7e4f1c.context -> contains_2c856f.list\n\n            contains_2c856f.result -> done_af09a7\n            Logic.Not(done_af09a7) -> list_add_3bc2ae.item\n            for_7e4f1c.context -> list_add_3bc2ae.list\n            list_add_3bc2ae.listWithItem -> for_7e4f1c.nextContext\n\n            contains_2c856f.result -> Std.If {\n                then: {\n                    item_9f6850 -> char_3bc2ae\n                    true -> for_7e4f1c.reset\n                }\n                else: {}\n            }\n        } -> for_7e4f1c.handler\n\n        List.Empty() -> for_7e4f1c.context\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7e4a1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8f2b3d root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9g6c4e root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7e4a1c.items\n\n        instance(x: 0, y: 0) func_10h2i3 {\n            in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9g6c4e\n\n            out(x: 515, y: 44, name: \"done\") trigger done_3bc2ae\n\n            instance(x: 0, y: 0) list_add_8f2b3d root.Std_k98ojb.List.Add {}\n            instance(x: 0, y: 0) contains_9g6c4e root.Std_k98ojb.List.Contains {}\n\n            item_9f6850 -> list_add_8f2b3d.item\n            list_add_8f2b3d.listWithItem -> contains_9g6c4e.list\n\n            instance(x: 0, y: 0) if_expression_a1b2c3 root.Std_k98ojb.Std.IfExpression {}\n            \"list.contains(item) ? item : null\" -> if_expression_a1b2c3.expression\n            list_add_8f2b3d.listWithItem -> if_expression_a1b2c3.list\n            item_9f6850 -> if_expression_a1b2c3.item\n\n            if_expression_a1b2c3.value -> char_3bc2ae\n            if_expression_a1b2c3.value -> done_3bc2ae\n        } -> for_7e4a1c.handler\n\n        for_7e4a1c.done -> done_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_3b1a5f\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_7c6d2e\n\n        instance(x: 0, y: 0) characters_4d8f9a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_5e1b2c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_6f4c5d root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_7g7d8e root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) if_8h0f1g root.Std_k98ojb.Std.If {}\n\n        input_3b1a5f -> characters_4d8f9a.input\n        characters_4d8f9a.characters -> for_5e1b2c.items\n\n        instance(x: 0, y: 0) func_9i2g3h {\n            in(x: -113, y: 34, name: \"item\") property(String) item_a03j4k\n            in(x: -113, y: 68, name: \"index\") property(Number) index_lm5n6o\n\n            out(x: 515, y: 44, name: \"trigger\") trigger_pq7r8s\n\n            instance(x: 0, y: 0) list_9t0u1v property(List)\n            instance(x: 0, y: 0) contains_2w3x4y root.Std_k98ojb.List.Contains {}\n            instance(x: 0, y: 0) if_5z6a7b root.Std_k98ojb.Std.If {}\n\n            list_9t0u1v -> contains_2w3x4y.list\n            item_a03j4k -> contains_2w3x4y.item\n\n            instance(x: 0, y: 0) func_8c9d0e {\n                out(x: 515, y: 44, name: \"trigger\") trigger_f1g2h3\n                item_a03j4k -> char_7c6d2e\n            } -> if_5z6a7b.then\n\n            instance(x: 0, y: 0) func_i4j5k6 {\n                out(x: 515, y: 44, name: \"trigger\") trigger_l7m8n9\n                item_a03j4k -> list_add_6f4c5d.item\n                list_9t0u1v -> list_add_6f4c5d.list\n            } -> if_5z6a7b.else\n\n            contains_2w3x4y.result -> if_5z6a7b.input\n        } -> for_5e1b2c.handler\n\n        for_5e1b2c.trigger -> trigger_pq7r8s\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index -> index_ai\n        index_ai -> constant_0.value\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }\n\n    constant(x: 0) constant_0 {}",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index -> index_ai\n        index_ai -> constant_0_ai.value\n        constant_0_ai -> remove_first_node.index\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n\n        constant(value: 0) constant_0_ai {}\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }"
            ],
            "40": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_3e5f7c root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_3e5f7c.first\n        find_odd_6d05b1.item -> mul_3e5f7c.second\n        mul_3e5f7c.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "func() find_product_of_first_even_and_odd {\n        in(x: 0, y: 0) property(List) numbers\n\n        out(x: 0, y: 100) property(Number) product\n\n        instance(x: 0, y: 20) first_even_3d4f8a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: 0) property(Number) num\n\n            out(x: 0, y: 50) property(Bool) is_even\n\n            instance(x: 0, y: 20) modulo_4d8f9b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 0, y: 70) notequal_5d2fa0 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_5d2fa0.right\n            modulo_4d8f9b.result -> notequal_5d2fa0.left\n            2 -> modulo_4d8f9b.divisor\n            num -> modulo_4d8f9b.value\n            notequal_5d2fa0.result -> is_even\n        } -> first_even_3d4f8a.predicate\n        numbers -> first_even_3d4f8a.items\n\n        instance(x: 0, y: 140) first_odd_6c9fb1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: 0) property(Number) num\n\n            out(x: 0, y: 50) property(Bool) is_odd\n\n            instance(x: 0, y: 20) modulo_7d1fc2 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 0, y: 70) notequal_8d6fd3 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_8d6fd3.right\n            modulo_7d1fc2.result -> notequal_8d6fd3.left\n            2 -> modulo_7d1fc2.divisor\n            num -> modulo_7d1fc2.value\n            notequal_8d6fd3.result -> is_odd\n        } -> first_odd_6c9fb1.predicate\n        numbers -> first_odd_6c9fb1.items\n\n        instance(x: 0, y: 220) multiply_9dbfe4 root.Std_k98ojb.Math.Mul {}\n        first_even_3d4f8a.item -> multiply_9dbfe4.first\n        first_odd_6c9fb1.item -> multiply_9dbfe4.second\n        multiply_9dbfe4.result -> product\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd numbers in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_3e4f7c root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_3e4f7c.first\n        find_odd_6d05b1.item -> mul_3e4f7c.second\n\n        mul_3e4f7c.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            modulo_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 100, y: 0) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> notequal_807ffe.right\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 0) mul_123 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123.first\n        find_odd_6d05b1.item -> mul_123.second\n        mul_123.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "func() first_even_odd_product {\n        in(x: 0, y: 0) property(List) numbers\n\n        out(x: 0, y: 100) property(Number) product\n\n        instance(x: 0, y: 20) find_first_even root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: 0) property(Number) num\n            out(x: 0, y: 30) property(Bool) is_even\n\n            instance(x: 0, y: 10) modulo root.Std_k98ojb.Math.Modulo {}\n            2 -> modulo.divisor\n            num -> modulo.value\n            modulo.result -> is_even\n        } -> find_first_even.predicate\n        numbers -> find_first_even.items\n\n        instance(x: 0, y: 60) find_first_odd root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: 0) property(Number) num\n            out(x: 0, y: 30) property(Bool) is_odd\n\n            instance(x: 0, y: 10) modulo root.Std_k98ojb.Math.Modulo {}\n            2 -> modulo.divisor\n            num -> modulo.value\n            instance(x: 0, y: 40) not root.Std_k98ojb.Logic.Not {}\n            modulo.result -> not.input\n            not.output -> is_odd\n        } -> find_first_odd.predicate\n        numbers -> find_first_odd.items\n\n        instance(x: 0, y: 100) multiply root.Std_k98ojb.Math.Mul {}\n        find_first_even.item -> multiply.first\n        find_first_odd.item -> multiply.second\n        multiply.result -> product\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_12345 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_12345.first\n        find_odd_6d05b1.item -> mul_12345.second\n\n        mul_12345.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "func(doc: \"Finds the product of the first even and odd number in a given list.\") first_even_odd_product {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_12345 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_12345.first\n        find_odd_6d05b1.item -> mul_12345.second\n        mul_12345.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}"
            ],
            "41": [
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            length_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_count_ai\n\n            instance(x: 105, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"count > 0 ? count - 1 : -1\" -> std_if_expression_node.expression\n            length_ai -> std_if_expression_node.count\n            next_count_ai -> std_if_expression_node.next_count\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 120, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger\n            std_for_node.reset\n            next_count_ai -> std_for_node.next\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> count_ai\n\n            instance(x: 45, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            count_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> index_ai\n\n            instance(x: 60, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 75, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_last_position_ai\n\n            instance(x: 90, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_last_position_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> result_ai\n\n            instance(x: 105, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_ai\n            std_for_node.done -> end_loop_ai\n            std_for_node.on_item -> process_item_ai\n            std_for_node.item -> current_item_ai\n            std_for_node.index -> current_index_ai\n\n            instance(x: 120, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            current_item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_current_position_ai\n\n            instance(x: 135, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_current_position_ai -> std_if_node.input\n            current_index_ai -> std_if_node.then\n            result_ai -> std_if_node.else\n            std_if_node.value -> result_ai\n\n            start_loop_ai -> std_for_node.trigger\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 165, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 210, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 255, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 300, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 345, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"index > 0\" -> std_if_expression_node.expression\n            index_ai -> std_if_expression_node.index\n            next_index_ai -> std_if_expression_node.then\n            -1 -> std_if_expression_node.else\n            std_if_expression_node.value -> new_index_ai\n\n            instance(x: 390, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            new_index_ai -> std_count_reset_node.reset\n\n            last_position_ai -> result_ai\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 105, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count.reset {}\n            next_index_ai -> std_count_reset_node.trigger\n\n            instance(x: 120, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 135, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"is_empty ? -1 : last_position\" -> std_if_expression_node.expression\n            is_empty_ai -> std_if_expression_node.is_empty\n            last_position_ai -> std_if_expression_node.last_position\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 150, y: 0) list_slice_node root.Std_k98ojb.List.Slice {}\n            array_ai -> list_slice_node.list\n            next_index_ai -> list_slice_node.start\n            -1 -> list_slice_node.end\n            list_slice_node.slice -> sliced_array_ai\n\n            instance(x: 165, y: 0) last_position_of_element_recursive_call root.main.last_position_of_element {}\n            sliced_array_ai -> last_position_of_element_recursive_call.array\n            element_ai -> last_position_of_element_recursive_call.element\n            last_position_of_element_recursive_call.result -> recursive_result_ai\n\n            instance(x: 180, y: 0) math_add_node root.Std_k98ojb.Math.Add {}\n            recursive_result_ai -> math_add_node.first\n            next_index_ai -> math_add_node.second\n            math_add_node.result -> final_position_ai\n\n            instance(x: 195, y: 0) std_if_expression_node_2 root.Std_k98ojb.Std.IfExpression {}\n            \"recursive_result == -1 ? last_position : final_position\" -> std_if_expression_node_2.expression\n            recursive_result_ai -> std_if_expression_node_2.recursive_result\n            last_position_ai -> std_if_expression_node_2.last_position\n            final_position_ai -> std_if_expression_node_2.final_position\n            std_if_expression_node_2.value -> result_ai\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0) property(List) list_ai\n            in(x: 150, y: 0) property(Number) target_ai\n            out(x: 39, y: 0) property(Number) result_ai\n\n            instance(x: 75, y: 0) iteration_find_node root.Iteration.Find {}\n            list_ai -> iteration_find_node.items\n            func(doc: \"predicate function\") predicate{\n                in(x: 0, y: 0) property(Number) item_ai\n                out(x: 39, y: 0) property(Boolean) result_ai\n\n                instance(x: 75, y: 0) logic_equal_node root.Logic.Equal {}\n                target_ai -> logic_equal_node.left\n                item_ai -> logic_equal_node.right\n                logic_equal_node.value -> result_ai\n            }\n            predicate -> iteration_find_node.predicate\n            iteration_find_node.item -> result_ai\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 105, y: 0) std_count_node reset_count_node root.Std_k98ojb.Std.Count {}\n            next_index_ai -> reset_count_node.reset\n            reset_count_node.value -> _\n\n            last_position_ai -> result_ai\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position_Of_Element\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            std_count_node.value -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 105, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"count > 0 ? last_position : -1\" -> std_if_expression_node.expression\n            count_ai -> std_if_expression_node.count\n            last_position_ai -> std_if_expression_node.last_position\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            next_index_ai -> std_count_node.reset\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> result_ai\n            std_if_node.else -> else_trigger_ai\n\n            instance(x: 45, y: -15) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            else_trigger_ai -> std_count_reset_node.reset\n\n            instance(x: 30, y: -15) std_count_decrement_node root.Std_k98ojb.Std.Count {}\n            else_trigger_ai -> std_count_decrement_node.count\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> count_ai\n\n            instance(x: 165, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            count_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> index_ai\n\n            instance(x: 210, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 255, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_last_position_ai\n\n            instance(x: 300, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_last_position_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> result_ai\n\n            instance(x: 345, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_ai\n            std_for_node.next -> next_item_ai\n            std_for_node.done -> end_loop_ai\n            std_for_node.item -> current_item_ai\n            std_for_node.index -> current_index_ai\n\n            instance(x: 390, y: 0) logic_equal_node_2 root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node_2.left\n            current_item_ai -> logic_equal_node_2.right\n            logic_equal_node_2.value -> is_current_position_ai\n\n            instance(x: 435, y: 0) std_if_node_2 root.Std_k98ojb.Std.If {}\n            is_current_position_ai -> std_if_node_2.input\n            current_index_ai -> std_if_node_2.then\n            result_ai -> std_if_node_2.else\n            std_if_node_2.value -> result_ai\n\n            instance(x: 480, y: 0) start_loop_ai root.Std_k98ojb.Trigger {}\n            start_loop_ai.trigger -> std_for_node.trigger\n\n            instance(x: 525, y: 0) next_item_ai root.Std_k98ojb.Trigger {}\n            next_item_ai.trigger -> std_for_node.next\n\n            instance(x: 570, y: 0) end_loop_ai root.Std_k98ojb.Trigger {}\n            end_loop_ai.trigger -> std_for_node.reset\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> result_ai\n            std_count_node.reset -> reset_count_trigger\n\n            instance(x: 90, y: 0) std_count_node2 root.Std_k98ojb.Std.Count {}\n            reset_count_trigger -> std_count_node2.reset\n            std_count_node.next -> std_count_node2.count\n\n            instance(x: 105, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 120, y: 0) std_if_node2 root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node2.input\n            -1 -> result_ai\n            std_count_node.trigger -> std_if_node2.then\n\n            std_if_node2.else -> std_count_node.trigger\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3323,
        "task_candidates": {
            "5": [
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a_9f7759\n                second: b_f9110a\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result_b2508f\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result_b2508f\n\n            mul_e38995.result -> getter_9cceb3.value\n            getter_9cceb3.value -> setter_1cedb2.new_value\n            execute_12bf99 -> mul_e38995.execute\n            setter_1cedb2.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n\n            execute_12bf99 -> mul_e38995.execute\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"product\") property(Number) product_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = product\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = product\n        a_9f7759 -> mul_e38995.first\n        b_f9110a -> mul_e38995.second\n        getter_9cceb3.value -> product_b2508f\n        mul_e38995.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n}",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n\n            execute_12bf99 -> mul_e38995.execute\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }",
                "func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"product\") property(Number) product_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n            first: a\n            second: b\n        }\n\n        execute_12bf99 -> mul_e38995.execute\n        mul_e38995.result -> product_b2508f\n        mul_e38995.continue -> continue_685c8f\n    }",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a_9f7759\n                second: b_f9110a\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result_b2508f\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result_b2508f\n\n            mul_e38995.result -> getter_9cceb3.value\n            getter_9cceb3.value -> setter_1cedb2.new_value\n            execute_12bf99 -> mul_e38995.execute\n            setter_1cedb2.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n\n            execute_12bf99 -> mul_e38995.execute\n            mul_e38995.result -> result_b2508f\n            mul_e38995.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> mul_e38995.first\n        b_f9110a -> mul_e38995.second\n        getter_9cceb3.value -> result_b2508f\n        mul_e38995.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n}",
                "module() main {\n        func(doc: \"multiplies two numbers\") Multiply {\n            in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n            in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n            in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n            out(x: 46, y: 158, name: \"result\") property(Number) result_b2508f\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n                first: a\n                second: b\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n\n            a_9f7759 -> mul_e38995.first\n            b_f9110a -> mul_e38995.second\n            getter_9cceb3.value -> result_b2508f\n            mul_e38995.result -> setter_1cedb2.new_value\n            execute_12bf99 -> mul_e38995.execute\n            setter_1cedb2.continue -> continue_685c8f\n        }\n    }",
                "module() main {\n    func(doc: \"multiplies two numbers\") Multiply {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"product\") property(Number) product_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_e38995 root.Math.Mul {\n            first: a_9f7759\n            second: b_f9110a\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = product\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = product\n\n        mul_e38995.result -> setter_1cedb2.new_value\n        execute_12bf99 -> mul_e38995.execute\n        getter_9cceb3.value -> product_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n}"
            ],
            "19": [
                "func(doc: \"Finds the difference between the largest and smallest value in a given list.\") LargestSmallestDifference {\n        in(x: 0, y: 0, name: \"items\") property(List) items_ai\n        out(x: 0, y: 100, name: \"difference\") property(Number) difference_ai\n\n        instance(x: -200, y: -50) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: -200, y: 150) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: 250) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(List) sample_list_ai = [10, 20, 30, 40, 50]\n\n    instance(x: 0, y: 0) largest_smallest_difference_instance root.LargestSmallestDifference {}\n    sample_list_ai -> largest_smallest_difference_instance.items\n    largest_smallest_difference_instance.difference -> result_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") largest_smallest_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"Finds the difference between the largest and smallest value in a given list.\") LargestSmallestDifference {\n        in(x: 0, y: 0) property(List) inputList\n        out(x: 0, y: 0) property(Number) difference\n\n        instance(x: 100, y: -50) maxNode root.List.Max {}\n        instance(x: 100, y: 50) minNode root.List.Min {}\n\n        inputList -> maxNode.list\n        inputList -> minNode.list\n\n        instance(x: 200, y: 0) subNode root.Math.Sub {}\n        maxNode.max -> subNode.first\n        minNode.min -> subNode.second\n\n        subNode.result -> difference\n    }",
                "func(doc: \"Finds the difference between the largest and smallest value in a given list.\") LargestSmallestDifference {\n        in(x: 0, y: 0) property(List) inputList\n        out(x: 0, y: 100) property(Number) difference\n\n        instance(x: 0, y: -50) maxNode root.List.Max {}\n        instance(x: 0, y: 50) minNode root.List.Min {}\n\n        inputList -> maxNode.list\n        inputList -> minNode.list\n\n        maxNode.max -> instance(x: 100, y: 0) subNode root.Math.Sub {}.first\n        minNode.min -> subNode.second\n\n        subNode.result -> difference\n    }",
                "func(doc: \"finds the difference between the largest and smallest value in a given list.\") difference_between_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    in(x: 426, y: -303, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n    instance(x: 426, y: -303) difference_between_max_min_node root.difference_between_max_min {}\n\n    items_ai -> difference_between_max_min_node.items\n    difference_between_max_min_node.difference -> difference_ai",
                "func(doc: \"finds the difference between the largest and smallest value in a list.\") largest_smallest_difference {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_ai\n\n        in(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        in(x: 426, y: -303, name: \"min\") property(Number) min_ai\n\n        instance(x: 426, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_ai -> math_sub_node.first\n        min_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }",
                "func(doc: \"finds the difference between largest and smallest value in a given list.\") difference_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai",
                "func(doc: \"Finds the difference between the largest and smallest value in a given list.\") LargestSmallestDifference {\n        in(x: 0, y: 0) property(List) inputList\n        out(x: 0, y: 0) property(Number) difference\n\n        instance(x: 100, y: -50) maxNode root.List.Max {}\n        instance(x: 100, y: 50) minNode root.List.Min {}\n\n        inputList -> maxNode.list\n        inputList -> minNode.list\n\n        instance(x: 200, y: 0) subNode root.Math.Sub {}\n        maxNode.max -> subNode.first\n        minNode.min -> subNode.second\n\n        subNode.result -> difference\n    }",
                "func(doc: \"Finds the difference between the largest and smallest value in a given list.\") LargestSmallestDifference {\n        in(x: 0, y: 0) property(List) inputList\n        out(x: 0, y: 0) property(Number) difference\n\n        instance(x: 100, y: -50) maxNode root.List.Max {}\n        instance(x: 100, y: 50) minNode root.List.Min {}\n\n        inputList -> maxNode.list\n        inputList -> minNode.list\n\n        instance(x: 200, y: 0) subNode root.Math.Sub {}\n        maxNode.max -> subNode.first\n        minNode.min -> subNode.second\n\n        subNode.result -> difference\n    }",
                "func(doc: \"finds the difference between largest and smallest value in a given list.\") difference_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 0, y: 0) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.list\n        list_max_node.max -> max_value_ai\n\n        instance(x: 0, y: -100) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.list\n        list_min_node.min -> min_value_ai\n\n        instance(x: 0, y: -200) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_sub_node.first\n        min_value_ai -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai"
            ],
            "20": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_123456.left\n        find_odd_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "func() find_difference {\n        in(x: 0, y: 0) property(List) numbers\n\n        out(x: 0, y: 150) property(Number) difference\n\n        instance(x: 0, y: 60) first_even root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 20) property(Number) num\n            out(x: 40, y: 15) property(Bool) is_even\n\n            instance(x: 0, y: 0) modulo root.Std_k98ojb.Math.Modulo {}\n            instance(x: 60, y: 0) equal root.Std_k98ojb.Logic.Equal {}\n\n            num -> modulo.value\n            2 -> modulo.divisor\n            modulo.result -> equal.left\n            0 -> equal.right\n            equal.result -> is_even\n        } -> first_even.predicate\n\n        instance(x: 0, y: 120) first_odd root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 20) property(Number) num\n            out(x: 40, y: 15) property(Bool) is_odd\n\n            instance(x: 0, y: 0) modulo root.Std_k98ojb.Math.Modulo {}\n            instance(x: 60, y: 0) not_equal root.Std_k98ojb.Logic.NotEqual {}\n\n            num -> modulo.value\n            2 -> modulo.divisor\n            modulo.result -> not_equal.left\n            0 -> not_equal.right\n            not_equal.result -> is_odd\n        } -> first_odd.predicate\n\n        numbers -> first_even.items\n        numbers -> first_odd.items\n\n        instance(x: 0, y: 180) sub root.Std_k98ojb.Math.Sub {}\n        first_even.item -> sub.first\n        first_odd.item -> sub.second\n        sub.result -> difference\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_first_even_6d05b0.predicate\n        list_abed4a -> find_first_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_first_odd_6d05b1.predicate\n        list_abed4a -> find_first_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b0.item -> sub_12345.left\n        find_first_odd_6d05b1.item -> sub_12345.right\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_12345.left\n        find_odd_6d05b1.item -> sub_12345.right\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 50) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_12345.left\n        find_odd_6d05b1.item -> sub_12345.right\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_123456.left\n        find_odd_6d05b1.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_abed4a -> find_first_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_first_even_6d05b1.predicate\n        list_abed4a -> find_first_even_6d05b1.items\n\n        instance(x: 200, y: 200) sub_123456 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b1.item -> sub_123456.left\n        find_first_odd_6d05b0.item -> sub_123456.right\n        sub_123456.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") diff_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) sub_3e5f7c root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_3e5f7c.left\n        find_odd_6d05b1.item -> sub_3e5f7c.right\n        sub_3e5f7c.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_first_even_odd_2c856f root.main.diff_first_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_first_odd_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_first_odd_6d05b0.predicate\n        list_abed4a -> find_first_odd_6d05b0.items\n\n        instance(x: 0, y: 100) find_first_even_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_first_even_6d05b1.predicate\n        list_abed4a -> find_first_even_6d05b1.items\n\n        instance(x: 200, y: 200) sub_1 root.Std_k98ojb.Math.Sub {}\n        find_first_even_6d05b1.item -> sub_1.left\n        find_first_odd_6d05b0.item -> sub_1.right\n\n        sub_1.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between the first even and first odd number in a given list.\") find_difference {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) sub_12345 root.Std_k98ojb.Math.Sub {}\n        find_even_6d05b0.item -> sub_12345.left\n        find_odd_6d05b1.item -> sub_12345.right\n        sub_12345.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_difference_2c856f root.main.find_difference {}\n}"
            ],
            "21": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 147, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 147) div_8eee0e root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_8eee0e.first\n        n_0c0609 -> div_8eee0e.second\n        div_8eee0e.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 106, y: 208) div_8974a2 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_8974a2.first\n        n_0c0609 -> div_8974a2.second\n        div_8974a2.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 153, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 153) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 372, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 148) div_8eee0e root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_8eee0e.first\n        n_0c0609 -> div_8eee0e.second\n        div_8eee0e.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 87, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> reduce_3a8e90.initialValue\n        n_0c0609 -> reduce_3a8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 114) div_8974a2 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_8974a2.first\n        n_0c0609 -> div_8974a2.second\n        div_8974a2.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 147, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 149) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 103, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 612, y: 103) div_3a8e90 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_3a8e90.first\n        n_0c0609 -> div_3a8e90.second\n        div_3a8e90.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 103, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 106, y: 154) div_0f3be6 root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_0f3be6.first\n        n_0c0609 -> div_0f3be6.second\n        div_0f3be6.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 114, name: \"average\") property(Number) average_2ad0d5\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 114) div_8eee0e root.Std_k98ojb.Math.Div {}\n        reduce_3a8e90.output -> div_8eee0e.first\n        n_0c0609 -> div_8eee0e.second\n        div_8eee0e.result -> average_2ad0d5\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum and average of first n natural numbers.\") sum_and_average {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n        out(x: 1090, y: 148, name: \"average\") property(Number) average_7f6b9a\n\n        instance(x: 88, y: 54) generaterange_6e8af5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 472, y: 56) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> generaterange_6e8af5.from\n        n_0c0609 -> generaterange_6e8af5.to\n        generaterange_6e8af5.list -> reduce_3a8e90.items\n        0 -> reduce_3a8e90.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) current_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 818, y: -74) add_8974a2 root.Std_k98ojb.Math.Add {}\n            current_c750f1 -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2ad0d5\n\n        instance(x: 618, y: 148) div_7f6b9a root.Std_k98ojb.Math.Div {}\n        sum_2ad0d5 -> div_7f6b9a.first\n        n_0c0609 -> div_7f6b9a.second\n        div_7f6b9a.result -> average_7f6b9a\n    }\n\n    \n\n    instance(x: -272, y: 115) sum_and_average_6c92e0 root.main.sum_and_average {}\n}"
            ],
            "22": [
                "func(doc:\"check if the given number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1045, y: 89) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 150) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1054, y: 76) is_zero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        is_zero_7b3b7b.value -> is_even_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -102, y: 43, name: \"number\") property(Number) number_ai\n        out(x: 589, y: 46, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 76, y: 126) modulo_0a3b3b root.Math.Modulo {\n            value: 2\n        }\n        number_ai -> modulo_0a3b3b.divisor\n        number_ai -> modulo_0a3b3b.value\n        instance(x: 458, y: 126) is_equal_7c9d9c root.Logic.Equal {\n            right: 0\n        }\n        modulo_0a3b3b.result -> is_equal_7c9d9c.left\n        is_equal_7c9d9c.value -> is_even_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) is_zero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        is_zero_7b3b7b.value -> is_even_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1084, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1045, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }",
                "func(doc:\"Check if a number is even.\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Math.Modulo {\n            value: number_ai,\n            divisor: 2\n        }\n        instance(x: 1054, y: 76) isEqualToZero_7b3b7b root.Logic.Equal {\n            left: modulo_7b3b7b.result,\n            right: 0\n        }\n        isEqualToZero_7b3b7b.value -> isEven_ai\n    }"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7a4f1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8e23d4 root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9d578a root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7a4f1c.items\n\n        instance(x: 0, y: 0) if_ae23d4 root.Std_k98ojb.Std.If {}\n        contains_9d578a.result -> if_ae23d4.input\n        for_7a4f1c.item -> list_add_8e23d4.item\n\n        instance(x: 0, y: 0) list_empty_bf678a root.Std_k98ojb.List.Empty {}\n        list_empty_bf678a.list -> list_add_8e23d4.list\n        list_add_8e23d4.listWithItem -> contains_9d578a.list\n\n        for_7a4f1c.item -> contains_9d578a.item\n\n        if_ae23d4.then -> char_3bc2ae\n        for_7a4f1c.item -> if_ae23d4.then\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "func() first_repeated_char {\n        in(x: 0, y: 0) property(String) input_string\n\n        out(x: 200, y: 0) property(Char) result_char\n\n        instance(x: 50, y: 100) characters_7a8b9c root.Strings.Characters {}\n        instance(x: 100, y: 200) for_loop_123456 root.Std.For {}\n        instance(x: 150, y: 300) list_add_234567 root.List.Add {}\n        instance(x: 200, y: 400) list_contains_345678 root.List.Contains {}\n\n        input_string -> characters_7a8b9c.input\n        characters_7a8b9c.characters -> for_loop_123456.items\n\n        instance(x: 250, y: 500) if_expression_456789 root.Std.IfExpression {}\n\n        list_add_234567.listWithItem -> if_expression_456789.a\n        for_loop_123456.item -> if_expression_456789.b\n\n        instance(x: 300, y: 600) if_567890 root.Std.If {}\n\n        if_expression_456789.value -> if_567890.input\n        for_loop_123456.item -> result_char\n\n        list_add_234567.list -> list_contains_345678.list\n        for_loop_123456.item -> list_contains_345678.item\n\n        list_contains_345678.result -> if_expression_456789.expression\n\n        instance(x: 0, y: 0) empty_list_678901 root.List.Empty {}\n\n        empty_list_678901.list -> list_add_234567.list\n        for_loop_123456.item -> list_add_234567.item\n\n        if_567890.then -> for_loop_123456.next\n    }",
                "func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_3a1b2c\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Strings.Characters {}\n        instance(x: 0, y: 0) seen_chars_klmnop root.List.Empty {}\n        instance(x: 0, y: 0) for_qrstuv root.Std.For {}\n\n        input_3a1b2c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> for_qrstuv.items\n\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_wxyzab\n\n            out(x: 515, y: 44, name: \"done\") property(Bool) done_cdefgh\n\n            instance(x: 0, y: 0) contains_ijklmn root.List.Contains {}\n            instance(x: 0, y: 0) add_opqrst root.List.Add {}\n\n            char_wxyzab -> contains_ijklmn.item\n            seen_chars_klmnop -> contains_ijklmn.list\n            contains_ijklmn.result -> done_cdefgh\n\n            Logic.Not(done_cdefgh) -> add_opqrst.trigger\n            char_wxyzab -> add_opqrst.item\n            seen_chars_klmnop -> add_opqrst.list\n            add_opqrst.listWithItem -> seen_chars_klmnop\n\n            done_cdefgh -> for_qrstuv.reset\n            char_wxyzab -> char_4d5e6f\n        } -> for_qrstuv.on_item\n\n        for_qrstuv.done -> done_cdefgh\n    }",
                "func() first_repeated_char {\n        in(x: 0, y: 0) property(String) input_string\n\n        out(x: 250, y: 0) property(Char) result_char\n\n        instance(x: 100, y: 0) characters_3489a7 root.Strings.Characters {}\n        instance(x: 200, y: 0) for_loop_6789b8 root.Std.For {}\n        instance(x: 300, y: 0) list_add_9abcde root.List.Add {}\n        instance(x: 400, y: 0) list_contains_fghi12 root.List.Contains {}\n\n        input_string -> characters_3489a7.input\n        characters_3489a7.characters -> for_loop_6789b8.items\n\n        func() {\n            in(x: 0, y: 0) property(Char) current_char\n            out(x: 250, y: 0) property(Bool) found_repeated\n\n            instance(x: 100, y: 0) list_contains_3489a7 root.List.Contains {}\n            instance(x: 200, y: 0) std_if_6789b8 root.Std.If {}\n\n            current_char -> list_contains_3489a7.item\n            for_loop_6789b8.context -> list_contains_3489a7.list\n\n            list_contains_3489a7.contains -> std_if_6789b8.input\n            func() {\n                current_char -> result_char\n                true -> found_repeated\n            } -> std_if_6789b8.then\n            func() {\n                current_char -> list_add_9abcde.item\n                for_loop_6789b8.context -> list_add_9abcde.list\n                list_add_9abcde.listWithItem -> for_loop_6789b8.nextContext\n                false -> found_repeated\n            } -> std_if_6789b8.else\n\n        } -> for_loop_6789b8.on_item\n\n    }",
                "module() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Strings.Characters {}\n        instance(x: 0, y: 0) seen_7e1f4c root.List.Empty {}\n        instance(x: 0, y: 0) for_8f2a3d root.Std_k98ojb.For {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_8f2a3d.items\n\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Char) item_9f6850\n\n            out(x: 515, y: 44, name: \"done\") property(Bool) done_af09a7\n\n            instance(x: 0, y: 0) contains_1088d5 root.List.Contains {}\n            instance(x: 0, y: 0) add_234567 root.List.Add {}\n\n            item_9f6850 -> contains_1088d5.item\n            seen_7e1f4c -> contains_1088d5.list\n\n            func() {\n                item_9f6850 -> char_3bc2ae\n                true -> done_af09a7\n            } -> contains_1088d5.@true\n\n            func() {\n                seen_7e1f4c -> add_234567.list\n                item_9f6850 -> add_234567.item\n                add_234567.listWithItem -> seen_7e1f4c\n            } -> contains_1088d5.@false\n\n        } -> for_8f2a3d.@on item\n\n        false -> done_af09a7\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_3a1b2c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 100) for_0j1k2l root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 200) list_add_3m4n5o root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 300) contains_6p7q8r root.Std_k98ojb.List.Contains {}\n\n        input_3a1b2c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> for_0j1k2l.items\n\n        instance(x: 50, y: 150) item_9s0t1u property(Char)\n        for_0j1k2l.item -> item_9s0t1u\n        list_add_3m4n5o.listWithItem -> for_0j1k2l.context\n\n        instance(x: 50, y: 250) seen_chars_2v3w4x property(List)\n        List.Empty() -> seen_chars_2v3w4x\n        seen_chars_2v3w4x -> list_add_3m4n5o.list\n        item_9s0t1u -> list_add_3m4n5o.item\n\n        instance(x: 50, y: 350) is_repeated_5y6z7a property(Bool)\n        seen_chars_2v3w4x -> contains_6p7q8r.list\n        item_9s0t1u -> contains_6p7q8r.item\n        contains_6p7q8r.result -> is_repeated_5y6z7a\n\n        instance(x: 50, y: 450) if_8b9c0d root.Std_k98ojb.Std.If {}\n        is_repeated_5y6z7a -> if_8b9c0d.input\n        item_9s0t1u -> if_8b9c0d.then\n        for_0j1k2l.next -> if_8b9c0d.else\n\n        if_8b9c0d.value -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2e3f4g root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7f8a1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8e2b3d root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9f6850 root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7f8a1c.items\n\n        instance(x: 0, y: 0) if_ae2b3d root.Std_k98ojb.Std.If {}\n        contains_9f6850.result -> if_ae2b3d.input\n        for_7f8a1c.item -> char_3bc2ae [if_ae2b3d.then]\n        \n        list_add_8e2b3d.listWithItem -> for_7f8a1c.next\n\n        instance(x: 0, y: 0) empty_list_b9f685 root.Std_k98ojb.List.Empty {}\n        empty_list_b9f685.list -> list_add_8e2b3d.list\n        for_7f8a1c.item -> list_add_8e2b3d.item\n\n        list_add_8e2b3d.listWithItem -> contains_9f6850.list\n        for_7f8a1c.item -> contains_9f6850.item\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_7e4a1c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) list_add_8f2b3d root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) contains_9g5c4e root.Std_k98ojb.List.Contains {}\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> for_7e4a1c.items\n\n        instance(x: 0, y: 0) if_a12d5f root.Std_k98ojb.Std.If {}\n        contains_9g5c4e.result -> if_a12d5f.input\n        for_7e4a1c.item -> char_3bc2ae [if_a12d5f.then]\n        for_7e4a1c.next [if_a12d5f.else]\n\n        list_add_8f2b3d.listWithItem -> for_7e4a1c.context\n        for_7e4a1c.context -> contains_9g5c4e.list\n\n        for_7e4a1c.item -> list_add_8f2b3d.item\n        List.Empty() -> list_add_8f2b3d.list\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "func() first_repeated_char {\n        in(x: 0, y: 0) property(String) input_string\n        out(x: 200, y: 0) property(Char) result_char\n\n        instance(x: 50, y: 100) characters_345678 root.Strings.Characters {}\n        instance(x: 150, y: 100) for_loop_901234 root.Std.For {}\n        instance(x: 250, y: 100) list_add_567890 root.List.Add {}\n        instance(x: 350, y: 100) list_contains_098765 root.List.Contains {}\n\n        input_string -> characters_345678.input\n        characters_345678.characters -> for_loop_901234.items\n\n        func() {\n            in(x: 0, y: 0) property(Char) current_char\n            out(x: 200, y: 0) property(Bool) continue_loop\n\n            instance(x: 50, y: 50) list_add_123456 root.List.Add {}\n            instance(x: 150, y: 50) list_contains_654321 root.List.Contains {}\n\n            current_char -> list_add_123456.item\n            for_loop_901234.context -> list_add_123456.list\n\n            list_add_123456.listWithItem -> list_contains_654321.list\n            current_char -> list_contains_654321.item\n\n            instance(x: 250, y: 50) std_if_789012 root.Std.If {}\n            list_contains_654321.result -> std_if_789012.input\n            func() {\n                current_char -> result_char\n                false -> continue_loop\n            } -> std_if_789012.then\n            func() {\n                true -> continue_loop\n            } -> std_if_789012.else\n\n        } -> for_loop_901234.handler\n\n    }",
                "func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Strings.Characters {}\n        instance(x: 0, y: 0) count_map_7e1f9c root.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Object) acc_9f6850\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6851\n\n            out(x: 515, y: 44, name: \"new_acc\") property(Object) new_acc_af09a7\n\n            instance(x: 0, y: 0) get_count_1088d5 root.List.GetAt {}\n            instance(x: 0, y: 0) add_count_807ffd root.Math.Add {}\n            instance(x: 0, y: 0) set_count_b2c3e4 root.Iteration.Map {}\n\n            char_9f6851 -> get_count_1088d5.index\n            acc_9f6850 -> get_count_1088d5.list\n            1 -> add_count_807ffd.second\n            get_count_1088d5.value -> add_count_807ffd.first\n            add_count_807ffd.result -> set_count_b2c3e4.item\n            char_9f6851 -> set_count_b2c3e4.handler\n            acc_9f6850 -> set_count_b2c3e4.items\n            set_count_b2c3e4.output_list -> new_acc_af09a7\n        } -> count_map_7e1f9c.reducer\n        instance(x: 0, y: 0) find_repeated_6d05b0 root.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 0, y: 0) get_count_1088d5 root.List.GetAt {}\n            instance(x: 0, y: 0) greater_than_807ffd root.Math.GreaterThan {}\n\n            char_9f6850 -> get_count_1088d5.index\n            count_map_7e1f9c.accumulator -> get_count_1088d5.list\n            1 -> greater_than_807ffd.right\n            get_count_1088d5.value -> greater_than_807ffd.left\n            greater_than_807ffd.result -> bool_af09a7\n        } -> find_repeated_6d05b0.predicate\n\n        input_abed4a -> characters_6d05b0.input\n        characters_6d05b0.characters -> count_map_7e1f9c.items\n        List.Empty() -> count_map_7e1f9c.initial_accumulator\n        count_map_7e1f9c.accumulator -> find_repeated_6d05b0.items\n        find_repeated_6d05b0.item -> char_3bc2ae\n    }"
            ],
            "35": [
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }\n\n    in(x: -426, y: -248, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n    instance(x: 0, y: 0) second_smallest_num_node root.second_smallest_num {}\n    items_ai -> second_smallest_num_node.items\n    second_smallest_num_node.second_min -> second_min_ai",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }\n\n    in(x: -426, y: -248, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n    instance(x: 0, y: 0) second_smallest_num_node root.second_smallest_num {}\n    items_ai -> second_smallest_num_node.items\n    second_smallest_num_node.second_min -> second_min_ai",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }\n\n    in(x: -426, y: -248, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n    instance(x: 0, y: 0) second_smallest_num_node root.second_smallest_num {}\n    items_ai -> second_smallest_num_node.items\n    second_smallest_num_node.second_min -> second_min_ai",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }\n\n    in(x: -426, y: -248, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n    instance(x: 0, y: 0) second_smallest_num_node root.second_smallest_num {}\n    items_ai -> second_smallest_num_node.items\n    second_smallest_num_node.second_min -> second_min_ai",
                "func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) sort_node root.List.Sort {}\n        items_ai -> sort_node.list\n        sort_node.sorted_list -> sorted_items_ai\n\n        instance(x: 0, y: 50) get_first_node root.List.FirstItem {}\n        sorted_items_ai -> get_first_node.list\n        get_first_node.item -> first_min_ai\n\n        instance(x: 0, y: 100) remove_first_node root.List.Remove {}\n        sorted_items_ai -> remove_first_node.list\n        remove_first_node.index = 0\n        remove_first_node.listWithoutItem -> remaining_items_ai\n\n        instance(x: 0, y: 150) get_second_node root.List.FirstItem {}\n        remaining_items_ai -> get_second_node.list\n        get_second_node.item -> second_min_ai\n    }\n\n    in(x: -426, y: -248, name: \"items\") property(List) items_ai\n    out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n    instance(x: 0, y: 0) second_smallest_num_node root.second_smallest_num {}\n    items_ai -> second_smallest_num_node.items\n    second_smallest_num_node.second_min -> second_min_ai"
            ],
            "40": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 300, y: 50) mul_12345 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_12345.first\n        find_odd_6d05b1.item -> mul_12345.second\n        mul_12345.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "func(doc: \"Finds the product of the first even and odd number in a given list.\") product_of_first_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 0) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffe root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffe.right\n            modulo_1088d6.result -> equal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            equal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) mul_12345 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_12345.first\n        find_odd_6d05b1.item -> mul_12345.second\n        mul_12345.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 100) mul_6d05b2 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_6d05b2.first\n        find_odd_6d05b1.item -> mul_6d05b2.second\n        mul_6d05b2.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}",
                "func(doc: \"Finds the product of the first even and odd numbers in a given list.\") first_even_odd_product {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n\n        mul_123456.result -> product_3bc2ae\n    }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the product of the first even and odd number in a given list.\") product_even_odd {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"product\") property(Number) product_3bc2ae\n\n        instance(x: 0, y: 0) find_even_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_807ffd.right\n            modulo_1088d5.result -> equal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            equal_807ffd.result -> bool_af09a7\n        } -> find_even_6d05b0.predicate\n        list_abed4a -> find_even_6d05b0.items\n\n        instance(x: 0, y: 100) find_odd_6d05b1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6851\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a8\n\n            instance(x: 89, y: 29) modulo_1088d6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffe root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffe.right\n            modulo_1088d6.result -> notequal_807ffe.left\n            2 -> modulo_1088d6.divisor\n            elem_9f6851 -> modulo_1088d6.value\n            notequal_807ffe.result -> bool_af09a8\n        } -> find_odd_6d05b1.predicate\n        list_abed4a -> find_odd_6d05b1.items\n\n        instance(x: 200, y: 200) mul_123456 root.Std_k98ojb.Math.Mul {}\n        find_even_6d05b0.item -> mul_123456.first\n        find_odd_6d05b1.item -> mul_123456.second\n        mul_123456.result -> product_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) product_even_odd_2c856f root.main.product_even_odd {}\n}"
            ],
            "41": [
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            length_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_count_ai\n\n            instance(x: 105, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"count > 0 ? count - 1 : -1\" -> std_if_expression_node.expression\n            length_ai -> std_if_expression_node.count\n            next_count_ai -> std_if_expression_node.next_count\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 120, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger\n            std_for_node.reset\n            next_count_ai -> std_for_node.next\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 32, y: 48) count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> count_node.reset\n            count_node.count -> index_ai\n\n            instance(x: 15, y: 96) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> adjusted_index_ai\n\n            instance(x: 32, y: 144) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            adjusted_index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 64, y: 192) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 32, y: 240) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            adjusted_index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> result_ai\n\n            instance(x: 32, y: 288) logic_not_node root.Std_k98ojb.Logic.Not {}\n            is_equal_ai -> logic_not_node.input\n            logic_not_node.output -> not_is_equal_ai\n\n            instance(x: 64, y: 336) std_if_node_2 root.Std_k98ojb.Std.If {}\n            not_is_equal_ai -> std_if_node_2.input\n            count_node.count -> std_if_node_2.trigger\n            -1 -> std_if_node_2.then\n            adjusted_index_ai -> std_if_node_2.else\n\n            instance(x: 32, y: 384) math_sub_node_2 root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node_2.first\n            1 -> math_sub_node_2.second\n            math_sub_node_2.result -> new_index_ai\n\n            new_index_ai -> count_node.count\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> result_ai\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 165, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 210, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 255, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 300, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            length_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> sub_result_ai\n\n            instance(x: 345, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"sub_result_ai > 0 ? sub_result_ai : 0\" -> std_if_expression_node.expression\n            std_if_expression_node.value -> next_count_ai\n\n            next_count_ai -> std_count_node.count\n            last_position_ai -> result_ai\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position_Of_Element\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> count_ai\n\n            instance(x: 165, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            count_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> index_ai\n\n            instance(x: 210, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 255, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_last_position_ai\n\n            instance(x: 300, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_last_position_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> result_ai\n\n            instance(x: 345, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.on_item -> on_item_ai\n            std_for_node.done -> done_ai\n\n            instance(x: 390, y: 0) logic_equal_node_2 root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node_2.left\n            std_for_node.item -> logic_equal_node_2.right\n            logic_equal_node_2.value -> is_position_ai\n\n            instance(x: 435, y: 0) std_if_node_2 root.Std_k98ojb.Std.If {}\n            is_position_ai -> std_if_node_2.input\n            std_for_node.index -> std_if_node_2.then\n            result_ai -> std_if_node_2.else\n            std_if_node_2.value -> result_ai\n\n            instance(x: 480, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            done_ai -> std_count_reset_node.reset\n        }\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> result_ai\n            std_count_node.reset -> reset_trigger\n\n            instance(x: 90, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_trigger\n            std_for_node.next -> next_trigger\n            std_for_node.done -> done_trigger\n            std_for_node.item -> item_ai\n            std_for_node.index -> index_ai\n\n            instance(x: 105, y: 0) logic_not_node root.Std_k98ojb.Logic.Not {}\n            done_trigger -> logic_not_node.input\n            logic_not_node.value -> continue_trigger\n\n            instance(x: 120, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            continue_trigger -> std_if_node.input\n            next_trigger -> std_if_node.then\n            reset_trigger -> std_if_node.else\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 120, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 165, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 210, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 255, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_position_ai\n\n            instance(x: 300, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            instance(x: 345, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"index > 0 ? last_position : -1\" -> std_if_expression_node.expression\n            index_ai -> std_if_expression_node.index\n            last_position_ai -> std_if_expression_node.last_position\n            std_if_expression_node.value -> result_ai\n\n            next_index_ai -> std_count_node.reset\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> count_ai\n\n            instance(x: 45, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            count_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> index_ai\n\n            instance(x: 60, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 75, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_last_position_ai\n\n            instance(x: 90, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_last_position_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> result_ai\n\n            instance(x: 120, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_ai\n            std_for_node.on_item -> process_item_ai\n            std_for_node.done -> end_loop_ai\n\n            instance(x: 135, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            std_for_node.item -> logic_equal_node.right\n            logic_equal_node.value -> is_current_position_ai\n\n            instance(x: 150, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_current_position_ai -> std_if_node.input\n            std_for_node.index -> std_if_node.then\n            result_ai -> std_if_node.else\n            std_if_node.value -> result_ai\n\n            start_loop_ai -> std_for_node.trigger\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 150, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            std_count_node.value -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            std_count_node.value -> result_ai\n            std_if_node.else -> decrement_count_trigger\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            std_count_node.value -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> new_count_ai\n\n            instance(x: 105, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            new_count_ai -> std_count_reset_node.count\n\n            instance(x: 120, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            \"count > 0 ? count : -1\" -> std_if_expression_node.expression\n            std_count_node.value -> std_if_expression_node.count\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 135, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_trigger\n            std_for_node.next -> next_item_trigger\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 150, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 165, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node.input\n            -1 -> result_ai\n            std_if_node.else -> start_loop_trigger\n\n            instance(x: 180, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_reset_node.count\n\n            instance(x: 195, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_trigger\n            std_for_node.next -> next_item_trigger\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 210, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 225, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node.input\n            -1 -> result_ai\n            std_if_node.else -> start_loop_trigger\n\n            instance(x: 240, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_reset_node.count\n\n            instance(x: 255, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_trigger\n            std_for_node.next -> next_item_trigger\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 270, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 285, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node.input\n            -1 -> result_ai\n            std_if_node.else -> start_loop_trigger\n\n            instance(x: 300, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_reset_node.count\n\n            instance(x: 315, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_trigger\n            std_for_node.next -> next_item_trigger\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 330, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 345, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node.input\n            -1 -> result_ai\n            std_if_node.else -> start_loop_trigger\n\n            instance(x: 360, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_reset_node.count\n\n            instance(x: 375, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_trigger\n            std_for_node.next -> next_item_trigger\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 390, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 405, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node.input\n            -1 -> result_ai\n            std_if_node.else -> start_loop_trigger\n\n            instance(x: 420, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_reset_node.count\n\n            instance(x: 435, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_trigger\n            std_for_node.next -> next_item_trigger\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 450, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 465, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node.input\n            -1 -> result_ai\n            std_if_node.else -> start_loop_trigger\n\n            instance(x: 480, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_reset_node.count\n\n            instance(x: 495, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for_node.trigger -> start_loop_trigger\n            std_for_node.next -> next_item_trigger\n            std_if_expression_node.value -> result_ai\n\n            instance(x: 510, y: 0) list_is_empty_node root.Std_k98ojb.List.IsEmpty {}\n            array_ai -> list_is_empty_node.list\n            list_is_empty_node.isEmpty -> is_empty_ai\n\n            instance(x: 525, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_empty_ai -> std_if_node.input\n            -1 -> result_ai\n            std_if_node.else -> start_loop_trigger\n\n            instance(x: 540, y: 0) std_count_reset_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_reset_node.count\n\n            instance(x: 555, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n            array_ai -> std_for_node.items\n            std_for",
                "module() main {\n        func(doc: \"find the last position of an element in a sorted array.\") last_position_of_element{\n            in(x: 0, y: 0, name: \"array\") property(List) array_ai\n            in(x: 128, y: 0, name: \"element\") property(Number) element_ai\n            out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n            array_ai -> list_length_node.list\n            list_length_node.length -> length_ai\n\n            instance(x: 30, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n            length_ai -> std_count_node.count\n            std_count_node.value -> index_ai\n\n            instance(x: 45, y: 0) list_get_at_node root.Std_k98ojb.List.GetAt {}\n            array_ai -> list_get_at_node.list\n            index_ai -> list_get_at_node.index\n            list_get_at_node.item -> item_ai\n\n            instance(x: 60, y: 0) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n            element_ai -> logic_equal_node.left\n            item_ai -> logic_equal_node.right\n            logic_equal_node.value -> is_equal_ai\n\n            instance(x: 75, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n            is_equal_ai -> std_if_node.input\n            index_ai -> std_if_node.then\n            -1 -> std_if_node.else\n            std_if_node.value -> last_index_ai\n\n            instance(x: 90, y: 0) math_sub_node root.Std_k98ojb.Math.Sub {}\n            index_ai -> math_sub_node.first\n            1 -> math_sub_node.second\n            math_sub_node.result -> next_index_ai\n\n            next_index_ai -> std_count_node.reset\n\n            last_index_ai -> result_ai\n        }\n\n        instance(x: 264, y: -464, name: \"last_Position\") last_091f94 root.main.last_position_of_element {}\n    }"
            ]
        }
    }
]