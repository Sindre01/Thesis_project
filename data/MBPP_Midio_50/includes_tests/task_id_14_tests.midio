import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main { 
    
    func(doc: "gets the sum of the digits of a non-negative integer.") sum_digits {
        in(x: -450, y: -421, name: "execute") trigger() execute_cdac2a
        in(x: -436, y: -213, name: "n") property(Number) n_6b655b

        out(x: 1146, y: -647, name: "continue") trigger() continue_d9efd7
        out(x: 1169, y: -269, name: "output") property(Number) output_732a8a

        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {
            expression: "n <= 0"
        }
        instance(x: 395, y: -378) sum_digits_96023e root.main.sum_digits {}
        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}
        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}
        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}
        setter(x: -215, y: -463, name: "setter_41e4ad") setter_41e4ad = sum
        setter(x: 875, y: -518, name: "setter_375321") setter_375321 = sum
        getter(x: 902, y: -314, name: "getter_38583a") getter_38583a = sum
        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}
        10 -> modulo_adfa16.divisor
        modulo_adfa16.result -> add_88bb8a.first
        10 -> div_547f34.second
        div_547f34.result -> sum_digits_96023e.n_6b655b
        0 -> setter_41e4ad.new_value
        setter_41e4ad.continue -> ifexpression_3d7de6.execute
        ifexpression_3d7de6.then -> continue_d9efd7
        execute_cdac2a -> setter_41e4ad.execute
        ifexpression_3d7de6.else -> sum_digits_96023e.execute_cdac2a
        sum_digits_96023e.continue_d9efd7 -> setter_375321.execute
        sum_digits_96023e.output_732a8a -> add_88bb8a.second
        add_88bb8a.result -> setter_375321.new_value
        setter_375321.continue -> continue_d9efd7
        getter_38583a.value -> output_732a8a
        n_6b655b -> floor_61b38d.input
        floor_61b38d.output -> div_547f34.first
        floor_61b38d.output -> modulo_adfa16.value
        floor_61b38d.output -> ifexpression_3d7de6.gen_0
    }

    module(doc: "Contains three different tests for the 'sum_digits' function node") tests {
        instance(x: -706, y: -13) sum_digits_05e902 root.main.sum_digits {}
        instance(x: -575, y: -216) test_381590 root.Std_k98ojb.Testing.Test {
            name: "Test sum_digits"
        }
        instance(x: -418, y: -28) assertequal_d37f9a root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: -380, y: 126) sum_92f23d root.main.sum_digits {}
        instance(x: -19, y: 114) assertequal_cb0424 root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: -18, y: -51) sum_c936d6 root.main.sum_digits {}
        instance(x: 310, y: -57) assertequal_d4e709 root.Std_k98ojb.Testing.AssertEqual {}
        345 -> sum_digits_05e902.n_6b655b
        12 -> assertequal_d37f9a.expect
        12 -> sum_92f23d.n_6b655b
        3 -> assertequal_cb0424.expect
        97 -> sum_c936d6.n_6b655b
        16 -> assertequal_d4e709.expect
        test_381590.onRun -> sum_digits_05e902.execute_cdac2a
        assertequal_d37f9a.continue -> sum_92f23d.execute_cdac2a
        assertequal_cb0424.continue -> sum_c936d6.execute_cdac2a
        sum_92f23d.continue_d9efd7 -> assertequal_cb0424.execute
        sum_c936d6.continue_d9efd7 -> assertequal_d4e709.execute
        sum_c936d6.output_732a8a -> assertequal_d4e709.actual
        sum_digits_05e902.output_732a8a -> assertequal_d37f9a.actual
        sum_digits_05e902.continue_d9efd7 -> assertequal_d37f9a.execute
        sum_92f23d.output_732a8a -> assertequal_cb0424.actual


    }

    instance(x: -176, y: -38) sum_digits_86117a root.main.sum_digits {}

}