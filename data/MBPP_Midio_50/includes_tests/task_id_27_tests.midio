import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main { 
    func(doc: "Finds the smallest missing number from a sorted list of natural numbers.") find_First_Missing {
        in(x: -113, y: 62, name: "list") property(List) list_24e9a6
        in(x: 483, y: -328, name: "execute") trigger() execute_fa8807

        out(x: 1453, y: 319, name: "output") property(Number) output_25655e
        out(x: 1491, y: -61, name: "continue") trigger() continue_aedf0f

        instance(x: 49, y: -95) lastitem_02a3c2 root.Std_k98ojb.List.LastItem {}
        instance(x: 268, y: -121) generaterange_578305 root.Std_k98ojb.List.GenerateRange {}
        instance(x: 297, y: 38) difference_988da1 root.Std_k98ojb.Sets.Difference {}
        instance(x: 697, y: 100) firstitem_5ed176 root.Std_k98ojb.List.FirstItem {}
        instance(x: 776, y: -147) if_f43197 root.Std_k98ojb.Std.If {}
        setter(x: 1081, y: -194, name: "setter_8cdd78") setter_8cdd78 = firstMissing
        setter(x: 1081, y: 53, name: "setter_9055a9") setter_9055a9 = firstMissing
        getter(x: 1086, y: 278, name: "getter_4e1d42") getter_4e1d42 = firstMissing
        instance(x: 841, y: -275) add_9e1a23 root.Std_k98ojb.Math.Add {}
        instance(x: 557, y: -118) isempty_a948ab root.Std_k98ojb.List.IsEmpty {}
        list_24e9a6 -> lastitem_02a3c2.list
        lastitem_02a3c2.item -> generaterange_578305.to
        0 -> generaterange_578305.from
        generaterange_578305.list -> difference_988da1.left
        list_24e9a6 -> difference_988da1.right
        difference_988da1.difference -> firstitem_5ed176.list
        if_f43197.then -> setter_8cdd78.execute
        if_f43197.else -> setter_9055a9.execute
        execute_fa8807 -> if_f43197.execute
        getter_4e1d42.value -> output_25655e
        firstitem_5ed176.item -> setter_9055a9.new_value
        setter_8cdd78.continue -> continue_aedf0f
        setter_9055a9.continue -> continue_aedf0f
        lastitem_02a3c2.item -> add_9e1a23.first
        1 -> add_9e1a23.second
        add_9e1a23.result -> setter_8cdd78.new_value
        difference_988da1.difference -> isempty_a948ab.list
        isempty_a948ab.isEmpty -> if_f43197.predicate
    }

    module(doc: "Contains three different tests for the 'find_First_Missing' function node") tests {
        instance(x: -246, y: 12) test_2f6a00 root.Std_k98ojb.Testing.Test {
            name: "Test find_First_missing"
        }
        instance(x: -112, y: 162) assertequal_925892 root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: 403, y: 159) assertequal_6e1d5c root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: -384, y: 167) find_first_missing_075f73 root.main.find_First_Missing {}
        data_instance(x: -586, y: 192) data_59d1f6  = [0, 1, 2, 3]
        data_instance(x: 145, y: 290) data_cecf0e  = [0, 1, 2, 6, 9]
        instance(x: 140, y: 163) find_first_missing_ab11f6 root.main.find_First_Missing {}
        instance(x: 923, y: 152) assertequal_3bd699 root.Std_k98ojb.Testing.AssertEqual {}
        data_instance(x: 665, y: 283) data_af6c4e  = [2, 3, 5, 8, 9]
        instance(x: 677, y: 161) find_eaa4d9 root.main.find_First_Missing {}
        3 -> assertequal_6e1d5c.expect
        4 -> assertequal_925892.expect
        find_first_missing_075f73.output_25655e -> assertequal_925892.actual
        data_cecf0e -> find_first_missing_ab11f6.list_24e9a6
        find_first_missing_ab11f6.output_25655e -> assertequal_6e1d5c.actual
        data_59d1f6 -> find_first_missing_075f73.list_24e9a6
        test_2f6a00.onRun -> find_first_missing_075f73.execute_fa8807
        assertequal_925892.continue -> find_first_missing_ab11f6.execute_fa8807
        find_first_missing_ab11f6.continue_aedf0f -> assertequal_6e1d5c.execute
        data_af6c4e -> find_eaa4d9.list_24e9a6
        find_eaa4d9.output_25655e -> assertequal_3bd699.actual
        find_eaa4d9.continue_aedf0f -> assertequal_3bd699.execute
        0 -> assertequal_3bd699.expect
        assertequal_6e1d5c.continue -> find_eaa4d9.execute_fa8807
        find_first_missing_075f73.continue_aedf0f -> assertequal_925892.execute


    }

    instance(x: -234, y: 114) find_first_missing_870d80 root.main.find_First_Missing {}

}