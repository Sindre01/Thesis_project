import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main { 
    func(doc: "finds the minimum of three numbers.") min_of_three {
        in(x: -903, y: -379, name: "a") property(Number) a_f37c19
        in(x: -908, y: -241, name: "b") property(Number) b_ca79ac
        in(x: -907, y: -94, name: "c") property(Number) c_a89f71

        out(x: -78, y: -306, name: "min") property(Number) smallest_8713cf

        data_instance(x: -609, y: -363) data_9a9c70  = [a, b, c]
        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}
        a_f37c19 -> data_9a9c70.a
        b_ca79ac -> data_9a9c70.b
        c_a89f71 -> data_9a9c70.c
        data_9a9c70 -> min_c3e343.items
        min_c3e343.min -> smallest_8713cf
    }
    module(doc: "Contains three different tests for the 'min_of_three' function node") tests {
        instance(x: -128, y: -313) test_95406e root.Std_k98ojb.Testing.Test {
            name: "Test min of three"
        }
        instance(x: 274, y: 22) min_0b82f1 root.main.min_of_three {}
        instance(x: 273, y: -128) assertequal_eb511c root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: 579, y: 27) min_fac964 root.main.min_of_three {}
        instance(x: 578, y: -127) assertequal_e65911 root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: 882, y: -126) assertequal_328609 root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: 886, y: 31) min_of_three_9714d8 root.main.min_of_three {}
        test_95406e.onRun -> assertequal_eb511c.execute
        min_0b82f1.smallest_8713cf -> assertequal_eb511c.actual
        0 -> assertequal_eb511c.expect
        10 -> min_0b82f1.a_f37c19
        20 -> min_0b82f1.b_ca79ac
        0 -> min_0b82f1.c_a89f71
        19 -> min_fac964.a_f37c19
        15 -> min_fac964.b_ca79ac
        18 -> min_fac964.c_a89f71
        assertequal_eb511c.continue -> assertequal_e65911.execute
        min_fac964.smallest_8713cf -> assertequal_e65911.actual
        15 -> assertequal_e65911.expect
        min_of_three_9714d8.smallest_8713cf -> assertequal_328609.actual
        -30 -> assertequal_328609.expect
        -10 -> min_of_three_9714d8.a_f37c19
        -20 -> min_of_three_9714d8.b_ca79ac
        -30 -> min_of_three_9714d8.c_a89f71
        assertequal_e65911.continue -> assertequal_328609.execute


    }

    instance(x: 322, y: 568) min_of_three_cee202 root.main.min_of_three {}
}