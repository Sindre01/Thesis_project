import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main { 
    func(doc: "Checks whether all the characters are same or not.") all_Characters_Same {
        in(x: -862, y: 188, name: "string") property(String) string_db4ddf
        in(x: -878, y: 9, name: "execute") trigger() execute_f1c7e0

        out(x: 588, y: 123, name: "continue") trigger() continue_67430e
        out(x: 600, y: 270, name: "output") property(Bool) output_e9fa68

        instance(x: -483, y: 192) characters_97fc24 root.Std_k98ojb.Strings.Characters {}
        instance(x: -704, y: 191) tolower_0caf71 root.Std_k98ojb.Strings.ToLower {}
        instance(x: -178, y: 331) firstitem_532c77 root.Std_k98ojb.List.FirstItem {}
        instance(x: -181, y: 102) for_942609 root.Std_k98ojb.Std.For {}
        instance(x: 50, y: 183) equal_e1ecef root.Std_k98ojb.Logic.Equal {}
        instance(x: 258, y: 107) if_75369f root.Std_k98ojb.Std.If {}
        tolower_0caf71.output -> characters_97fc24.input
        string_db4ddf -> tolower_0caf71.input
        characters_97fc24.characters -> firstitem_532c77.list
        characters_97fc24.characters -> for_942609.items
        for_942609.item -> equal_e1ecef.left
        firstitem_532c77.item -> equal_e1ecef.right
        equal_e1ecef.result -> if_75369f.predicate
        for_942609.onItem -> if_75369f.execute
        if_75369f.then -> for_942609.next
        if_75369f.else -> continue_67430e
        for_942609.done -> continue_67430e
        if_75369f.value -> output_e9fa68
        execute_f1c7e0 -> for_942609.reset
    }

    module(doc: "Contains three different tests for the 'all_Characters_Same' function node") tests {
        instance(x: -274, y: 9) test_80d168 root.Std_k98ojb.Testing.Test {
            name: "Test all_Characters_Same"
        }
        instance(x: -184, y: 121) all_characters_same_dceb27 root.main.all_Characters_Same {}
        instance(x: 598, y: 134) asserttrue_0b57d0 root.Std_k98ojb.Testing.AssertTrue {}
        instance(x: 86, y: 132) assertfalse_13a6ca root.Std_k98ojb.Testing.AssertFalse {}
        instance(x: 1086, y: 131) assertfalse_8c9e47 root.Std_k98ojb.Testing.AssertFalse {}
        instance(x: 324, y: 130) all_characters_same_570646 root.main.all_Characters_Same {}
        instance(x: 828, y: 133) all_characters_same_c554ad root.main.all_Characters_Same {}
        test_80d168.onRun -> all_characters_same_dceb27.execute_f1c7e0
        all_characters_same_dceb27.continue_67430e -> assertfalse_13a6ca.execute
        assertfalse_13a6ca.continue -> all_characters_same_570646.execute_f1c7e0
        all_characters_same_570646.continue_67430e -> asserttrue_0b57d0.execute
        asserttrue_0b57d0.continue -> all_characters_same_c554ad.execute_f1c7e0
        "python" -> all_characters_same_dceb27.string_db4ddf
        all_characters_same_dceb27.output_e9fa68 -> assertfalse_13a6ca.value
        "aaa" -> all_characters_same_570646.string_db4ddf
        all_characters_same_570646.output_e9fa68 -> asserttrue_0b57d0.value
        "data" -> all_characters_same_c554ad.string_db4ddf
        all_characters_same_c554ad.output_e9fa68 -> assertfalse_8c9e47.value
        all_characters_same_c554ad.continue_67430e -> assertfalse_8c9e47.execute


    }

    instance(x: -192, y: 139) all_characters_same_935476 root.main.all_Characters_Same {}
}