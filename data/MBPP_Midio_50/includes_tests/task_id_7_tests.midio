import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main {
    func(doc: "takes two lists and returns true if they have at least one common element.") common_element {
        in(x: -337, y: -126, name: "list1") property(List) list1_016b2e
        in(x: -331, y: 30, name: "list2") property(List) list2_c8f404

        out(x: 441, y: -72, name: "output") property(Bool) output_879de6

        instance(x: -121, y: -71) intersection_78d487 root.Std_k98ojb.Sets.Intersection {}
        instance(x: 169, y: -77) notempty_cd5cc4 root.Std_k98ojb.List.NotEmpty {}
        intersection_78d487.intersection -> notempty_cd5cc4.list
        notempty_cd5cc4.isEmpty -> output_879de6
        list1_016b2e -> intersection_78d487.left
        list2_c8f404 -> intersection_78d487.right
    }

    module(doc: "Contains three different tests for the 'common_element' function node") tests {
        instance(x: 279, y: 165) common_1c74ea root.main.common_element {}
        data_instance(x: 35, y: 231) data_c2c58d  = [1, 2, 3, 4, 5]
        instance(x: 0, y: -145, name: "commom") test_e8c573 root.Std_k98ojb.Testing.Test {
            name: "Test common_element"
        }
        instance(x: 290, y: 41) asserttrue_e37748 root.Std_k98ojb.Testing.AssertTrue {}
        instance(x: 763, y: 162) common_bdf571 root.main.common_element {}
        data_instance(x: 563, y: 165) data_9585af  = [1, 2, 3, 4, 5]
        instance(x: 1196, y: 148) common_09383a root.main.common_element {}
        data_instance(x: 1094, y: 287) data_4f063b  = ["a", "b", "c"]
        data_instance(x: 1308, y: 284) data_2e680a  = ["d", "b", "e"]
        instance(x: 1206, y: 36) asserttrue_051142 root.Std_k98ojb.Testing.AssertTrue {}
        instance(x: 774, y: 32) assertfalse_6fcae3 root.Std_k98ojb.Testing.AssertFalse {}
        data_instance(x: 365, y: 316) data_e0c3f5  = [5, 6, 7, 8, 9]
        data_instance(x: 885, y: 290) data_360eeb  = [6, 7, 8, 9]
        common_1c74ea.output_879de6 -> asserttrue_e37748.value
        data_c2c58d -> common_1c74ea.list1_016b2e
        test_e8c573.onRun -> asserttrue_e37748.execute
        data_9585af -> common_bdf571.list1_016b2e
        common_09383a.output_879de6 -> asserttrue_051142.value
        data_4f063b -> common_09383a.list1_016b2e
        data_2e680a -> common_09383a.list2_c8f404
        assertfalse_6fcae3.continue -> asserttrue_051142.execute
        asserttrue_e37748.continue -> assertfalse_6fcae3.execute
        common_bdf571.output_879de6 -> assertfalse_6fcae3.value
        data_e0c3f5 -> common_1c74ea.list2_c8f404
        data_360eeb -> common_bdf571.list2_c8f404


    }

    instance(x: 425, y: -186) common_element_33ad55 root.main.common_element {}


}