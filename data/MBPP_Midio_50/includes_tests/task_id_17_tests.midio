import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main { 
    func(doc: "Checks whether a list is sublist of another or not.") is_Sub_Array {
        in(x: -2030, y: 959, name: "main_list") property(List) main_list_25f077
        in(x: -2032, y: 1297, name: "sub_list") property(List) sub_list_f9cb80
        in(x: -1875, y: 677, name: "execute") trigger() execute_68160a

        out(x: -243, y: 1021, name: "continue") trigger() continue_d72620
        out(x: -239, y: 1163, name: "output") property(Bool) output_ebc87c

        instance(x: -1782, y: 1082) length_12a4a0 root.Std_k98ojb.List.Length {}
        instance(x: -1275, y: 1052) count_e53297 root.Std_k98ojb.Std.Count {}
        instance(x: -1595, y: 1148) expression_c84155 root.Std_k98ojb.Math.Expression {
            expression: "n - m + 1"
        }
        instance(x: -1783, y: 1237) length_4fed60 root.Std_k98ojb.List.Length {}
        instance(x: -548, y: 923) if_f81713 root.Std_k98ojb.Std.If {}
        instance(x: -764, y: 1191) equal_010c84 root.Std_k98ojb.Logic.Equal {}
        instance(x: -964, y: 1120) slice_cda647 root.Std_k98ojb.List.Slice {}
        instance(x: -1040, y: 898) add_a3f57f root.Std_k98ojb.Math.Add {}
        length_12a4a0.length -> expression_c84155.gen_0
        length_4fed60.length -> expression_c84155.gen_1
        expression_c84155.result -> count_e53297.iterations
        count_e53297.interation -> slice_cda647.start
        count_e53297.interation -> add_a3f57f.first
        length_12a4a0.length -> add_a3f57f.second
        add_a3f57f.result -> slice_cda647.end
        slice_cda647.slice -> equal_010c84.left
        equal_010c84.result -> if_f81713.predicate
        count_e53297.onCount -> if_f81713.execute
        main_list_25f077 -> length_12a4a0.list
        sub_list_f9cb80 -> length_4fed60.list
        sub_list_f9cb80 -> equal_010c84.right
        main_list_25f077 -> slice_cda647.list
        if_f81713.then -> continue_d72620
        count_e53297.done -> continue_d72620
        if_f81713.else -> count_e53297.count
        execute_68160a -> count_e53297.reset
        if_f81713.value -> output_ebc87c
    }

    module(doc: "Contains three different tests for the 'is_sub_array' function node") tests {
        instance(x: -598, y: -24) test_1d4ad6 root.Std_k98ojb.Testing.Test {
            name: "Test is_Sub_Array"
        }
        instance(x: -181, y: 108) is_sub_array_22a8bf root.main.is_Sub_Array {}
        data_instance(x: -406, y: 290) data_fad294  = [1, 4, 3, 5]
        data_instance(x: -168, y: 327) data_f79cc7  = [1, 2]
        instance(x: 50, y: 117) assertfalse_6791cf root.Std_k98ojb.Testing.AssertFalse {}
        instance(x: 354, y: 100) is_sub_array_6124dd root.main.is_Sub_Array {}
        instance(x: 825, y: 104) is_3d7c36 root.main.is_Sub_Array {}
        instance(x: 572, y: 107) asserttrue_635104 root.Std_k98ojb.Testing.AssertTrue {}
        instance(x: 1097, y: 103) assertfalse_b127a9 root.Std_k98ojb.Testing.AssertFalse {}
        data_instance(x: 127, y: 315) data_fd2e29  = [1, 2, 1]
        data_instance(x: 325, y: 316) data_eabfa4  = [1, 2, 1]
        data_instance(x: 622, y: 308) data_586403  = [1, 0, 2, 2]
        data_instance(x: 822, y: 314) data_30c650  = [2, 2, 0]
        data_f79cc7 -> is_sub_array_22a8bf.sub_list_f9cb80
        data_fad294 -> is_sub_array_22a8bf.main_list_25f077
        test_1d4ad6.onRun -> is_sub_array_22a8bf.execute_68160a
        is_sub_array_22a8bf.output_ebc87c -> assertfalse_6791cf.value
        is_sub_array_22a8bf.continue_d72620 -> assertfalse_6791cf.execute
        data_fd2e29 -> is_sub_array_6124dd.main_list_25f077
        data_eabfa4 -> is_sub_array_6124dd.sub_list_f9cb80
        assertfalse_6791cf.continue -> is_sub_array_6124dd.execute_68160a
        is_sub_array_6124dd.continue_d72620 -> asserttrue_635104.execute
        is_sub_array_6124dd.output_ebc87c -> asserttrue_635104.value
        asserttrue_635104.continue -> is_3d7c36.execute_68160a
        data_586403 -> is_3d7c36.main_list_25f077
        data_30c650 -> is_3d7c36.sub_list_f9cb80
        is_3d7c36.output_ebc87c -> assertfalse_b127a9.value
        is_3d7c36.continue_d72620 -> assertfalse_b127a9.execute


    }

    instance(x: 57, y: -40) is_sub_array_f8f3ba root.main.is_Sub_Array {}
}