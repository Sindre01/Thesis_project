import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main { 
    func(doc: "Finds the index of the first occurrence of a given number in a sorted array.") find_first_occurrence {
        in(x: 5, y: 218, name: "list") property(List) list_d128d8
        in(x: -252, y: -11, name: "execute") trigger() execute_467172
        in(x: 349, y: -105, name: "target") property(Number) target_fbe60e

        out(x: 1217, y: 29, name: "continue") trigger() continue_075eef
        out(x: 966, y: 219, name: "output") property(Number) output_3ae271

        setter(x: 0, y: 0, name: "setter_6e7b4e") setter_6e7b4e = index
        instance(x: 340, y: 60) for_065883 root.Std_k98ojb.Std.For {}
        getter(x: 704, y: 170, name: "getter_84fbbe") getter_84fbbe = index
        setter(x: 955, y: -158, name: "setter_7e2b42") setter_7e2b42 = index
        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}
        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}
        setter_6e7b4e.continue -> for_065883.reset
        list_d128d8 -> for_065883.items
        execute_467172 -> setter_6e7b4e.execute
        -1 -> setter_6e7b4e.new_value
        for_065883.done -> continue_075eef
        getter_84fbbe.value -> output_3ae271
        target_fbe60e -> equal_aabb6e.left
        for_065883.item -> equal_aabb6e.right
        for_065883.onItem -> if_7c284f.execute
        equal_aabb6e.result -> if_7c284f.predicate
        if_7c284f.else -> for_065883.next
        if_7c284f.then -> setter_7e2b42.execute
        setter_7e2b42.continue -> continue_075eef
        for_065883.index -> setter_7e2b42.new_value
    }

    

    instance(x: 777, y: 760) find_first_occurrence_6e6bfd root.main.find_first_occurrence {}

}