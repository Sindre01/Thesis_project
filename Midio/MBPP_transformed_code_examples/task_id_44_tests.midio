@midio_version("0.1.0")
@version("0.1.0")
import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main { 
    func(doc: "Takes in an integer n and returns the sum of the squares of the first n odd natural numbers.") square_sum {
        in(x: -219, y: 55, name: "n") property(Number) n_3a3116

        out(x: 571, y: 7, name: "sum") property(Number) sum_365f7b

        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}
        data_instance(x: 330.0, y: 133.0) data_cde0dc  = 3
        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {
            expression: "4*n*n-1"
        }
        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}
        data_cde0dc -> div_64046c.second
        mul_f892a4.result -> div_64046c.first
        expression_2d6da6.result -> mul_f892a4.second
        n_3a3116 -> mul_f892a4.first
        n_3a3116 -> expression_2d6da6.gen_0
        div_64046c.result -> sum_365f7b
    }

    module(doc: "Contains three different tests for the 'square_sum' function node") tests {
        instance(x: -91, y: 34.5) test_b95a92 root.Std_k98ojb.Testing.Test {
            name: "Test square_sum"
        }
        instance(x: -104, y: 182.5) assertequal_eb213f root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: -96, y: 317) square_sum_0ab8bc root.main.square_sum {}
        instance(x: 270.29999999999995, y: 179.5) assertequal_c13c2b root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: 278.29999999999995, y: 314) square_9faa83 root.main.square_sum {}
        instance(x: 605.3, y: 181.5) assertequal_c173ac root.Std_k98ojb.Testing.AssertEqual {}
        instance(x: 613.3, y: 316) square_14daa9 root.main.square_sum {}
        test_b95a92.onRun -> assertequal_eb213f.execute
        square_sum_0ab8bc.sum_365f7b -> assertequal_eb213f.actual
        2 -> square_sum_0ab8bc.n_3a3116
        10 -> assertequal_eb213f.expect
        square_9faa83.sum_365f7b -> assertequal_c13c2b.actual
        35 -> assertequal_c13c2b.expect
        3 -> square_9faa83.n_3a3116
        square_14daa9.sum_365f7b -> assertequal_c173ac.actual
        84 -> assertequal_c173ac.expect
        4 -> square_14daa9.n_3a3116
        assertequal_eb213f.continue -> assertequal_c13c2b.execute
        assertequal_c13c2b.continue -> assertequal_c173ac.execute


    }

    instance(x: 118.5, y: -26.73750000000001) square_sum_9dcc3d root.main.square_sum {}
}