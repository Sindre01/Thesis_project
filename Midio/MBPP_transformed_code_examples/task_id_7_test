@midio_version("0.1.0")
@version("0.1.0")
import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main {
 func() common_element {
        in(x: -334.3332824707031, y: -104.11111450195313, name: "list1") property(List) list1_71bb8f
        in(x: -346.5555114746094, y: -6.555541992187528, name: "list2") property(List) list2_b16d46

        out(x: 433.7780839843749, y: -82.83377099609373, name: "output") property(Bool) output_879de6

        instance(x: -121.333251953125, y: -71.11111450195313) intersection_78d487 root.Std_k98ojb.Sets.Intersection {}
        instance(x: 169.00006103515625, y: -100) notempty_cd5cc4 root.Std_k98ojb.List.NotEmpty {}
        list1_71bb8f -> intersection_78d487.left
        list2_b16d46 -> intersection_78d487.right
        intersection_78d487.intersection -> notempty_cd5cc4.list
        notempty_cd5cc4.isEmpty -> output_879de6
    }

    instance(x: 165.88885498046875, y: -125.22219848632813) common_element_7d78a4 root.main.common_element {}
    data_instance(x: -62.0, y: -193.2) data_a1fd9b  = [1, 2, 3, 4]
    data_instance(x: -65.3, y: 66.8) data_70608e  = [0, 2, 10]
    instance(x: 163.66693115234375, y: -342.99993896484375) test_2f619e root.Std_k98ojb.Testing.Test {
        name: "Test common"
    }
    instance(x: 453.6665039062501, y: -156.33337402343747) asserttrue_38806f root.Std_k98ojb.Testing.AssertTrue {}
    data_a1fd9b -> common_element_7d78a4.list1_71bb8f
    test_2f619e.onRun -> asserttrue_38806f.execute
    data_70608e -> common_element_7d78a4.list2_b16d46
    common_element_7d78a4.output_879de6 -> asserttrue_38806f.value
}