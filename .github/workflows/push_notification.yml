name: Push Notification
on: push  # Runs this workflow on every push

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check if Commit Message Contains "HPC"
        id: check_commit_for_HPC
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          if echo "$COMMIT_MESSAGE" | grep -iq "HPC"; then
            echo "match=true" >> $GITHUB_ENV
          else
            echo "match=false" >> $GITHUB_ENV
          fi

      - name: Check Commit Message for "validation" or "testing"
        id: check_commit_for_phase
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          if echo "$COMMIT_MESSAGE" | grep -iq "validation"; then
            echo "commit_type=Validation" >> $GITHUB_ENV
          elif echo "$COMMIT_MESSAGE" | grep -iq "testing"; then
            echo "commit_type=Testing" >> $GITHUB_ENV
          else
            echo "commit_type=none" >> $GITHUB_ENV
          fi

      - name: Generate File List
        if: env.match == 'true'
        run: |
          echo "" >> changes.txt
          echo "${{ github.event.head_commit.message }}\"" >> changes.txt
          echo "" >> changes.txt
          echo "🔗 [View Commit](${{ github.event.head_commit.url }})" >> changes.txt
          echo "" >> changes.txt
                  
          # Ensure full commit history is available
          git fetch --unshallow || true
          git fetch --all

          # Check if there's a previous commit
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            PREV_COMMIT="HEAD^"
          else
            PREV_COMMIT=$(git rev-list --max-parents=0 HEAD)  # First commit in repo
          fi

          # Extract Added, Modified, and Removed Files using git diff
          echo "📂 Files Added:" >> changes.txt
          ADDED_FILES=$(git diff --diff-filter=A --name-only $PREV_COMMIT HEAD)
          if [[ -z "$ADDED_FILES" ]]; then
            echo "- None" >> changes.txt
          else
            echo "$ADDED_FILES" | sed 's/^/- /' >> changes.txt
          fi
          echo "" >> changes.txt

          echo "📝 Files Modified:" >> changes.txt
          MODIFIED_FILES=$(git diff --diff-filter=M --name-only $PREV_COMMIT HEAD)
          if [[ -z "$MODIFIED_FILES" ]]; then
            echo "- None" >> changes.txt
          else
            echo "$MODIFIED_FILES" | sed 's/^/- /' >> changes.txt
          fi
          echo "" >> changes.txt

          echo "❌ Files Removed:" >> changes.txt
          REMOVED_FILES=$(git diff --diff-filter=D --name-only $PREV_COMMIT HEAD)
          if [[ -z "$REMOVED_FILES" ]]; then
            echo "- None" >> changes.txt
          else
            echo "$REMOVED_FILES" | sed 's/^/- /' >> changes.txt
          fi
      - name: Read Changes File
        if: env.match == 'true'
        id: read_changes
        run: echo "EMAIL_BODY<<EOF" >> $GITHUB_ENV && cat changes.txt >> $GITHUB_ENV && echo "EOF" >> $GITHUB_ENV

      - name: Send Email Notification
        if: env.match == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "🔔 GitHub Push Notification - ${{ env.commit_type }} runs pushed from FOX"
          body: ${{ env.EMAIL_BODY }}
          to: ${{ secrets.EMAIL_TO }}
          from: "GitHub Actions"
      
      - name: Create Pull Request
        if: env.match == 'true' 
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: "hpc-auto-pr-${{ github.run_id }}"
          base: "main"
          title: "🚀 Auto PR: HPC Validation/Testing Updates"
          body: |
            ## Summary
            This PR was auto-generated from an HPC push.
            
            - Commit Type: ${{ env.commit_type }}
            - Commit Message: ${{ github.event.head_commit.message }}
            
            ### 🔗 [View Commit](${{ github.event.head_commit.url }})

            ### Changes:
            ${{ env.EMAIL_BODY }}

          labels: "automated, hpc"
          draft: false  # Set to true if you want it as a draft PR

