@midio_version("0.1.0")
@version("0.1.0")
import("std", Std_k98ojb)
import("http", Http_q7o96c)

module() main { 
    func(doc: "checks whether the given number is even or not.") is_Even {
        in(x: -389.111083984375, y: -3.88885498046875, name: "num") property(Number) num_1a1743

        out(x: 197.5556640625, y: -8.4444580078125, name: "output") property(Bool) output_4ff980

        instance(x: -203.55548095703125, y: -7.333251953125,) modulo_0e15bd root.Std_k98ojb.Math.Modulo {}
        instance(x: -2.4443359375, y: -7.33331298828125,) equal_f3c0cb root.Std_k98ojb.Logic.Equal {}
        num_1a1743 -> modulo_0e15bd.value
        2 -> modulo_0e15bd.divisor
        modulo_0e15bd.result -> equal_f3c0cb.left
        0 -> equal_f3c0cb.right
        equal_f3c0cb.result -> output_4ff980
    }

    module(doc: "Contains three different tests for the 'is_Even' function node") tests {
        instance(x: -421.5555419921875, y: -19.44442749023439) test_0fbf4d root.Std_k98ojb.Testing.Test {
            name: "Test is_Even"
        }
        instance(x: 70.6666259765625, y: 58.4444580078125) asserttrue_e12ce3 root.Std_k98ojb.Testing.AssertTrue {}
        instance(x: -183.77777099609375, y: 59.55560302734375) assertfalse_18f0d8 root.Std_k98ojb.Testing.AssertFalse {}
        instance(x: 339.55560302734375, y: 59.555572509765625) assertfalse_afac65 root.Std_k98ojb.Testing.AssertFalse {}
        instance(x: -181.77777099609375, y: 205.22222900390625) is_even_372e21 root.main.is_Even {}
        instance(x: 62.22000000000003, y: 206.50039697265623) is_d82613 root.main.is_Even {}
        instance(x: 345.55349609375, y: 206.50039697265623) is_2ff422 root.main.is_Even {}
        is_even_372e21.output_4ff980 -> assertfalse_18f0d8.value
        test_0fbf4d.onRun -> assertfalse_18f0d8.execute
        assertfalse_18f0d8.continue -> asserttrue_e12ce3.execute
        asserttrue_e12ce3.continue -> assertfalse_afac65.execute
        is_d82613.output_4ff980 -> asserttrue_e12ce3.value
        is_2ff422.output_4ff980 -> assertfalse_afac65.value
        1 -> is_even_372e21.num_1a1743
        2 -> is_d82613.num_1a1743
        3 -> is_2ff422.num_1a1743


    }

    instance(x: 80.11114501953125, y: 103.11114501953124) is_even_db84c5 root.main.is_Even {}

}